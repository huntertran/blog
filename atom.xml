<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tuan Tran&#39;s Blog</title>
  
  <subtitle>Share to be shared</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://huntertran.github.io/blog/"/>
  <updated>2020-08-12T20:45:35.169Z</updated>
  <id>https://huntertran.github.io/blog/</id>
  
  <author>
    <name>Tuan Tran</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Migrate Azure DevOps TFS to Git reserving history</title>
    <link href="https://huntertran.github.io/blog/2020/07/30/migrate-azure-devops-tfs-to-git-reserving-history/"/>
    <id>https://huntertran.github.io/blog/2020/07/30/migrate-azure-devops-tfs-to-git-reserving-history/</id>
    <published>2020-07-30T04:31:02.000Z</published>
    <updated>2020-08-12T20:45:35.169Z</updated>
    
    <content type="html"><![CDATA[<p>Microsoft acquired GitHub, and every one have unlimited private repository. This reason alone make me want to move all my project and source code to GitHub.</p><a id="more"></a><ul><li><a href="#1-a-bit-of-history">1. A bit of history</a></li><li><a href="#2-required-tools">2. Required tools</a></li><li><a href="#3-migration-steps">3. Migration steps</a><ul><li><a href="#31-clone-the-tfs-project">3.1. Clone the TFS project</a></li><li><a href="#32-add-gitignore">3.2. Add .gitignore</a></li><li><a href="#33-push-code">3.3. Push code</a></li></ul></li></ul><h1 id="1-A-bit-of-history"><a href="#1-A-bit-of-history" class="headerlink" title="1. A bit of history"></a>1. A bit of history</h1><p>In around 2012, developers don’t have much choices in <em>where</em> to store their code for free. Sure you can use GitHub, but it limit the number of private repository and number of collaborators. The obvious choice at that time was <code>Visual Studio Online</code>, or today <code>Azure DevOps</code>. The only source control system it’s provided is Team Foundation Server (TFS).</p><p>Today, 9.99 over 10 developers will choose <code>git</code> over <code>tfs</code>, and we need a way to migrate from TFS, <em>with history</em>, to git.</p><h1 id="2-Required-tools"><a href="#2-Required-tools" class="headerlink" title="2. Required tools"></a>2. Required tools</h1><ul><li><a href="https://git-scm.com/">git</a></li><li><a href="https://github.com/git-tfs/git-tfs">git-tfs</a></li></ul><blockquote><p>Alternatively, you can install git-tf with Chocolatey:</p><p><code>choco install gittfs</code></p></blockquote><h1 id="3-Migration-steps"><a href="#3-Migration-steps" class="headerlink" title="3. Migration steps"></a>3. Migration steps</h1><h2 id="3-1-Clone-the-TFS-project"><a href="#3-1-Clone-the-TFS-project" class="headerlink" title="3.1. Clone the TFS project"></a>3.1. Clone the TFS project</h2><p>git-tfs clone <a href="https://your/_organization.visualstudio.com/">https://your\_organization.visualstudio.com/</a> $/your_project_name</p><p>If your project name contain whitespace, just put the whole name in quote mark</p><p>git-tfs clone <a href="https://your/_organization.visualstudio.com/">https://your\_organization.visualstudio.com/</a> “$/your project name”</p><p>This will clone the project to the folder you run the command</p><h2 id="3-2-Add-gitignore"><a href="#3-2-Add-gitignore" class="headerlink" title="3.2. Add .gitignore"></a>3.2. Add .gitignore</h2><p>Now the project is like any other git project, with a <code>.git</code> folder. You should add a <code>.gitignore</code> file to prevent commit unwanted files.</p><p>A sample <code>.gitinore</code> file here: <a href="https://www.toptal.com/developers/gitignore/api/visualstudio">Visual Studio Git Ignore</a></p><h2 id="3-3-Push-code"><a href="#3-3-Push-code" class="headerlink" title="3.3. Push code"></a>3.3. Push code</h2><p>The final step is to push code to your favorite git service.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Microsoft acquired GitHub, and every one have unlimited private repository. This reason alone make me want to move all my project and source code to GitHub.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Others" scheme="https://huntertran.github.io/blog/categories/Others/"/>
    
      <category term="Computer Tips" scheme="https://huntertran.github.io/blog/categories/Computer-Tips/"/>
    
    
      <category term="git" scheme="https://huntertran.github.io/blog/tags/git/"/>
    
      <category term="TFS" scheme="https://huntertran.github.io/blog/tags/TFS/"/>
    
      <category term="devops" scheme="https://huntertran.github.io/blog/tags/devops/"/>
    
  </entry>
  
  <entry>
    <title>Connect with Google Cloud Compute Engine (Virtual Machine) using PuTTY</title>
    <link href="https://huntertran.github.io/blog/2020/07/20/connect-with-google-cloud-compute-engine-virtual-machine-using-putty/"/>
    <id>https://huntertran.github.io/blog/2020/07/20/connect-with-google-cloud-compute-engine-virtual-machine-using-putty/</id>
    <published>2020-07-20T22:28:46.000Z</published>
    <updated>2020-08-12T20:45:35.169Z</updated>
    
    <content type="html"><![CDATA[<p>I don’t know why Google makes it so difficult to connect to it’s Compute Engine cloud service. Even the name is confusing. Why don’t they just call it Virtual Machine?</p><p>Anyway, here is how to connect.</p><a id="more"></a><ul><li><a href="#1-have-your-compute-engine-ready">1. Have your Compute Engine ready</a></li><li><a href="#2-have-your-local-machine-ready">2. Have your local machine ready</a></li><li><a href="#3-add-key-to-virtual-machine">3. Add key to virtual machine</a></li><li><a href="#4-connect-with-winscp">4. Connect with WinSCP</a></li></ul><h1 id="1-Have-your-Compute-Engine-ready"><a href="#1-Have-your-Compute-Engine-ready" class="headerlink" title="1. Have your Compute Engine ready"></a>1. Have your Compute Engine ready</h1><p>After created a VM instance, note the External IP. Click on the little 3 dot icon at the end of the VM and choose <code>View network details</code></p><p><img src="https://i.imgur.com/8QeJ7Yz.png" alt="network"></p><p>On the new open site, choose Firewall and make sure <code>tcp:22</code> is allowed (so we can use ssh to connect)</p><p><img src="https://i.imgur.com/oGJRuPE.png" alt="tcp22"></p><h1 id="2-Have-your-local-machine-ready"><a href="#2-Have-your-local-machine-ready" class="headerlink" title="2. Have your local machine ready"></a>2. Have your local machine ready</h1><p>You will need to generate a public-private key pair on your local machine. In this tutorial, I use puttygen installed alongside with <a href="https://chocolatey.org/packages/putty">putty</a></p><p>Click generate and move your mouse in the blank area until a key appeared</p><p><img src="https://i.imgur.com/5xJDSzQ.png" alt="move"></p><p>Enter a password for the generated key, change the <code>Key comment</code> to something easy to remember (this will be your username later), click <code>Save private key</code> to a <code>.ppk</code> file.</p><p>Copy the key shown in the box.</p><p><img src="https://i.imgur.com/Q0xhVqQ.png" alt="save the key"></p><h1 id="3-Add-key-to-virtual-machine"><a href="#3-Add-key-to-virtual-machine" class="headerlink" title="3. Add key to virtual machine"></a>3. Add key to virtual machine</h1><p>Click the ssh button on your VM instance to open the online ssh window</p><p>Call the following commands:</p><p>Create .ssh folder</p><p>sudo mkdir -p ~/.ssh</p><p>Write the key to <code>authorized_keys</code> file</p><p>sudo echo your_copied_key_here &gt;&gt; ~/.ssh/authorized_keys</p><p>Set permission for the file and folder</p><p>sudo chmod -R go= ~/.ssh</p><h1 id="4-Connect-with-WinSCP"><a href="#4-Connect-with-WinSCP" class="headerlink" title="4. Connect with WinSCP"></a>4. Connect with <a href="https://github.com/winscp/winscp">WinSCP</a></h1><p>Wait, the title said Putty isn’t it? Hang on, we’re getting there.</p><p><a href="https://github.com/winscp/winscp">WinSCP</a> is a popular SFTP client and FTP client for Microsoft Windows, as they said. It’s open-source and can be installed via <a href="https://www.microsoft.com/store/apps/9p0pq8b65n8x">MS Store</a> or <a href="https://chocolatey.org/packages/winscp">Chocolatey</a></p><p>Filled in the information you have. The username IS the key comment you set above. Then click on <code>Advanced...</code></p><p><img src="https://i.imgur.com/VW4Xk88.png" alt="winscp"></p><p>Choose <code>Environment</code> &gt; <code>SFTP</code>, then paste this line to the box <code>SFTP Server</code> to allow root permission on all files and folders</p><blockquote><p>This works with Ubuntu only. Other distribution may have different location of <code>sftp-server</code></p></blockquote><p>sudo su -c /usr/lib/openssh/sftp-server</p><p><img src="https://i.imgur.com/dIgyNUA.png" alt="sudo"></p><p>Choose SSH &gt; Authentication and browse to the private key you saved before. Click OK to go back to login screen</p><p><img src="https://i.imgur.com/x9MyGPp.png" alt="private key"></p><p>When logging in, you will be asked for password. This is the password you’ve set for your private key before.</p><p>After connected, click Commands &gt; Open in PuTTY, and voilà, the ssh window appeared and connected, and asking for the same password.</p><p><img src="https://i.imgur.com/iMSGvYB.png" alt="open in putty"></p><p><img src="https://i.imgur.com/qKuzGiy.png" alt="console"></p><p>I don’t know why, but connect directly with PuTTY or SuperPuTTY DOES NOT WORK.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I don’t know why Google makes it so difficult to connect to it’s Compute Engine cloud service. Even the name is confusing. Why don’t they just call it Virtual Machine?&lt;/p&gt;
&lt;p&gt;Anyway, here is how to connect.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Others" scheme="https://huntertran.github.io/blog/categories/Others/"/>
    
    
      <category term="virtual machine" scheme="https://huntertran.github.io/blog/tags/virtual-machine/"/>
    
      <category term="compute engine" scheme="https://huntertran.github.io/blog/tags/compute-engine/"/>
    
      <category term="google cloud" scheme="https://huntertran.github.io/blog/tags/google-cloud/"/>
    
      <category term="putty" scheme="https://huntertran.github.io/blog/tags/putty/"/>
    
  </entry>
  
  <entry>
    <title>[java] Refactoring Clones type 2</title>
    <link href="https://huntertran.github.io/blog/2019/10/19/refactoring-clones-type-2/"/>
    <id>https://huntertran.github.io/blog/2019/10/19/refactoring-clones-type-2/</id>
    <published>2019-10-19T20:10:18.000Z</published>
    <updated>2020-08-12T20:45:35.169Z</updated>
    
    <content type="html"><![CDATA[<p>Removing clones in code maybe is the most difficult type of refactoring action. In this post, I will show you how to refactor a clone type 2 using Functional Interface in Java and delegate in C#</p><a id="more"></a><h1 id="Type-of-clones"><a href="#Type-of-clones" class="headerlink" title="Type of clones"></a>Type of clones</h1><p>There are 4 type of clones:</p><blockquote><p><em><strong>Type 1:</strong></em> The codes cloned are identical, except the name of variables, add or remove of comment.</p><p><em><strong>Type 2:</strong></em> code fragments are structurally and syntactically identical except for variations in identifiers, literals, types, in addition to Type I differences.</p><p><em><strong>Type 3:</strong></em> code fragments are copies with further modifications. Statements can be changed, added, or removed in addition to Type II differences.</p><p><em><strong>Type 4:</strong></em> two or more code fragments perform the same computation, but are implemented through different syntactic variants.</p><p>S. Bellon, R. Koschke, G. Antoniol, J. Krinke and E. Merlo, Comparison and Evaluation of Clone DetectionTools, Transactions on Software Engineering, 33(9):577-591 (2007)</p></blockquote><h1 id="Removing-clones"><a href="#Removing-clones" class="headerlink" title="Removing clones"></a>Removing clones</h1><p>Type 1: just remove the second fragment of code and use the first one</p><p>Type 3: Based on the function of the code fragment (usually clone codes are in methods), you can perform other refactoring like break the method into smaller ones (<code>extract method</code>), then consider if you can transform type 3 clone into type 2.</p><p>Type 4: This one is the most difficult to detect. To eliminate is easy, just use one of them.</p><p>I believe to detect this kind of clone, you can inspect the before and after condition of the questioned methods. If they are the same (use the same set of parameters, return the same result, verified by unit tests), then the function of these methods are identical.</p><p>For type 2 clone, we will try to transform it to type 1, then introduce the parameter in a new common method, by using a language specific feature called <code>FunctionalInterface</code> in Java and <code>delegate</code> in C#</p><h1 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h1><p>Consider these lines of code:</p><p>public void drawVerticalLine(int length, View currentView){<br>    DrawOptions drawOptions = currentView.getVerticalOptions();<br>    currentView.draw(length, drawOptions);<br>}</p><p>public void drawHorizontalLine(int length, View currentView){<br>    DrawOptions drawOptions = currentView.getHorizontalOptions();<br>    currentView.draw(length, drawOptions);<br>}</p><p>In 2 method above, both of them draw line to screen, the difference is the <code>drawOptions</code> variable.</p><p>To introduce parameter to “transform” this type of clone to type 1, we can do as follow:</p><p>/* For JAVA */</p><p>public void drawVerticalLine(int length, View currentView){<br>    drawLine(length, currentView, () -&gt; currentView.getVerticalOption());<br>}</p><p>public void drawHorizontalLine(int length, View currentView){<br>    drawLine(length, currentView, () -&gt; currentView.getHorizontalOption());<br>}</p><p>@FunctionalInterface<br>private interface DrawOption {<br>    int getDrawOption();<br>}</p><p>public void drawLine(int length, View currentView, DrawOption drawOption){<br>    int options = drawOption.getDrawOption();<br>    currentView.draw(length, options)<br>}</p><p>and for C#</p><p>public void drawVerticalLine(int length, View currentView){<br>    drawLine(length, currentView, () =&gt; currentView.getVerticalOption());<br>}</p><p>public void drawHorizontalLine(int length, View currentView){<br>    drawLine(length, currentView, () =&gt; currentView.getHorizontalOption());<br>}</p><p>public void drawLine(int length, View currentView, Func<int> drawOption){<br>    int option = drawOption();<br>    currentView.draw(length, option);<br>}</p><h2 id="Using-tool"><a href="#Using-tool" class="headerlink" title="Using tool"></a>Using tool</h2><p>If you are using Eclipse, <a href="https://github.com/tsantalis/JDeodorant">JDeodorant</a> plug-in by <a href="https://users.encs.concordia.ca/~nikolaos/">Associate Professor Nikos Tsantalis</a> can automatically <code>extract</code> the clone into common method for you.</p><ol><li>Identify the cloned methods</li><li>Select the method in Eclipse, right-click and choose <code>Refactor duplicate code...</code></li></ol><p><img src="https://i.imgur.com/ndLJ8Iz.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Removing clones in code maybe is the most difficult type of refactoring action. In this post, I will show you how to refactor a clone type 2 using Functional Interface in Java and delegate in C#&lt;/p&gt;
    
    </summary>
    
    
      <category term="CSharp" scheme="https://huntertran.github.io/blog/categories/CSharp/"/>
    
      <category term="Java" scheme="https://huntertran.github.io/blog/categories/Java/"/>
    
    
      <category term="clone" scheme="https://huntertran.github.io/blog/tags/clone/"/>
    
      <category term="refactor" scheme="https://huntertran.github.io/blog/tags/refactor/"/>
    
  </entry>
  
  <entry>
    <title>[vuejs] - Publish your vue component to npmjs using vue-cli 3</title>
    <link href="https://huntertran.github.io/blog/2019/08/18/vuejs-publish-your-vue-component-to-npmjs-using-vue-cli-3/"/>
    <id>https://huntertran.github.io/blog/2019/08/18/vuejs-publish-your-vue-component-to-npmjs-using-vue-cli-3/</id>
    <published>2019-08-18T18:54:08.000Z</published>
    <updated>2020-08-12T20:45:35.169Z</updated>
    
    <content type="html"><![CDATA[<p>Using Vuejs, sometime you need to publish your awesome <code>component</code> with the world. Sure you can share the <code>.vue</code> file, but how can you publish it to <code>npmjs</code>, for the ease of installation and usage of others?</p><a id="more"></a><p>With the release of Vue CLI 3, build target <code>-lib</code> is supported, but no tutorials available “out there”, so here is one (and hopfully not the last).</p><!-- TOC --><ul><li><a href="#1-requirements">1. Requirements</a></li><li><a href="#2-steps">2. Steps</a><ul><li><a href="#21-setup-your-project">2.1. Setup your project</a></li><li><a href="#22-add-config-for-vuejs">2.2. Add config for vue.js</a></li><li><a href="#23-edit-packagejson">2.3. Edit package.json</a></li></ul></li><li><a href="#3-build-test-and-publish">3. Build, Test and Publish</a><ul><li><a href="#31-build">3.1. Build</a></li><li><a href="#32-test">3.2. Test</a></li><li><a href="#33-publish">3.3. Publish</a></li></ul></li><li><a href="#4-test-the-published-package">4. Test the published package</a></li></ul><!-- /TOC --><h1 id="1-Requirements"><a href="#1-Requirements" class="headerlink" title="1. Requirements"></a>1. Requirements</h1><p><a id="markdown-requirements" name="requirements"></a></p><ul><li>Of course you will need an <code>npmjs</code> account. Go register one.</li><li>vue-cli 3 (as the time this tutorial was written), install it globally using</li></ul><p>npm install -g @vue/cli</p><ul><li>vue cli-service-global add-on for quick project prototype, install it globally using</li></ul><p>npm install -g @vue/cli-service-global</p><ul><li>Your component source code</li><li>A text editor of your choice (VSCode is my personal suggestion)</li></ul><h1 id="2-Steps"><a href="#2-Steps" class="headerlink" title="2. Steps"></a>2. Steps</h1><p><a id="markdown-steps" name="steps"></a></p><h2 id="2-1-Setup-your-project"><a href="#2-1-Setup-your-project" class="headerlink" title="2.1. Setup your project"></a>2.1. Setup your project</h2><p><a id="markdown-setup-your-project" name="setup-your-project"></a></p><p>For instruction purpose, just a simple hello world project will do.</p><ol><li>Create a new folder, let call it <code>my_component</code></li><li>Open that folder using vscode, press Ctrl + Shift + ` to open a new terminal inside root folder</li><li>Create your project, and choose your preferred options.</li></ol><p>vue create .</p><blockquote><p>if you want to create a new project including root folder, type <code>vue create your-folder-name</code></p></blockquote><p>your project structure should basically look like this if you choose all default</p><p><img src="https://i.imgur.com/tpVcVBM.png" alt="project structure"></p><p>type <code>npm run serve</code> will build the project and serve it using a local server</p><p><img src="https://i.imgur.com/KHn5jsf.png" alt="hello world"></p><h2 id="2-2-Add-config-for-vue-js"><a href="#2-2-Add-config-for-vue-js" class="headerlink" title="2.2. Add config for vue.js"></a>2.2. Add config for vue.js</h2><p><a id="markdown-add-config-for-vue.js" name="add-config-for-vue.js"></a></p><p>Add a new file to root folder with the name <code>vue.config.js</code>. In this file, you will be able to setup the build to include all your components <code>*.css</code> in a separated file or inside the component <code>.js</code> file. Each option have it pro and cons.</p><p>For simplicity, I choose to include inside the <code>.js</code> file.</p><p>module.exports = {<br>    css: { extract: false }<br>}</p><h2 id="2-3-Edit-package-json"><a href="#2-3-Edit-package-json" class="headerlink" title="2.3. Edit package.json"></a>2.3. Edit <code>package.json</code></h2><p><a id="markdown-edit-package.json" name="edit-package.json"></a></p><p><strong>Add build command</strong><br>Open <code>package.json</code> and add the following line under <code>scripts</code> section</p><p>“build:helloworld”: “vue-cli-service build –target lib –name my_component ./src/components/HelloWorld.vue”,</p><p>It will look like this</p><p><img src="https://i.imgur.com/KXP6ymW.png" alt="package json"></p><p><strong>Pointing to output</strong></p><p>Add the target for npm to <code>package.json</code></p><p>“main”: “./dist/my_component.udm.js”,</p><p><strong>Add file attribute</strong></p><p>This settings indicate which file types should be uploaded to <code>npmjs</code></p><p>“files”: [<br>  “dist/*.js”<br>  “dist/*.css”<br>],</p><p><strong>Other information for <code>npmjs</code></strong></p><p>“description”: “A hello world vuejs components”,<br>“author”: “Hunter Tran”,<br>“license”: “MIT”,</p><blockquote><p>If your component use other components or packages, you need to specify them in <code>dependencies</code>, <a href="https://docs.npmjs.com/creating-a-package-json-file">here</a> is more info on npmjs.com</p></blockquote><h1 id="3-Build-Test-and-Publish"><a href="#3-Build-Test-and-Publish" class="headerlink" title="3. Build, Test and Publish"></a>3. Build, Test and Publish</h1><p><a id="markdown-build%2C-test-and-publish" name="build%2C-test-and-publish"></a></p><h2 id="3-1-Build"><a href="#3-1-Build" class="headerlink" title="3.1. Build"></a>3.1. Build</h2><p><a id="markdown-build" name="build"></a></p><p>Build your project using the new command</p><p>npm run build:helloworld</p><h2 id="3-2-Test"><a href="#3-2-Test" class="headerlink" title="3.2. Test"></a>3.2. Test</h2><p><a id="markdown-test" name="test"></a></p><p>The build command above will create a <code>dist</code> folder, including a <code>demo.html</code> site. Open that file using a browser to test your newly created component.</p><blockquote><p>You may need to modify that file a bit if your components is not <em>ready to use</em> and require some setup (like require data to run)</p></blockquote><h2 id="3-3-Publish"><a href="#3-3-Publish" class="headerlink" title="3.3. Publish"></a>3.3. Publish</h2><p><a id="markdown-publish" name="publish"></a></p><p>Simple enough, just type</p><p>npm publish</p><p>and follow the instruction.</p><h1 id="4-Test-the-published-package"><a href="#4-Test-the-published-package" class="headerlink" title="4. Test the published package"></a>4. Test the published package</h1><p><a id="markdown-test-the-published-package" name="test-the-published-package"></a></p><p>Finally, you can try your newly published package in a new “Hello World” vue cli project, or use the built <code>yourpackagename.common.js</code> file directly in your <code>&lt;head&gt;&lt;/head&gt;</code> section.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Using Vuejs, sometime you need to publish your awesome &lt;code&gt;component&lt;/code&gt; with the world. Sure you can share the &lt;code&gt;.vue&lt;/code&gt; file, but how can you publish it to &lt;code&gt;npmjs&lt;/code&gt;, for the ease of installation and usage of others?&lt;/p&gt;
    
    </summary>
    
    
      <category term="CSharp" scheme="https://huntertran.github.io/blog/categories/CSharp/"/>
    
      <category term="ASP.NET" scheme="https://huntertran.github.io/blog/categories/CSharp/ASP-NET/"/>
    
      <category term="VSCode" scheme="https://huntertran.github.io/blog/categories/VSCode/"/>
    
      <category term="JavaScript and TypeScript" scheme="https://huntertran.github.io/blog/categories/JavaScript-and-TypeScript/"/>
    
    
      <category term="component" scheme="https://huntertran.github.io/blog/tags/component/"/>
    
      <category term="vue" scheme="https://huntertran.github.io/blog/tags/vue/"/>
    
      <category term="vue-cli" scheme="https://huntertran.github.io/blog/tags/vue-cli/"/>
    
      <category term="vuejs" scheme="https://huntertran.github.io/blog/tags/vuejs/"/>
    
  </entry>
  
  <entry>
    <title>Java for Beginner - 3 - Java from C# cheats sheet</title>
    <link href="https://huntertran.github.io/blog/2019/07/14/java-for-beginner-3-java-from-c-cheats-sheet/"/>
    <id>https://huntertran.github.io/blog/2019/07/14/java-for-beginner-3-java-from-c-cheats-sheet/</id>
    <published>2019-07-14T01:15:56.000Z</published>
    <updated>2020-08-12T20:45:35.169Z</updated>
    
    <content type="html"><![CDATA[<p>Doing C# long enough, you get yourself familiar with C# concepts and syntax. That’s fine, but sometime when you need “the same” concepts in Java, it’s quite difficult. This cheat sheet here to tackle that problem.</p><a id="more"></a><p>You can view other posts in the series here:</p><ol><li><a href="https://coding4food.net/2019/07/11/java-for-beginner-1-introduction-to-java-from-a-net-guy/">Introduction</a></li><li><a href="https://coding4food.net/2019/07/12/java-for-beginner-2-hello-world-in-java/">Hello World</a></li><li>Cheats sheet (this post)</li></ol><p>Table of Content</p><ul><li><a href="#1-classes">1. Classes</a><ul><li><a href="#11-some-keywords">1.1. Some keywords</a></li><li><a href="#12-generic-class">1.2. Generic Class</a></li><li><a href="#13-interface-implement">1.3. Interface Implement</a></li></ul></li><li><a href="#2-variables">2. Variables</a></li><li><a href="#3-methods">3. Methods</a><ul><li><a href="#31-extension-method">3.1. Extension Method</a></li><li><a href="#32-safely-use-resource">3.2. Safely use resource</a></li><li><a href="#33-class-properties">3.3. Class Properties</a></li></ul></li></ul><h1 id="1-Classes"><a href="#1-Classes" class="headerlink" title="1. Classes"></a>1. Classes</h1><h2 id="1-1-Some-keywords"><a href="#1-1-Some-keywords" class="headerlink" title="1.1. Some keywords"></a>1.1. Some keywords</h2><p>C#</p><p>Java</p><p>Explanation for Java</p><p>: (to extend the class)</p><p>extends</p><p>Java use the keyword <code>extends</code> to extend a class</p><p>base</p><p>super</p><p>To access the base class methods</p><p>namespace</p><p>package</p><p>Java class belongs to a package, which is the name of the folder contains the .java file</p><p>internal</p><p>Java use the concept of package. More complicated convertion is <a href="https://stackoverflow.com/a/40437191/4506315">here</a></p><p>using</p><p>import</p><p><strong>Java Example</strong></p><p>// File Animal.java, inside folder animals<br>package main.java.animals;</p><p>import RandomPackage.*;<br>import RandomPackage.RandomSubPackage.*;</p><p>public class Animal {<br>    … other methods and properties …<br>    public Double getWeight() {<br>        return weight;<br>    }<br>    … other methods and properties …<br>}</p><p>// File Pig.java, inside folder animals<br>package main.java.animals;</p><p>public class Pig extends Animal {<br>    … other methods and properties …</p><pre><code>// override the getWeight methodpublic Double getWeight() &#123;    // do your override stuffs    return super.getWeight();&#125;... other methods and properties ...</code></pre><p>}</p><h2 id="1-2-Generic-Class"><a href="#1-2-Generic-Class" class="headerlink" title="1.2. Generic Class"></a>1.2. Generic Class</h2><p>Generic class with constraint</p><p><strong>C# Example</strong></p><p>public class GenericClass<T> where T: SomeBase<br>{<br>}</p><p><strong>Java Example</strong></p><p>public class GenericClass<T extends SomeBase><br>{<br>}</p><h2 id="1-3-Interface-Implement"><a href="#1-3-Interface-Implement" class="headerlink" title="1.3. Interface Implement"></a>1.3. Interface Implement</h2><p><strong>Java Example</strong></p><p>public class Pig implements IAnimal {<br>    public void Run() {<br>        …your code to make the pig run…<br>    }<br>}</p><h1 id="2-Variables"><a href="#2-Variables" class="headerlink" title="2. Variables"></a>2. Variables</h1><p>C#</p><p>Java</p><p>Explanation for Java</p><p>string</p><p>java.lang.String</p><p><code>string</code> in both is a immutable class (cannot change instance of object after create)</p><p>object</p><p>java.lang.Object</p><p>decimal</p><p>java.math.BigDecimal</p><p><strong>Java Example</strong></p><p>String hello = “Hello World!”;<br>System.out.print(hello);</p><h1 id="3-Methods"><a href="#3-Methods" class="headerlink" title="3. Methods"></a>3. Methods</h1><h2 id="3-1-Extension-Method"><a href="#3-1-Extension-Method" class="headerlink" title="3.1. Extension Method"></a>3.1. Extension Method</h2><p>In C#, you can write extension to an object, there is no equivalent to this in Java.</p><p><strong>C#</strong></p><p>public static class StringExtension<br>{<br>    public static string GetFirstThreeLetters(this string targetString)<br>    {<br>        // your code here to do the job<br>        // for example:<br>        // string result = targetString.SubString(0,3);<br>        return result;<br>    }<br>}</p><p>public class TestClass<br>{<br>    public void TestMethod()<br>    {<br>        string randomString = “This is so random”;<br>        Console.WriteLine(randomString.GetFirstThreeLetters);<br>    }<br>}</p><p>// Console Output<br>// Thi</p><p>But in Java, you need to have the full static class</p><p>public final class StringUtils {<br>    public static String GetFirstThreeLetters(String stringToGet) {<br>        // your code here to do the job<br>        // for example:<br>        // String result = stringToGet.substring(0,3);<br>        return result;<br>    }<br>}</p><p>public class TestClass<br>{<br>    private void TestMethod()<br>    {<br>        String randomString = “This is so random”;<br>        StringUtils.GetFirstThreeLetters(randomString);<br>    }<br>}</p><p>// Console Output<br>// Thi</p><h2 id="3-2-Safely-use-resource"><a href="#3-2-Safely-use-resource" class="headerlink" title="3.2. Safely use resource"></a>3.2. Safely use resource</h2><p>In C#, you can use a resource safely with the keyword <code>using</code></p><p><strong>C# Example</strong></p><p>using(MyResource myResource = new MyResource())<br>{<br>    myResource.DoSomething();<br>}</p><p>In Java, you will use a different keyword: <code>try</code></p><p><strong>Java Example</strong></p><p>try(MyResource myResource = new MyResource()) {<br>    myResource.DoSomething();<br>}</p><h2 id="3-3-Class-Properties"><a href="#3-3-Class-Properties" class="headerlink" title="3.3. Class Properties"></a>3.3. Class Properties</h2><p>It is very convenient for C# developers to create and use <code>property</code> with auto-property, property with private backing fields.</p><p><strong>C# Example</strong></p><p>public class Animal<br>{<br>    // Auto-property<br>    public int Height { get; set; }</p><pre><code>// Property with private backing field// &#123;rivate fieldprivate int \_weight;// Exposed with public propertypublic int Weight&#123;    get    &#123;        return \_weight;    &#125;    set    &#123;        // do some check to validate the value        if(value &gt; 0)        &#123;            \_weight = value;        &#125;    &#125;&#125;</code></pre><p>}</p><p>// using in other class<br>public void RandomMethod()<br>{<br>    Animal pig = new Animal();<br>    pig.Weight = 500;</p><pre><code>Console.WriteLine(&quot;Pig weight: &quot; + pig.Weight);</code></pre><p>}</p><p>There is no equivalent to this in Java, you need to create 2 normal methods for get and set value of a private field</p><p><strong>Java Example</strong></p><p>public class Animal {<br>    private int _weight;</p><pre><code>public void setWeight(int weight) &#123;    if(weight &gt; 0) &#123;        \_weight = weight;    &#125;&#125;public int getWeight() &#123;    return \_weight;&#125;</code></pre><p>}</p><p>// using in other class<br>public void RandomMethod() {<br>    Animal pig = new Animal();<br>    pig.setWeight(500);</p><pre><code>System.out.print(&quot;Pig weight: &quot; + pig.getWeight());</code></pre><p>}</p><p>Other different is just one google search result away ;) See you next post</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Doing C# long enough, you get yourself familiar with C# concepts and syntax. That’s fine, but sometime when you need “the same” concepts in Java, it’s quite difficult. This cheat sheet here to tackle that problem.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://huntertran.github.io/blog/categories/Java/"/>
    
    
      <category term="java for beginner" scheme="https://huntertran.github.io/blog/tags/java-for-beginner/"/>
    
      <category term="cheats sheet" scheme="https://huntertran.github.io/blog/tags/cheats-sheet/"/>
    
  </entry>
  
  <entry>
    <title>Java for Beginner - 2 - Hello World in Java</title>
    <link href="https://huntertran.github.io/blog/2019/07/12/java-for-beginner-2-hello-world-in-java/"/>
    <id>https://huntertran.github.io/blog/2019/07/12/java-for-beginner-2-hello-world-in-java/</id>
    <published>2019-07-12T16:40:13.000Z</published>
    <updated>2020-08-12T20:45:35.169Z</updated>
    
    <content type="html"><![CDATA[<p>After getting yourself familiar with names and terms in Java in <a href="https://coding4food.net/2019/07/11/java-for-beginner-1-introduction-to-java-from-a-net-guy/">part 1</a>, now it’s time for you to create your first program in Java.</p><a id="more"></a><ul><li><a href="#1-setup">1. Setup</a><ul><li><a href="#11-required-tools">1.1. Required Tools</a></li><li><a href="#12-set-environment-variables">1.2. Set environment variables</a></li></ul></li><li><a href="#2-start-coding">2. Start coding</a><ul><li><a href="#21-hello-world-in-java">2.1. Hello World in Java</a></li><li><a href="#22-run-and-debug">2.2. Run and Debug</a></li></ul></li><li><a href="#3-java-build-tools">3. Java Build Tools</a></li></ul><h1 id="1-Setup"><a href="#1-Setup" class="headerlink" title="1. Setup"></a>1. Setup</h1><p>For a beginner, tools and supports from those tools is quite vital. Someone will said that you should <em>learn</em> new language by using a basic text editor like Notepad. In my opinion, don’t do it. Use a IDE, or at least VSCode with supporting extensions, and re-type any code that you read, don’t copy and paste them.</p><h2 id="1-1-Required-Tools"><a href="#1-1-Required-Tools" class="headerlink" title="1.1. Required Tools"></a>1.1. Required Tools</h2><ol><li><a href="https://code.visualstudio.com/">Visual Studio Code</a> - Cross platform, fast and beautiful (especially dark theme is an ease for your eye).</li><li><a href="https://github.com/Microsoft/vscode-java-pack">Java Extension Pack (GitHub)</a> - <a href="https://marketplace.visualstudio.com/items?itemName=vscjava.vscode-java-pack&ssr=false">install</a> - a set of extensions for VSCode to work with Java</li><li><a href="https://adoptopenjdk.net/">Prebuilt OpenJDK by Adopt OpenJDK (free)</a> - including JVM. This project is community backed with short and easy explanation, perfect for beginner.</li><li>Some other tools that will be install on-the-fly</li></ol><h2 id="1-2-Set-environment-variables"><a href="#1-2-Set-environment-variables" class="headerlink" title="1.2. Set environment variables"></a>1.2. Set environment variables</h2><p>Set <code>JAVA_HOME</code> to the folder you have install JDK</p><p>Start &gt; type <code>advanced system settings</code> &gt; Environment Variables…</p><p><img src="https://i.imgur.com/WokUE7n.png" alt="advanced system settings"></p><p>Then add a new System Variable</p><p>JAVA_HOME</p><p>C:\Program Files\Java\jdk1.8.0_161</p><h1 id="2-Start-coding"><a href="#2-Start-coding" class="headerlink" title="2. Start coding"></a>2. Start coding</h1><h2 id="2-1-Hello-World-in-Java"><a href="#2-1-Hello-World-in-Java" class="headerlink" title="2.1. Hello World in Java"></a>2.1. Hello World in Java</h2><p>Unlike .NET, JAVA required a specific folder structure. Each .java file should contain only 1 class, and that class must declare <code>package</code> with the name of the folder.</p><p>Open VSCode and create the following folder structure</p><p>&lt;your_project_name&gt;<br>|-src<br>| |-main<br>| | |-java<br>| | | |-hello</p><p>Inside hello folder, create <code>Application.java</code>, then type the following code</p><p>package main.hello;</p><p>public class Application {</p><pre><code>public static void main(String\[\] args) &#123;    String hello = &quot;Hello World!&quot;;    System.out.print(hello);&#125;</code></pre><p>}</p><h2 id="2-2-Run-and-Debug"><a href="#2-2-Run-and-Debug" class="headerlink" title="2.2. Run and Debug"></a>2.2. Run and Debug</h2><p>Create configuration file (VSCode will automatically do this)</p><p><img src="https://i.imgur.com/r1j33Ht.png" alt="config"></p><p><code>.vscode</code> folder added to folder structure, with <code>launch.json</code> file created, the content should look like this</p><p>{<br>    // Use IntelliSense to learn about possible attributes.<br>    // Hover to view descriptions of existing attributes.<br>    // For more information, visit: <a href="https://go.microsoft.com/fwlink/?linkid=830387">https://go.microsoft.com/fwlink/?linkid=830387</a><br>    “version”: “0.2.0”,<br>    “configurations”: [<br>        {<br>            “type”: “java”,<br>            “name”: “Debug (Launch) - Current File”,<br>            “request”: “launch”,<br>            “mainClass”: “${file}”<br>        },<br>        {<br>            “type”: “java”,<br>            “name”: “Debug (Launch)-Application”,<br>            “request”: “launch”,<br>            “mainClass”: “main.hello.Application”<br>        }<br>    ]<br>}</p><p>Press F5 (or that green arrow button), and the word <code>Hello World!</code> will be printed on debug console</p><p><img src="https://i.imgur.com/lopZQwM.png" alt="hello world"></p><p>To debug, put a break point in line 7</p><p><img src="https://i.imgur.com/fSl61GO.png" alt="break point"></p><p>Then press F5 again</p><p><img src="https://i.imgur.com/hJHvv44.png" alt="debug"></p><h1 id="3-Java-Build-Tools"><a href="#3-Java-Build-Tools" class="headerlink" title="3. Java Build Tools"></a>3. Java Build Tools</h1><p>To build a java file, you need a build tool. In the tutorial above, VSCode has already done that for you. The most widely used build tool for Java right now is Gradle and Maven. Both can be use in VSCode terminal window and integrated in VSCode task (in fact, what doesn’t?)</p><ul><li><a href="https://gradle.org/">Gradle</a> - fast, chosen by Google to use as default build tool for Android.</li><li><a href="https://maven.apache.org/">Maven</a> - easier to understand and use.</li></ul><blockquote><p>VSCode Java Extension Pack support Maven naturally. But maybe you still need to install maven manually.</p></blockquote><p>That’s it. See you next time.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;After getting yourself familiar with names and terms in Java in &lt;a href=&quot;https://coding4food.net/2019/07/11/java-for-beginner-1-introduction-to-java-from-a-net-guy/&quot;&gt;part 1&lt;/a&gt;, now it’s time for you to create your first program in Java.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://huntertran.github.io/blog/categories/Java/"/>
    
    
      <category term="java for beginner" scheme="https://huntertran.github.io/blog/tags/java-for-beginner/"/>
    
      <category term="hello world" scheme="https://huntertran.github.io/blog/tags/hello-world/"/>
    
  </entry>
  
  <entry>
    <title>Java for Beginner - 1 - Introduction to Java from a .NET guy</title>
    <link href="https://huntertran.github.io/blog/2019/07/11/java-for-beginner-1-introduction-to-java-from-a-net-guy/"/>
    <id>https://huntertran.github.io/blog/2019/07/11/java-for-beginner-1-introduction-to-java-from-a-net-guy/</id>
    <published>2019-07-11T00:11:54.000Z</published>
    <updated>2020-08-12T20:45:35.169Z</updated>
    
    <content type="html"><![CDATA[<p>Coming to Java world, from a .NET guy, is like going from a full feature-rich and comfortable car to a basic bike with a lot of space for extension and customization.<br>In this series, I will walk you through (hopefully) a small part of Java world, just enough for you to continue your exploration.</p><a id="more"></a><ul><li><a href="#1-intro">1. Intro</a><ul><li><a href="#11-what-it-can-do">1.1. What it can do</a></li><li><a href="#12-write-one-run-anywhere">1.2. Write one, run anywhere</a></li></ul></li><li><a href="#2-versions-and-tools">2. Versions and Tools</a><ul><li><a href="#21-versions">2.1. Versions</a></li><li><a href="#22-tools">2.2. Tools</a></li><li><a href="#23-terms">2.3. Terms</a></li></ul></li><li><a href="#3-frameworks">3. Frameworks</a></li></ul><h1 id="1-Intro"><a href="#1-Intro" class="headerlink" title="1. Intro"></a>1. Intro</h1><h2 id="1-1-What-it-can-do"><a href="#1-1-What-it-can-do" class="headerlink" title="1.1. What it can do"></a>1.1. What it can do</h2><p>When a person decided to study some new programming language or platform, the first question could be the purpose. Why do you want to study this language/platform? What it can do compared to xyz language?</p><p>The answer: almost anything!</p><p>From mobile application to huge software used in banking, super-computer and satellite in the sky.</p><h2 id="1-2-Write-one-run-anywhere"><a href="#1-2-Write-one-run-anywhere" class="headerlink" title="1.2. Write one, run anywhere"></a>1.2. Write one, run anywhere</h2><p>Ideally, a Java developer can write the code one, and run it anywhere that can run Java Virtual Machine (JVM). But we live in an un-ideal world. There are differences between devices and operating systems, so there are different versions of JVM implementation. The famous title became</p><blockquote><p>Write one, debug everywhere</p></blockquote><h1 id="2-Versions-and-Tools"><a href="#2-Versions-and-Tools" class="headerlink" title="2. Versions and Tools"></a>2. Versions and Tools</h1><h2 id="2-1-Versions"><a href="#2-1-Versions" class="headerlink" title="2.1. Versions"></a>2.1. Versions</h2><p>Java have different versions for different purpose</p><ul><li>Java ME: Java Micro Edition. Optimized for mobile, embedded devices (like outdoor billboard, TV boxes, printers, etc.). The SDK for Java ME haven’t had update since Jan 2018 (as of July 2019)</li><li>Java SE: Java Standard Edition. The name says it all. You can develop desktops and servers applications using this version. The <a href="https://www.oracle.com/technetwork/java/javase/overview/index.html">latest version</a> is 12.0.1 (as of July 2019)</li><li>Java EE: Java Enterprise Edition. Support a lot more APIs like JSON processing, annotations, contexts and dependency injections. The <a href="https://www.oracle.com/technetwork/java/javaee/overview/index.html">latest version</a> is 8u1 (I know, the version number is strange)</li><li>Java Embedded, Java TV, Java Card: Seem like different version of Java ME with a much more updated SDK. More info <a href="https://www.oracle.com/technetwork/java/embedded/javame/index.html">here</a></li></ul><h2 id="2-2-Tools"><a href="#2-2-Tools" class="headerlink" title="2.2. Tools"></a>2.2. Tools</h2><p>Come along with Java are a lot of tools</p><ul><li>IDE: <a href="https://www.eclipse.org/">Eclipse</a>, <a href="https://netbeans.org/">Netbeans</a>, <a href="https://code.visualstudio.com/docs/languages/java">VSCode with extensions</a> (free), <a href="https://www.jetbrains.com/idea/">Jetbrains’s IntelliJ IDEA</a></li><li>Servers (only for Java EE): <a href="https://github.com/wildfly/wildfly">Wildfly</a> open source by Redhat, <a href="https://github.com/eclipse-ee4j/glassfish">GlassFish</a> open source (part of eclipse-ee4j), <a href="https://github.com/apache/tomcat">Apache Tomcat</a> open source.</li></ul><h2 id="2-3-Terms"><a href="#2-3-Terms" class="headerlink" title="2.3. Terms"></a>2.3. Terms</h2><ul><li>JRE: Java Runtime Environment</li><li>JDK: Java Development Kits. JDK has multiple implementation because of a long and complicated relationships between big firms</li><li>JFX: or JavaFX. Things get strange from here. “OpenJFX is an open source, next generation client application platform for desktop, mobile and embedded systems built on Java” they said. But to be honest, I don’t understand what is the difference between the “normal” java and the “next generation” java, since both are in active development.</li></ul><h1 id="3-Frameworks"><a href="#3-Frameworks" class="headerlink" title="3. Frameworks"></a>3. Frameworks</h1><p>In Microsoft world, .NET is the framework. If you want full-feature, compatible with old system, use .NET Framework (latest 4.8). If you want cross-platform (yes, including Linux), use .NET Core. And if you wait long enough, you can use <a href="https://devblogs.microsoft.com/dotnet/introducing-net-5/">.NET 5</a>, as they said “There will be just one .NET going forward, and you will be able to use it to target Windows, Linux, macOS, iOS, Android, tvOS, watchOS and WebAssembly and more.”</p><p>Things are different in Java world. Java first created by Sun Microsystem, then bought by Oracle (then oracle sue Google for using some lines of code in Android). A lot of community driven frameworks has been developed for Java. There is no “one framework to fit all” like .NET. This bend the learning curve, make it difficult for a developer to jump from one framework to another.</p><p>For a beginner, the curve even worst. A lot of names and terms to familiar, and then you must choose a framework to “dive in”. Reader beware, silly names are coming.</p><ol><li>Apache Struts: MVC pattern, open source.</li><li>Spring Boot: MVC pattern, reliable, big community</li><li>Grails: Built on top of Sprint Boot easy to learn, use, has excellent document with a lot of plugin</li></ol><p>The problems are, each of these frameworks implement a slightly different conventions and introduce different concepts. Too much for “write one, run anywhere” ei?</p><p>Another problem: you will never know if a framework is about to abandon, so stick to a single framework seem risky (for me at least, since in .net, I know that specific version of .net framework will continue to be supported and easily upgraded to newer version with minimum effort)</p><p>That’s all for introduction of Java. See you in next post.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Coming to Java world, from a .NET guy, is like going from a full feature-rich and comfortable car to a basic bike with a lot of space for extension and customization.&lt;br&gt;In this series, I will walk you through (hopefully) a small part of Java world, just enough for you to continue your exploration.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://huntertran.github.io/blog/categories/Java/"/>
    
    
      <category term="java for beginner" scheme="https://huntertran.github.io/blog/tags/java-for-beginner/"/>
    
  </entry>
  
  <entry>
    <title>[Life] - Fighting with unauthorized copies of your content</title>
    <link href="https://huntertran.github.io/blog/2019/06/16/fighting-with-unauthorized-copies-of-your-content/"/>
    <id>https://huntertran.github.io/blog/2019/06/16/fighting-with-unauthorized-copies-of-your-content/</id>
    <published>2019-06-16T04:37:17.000Z</published>
    <updated>2020-08-12T20:45:35.169Z</updated>
    
    <content type="html"><![CDATA[<p>Last Friday, while looking through the stats from my blog, I notice something strange. A hyperlink that lead to my blog is not “right”. I clicked on that link (a web search result page actually), a search tool appeared with my original post listed as page 2. Curios, I click on page 1 of the search result, and voila, some sites with tricky SEO technique take the few first result.</p><p>The point is, they are copying content from my blog, without my authorization. It’s time to tackle this problem.</p><a id="more"></a><ul><li><a href="#1-search-for-all-other-sites">1. Search for all other sites</a></li><li><a href="#2-is-the-site-tolerable">2. Is the site tolerable?</a></li><li><a href="#3-file-a-dmca-report">3. File a DMCA report</a></li><li><a href="#4-what-happened-after-a-link-is-approved">4. What happened after a link is approved</a></li></ul><h1 id="1-Search-for-all-other-sites"><a href="#1-Search-for-all-other-sites" class="headerlink" title="1. Search for all other sites"></a>1. Search for all other sites</h1><p>I thought this would be easy. Turn out it the most difficult step to take. The violated sites are managed by ‘master’ of Search Engine Optimization. They know how to optimize their site for better place in Google search result. They also know how to change your post just a little bit to deceive the Google algorithm to find duplication.</p><ol><li><strong>Search for the title</strong>. This search is easy. Copy your post title (maybe you have to remove all the special character like <code>[]</code> or <code>&#123;&#125;</code>). Sometime, when your title is written in English, you can translate it to your mother tongue language.</li><li><strong>Search for a sentence</strong>. Choose short sentence with your writing style that cannot be meet elsewhere is the best option. A short sentence for this search to work would have more than 10 or 15 words.</li><li><strong>Search by Image</strong>. This is the last search that I have made. The result is not useful but try anyway.</li></ol><h1 id="2-Is-the-site-tolerable"><a href="#2-Is-the-site-tolerable" class="headerlink" title="2. Is the site tolerable?"></a>2. Is the site tolerable?</h1><p>In Vietnam, it’s a tacit agreement when you copy the whole post published by someone else, then re-post it on your site and have a link back to the original content (at the end or beginning of the post). I know this is not legal in many countries. Instead, you are only allowed to “quote” a segment, a sentence from that original post with appropriate citing.</p><p>That’s why your next job is to determine that the violated site worthy to use your hard work and research, time and money for free.</p><p>I suggest no.</p><h1 id="3-File-a-DMCA-report"><a href="#3-File-a-DMCA-report" class="headerlink" title="3. File a DMCA report"></a>3. File a DMCA report</h1><p>This will be the easiest step. You will need your Google account, and</p><ul><li>Link to your original content.</li><li>Link to violated content (must be a link to specific post)</li><li>Time</li></ul><p>Go to <a href="https://support.google.com/legal">Google Legal page</a> and select accordingly</p><p><img src="https://i.imgur.com/MdLhEw9.png" alt="Click this link"></p><p>The result should look like this</p><p><img src="https://i.imgur.com/YeNk9JQ.png" alt="result"></p><h1 id="4-What-happened-after-a-link-is-approved"><a href="#4-What-happened-after-a-link-is-approved" class="headerlink" title="4. What happened after a link is approved"></a>4. What happened after a link is approved</h1><p>The certain outcome is that the link will be removed from Google search result (including all other search tool using Google search engine).</p><p>Another possible outcome is that the violated site (with enough DMCA report), will be remove completely from google search result.</p><p>Cheers :D</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Last Friday, while looking through the stats from my blog, I notice something strange. A hyperlink that lead to my blog is not “right”. I clicked on that link (a web search result page actually), a search tool appeared with my original post listed as page 2. Curios, I click on page 1 of the search result, and voila, some sites with tricky SEO technique take the few first result.&lt;/p&gt;
&lt;p&gt;The point is, they are copying content from my blog, without my authorization. It’s time to tackle this problem.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Life" scheme="https://huntertran.github.io/blog/categories/Life/"/>
    
    
      <category term="DMCA" scheme="https://huntertran.github.io/blog/tags/DMCA/"/>
    
      <category term="original" scheme="https://huntertran.github.io/blog/tags/original/"/>
    
      <category term="violation" scheme="https://huntertran.github.io/blog/tags/violation/"/>
    
  </entry>
  
  <entry>
    <title>[Machine Learning] - 3.2 - Logistic Regression Model</title>
    <link href="https://huntertran.github.io/blog/2019/06/15/machine-learning-3-2-logistic-regression-model/"/>
    <id>https://huntertran.github.io/blog/2019/06/15/machine-learning-3-2-logistic-regression-model/</id>
    <published>2019-06-15T03:14:11.000Z</published>
    <updated>2020-08-12T20:45:35.169Z</updated>
    
    <content type="html"><![CDATA[<p>Bài thứ 2 trong tuần 3 của khóa học Machine Learning của giáo sư Andrew Ng</p><a id="more"></a><ul><li><a href="#1-cost-function-for-logistic-regression">1. Cost Function for Logistic Regression</a><ul><li><a href="#11-c%C3%B4ng-th%E1%BB%A9c">1.1. Công thức</a></li><li><a href="#12-%C4%91%E1%BB%93-th%E1%BB%8B">1.2. Đồ thị</a></li><li><a href="#13-k%E1%BA%BFt-lu%E1%BA%ADn">1.3. Kết luận</a></li></ul></li><li><a href="#2-%C4%91%C6%A1n-gi%E1%BA%A3n-h%C3%B3a-cost-function-v%C3%A0-%C3%A1p-d%E1%BB%A5ng-gradient-descent">2. Đơn giản hóa Cost Function và áp dụng Gradient Descent</a><ul><li><a href="#21-bi%E1%BA%BFn-%C4%91%E1%BB%95i">2.1. Biến đổi</a></li><li><a href="#22-gradient-descent">2.2. Gradient Descent</a></li></ul></li><li><a href="#3-advanced-optimization">3. Advanced Optimization</a></li></ul><h1 id="1-Cost-Function-for-Logistic-Regression"><a href="#1-Cost-Function-for-Logistic-Regression" class="headerlink" title="1. Cost Function for Logistic Regression"></a><strong>1. Cost Function for Logistic Regression</strong></h1><p>Đối với linear regression, ta có thể dùng cost function như sau</p><p>$latex \frac{1}{2m}\sum_{i=1}^m(h_\theta(x^{(i)})-y^{(i)})^2$</p><p>Tuy nhiên, nếu áp dụng cùng công thức này với Logistic Regression, ta sẽ có 1 đồ thị vô cùng “gập ghềnh”, với rất nhiều điểm local optimal. Điều này trở thành một trở ngại vô cùng lớn với thuật toán gradient descent.</p><h2 id="1-1-Cong-thuc"><a href="#1-1-Cong-thuc" class="headerlink" title="1.1. Công thức"></a>1.1. Công thức</h2><p>Nói cách khác, nó sẽ không phải là một “convex function”</p><p>Thay vào đó, cost function cho Logistic Regression sẽ giống như sau</p><p>$latex  J(\theta) = \dfrac{1}{m} \sum_{i=1}^m \mathrm{Cost}(h_\theta(x^{(i)}),y^{(i)})$<br>$latex   \mathrm{Cost}(h_\theta(x),y) = -\log(h_\theta(x)) \quad \quad \quad \text{if y = 1}$<br>$latex   \mathrm{Cost}(h_\theta(x),y) = -\log(1-h_\theta(x)) \quad \quad \text{if y = 0}$</p><h2 id="1-2-Do-thi"><a href="#1-2-Do-thi" class="headerlink" title="1.2. Đồ thị"></a>1.2. Đồ thị</h2><p>Khi y = 1, ta có đồ thị sau cho $J(\theta)$ và $h_\theta(x)$:</p><p><img src="https://i.imgur.com/w6Ia2IS.png" alt="if y = 1 plot"></p><p>Tương tự, ta có đồ thị sau khi y = 0, ta có đồ thị sau</p><p><img src="https://i.imgur.com/g9c2Fmn.png" alt="if y = 0 plot"></p><h2 id="Ket-luan"><a href="#Ket-luan" class="headerlink" title="Kết luận"></a>Kết luận</h2><p>Dựa vào đồ thị, ta có thể rút ra kết luận sau</p><p>$latex \mathrm{Cost}(h_\theta(x),y) = 0 \text{ if } h_\theta(x) = y$<br>$latex \mathrm{Cost}(h_\theta(x),y) \rightarrow \infty \text{ if } y = 0 \; \mathrm{and} \; h_\theta(x) \rightarrow 1$<br>$latex \mathrm{Cost}(h_\theta(x),y) \rightarrow \infty \text{ if } y = 1 \; \mathrm{and} \; h_\theta(x) \rightarrow 0$</p><p>Như vậy, khi cost = 0, thì hàm hypothesis = y (cho cả trường hợp y = 0 hoặc y = 1)</p><p>Ngược lại</p><ul><li>nếu y = 0, và hypothesis tiến dần tới 1, thì cost sẽ tiến dần tới vô cực</li><li>nếu y = 1, và hypothesis tiến dần tới 0, thì cost sẽ tiến dần tới vô cực</li></ul><h1 id="2-Don-gian-hoa-Cost-Function-va-ap-dung-Gradient-Descent"><a href="#2-Don-gian-hoa-Cost-Function-va-ap-dung-Gradient-Descent" class="headerlink" title="2. Đơn giản hóa Cost Function và áp dụng Gradient Descent"></a>2. Đơn giản hóa Cost Function và áp dụng Gradient Descent</h1><h2 id="2-1-Bien-doi"><a href="#2-1-Bien-doi" class="headerlink" title="2.1. Biến đổi"></a>2.1. Biến đổi</h2><p>Với biểu thức ở trên, chỉ cần biến đổi một chút, ta có thể thu gọn nó vào thành 1 biểu thức như sau:</p><p>$latex \mathrm{Cost}(h_\theta(x),y) = - y \; \log(h_\theta(x)) - (1 - y) \log(1 - h_\theta(x))$</p><p>y chỉ có 2 giá trị hoặc = 1 hoặc = 0. Lần lượt thay 2 giá trị này vào biểu thức trên, ta sẽ thấy 1 trong 2 biểu thức con bị triệt tiêu.</p><p>Với data của bộ training sets, ta có thể viết đầy đủ biểu thức của cost function như sau:</p><p>$latex J(\theta) = -\frac{1}{m} \sum_{i=1}^{m}[y^{(i)}log(h_\theta(x^{(i)})) + (1-y^{(i)})log(1-h_\theta(x^{(i)}))]$</p><p>Sau đó, ta có thể “vector hóa” biểu thức này</p><p>$latex h = g(X\theta) \ J(\theta) = \frac{1}{m} \cdot \left(-y^{T}\log(h)-(1-y)^{T}\log(1-h)\right)$</p><h2 id="2-2-Gradient-Descent"><a href="#2-2-Gradient-Descent" class="headerlink" title="2.2. Gradient Descent"></a>2.2. Gradient Descent</h2><p>Nhắc lại một chút, dạng tổng quát của Gradient Descent như sao:</p><p>$latex Repeat \; \lbrace \ \; \theta_j := \theta_j - \alpha \dfrac{\partial}{\partial \theta_j}J(\theta) \ \rbrace$</p><p>Dùng đạo hàm, ta có thể tính được:</p><p>$latex Repeat \; \lbrace \ \; \theta_j := \theta_j - \frac{\alpha}{m} \sum_{i=1}^m (h_\theta(x^{(i)}) - y^{(i)}) x_j^{(i)} \ \rbrace$</p><p>áp bộ giá trị của training set vào, và chuyển thành toán tuyến tính (vectorise), ta có phép tính sau</p><p>$latex \theta:=\theta-\frac{\alpha}{m}X^T(g(X\theta)-\vec{y})$</p><h1 id="3-Advanced-Optimization"><a href="#3-Advanced-Optimization" class="headerlink" title="3. Advanced Optimization"></a>3. Advanced Optimization</h1><p>Bên cạnh thuật toán Gradient Descent dùng để tính toán giá trị tối ưu của $latex \theta$, chúng ta còn có nhiều thuật toán phức tạp hơn, nhưng cũng nhanh hơn nhiều:</p><ul><li>Conjugate gradient</li><li>BFGS</li><li>l-BFGS</li></ul><p>Các thuật toán này đều đã được xây dựng và tối ưu hóa trong các thư viện số học của nhiều ngôn ngữ lập trình.</p><p>Đầu tiên, chúng ta sẽ cần công thức để tính toán 2 biểu thức</p><p>$latex J(\theta) \ \dfrac{\partial}{\partial \theta_j}J(\theta)$</p><p>Tùy thuộc vào ngôn ngữ lập trình sẽ có các cú pháp khác nhau. Đối với Matlab, ta có thể viết 1 function duy nhất trả về cả 2 giá trị trên:</p><p>function [jVal, gradient] = costFunction(theta)<br>  jVal = […code to compute J(theta)…];<br>  gradient = […code to compute derivative of J(theta)…];<br>end</p><p>Sau đó, ta dùng function <code>optimset()</code> để tạo ra 1 object chứa các option cân thiết. Dùng object này đưa vào function <code>fminunc()</code> của Octave. Kết quả tính toán sẽ là 1 vector chứa các giá trị tối ưu của $latex \theta$</p><p>options = optimset(‘GradObj’, ‘on’, ‘MaxIter’, 100);<br>initialTheta = zeros(2,1);<br>   [optTheta, functionVal, exitFlag] = fminunc(@costFunction, initialTheta, options);</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Bài thứ 2 trong tuần 3 của khóa học Machine Learning của giáo sư Andrew Ng&lt;/p&gt;
    
    </summary>
    
    
      <category term="Others" scheme="https://huntertran.github.io/blog/categories/Others/"/>
    
    
  </entry>
  
  <entry>
    <title>[Research] - Gecko Dom Logging system</title>
    <link href="https://huntertran.github.io/blog/2019/06/14/gecko-dom-logging-system/"/>
    <id>https://huntertran.github.io/blog/2019/06/14/gecko-dom-logging-system/</id>
    <published>2019-06-14T04:12:17.000Z</published>
    <updated>2020-08-12T20:45:35.169Z</updated>
    
    <content type="html"><![CDATA[<p>The purpose of this documentation is to record all the findings and my progress while exploring Firefox source code, in order to log how many time a DOM API is called when visit a single website, or multiple common website.</p><p>This require a deep modification in Firefox’s implementation of DOM API.</p><a id="more"></a><ul><li><a href="#1-setup-and-initialization">1. Setup and initialization</a></li><li><a href="#2-source-code-structure">2. Source code structure</a><ul><li><a href="#21-built-in-extensions">2.1. Built-in extensions</a></li><li><a href="#22-javascript-engine-spidermonkey">2.2. JavaScript Engine (SpiderMonkey)</a></li></ul></li><li><a href="#3-understanding-dom">3. Understanding DOM</a><ul><li><a href="#31-dom-levels">3.1. DOM Levels</a><ul><li><a href="#311-dom-level-1">3.1.1. DOM Level 1</a></li><li><a href="#312-dom-level-2">3.1.2. DOM Level 2</a></li><li><a href="#313-dom-level-3">3.1.3. DOM Level 3</a></li></ul></li><li><a href="#32-shadow-dom-and-virtual-dom">3.2. Shadow DOM and Virtual DOM</a><ul><li><a href="#321-shadow-dom">3.2.1. Shadow DOM</a></li><li><a href="#322-virtual-dom">3.2.2. Virtual DOM</a></li></ul></li></ul></li><li><a href="#4-modifying-firefoxs-dom-method-implementation">4. Modifying Firefox’s DOM method implementation</a><ul><li><a href="#41-logging-framework">4.1. Logging Framework</a></li><li><a href="#42-analyze">4.2. Analyze</a></li></ul></li><li><a href="#5-development">5. Development</a><ul><li><a href="#51-design-solution">5.1. Design solution</a></li><li><a href="#52-firefox-integration">5.2. Firefox integration</a></li></ul></li></ul><h1 id="1-Setup-and-Initialization"><a href="#1-Setup-and-Initialization" class="headerlink" title="1. Setup and Initialization"></a>1. Setup and Initialization</h1><p>In short, to get the latest version of Firefox source code, one could follow the official instruction on <a href="https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Build_Instructions/Windows_Prerequisites">Building Firefox for Windows</a></p><blockquote><p>One small modification in which will decrease the time needed to build the source code: You will not need the “Game development with C++” while installing/modifying Visual Studio 2019</p></blockquote><h1 id="2-Source-code-structure"><a href="#2-Source-code-structure" class="headerlink" title="2. Source code structure"></a>2. Source code structure</h1><p>Mozilla use Gecko to render web content.</p><blockquote><p>More than that, Gecko is also used to render the firefox user interface.</p><p>On Windows, Gecko use Microsoft COM, on other platforms, Gecko use XPCOM to render user interface.</p></blockquote><p>The whole source code is mentioned as Gecko, and mirrored in <a href="https://github.com/mozilla/gecko-dev">Mozilla’s Github Repository</a></p><h2 id="2-1-Built-in-extensions"><a href="#2-1-Built-in-extensions" class="headerlink" title="2.1. Built-in extensions"></a>2.1. Built-in extensions</h2><p>Firefox contains 2 built-in extension: PDF.js and Shumway.</p><ul><li><a href="https://github.com/mozilla/pdf.js">PDF.js</a>: To open and read PDF files inside firefox, without opening another software</li><li><a href="https://github.com/mozilla/shumway">Shumway</a>: provide a way to render swf (Shock Wave Flash) file, which is quite popular in older websites to display animations, game, effects. These files has been replaced with HTML5, and considered as a security vulnerable in modern websites.</li></ul><h2 id="2-2-JavaScript-Engine-SpiderMonkey"><a href="#2-2-JavaScript-Engine-SpiderMonkey" class="headerlink" title="2.2. JavaScript Engine (SpiderMonkey)"></a>2.2. JavaScript Engine (SpiderMonkey)</h2><p>Located in <code>js\src</code>, the Firefox’s JavaScript Engine is called SpiderMonkey, and is in active development at <a href="https://hg.mozilla.org/mozilla-central/file/tip/js/src">mozilla-central/file/tip/js/src</a></p><blockquote><p>Beside the interpreter, SpiderMonkey contains a compiler , a garbage collector and a Just-in-time compiler.</p></blockquote><h1 id="3-Understanding-DOM"><a href="#3-Understanding-DOM" class="headerlink" title="3. Understanding DOM"></a>3. Understanding DOM</h1><p>DOM stands for Document Object Model. To understand what DOM is, first we need to understand the basic of a website</p><p>Websites are a combination of HTML, CSS and Javascript. HTML is a structured documents, and can be mapped by using a tree structure, starting with <code>html</code> tag as root.</p><blockquote><p>The DOM represents a document with a logical tree. Each branch of the tree ends in a node, and each node contains objects. DOM methods allow programmatic access to the tree; with them you can change the document’s structure, style, or content. Nodes can also have event handlers attached to them; once an event is triggered, the event handlers get executed.</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model">Document Object Model - Mozilla Developer Docs</a></p></blockquote><h2 id="3-1-DOM-Levels"><a href="#3-1-DOM-Levels" class="headerlink" title="3.1. DOM Levels"></a>3.1. DOM Levels</h2><p>Document Object Model API is implemented in level. The lower the level, the more basic and simple functions it defined. Currently there are 3 levels, which are mostly implemented by all modern browsers (Partly implemented for Level 3)</p><h3 id="3-1-1-DOM-Level-1"><a href="#3-1-1-DOM-Level-1" class="headerlink" title="3.1.1. DOM Level 1"></a>3.1.1. DOM Level 1</h3><p>Provide interface to represent any structured document, as well as accessing and manipulating nodes.</p><p>In level 1, DOM also define extended interfaces that counted as part of the specification, but not necessary for a HTML-only implementation of DOM specification.</p><blockquote><p>The <code>getElementsByTagName</code> method is defined in level DOM 1 specification.</p></blockquote><h3 id="3-1-2-DOM-Level-2"><a href="#3-1-2-DOM-Level-2" class="headerlink" title="3.1.2. DOM Level 2"></a>3.1.2. DOM Level 2</h3><p>Provide 6 separated specifications:</p><ul><li>Core: Extend the functionalities of Level 1.</li><li>Views: Allows programs and scripts to dynamically access and update the content of a representation of a document.</li><li>Events: Define basic of event system, including the concept of event flow, listening, bubbling, cancellation.</li><li>Styles: Access and update stylesheet.</li><li>Traversal and Range: Allow programs and scripts to dynamically walk-through and identify a range of contents in a document, as well as creation, insertion, modification and deletion of a range of contents.</li><li>HTML: Extend the interfaces defined in Level 1, using the Core level 2 possibilities.</li></ul><p>Most of the famous JavaScripts functions are defined in level 2</p><ul><li><code>getElementById</code> in <strong>Core</strong></li><li><code>addEventListener</code> and <code>handleEvent</code> in <strong>Events</strong></li><li><code>getComputedStyle</code> in <strong>Styles</strong></li><li><code>NodeIterator</code> and <code>TreeWalker</code> in <strong>Traversal and Range</strong></li><li><code>contentDocument</code> property in <strong>HTML</strong></li></ul><h3 id="3-1-3-DOM-Level-3"><a href="#3-1-3-DOM-Level-3" class="headerlink" title="3.1.3. DOM Level 3"></a>3.1.3. DOM Level 3</h3><p>Unlike level 1 and 2, only a few methods and properties in DOM level 3 are supported. Level 3 provide advanced functionalities to manipulate DOM and XML. Firefox divide DOM Level 3 in 5 separated part, with different level of support</p><ul><li>Core: Only a few methods and properties are supported.</li><li>Load and Save: dynamically load XML documents into DOM or serialize DOM to XML docs. None supported</li><li>Validation: Update content and ensure validity. Firefox not support this interface</li><li>Events: Keyboard events and how to handle them. Partly supported.</li><li>XPath: Simple functionalities to access DOM tree using XPath.</li></ul><h2 id="3-2-Shadow-DOM-and-Virtual-DOM"><a href="#3-2-Shadow-DOM-and-Virtual-DOM" class="headerlink" title="3.2. Shadow DOM and Virtual DOM"></a>3.2. Shadow DOM and Virtual DOM</h2><h3 id="3-2-1-Shadow-DOM"><a href="#3-2-1-Shadow-DOM" class="headerlink" title="3.2.1. Shadow DOM"></a>3.2.1. Shadow DOM</h3><p>Shadow DOM is an complete dom tree hidden inside an dom node. All the markups, structures, styles or behaviors are separated from actual/normal dom. The reason for this concept is to develop low level web components that will have default user interface/behaviors across websites (e.g <code>&lt;video&gt;&lt;/video&gt;</code> tag with default control buttons provided by browsers)</p><h3 id="3-2-2-Virtual-DOM"><a href="#3-2-2-Virtual-DOM" class="headerlink" title="3.2.2. Virtual DOM"></a>3.2.2. Virtual DOM</h3><p>In short, Virtual DOM is an abstraction of DOM. It represent for a small subset of DOM, and update the actual DOM accordingly. Virtual DOM is implemented not by browsers, but by high level javascript libraries (eg React, asm-dom, etc)</p><p>Virtual DOM libraries compare changed nodes with actual node in DOM tree. If there are differences, it will update the actual DOM. By optimizing the comparison algorithm, it can perform extremely fast since it does not need to search the whole DOM tree for nodes and properties.</p><h1 id="4-Modifying-Firefox’s-DOM-method-implementation"><a href="#4-Modifying-Firefox’s-DOM-method-implementation" class="headerlink" title="4. Modifying Firefox’s DOM method implementation"></a>4. Modifying Firefox’s DOM method implementation</h1><h2 id="4-1-Logging-Framework"><a href="#4-1-Logging-Framework" class="headerlink" title="4.1. Logging Framework"></a>4.1. Logging Framework</h2><p>Firefox provide a “simple” logging service, located at <code>dom\accessible\Logging.h</code> (header file). This is recommended way to log anything to Firefox’s browser console.</p><p>To use it, you need to do the following:</p><p>#include “mozilla/Logging.h”<br>static mozilla::LazyLogModule sFooLog(“foo”);</p><p>LazyLogModule will be initialized safely, even if the current class is already initialize an instance of LazyLogModule.</p><p>Later, using these method appropriately to log:</p><p>from <a href="https://developer.mozilla.org/en-US/docs/Mozilla/Developer/_guide/Gecko/_Logging">https://developer.mozilla.org/en-US/docs/Mozilla/Developer\_guide/Gecko\_Logging</a></p><p>Name</p><p>Description</p><p>MOZ_LOG(module, level, message)</p><p>Outputs the given message if the module has the given log level enabled.<br>+ module - The log module to use.<br>+ level - The log level of the message.<br>+ message - A printf-style message to output. Must be enclosed in parentheses.</p><p>MOZ_LOG_TEST(module, level)</p><p>Checks if the module has the given level enabled.<br>+ module - The log module to use.<br>+ level - The output level of the message.</p><h2 id="4-2-Analyze"><a href="#4-2-Analyze" class="headerlink" title="4.2. Analyze"></a>4.2. Analyze</h2><p>The requirement for my project is simple: To know how many time a dom method is called (for a specific website, and average for a set of common website)</p><p>In fact, I cannot use Firefox own logging framework, because of these problems:</p><ol><li>Gecko source code is full of old logs and developer notes.</li><li>Each log must provide a log level, which is not applicable for my project.</li><li>Cannot count the logged text without writing another piece of tool.</li></ol><p>Example of old logs and developer notes from <code>mozilla-central\dom\base\nsINode.cpp</code>, <a href="https://dxr.mozilla.org/mozilla-central/rev/4a63f0a3a1f26e2a377ffbd477ba050e16577445/dom/base/nsINode.cpp#2585">line 2585 to line 2609</a></p><p>Element* nsINode::GetElementById(const nsAString&amp; aId) {<br>  MOZ_ASSERT(!IsShadowRoot(), “Should use the faster version”);<br>  MOZ_ASSERT(IsElement() || IsDocumentFragment(),<br>             “Bogus this object for GetElementById call”);<br>  if (IsInUncomposedDoc()) {<br>    MOZ_ASSERT(IsElement(), “Huh? A fragment in a document?”);<br>    return FindMatchingElementWithId(aId, *AsElement(), *OwnerDoc());<br>  }</p><p>  if (ShadowRoot* containingShadow = AsContent()-&gt;GetContainingShadow()) {<br>    MOZ_ASSERT(IsElement(), “Huh? A fragment in a ShadowRoot?”);<br>    return FindMatchingElementWithId(aId, *AsElement(), *containingShadow);<br>  }</p><p>  for (nsIContent* kid = GetFirstChild(); kid; kid = kid-&gt;GetNextNode(this)) {<br>    if (!kid-&gt;IsElement()) {<br>      continue;<br>    }<br>    nsAtom* id = kid-&gt;AsElement()-&gt;GetID();<br>    if (id &amp;&amp; id-&gt;Equals(aId)) {<br>      return kid-&gt;AsElement();<br>    }<br>  }<br>  return nullptr;<br>}</p><h1 id="5-Development"><a href="#5-Development" class="headerlink" title="5. Development"></a>5. Development</h1><h2 id="5-1-Design-solution"><a href="#5-1-Design-solution" class="headerlink" title="5.1. Design solution"></a>5.1. Design solution</h2><p>My solution is simple. Log into an array, then count for each time a function name is repeated.</p><p>First, I created a class to hold each record</p><p>class DomLogNode<br>{<br>public:<br>    DomLogNode();</p><pre><code>void setNode(string name, int count);int increaseCount();bool compareName(string nameToCompare);int getCount();string getName();</code></pre><p>private:<br>    string functionName;<br>    int count;<br>};</p><p>Then, I created another class to hold the list of record. This class is static</p><p>static class DomLog<br>{<br>public:<br>    void recordLog(string functionName);<br>    void pushNewName(string functionName, int initialCount = 1);<br>    void getDomLogs();<br>    void exportFile(string path);</p><p>private:<br>    vector<DomLogNode> domLogs;<br>} domLog;</p><p>Method <code>exportFile(string path)</code> write the list to a csv file, using simple c++ file library.</p><p><strong>Get the caller method name</strong><br>In cpp, to get the current method name, we can use the static variable <code>__func__</code> as stated here: <a href="https://docs.microsoft.com/en-us/cpp/cpp/func">https://docs.microsoft.com/en-us/cpp/cpp/func</a></p><blockquote><p>You can get the whole source code at my Github <a href="https://github.com/huntertran/gecko-dom-log.git">repository</a></p></blockquote><h2 id="5-2-Firefox-integration"><a href="#5-2-Firefox-integration" class="headerlink" title="5.2. Firefox integration"></a>5.2. Firefox integration</h2><p>Unfortunately, the Firefox source code system (using mercurial source control) is buggy lately. It close the connection way before the clone process finished.</p><p>Firefox implement DOM API all over the source code. For example, the API <code>getElementById</code> is implemented in 3 different places:</p><ul><li><code>dom\base\AnonymousContent.h</code> with corresponding implementation</li><li><code>dom\base\DocumentOrShadowRoot.h</code> with corresponding implementation</li><li><code>dom\base\nsINode.h</code> with corresponding implementation</li></ul><p>The method inside <code>nsdINode</code> have a comment</p><p>// Document and ShadowRoot override this with its own (faster) version.<br>// This should really only be called for elements and document fragments.</p><p>This mean, to correctly record how many time the GetElementById is called, we have to modify the code of all 3 methods.</p><p>domLog.recordLog(__func__);</p><p>This quickly getting out of hand, since there are hundreds of DOM API we need to log, and I am still looking for another solution.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The purpose of this documentation is to record all the findings and my progress while exploring Firefox source code, in order to log how many time a DOM API is called when visit a single website, or multiple common website.&lt;/p&gt;
&lt;p&gt;This require a deep modification in Firefox’s implementation of DOM API.&lt;/p&gt;
    
    </summary>
    
    
      <category term="CPlusPlus" scheme="https://huntertran.github.io/blog/categories/CPlusPlus/"/>
    
    
      <category term="firefox" scheme="https://huntertran.github.io/blog/tags/firefox/"/>
    
      <category term="DOM API" scheme="https://huntertran.github.io/blog/tags/DOM-API/"/>
    
      <category term="Log" scheme="https://huntertran.github.io/blog/tags/Log/"/>
    
  </entry>
  
  <entry>
    <title>Machine Learning Title block</title>
    <link href="https://huntertran.github.io/blog/2019/05/15/machine-learning-title-block/"/>
    <id>https://huntertran.github.io/blog/2019/05/15/machine-learning-title-block/</id>
    <published>2019-05-15T04:06:14.000Z</published>
    <updated>2020-08-12T20:45:35.169Z</updated>
    
    <content type="html"><![CDATA[<p>Xem các bài viết khác tại <a href="https://coding4food.net/machine-learning-course/">Machine Learning Course Structure</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Xem các bài viết khác tại &lt;a href=&quot;https://coding4food.net/machine-learning-course/&quot;&gt;Machine Learning Course Structure&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="uncategorized" scheme="https://huntertran.github.io/blog/categories/uncategorized/"/>
    
    
  </entry>
  
  <entry>
    <title>[Machine Learning] - 3.1 - Classification and Representation</title>
    <link href="https://huntertran.github.io/blog/2019/05/14/machine-learning-1-3-classification-and-representation/"/>
    <id>https://huntertran.github.io/blog/2019/05/14/machine-learning-1-3-classification-and-representation/</id>
    <published>2019-05-14T09:43:52.000Z</published>
    <updated>2020-08-12T20:45:35.169Z</updated>
    
    <content type="html"><![CDATA[<p>Tuần 3 trong course Machine Learning của giáo sư Andrew Ng trên Coursera.</p><a id="more"></a><ul><li><a href="#1-classification-and-representation">1. Classification and Representation</a><ul><li><a href="#11-sigmoid-function-or-logistic-function">1.1. Sigmoid Function or Logistic Function</a></li><li><a href="#12-decision-boundary">1.2. Decision Boundary</a></li></ul></li><li><a href="#2-v%C3%AD-d%E1%BB%A5">2. Ví dụ</a></li></ul><h1 id="1-Classification-and-Representation"><a href="#1-Classification-and-Representation" class="headerlink" title="1. Classification and Representation"></a><strong>1. Classification and Representation</strong></h1><h2 id="1-1-Sigmoid-Function-or-Logistic-Function"><a href="#1-1-Sigmoid-Function-or-Logistic-Function" class="headerlink" title="1.1. Sigmoid Function or Logistic Function"></a><strong>1.1. Sigmoid Function or Logistic Function</strong></h2><p>Trong bài toán phân loại (classification), mặc dù ta có thể tiếp cận nó bằng các thuật toán linear regression đã biết bằng cách tạm thời quên đi giá trị của y chỉ có thể là 0 hoặc 1.Cách tiếp cận này có vẻ không được tốt cho lắm. Giá trị của $latex h_0(x)$ phải nằm trong khoảng từ 0 tới 1.</p><p>Để giải quyết vấn đề này, ta sẽ biến đổi hàm hypotheses $latex h_0(x)$ để thỏa điều kiện $latex 0&lt;=h_\theta(x)&lt;=1$.Ta sẽ <em>nhét</em> $latex \theta^Tx$ vào Logistic Function:</p><p>$latex h_\theta (x) = g ( \theta^T x )$<br>$latex z = \theta^T x$<br>$latex g(z) = \dfrac{1}{1 + e^{-z}}$ </p><p>biểu thức trên có biểu diễn đồ thị như sau:</p><p><img src="https://i.imgur.com/9IHlEt9.png"></p><p>Function g(z) có thể biểu diễn bất kỳ số thực nào nằm trong khoảng từ 0 đến 1.$latex h_\theta(x)$ cho chúng ta xác suất kết quả = 1. Ví dụ như nếu $latex h_\theta(x) = 0.7$ có nghĩa là xác suất kết quả = 1 là 70%. Ngược lại, xác xuất kết quả = 0 là 30% (vì output chỉ có thể có 2 giá trị là 0 và 1).</p><p>$latex h_\theta(x) = P(y=1 | x ; \theta) = 1 - P(y=0 | x ; \theta)$<br>$latex P(y = 0 | x;\theta) + P(y = 1 | x ; \theta) = 1$ </p><h2 id="1-2-Decision-Boundary"><a href="#1-2-Decision-Boundary" class="headerlink" title="1.2. Decision Boundary"></a><strong>1.2. Decision Boundary</strong></h2><p>Dựa vào Logistic function ở trên, ta có thể `biến đổi` hàm hypothesis của ta lại thành như sau:</p><p> $latex h_\theta(x) \geq 0.5 \Rightarrow y = 1$<br> $latex h_\theta(x) &lt; 0.5 \Rightarrow y = 0$ </p><p>Function g(z) hoạt động như sau:</p><p>$latex g(z) \geq 0.5$<br>when<br>$latex z \geq 0$ </p><p>Nhớ rằng:</p><p>$latex z=0, e^{0}=1 \Rightarrow g(z)=1/2$<br>$latex z \to \infty, e^{-\infty} \to 0 \Rightarrow g(z)=1$<br>$latex z \to -\infty, e^{\infty}\to \infty \Rightarrow g(z)=0$ </p><p>Như vậy, ta có thể viết:</p><p>$latex h_\theta(x) = g(\theta^T x) \geq 0.5$<br>when<br>$latex \theta^T x \geq 0$ </p><p>Từ những phát biểu trên, ta có thể viết</p><p>$latex \theta^T x \geq 0 \Rightarrow y = 1$<br>$latex \theta^T x &lt; 0 \Rightarrow y = 0$ </p><p><strong>Decision Boundary</strong> chính là đường phân chia vùng y = 0 và vùng y = 1, được tạo ra bởi hàm hypothesis của chúng ta</p><h1 id="2-Vi-du"><a href="#2-Vi-du" class="headerlink" title="2. Ví dụ"></a><strong>2. Ví dụ</strong></h1><p>Ta có ví dụ sau:</p><p>$latex \theta = \begin{bmatrix}5\\ -1\\ 0\end{bmatrix}$<br>$latex y = 1 \; if \; 5 + (-1) x_1 + 0 x_2 \geq 0$<br>$latex 5 - x_1 \geq 0$<br>$latex - x_1 \geq -5$<br>$latex x_1 \leq 5$ </p><p>vậy đồ thị của chúng ta sẽ giống như sau</p><p><img src="https://i.imgur.com/VNSdsHL.png"></p><p>Lưu ý rằng tùy vào hàm hypothesis và các tham số theta, hình dáng boudary line có thể thay đổi tương ứng</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Tuần 3 trong course Machine Learning của giáo sư Andrew Ng trên Coursera.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Machine Learning" scheme="https://huntertran.github.io/blog/categories/Machine-Learning/"/>
    
    
  </entry>
  
  <entry>
    <title>[Travel] - Transportation in Europe</title>
    <link href="https://huntertran.github.io/blog/2019/05/01/transportation-in-europe/"/>
    <id>https://huntertran.github.io/blog/2019/05/01/transportation-in-europe/</id>
    <published>2019-05-01T09:59:14.000Z</published>
    <updated>2020-08-12T20:45:35.169Z</updated>
    
    <content type="html"><![CDATA[<p>Nếu bạn có dư dả thời gian và nguồn kinh phí eo hẹp, thì cách tốt nhất để dạo vòng quanh các nước EU chính là các phương tiện công cộng.</p><a id="more"></a><ul><li><a href="#1-airplane">1. Airplane</a><ul><li><a href="#11-canh-v%C3%A9">1.1. Canh vé</a></li><li><a href="#12-b%E1%BA%A3o-hi%E1%BB%83m-thanh-to%C3%A1n">1.2. Bảo hiểm thanh toán</a></li><li><a href="#13-delay">1.3. Delay</a></li></ul></li><li><a href="#2-train-v%C3%A0-bus">2. Train và Bus</a><ul><li><a href="#21-t%C3%ACm-%C4%91%C6%B0%E1%BB%9Dng">2.1. Tìm đường</a></li><li><a href="#22-%C4%91%E1%BB%8Dc-k%E1%BA%BFt-qu%E1%BA%A3">2.2. Đọc kết quả</a><ul><li><a href="#221-sophia---antibes-france">2.2.1. Sophia - Antibes, France</a></li><li><a href="#222-nice-france">2.2.2. Nice, France</a></li><li><a href="#223-salzburg-austria">2.2.3. Salzburg, Austria</a></li><li><a href="#224-paris-france">2.2.4. Paris, France</a></li></ul></li></ul></li><li><a href="#3-x%C3%A0i-google-map">3. Xài google map</a><ul><li><a href="#31-double-check">3.1. Double check</a></li><li><a href="#32-%C4%91em-s%E1%BA%A1c-d%E1%BB%B1-ph%C3%B2ng">3.2. Đem sạc dự phòng</a></li><li><a href="#33-bus-route">3.3. Bus route</a></li></ul></li></ul><h1 id="1-Airplane"><a href="#1-Airplane" class="headerlink" title="1. Airplane"></a>1. Airplane</h1><p>Từ VN sang thì chắc là phải đi máy bay rồi. Có hãng rẻ và có hãng mắc, nhưng cũng có hãng rẻ nhưng xịn.</p><h2 id="1-1-Canh-ve"><a href="#1-1-Canh-ve" class="headerlink" title="1.1. Canh vé"></a>1.1. Canh vé</h2><p>Không giống với các loại vé 0đ của Jet Star hay VietJet, giá vé bay xuyên lục địa sẽ lên xuống theo một chu kỳ nào đó. Mình khuyên nên canh vé trước khi lên lịch chuyến đi.</p><p>Các website tin cậy mình hay dùng để so sánh giá giữa các hãng với nhau là <a href="https://www.skyscanner.com.vn/">SkyScanner</a> và <a href="https://www.google.com/flights">Google Flights</a>. Bạn có thể canh giá một chuyến cụ thể. Thời gian dư dả càng nhiều (tháng), thì cơ hội mua được vé rẻ của bạn càng cao.</p><blockquote><p>Tips: Khi check-in online, bạn có thể chọn ghế thoải mái nhất cho mình ở trang <a href="https://seatguru.com/">SeatGuru</a></p></blockquote><h2 id="1-2-Bao-hiem-thanh-toan"><a href="#1-2-Bao-hiem-thanh-toan" class="headerlink" title="1.2. Bảo hiểm thanh toán"></a>1.2. Bảo hiểm thanh toán</h2><p>Một số hãng bay giá rẻ thường có nguy cơ…phá sản. Nếu bạn thanh toán bằng thẻ tín dụng, thì nên kiểm tra xem trong số các benefit của thẻ có bảo hiểm thanh toán không. Nếu có, bạn có thể được hoàn tiền hoặc bồi thường khi có vấn đề xảy ra với chuyến bay của bạn. Nếu trường hợp này xảy ra, hãy liên hệ với hãng bay + ngân hàng phát hành thẻ của bạn sớm nhất có thể.</p><p>Một ví dụ về hãng bay phá sản</p><p><img src="https://i.imgur.com/zAiYOQC.png" alt="bankrupt airlines"></p><h2 id="1-3-Delay"><a href="#1-3-Delay" class="headerlink" title="1.3. Delay"></a>1.3. Delay</h2><p>Ở EU có luật: nếu chuyến bay trong EU bị delay quá 2 tiếng, hãng bay sẽ phải bồi thường cho bạn từ 200e đến 600e</p><p>Bạn có thể tham khảo thêm tại <a href="https://europa.eu/youreurope/citizens/travel/passenger-rights/air/index_en.htm">đây</a></p><h1 id="2-Train-va-Bus"><a href="#2-Train-va-Bus" class="headerlink" title="2. Train và Bus"></a>2. Train và Bus</h1><p>Đối với mỗi thành phố sẽ có hệ thống bus và metro riêng. Nhiều nơi có nhiều hệ thống cùng hoạt động đan xen (như Paris chẳng hạn). Để tìm ra phương tiện phù hợp, mình thường tìm đường bằng google map.</p><h2 id="2-1-Tim-duong"><a href="#2-1-Tim-duong" class="headerlink" title="2.1. Tìm đường"></a>2.1. Tìm đường</h2><p>Ví dụ: để tìm đường từ <code>Orly Airport</code> về <code>5 Rue Jean-Jacques Rousseau</code></p><p><img src="https://i.imgur.com/quxyTUC.jpg" alt="google map routes"></p><h2 id="2-2-Doc-ket-qua"><a href="#2-2-Doc-ket-qua" class="headerlink" title="2.2. Đọc kết quả"></a>2.2. Đọc kết quả</h2><p>Có tới 4 kết quả trong hình, chọn cái nào?</p><p>Tới đây thì kinh nghiệm cá nhân của bạn sẽ có chỗ sử dụng. Nếu bạn chưa đi bất kỳ cái nào, thì bạn phải research một chút rồi.</p><p>Trong hình, bạn có thể thấy có nhiều hệ thống khác nhau</p><ul><li>M: Metro - hệ thống tàu điện ngầm chạy dưới lòng paris</li><li>RER: “Express” train: hệ thống tàu (có ngầm và có chạy trên đường ray mặt đất) “tốc hành” của paris (dù nó ghi tốc hành nhưng rất thường xuyên bị delay).</li><li>OrlyBus: Hệ thống bus đi từ sân bay Orly</li><li>OrlyVal: Tàu điện tốc hành đi từ các trạm cố định tới sân bay và ngược lại</li></ul><p>Thường thì các phương tiện công cộng ở EU sẽ có những cái máy bán vé tự động đặt ở các trạm lớn. Với mỗi hệ thống sẽ có các quy định riêng. Sau đây là kinh nghiệm của mình.</p><h3 id="2-2-1-Sophia-Antibes-France"><a href="#2-2-1-Sophia-Antibes-France" class="headerlink" title="2.2.1. Sophia - Antibes, France"></a>2.2.1. Sophia - Antibes, France</h3><p>Ở Sophia, hệ thống bus là <code>EnviBus</code> màu hồng chói lóa.</p><p>Ticket có thể mua theo block 10 vé hoặc 7 ngày. Tham khảo thêm tại <a href="http://www.envibus.fr/en/the-best-pass/type-of-ticket/all.html#menu_tarifs">EnviBus All tickets</a></p><p>Ticket khi validate sẽ có giá trị theo thời gian. Bạn có thể dùng lại ticket đó đi bất kỳ chuyến bus nào của envibus trong vòng 60 phút.</p><p>Mua vé tại chỗ trên xe thì 1.5 e. Mua trước thì 1 e, mua block 10 vé thì còn 8 e.</p><h3 id="2-2-2-Nice-France"><a href="#2-2-2-Nice-France" class="headerlink" title="2.2.2. Nice, France"></a>2.2.2. Nice, France</h3><p>Tương tự, hệ thống bus ở Nice cũng có bán vé 1 ngày, có thể đi được Tram, Bus, Créabus</p><p><img src="https://i.imgur.com/grSNKKU.jpg" alt="nice bus ticket"></p><h3 id="2-2-3-Salzburg-Austria"><a href="#2-2-3-Salzburg-Austria" class="headerlink" title="2.2.3. Salzburg, Austria"></a>2.2.3. Salzburg, Austria</h3><p>Ở Salzburg (hay là ở Austria nói chung thì mình ko rõ), hệ thống tàu rất phát triển. Thậm chí đi từ Vienna về Salzburg cũng có thể đi bằng tàu. Tới nỗi sân bay Salzburg nó vắng hoe, cả năm chưa đón tới 2 triệu lượt khách.</p><p>Vé bus ở Salzburg cũng có nhiều dạng, tương ứng với nhiều mức di chuyển khác nhau. Mình thường mua 24-hours pass giá 4 e (đi được tất cả các chuyến bus trong 24h kể từ lúc validate).</p><p>Ở đây thì giá vé ticket lại dựa trên tình trạng của bạn (trẻ em, người già, học sinh sinh viên)</p><p>Người trưởng thành thì phải mua vé <code>Full Fair</code>.</p><p><img src="https://i.imgur.com/slEMFzv.png" alt="24 hours full fair"></p><p>Vé xe bus ở Salzburg có dải chỉ óng ánh</p><p><strong>Đi Hallstatt từ Salzburg</strong></p><p>Có nhiều cách đi tới Hallstatt. Mình đi bus &gt; train &gt; ferry</p><ol><li>Bus 150 từ Salzburg Central Train station &gt; Bad Ischl</li><li>Train từ Bad Ischl tới Hallstat Bahnhof</li><li>Đi phà từ Hallstatt Bahnhof tới làng cổ</li></ol><h3 id="2-2-4-Paris-France"><a href="#2-2-4-Paris-France" class="headerlink" title="2.2.4. Paris, France"></a>2.2.4. Paris, France</h3><p>Paris <em>bị</em> chia thành 5 zone khác nhau. Trung tâm nằm ở zone 1. Đối với các loại vé, bạn phải chọn zone phù hợp. Cái này không hiển thị trên google map.</p><p>Điều khủng khiếp là Orly Airport (sân bay nội địa ở Paris) nằm ở zone 4, sân bay Charle de Gaulle (sân bay quốc tế) nằm ở zone 5.</p><p>Nếu bạn mua vé tại sân bay Orly, thì chỉ mua được vé bus cho zone 1-4 (không chọn được zone thấp hơn)</p><p>Vé orlyval giá rất chát. Mình thường mua vé 1 day pass cho hệ thống RATP (đi được Orly, OrlyBus, RER, Metro) zone 1-4. Khi cần ra sân bay Charle de Gaulle, may là máy bán vé tự động có bán vé tới tận sân bay (Airport ticket), mà giá tới 10.3 e (đã có thuế).</p><p><img src="https://i.imgur.com/kEABoXg.png" alt="paris bus ticket"></p><p>RER B tới Charle de Gaulle bị delay tại mỗi trạm rất dữ dội.</p><p>Đó là các kinh nghiệm xương máu mình rút ra được sau khi bị phạt 35e vì mua vé đi không đúng zone ;(</p><h1 id="3-Xai-google-map"><a href="#3-Xai-google-map" class="headerlink" title="3. Xài google map"></a>3. Xài google map</h1><h2 id="3-1-Double-check"><a href="#3-1-Double-check" class="headerlink" title="3.1. Double check"></a>3.1. Double check</h2><p>Đôi khi google map suggest cho bạn một con đường xa hơn, dài hơn và đắt hơn (ví dụ như đi từ Salzburg tới Hallstatt)</p><p>Mình từng đứng ngay trạm metro ở Châtelet - Les Halles để đi tới Charle de Gaulle và thử refresh kết quả thì nó lại suggest một tuyến đường hoàn toàn khác.</p><p>Nguyên nhân có thể do bạn mất sóng, mất GPS, hoặc thuật toán chưa đủ thông minh.</p><h2 id="3-2-Dem-sac-du-phong"><a href="#3-2-Dem-sac-du-phong" class="headerlink" title="3.2. Đem sạc dự phòng"></a>3.2. Đem sạc dự phòng</h2><p>Google map trong chế độ track theo đường đi nó rất tốn pin. Vậy nên thường mình ko bấm start tracking, mà chỉ xem trạm cuối cùng ở đâu, rồi để ý thông báo trên bus - train, lúc gần tới thì bật map lên check thôi.</p><h2 id="3-3-Bus-route"><a href="#3-3-Bus-route" class="headerlink" title="3.3. Bus route"></a>3.3. Bus route</h2><p>Bus route trên google map nó ko khớp hoàn toàn với đường đi thực tế của bus. Nó chỉ trùng trạm dừng (mà đôi khi cũng ko trùng nữa)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Nếu bạn có dư dả thời gian và nguồn kinh phí eo hẹp, thì cách tốt nhất để dạo vòng quanh các nước EU chính là các phương tiện công cộng.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Life" scheme="https://huntertran.github.io/blog/categories/Life/"/>
    
    
      <category term="bus" scheme="https://huntertran.github.io/blog/tags/bus/"/>
    
      <category term="europe" scheme="https://huntertran.github.io/blog/tags/europe/"/>
    
      <category term="train" scheme="https://huntertran.github.io/blog/tags/train/"/>
    
      <category term="travel" scheme="https://huntertran.github.io/blog/tags/travel/"/>
    
  </entry>
  
  <entry>
    <title>[Research] - LaTex on Windows - Step by step installation</title>
    <link href="https://huntertran.github.io/blog/2019/04/02/latex-on-windows-step-by-step-installation/"/>
    <id>https://huntertran.github.io/blog/2019/04/02/latex-on-windows-step-by-step-installation/</id>
    <published>2019-04-02T06:21:51.000Z</published>
    <updated>2020-08-12T20:45:35.169Z</updated>
    
    <content type="html"><![CDATA[<p>In this blog, I will instruct you on how to install and writing LaTex documents on Windows with ease.</p><ul><li><a href="#1-requirement">1. Requirement</a><ul><li><a href="#11-list-of-software">1.1 List of software</a></li><li><a href="#12-installing-miktex">1.2 Installing MikTex</a></li></ul></li><li><a href="#2-setup-on-visual-studio-code">2. Setup on Visual Studio Code</a></li><li><a href="#3-writing-on-visual-studio-code">3. Writing on Visual Studio Code</a></li><li><a href="#4-collaboration">4. Collaboration</a><ul><li><a href="#41-vscode-live-share">4.1 VSCode Live Share</a></li><li><a href="#42-start-collaboration">4.2 Start Collaboration</a></li><li><a href="#43-join-a-shared-collaboration-session">4.3 Join a shared collaboration session</a></li><li><a href="#44-live-share-maximum-collaborators">4.4 Live Share Maximum collaborators</a><a id="more"></a><h1 id="1-Requirement"><a href="#1-Requirement" class="headerlink" title="1. Requirement"></a>1. Requirement</h1></li></ul></li></ul><h2 id="1-1-List-of-software"><a href="#1-1-List-of-software" class="headerlink" title="1.1 List of software"></a>1.1 List of software</h2><p>First thing first, you would need to download and install a series of software.</p><blockquote><p>Choose the correct version with your windows (x86/x64)</p></blockquote><ol><li><a href="http://strawberryperl.com/">StrawberryPerl</a></li><li><a href="https://code.visualstudio.com/download">Visual Studio Code (text editor, not confused with Visual Studio IDE)</a></li><li><a href="https://miktex.org/download">MikTex</a> (easier to install and use)</li></ol><blockquote><p>For me, MikTex is kinda difficult to download. The server close connection every 30-45 secs. If this happened to you, use a download manager. For example: <a href="http://www.freedownloadmanager.org/download.htm">Free Download Manager</a></p></blockquote><h2 id="1-2-Installing-MikTex"><a href="#1-2-Installing-MikTex" class="headerlink" title="1.2 Installing MikTex"></a>1.2 Installing MikTex</h2><p>Accept all default option, and wait for the installation completed.</p><p>Start &gt; MikTex Console &gt; Updates &gt; Check for updates</p><p><img src="https://lh3.googleusercontent.com/hKiTMvw_chg0MzcT0UenM6z1M7zU7NJJkLop9Nq_5nVy_SUeN7BpS9j1mvLERjMfhBcRzcnu5New9thPpx4IRuByXO7RNijbkJbkCbQTisLSO4tqgWPQFHzE50hI13XjwCCYsQYiiA=w2400" alt="Update MikTex Packages"></p><blockquote><p>In case of difficult in download packages, you can change ‘Install from’ option with a <code>http</code> repository</p></blockquote><p>Install <code>latexmk</code> package</p><p><img src="https://lh3.googleusercontent.com/Wr5yvLr37Tn5pQgda46K2EfUTKFw9qwWkZ0iJFs0Fpi7AJSB_iMFWqE80T3-CqE_r_WdT2RIdho2gvxZqOPu27sinQtqjon5dS2zf_L_gFvS33haw-KRnPfipks2rqMevPaWb1UeoycVx44tAsHuLps5AefKa2PP2Mx7-mItHFd0cYKIPqyy98QpDlypjQmGnsszKzdJ2IOrl3TmIK38kn7ESKPczK4FNN1UKLWfijqySHZ6aUoVWcsM3X4T7cJiFiuD-Mxazoxh5Y8QOWLkA2705VLniHlt_0D8U0WzG-TvVLvr0O2TS5m5i1FTpY5iis55MgF1isyDDzPZ6xUQ2UX15lAv4XCDuzhJP-BiNXb3eDArLDoynxUQv3gTDY8myBwIPhWGtnMcsB2QHyQkwXuEQyftQG4KKUeiYRjmq1g3uM8FXLvT949MnggObXdDewcnI3gnnbmoSEK2FCFyue10QnJbR9Ks0LAnZDfvDvW0fL0F9HSm5yw7C4wNeZskGxBqAWn-f2sy7tX1twEOYcy9QVJcHJ2V1I-6Th_7OCn86OdPePRgopd1FCTPfetLy0pDlyrfIAxWvC2Eiycooqn0WEsmxpojP4QiZhteO-2EMKQYdMluHP-e_51Zf7OR0LRVjftUOntg5XYFWE55bsbrmyyowbI3SpYBt4b51juG_JwMkQmnyYtVTF4u_Q7SjikShzZRNbvPsDoRUTk3irKH=w802-h632-no" alt="latexmk"></p><h1 id="2-Setup-on-Visual-Studio-Code"><a href="#2-Setup-on-Visual-Studio-Code" class="headerlink" title="2. Setup on Visual Studio Code"></a>2. Setup on Visual Studio Code</h1><p>If you are opening Visual Studio Code while installing MikTex and Perl ActiveState, please CLOSE Visual Studio Code and open it again.</p><p>Open Extension &gt; search for Latex &gt; Install LaTeX Workshop</p><p><img src="https://lh3.googleusercontent.com/vr8qIvd2Bz3tT0srcGXASblQHtvInX_cZKZtugGzLfZ71TbWWb3ddmAaHDpuSCO3Rz18KzyYuOBdX15Pgn_7p47EohvqiVCyJ8Ygur8qE9XI5cGeAk6nEMgLuyh2iVy1oIddau0iIbFLSxr6QvpJeT8HFrVD7P4ljDhKOLeBY72uyuEBBZjiqjrm5BIT21h2qZzqG0E-mytMi747yK98kwYUay3cec0uEX3ShVJIr8ffYfTAS17tQ5QdA0zpcql8Kc7yTWpsPMrN-5lCJQYlQnmH5-5AVxlugLVB956LMKXGuj22OUWHv3BpxJvTMPq0GzlvnTbRDhRLLUji-WlTU8rhHlRtbCGBb3SZjt-8aNAPLBtAoGRYWbSEpQiZILwslexygTxsMrkUmarXlfGJONKWt94c4vyFmwLlln8DdGB5ER3R8njYaH1RFxHnUBYAz2mOGuMDkY2_jAxQo1vLW0ftf1bQGEE0SddAnBUoj87n7lbULZi_q2bOJLUfgMn2JHGJq225OeD5oADbhCyJq4cMWTD9xqxS1YG6KGBH_1LWlyOyVd61aHob2UJa_Bh_YJR4fGg-LX2qB8XIHg3pl06rYLFmhSXlACOPYsyW7O3OORa0qcDKhgnzJS-LnXCndxbpOzM42R9lLCcCIkt558-TYaqKUDB0Lx8mc1IiQ4Mp49U6cbjQHbc6CMUe9z23nH3iCfdn_a0ASOuAICKCQi5Y=w699-h488-no" alt="LaTeX Workshop"></p><h1 id="3-Writing-on-Visual-Studio-Code"><a href="#3-Writing-on-Visual-Studio-Code" class="headerlink" title="3. Writing on Visual Studio Code"></a>3. Writing on Visual Studio Code</h1><p>It is recommended to create a folder for each LaTeX document (to store images, charts, data file, etc).</p><p>Open that folder with Visual Studio Code, create a new file ended with <code>.tex</code></p><p>Open that <code>.tex</code> file, then you can start playing with your LaTeX</p><p><img src="https://lh3.googleusercontent.com/lT5SSLoB-mNXiVL8N9szGf5l36w1u4LgxK2JwSCFKiZFgXXF8Og17FuYaBwcCHZogn_ut-aymvoJRn-3yKgF0f6PGREaNym8ZH0kwvPHA6_wqSRBo1xO5cZQd3th8kQd9MogtWLPN6fFCNk-ww8gUiZQNxhYnvG0c4ASCePogPFb-ldilXV-RoM5VSUShrxRBicNTIenJ2jAFAsNf9Pd-HXeGz1iYEXcEEo7aU14__e1v_8UHlm6d1SqvdTdta-xuvrvI59MGW9eGrCWbsC0mX7EDKQkIUX1G5FzESvSEEEw5VYzr37GdRygooETBAaiJdAwaPG3IT1BtBYc3sRxv6xdZc-iyQZUdWJQb1FqUtJtckMME89NtQ7DlOvwv-2wpR3N9dagmKvirRH95ZOtG8iDkWSmjxpW1cXNGBfCw4WkwvnVMNSlgR6-rOpvX9osE0MbaaTLQNfRsCimqjYaMUu8_N26u1oEBoGc6jrrCD2kNtMO2kFI8nS9eF6YASftwF9mMCqpSouWOfjsMjhVeD5XNoaAFEPa3AMaoXXlYD_k7G8V1TmFT1D9IX4umcw1domD1iZNddrf79tvToTCL4dBS7C-jrRh4F22MgFTd5Ga_6woKz9t1Gk7WR3iytTbsO7s1s74BKjmRj97X80PHv5czTvCIMICUTGZ3iZKDvQVTmrRiIw0OEiWmMXSqvod44viPo9dtDfDdQFPiEFXEoOn=w594-h316-no" alt="writing latex"></p><p>To preview the rendered PDF, you can click on small icon on the top-right corner</p><p><img src="https://lh3.googleusercontent.com/fxx75if3R_weAeIaewFsJMXOEKY0TCPuOius0tbqidi3sB-DU5hBsCY_vFNtEqr-4B0DoXGsPq649OIG_9pM6rh2X2UP8In9UQ6lH41vPrHkq3UwMMRKUcrJyO6w-XBoZvl1YeuwO4r9gzXv22JA4TdmWxbDCMi0x3l3DfCnTTaQYyhuxsBoE3iCg6-xfI2oK4rO8OH-12kHLZ0Uf08HhSolhLP01sxzwOiJs9jrUuM9UCa6CPHHF5bVOQa-llPz-ZNLZy8PZacU4orXOHQSr106PgKH-Jw10Lrd2RWBeNtoIziSyMPkG38z_g1wDhJRHBy1iC8Rs940URXh6EilLCIFEqRSAyu35_2znAqQ11MstXwkeTclgv3XGVZHbaMJkeKXneB6a0jMTUXdL6XyHrYBUUaEkNdoiV6GwimUPUICK9zAC8duUNK3y4di9s8X0ew-Ypjl396pUGh0GQudIYLkZwzvqxQNIgJ0-F2gh-8BscL9upPjpFgpVCOv1Ni6RpOY4kQLNkG1tH2hD_YqqO-NElntrxg_N_vVCY0JP7Oq-wy_GBw67EAtTugdPQYdHV1S0r8UUbPO4IgTo6tV5U9EnKaKklFjB7rx32Z5zoEGt2ATfuBS_2iDCfi40e8kJ3IL4PuL-219_25hr1abJrYeRQOaP83z2xAxoVadV-qG4Vn5pui6jFd9yuyPgXE2p7z1Q_Iq4d_S8nxzgcPIlXwU=w457-h215-no" alt="preview PDF"></p><h1 id="4-Collaboration"><a href="#4-Collaboration" class="headerlink" title="4. Collaboration"></a>4. Collaboration</h1><p>Okay okay, it’s cool, but <em><strong>why</strong></em> do I need to write LaTeX offline, using Visual Studio Code, instead of the awesome <a href="https://www.overleaf.com/">Overleaf</a>?</p><p>The answer is the price. For collaboration, overleaf offer 80 USD/year for 6 students (the price is higher if you don’t have student account).</p><p>With visual studio code, it’s free, and super fast too.</p><h2 id="4-1-VSCode-Live-Share"><a href="#4-1-VSCode-Live-Share" class="headerlink" title="4.1 VSCode Live Share"></a>4.1 VSCode Live Share</h2><p>Live Share is an amazing feature offered by Microsoft. It’s not even share files, it’s also share folders and projects.</p><p>To begin with, install VS Live Share extension</p><p><img src="https://lh3.googleusercontent.com/o8pCg6t8GTje2dHSMWtpY2w8NDnUBn5bJwjLFt5FYlZQ-hG-Tqui1_0snN0_QEAAC5nNi7l0v7C2K4n7o6Op52-8VIihQ_npqYo2IzTcpvDQlatMwn3t7qzcaBylosda0bfRquUkCYG553lIi1xzmVVI63AbX00DEmpJIP3xWhEoxDUUOIFIu9WiJVsrIOKpSV4G2wKoJtT0UvVmSbi9KHEo_UW4_Q2vZu2zHNO3pxXOrov13GIwQpOjOQ9uEPnqlPglYJOomrFZJdP1bRlO9dwj1nBr_qs9xF81TIdiXxhhxahiI5rjkEnBZElHbTXbXNJ7giP4dKNRw_1bDC5fZ6Lkk4PIgDX6GYk6mfH0WH73rDzM-jMPRL0ndptmmQmgjws0n-EgZJNhxwO0otXNJb7_EMr228fyXNlD1qerjEKgAZ5MPGZX9TkQFBxW70Xf1hExD7cuXwJujbKVmjU7OMjFWfPu7TrrIlG6SrEOHe7--PgqmITPHjB0-wQcUmY6_UFZnMnLiievB2a2VybN3_wRxRilKG2uQch45zYc6799VttsI67EO-gPWgjB9PezI_BqKiOQomR_7GWr9gilcHlQmAYdMsV4c98tJ_0P-ZbLNDk3jLtxMqImCEgaW_YeQgUck5BqFjR3774FbdkWJMCs-w3j7KtkkJN4yCFZpS7qn9d0VF7OXPEPHNYYLKeoM4q9jI8_az31vLRhM_oBagul=w701-h383-no" alt="Live Share"></p><h2 id="4-2-Start-Collaboration"><a href="#4-2-Start-Collaboration" class="headerlink" title="4.2 Start Collaboration"></a>4.2 Start Collaboration</h2><p>After installation complete, a new feature appeared in VSCode</p><p>Click on that Live Share feature, then <code>Start collaboration session...</code></p><p><img src="https://lh3.googleusercontent.com/xsctwS3GAoe0nTciAGsYE5aYQE2sJq1Llq8YLukCJEMOU3LTiUXNxl7k2rao1d13MG5R7yQmQD4fpLGyLUM3vngH31TSobcA7yhh2raKIcXJDeFaaP3z3NZg8eTxe0nFr__AeriaZ2-3ULpPN7TKjd16AXgNe9px0M60uzyFR7iaGS6sGRsqVYZaVNdugMVzwjhsM-VmAFKFtohzxDn-wbjdqQyf9T-MmKE4Ze4Du-3K5uiQxblBOyvWiSelVXSnw4jvTZ8mu5L5LczGT4kwWGQ0aYFZ_wOAWtejpTk5Beek68vG5Km2eg-c2JK8zsOYN8EVxS4etwMtxTJ2b5wUCfhOl8ra_KC21AHqm5rHsMWM4QmKVkUjg6RneXLclNkQ1RcA3ntmInQcb3NRtLmEpA0-K58i25VrqPsTBWlpIfKarXbnSTRkpeu8IzOwBjqFLxJZWZuBLt4FhBS8Iln8f7EgZxgTynm9UudikU2B_gcwRBUebfXcFE9Y5g07hs7uhIz4ZddLU_eX7_Tpe4H0sGYgyxzjlWyb6sYODGEUQtTEE4VVzLwRA4TSoa6vef7Ek2jaUauOsbDzdT9niTydPp_AYPhZIbwn-8pQnqwfTx-5D5CJuAE4nvvFzCQJwTloIWfp9FyhUrziJztUaRTf8sJXX8pZv8BcgYxSgCqYVNFXD7HSDgmCJ-brXg1zkrPMKSRZSqzTAnz58tbV31IYw5g8=w656-h599-no" alt="start collaboration session"></p><p>It will open a new website that require you login with either Microsoft Account (outlook, hotmail, live) or GitHub Account.</p><p>For this tutorial, I will use my github account</p><p><img src="https://lh3.googleusercontent.com/mC6wby4g6KGGad9dFmNa9UeNer-lVYEn3QEEXqe16I-0IxBoRfnRs6T2sWt3rs0btagDKi1lgbXTKbiPOcqjTmR-_OiScKg6jp87kzVKq7RDTaZ_nd7-YGNVSnCQyl7W3HhVKJvpAcdXPpo5tMuKszkeM0kHHPnXzhNkOBTiGg3l4DyzM1w9CeIhydmwErvzgLzVfOJmosEsVPrwT8d-QT5RF9ZX01VyWmaaTcxZ725rB8iSBiAF4-T6RvwiHJB-vuSmqnioFNGjQ0llR79OfEupHrm2mPZQRqg5vGjfLTrYfP2CKJw0Qefrz_wyhFgPqJ6uMhlSnjxUY6NYZ2GQeTsdS_E4ZDm0isBFlqkd3CEJEG1WAr41ooNHPdAvH3KeeBxW9c4-BKFYubjyrodHJf5f4ub0kvhvk9Q1QqSvKftNNJhYfbXnkk_0t_sZAC5MZKgapuuXLapP0WfCv-pNP_HXXjYq4x55rCa8IBQe4c1JBFd3w6fBzULBLqCbvkfoxzXeCp039GJsqdggW4a3R2g1liyemGqmz_mgFvUYmszKM2cWesSv4HQJ4mKO1z26Rtaglj9F9POHJtNQJl55ByRvIffhJBmO_oHw8vkD_6FX1PYiY9kI4rKFg9JFsFwBDe_X3hoajxFUc4o-bsfiMztQd_LYn19Kd1DIg9Ci5p8jfIX4ECEG4u4scLO87LqA-88TzY-qkPSmsIX9bMLzcxAW=w676-h604-no" alt="github"></p><p>After authorized, Live Share will start working. You can paste the generated link for other users</p><p><img src="https://lh3.googleusercontent.com/WTCm3ZmcTIpKgebl1Hj6ktgKOyZVLUZa6tIAjZYK01AR0id4u2vIdbND2V7Yd6osWNFgClXDSbinESXDWVi3HT5qIIbsPJCaof6GYU9stanOWLb5LGfWD1Kwy8cqnj-q1DzBmA8UCEWgzsK-AYyA4xpl4ybhU2BEyNiS-yQKA4Jay2xXqAnFqaX4wmBPlwEePBFtJikIgiCDzPw75qKx0imDe8z9qqpADaM32cTokrXphiMM5P1tqK8yc-b4ITLd7EGkZpFuQ5QoLOVxOldmbMBmdxtoPuzJNvWBNC6KcPn_Cz8L3FwFVuw4o44jlOg2MJQh4E8FsDszh-3G5Q-9AxoiyDCvLSZMtOHYDqxyc8ApCZaVZy9CqBkDsaL627RIoUvQXE6Dgvr72O3_NDV6FfVxaHPZ1UnRtr5fqqeYrDrPRGQeUIxxfhpz7DFCy8hCuoB-USuKLUAJff3XkhEb6G35hV2jWeNaiQ3fMTikrn76gLqoU6cGZcdTRj0vT_1yHCInaB--ethRevpjISoCX8Dk6YxqY7OBk1kXM-RIO74GbMiWFhcrqkh6ul9kQMEw0RXOT60hd8ThCQtdfy3Q7gokH8bLEYHoOtXaGoBc3yhdBYMkT_nwvL3RYS2to0LBNGQqGJ6R_afekBr9gnkqKCeWUhnfg3XwVOzwLGglDYMqYQ1wERV17mNDvoAvKtps8N9HBIoGgNTmmuli1EYhAppY=w531-h435-no" alt="copy the link"></p><h2 id="4-3-Join-a-shared-collaboration-session"><a href="#4-3-Join-a-shared-collaboration-session" class="headerlink" title="4.3 Join a shared collaboration session"></a>4.3 Join a shared collaboration session</h2><p>If you are not the one who sharing, but the one who join, it’s even easier.</p><p>Open Live Share feature &gt; <code>Join collaboration session</code> &gt; Paste the link you have to the box appeared then press <code>Enter</code></p><p>If successful, it should be like this</p><p><img src="https://lh3.googleusercontent.com/lLtsGd3A741aHZVSpLIIJHvN4Z6Nd0j5G4osNktOxr2K0aB0U_UPUS-C3zs0py-mt9b5psaMIbGeiaXxdO6Z-zvvRDuFRwT2O018uXGX06UIGknCKgEvCEdJypiBrVr9tUGYvc8ndiFlB6QzsScQpxuQdKAhZ-o7vEnkwSYnHrSGvFKAKjWBkMJdr8ixn6T0Cm7_qL7tsq0dNiTdUatlqPN1fP2xFNZBSUCaHjujiz5EJxyoTqMMgJAEJ_Y746I3u566vsXQYkumdbHwTWdwivO4l9NSZW52Ux1OnCPpVMyK51AvvfB3Nr7-A-cRXlWXLG1QeHt5yh0ieW3xuHXGtcvsv6iKEtC9Llm9Foczd9e1kiIDQ2rBo5KluLQmTI_aP5fM9bjQFz7CP2gjDlqET-K-kUpxj-OuA6oRE_NJ-sVEIKf526sP7pxkusS97OsF-b_G6nJd7ncbpD-3POuDHoxaUNlPMRiJ9AaHoeGMBSE_zTnmSiN3zPw63Lo49YCPTxVpWRf9FUQsHlJL0XfwGOVDHHwkJcxhzbDPvlBCWfJ_Xhryn6QGBiFm-zm4nRWch_79rw5SWvmFPXkPHIaKxt1Cn2cD-Q8tPG5M3cy9HPVpjXSuQUuxDbNbtypjfbss_tYMVTvVwpcY2VX2whYpNniHoGzDfSt_0b-aa2Xz4wu20Sf7YvyFCQssGkKntXnHGs9PeVObQUg-Po1AgQvcueqa=w956-h595-no" alt="join collaboration session"></p><h2 id="4-4-Live-Share-Maximum-collaborators"><a href="#4-4-Live-Share-Maximum-collaborators" class="headerlink" title="4.4 Live Share Maximum collaborators"></a>4.4 Live Share Maximum collaborators</h2><p>The short answer: 5</p><p>For more information on when/how you can increase this number can be found here: <a href="https://github.com/MicrosoftDocs/live-share/releases/tag/0.3.788">https://github.com/MicrosoftDocs/live-share/releases/tag/0.3.788</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;In this blog, I will instruct you on how to install and writing LaTex documents on Windows with ease.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1-requirement&quot;&gt;1. Requirement&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#11-list-of-software&quot;&gt;1.1 List of software&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#12-installing-miktex&quot;&gt;1.2 Installing MikTex&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2-setup-on-visual-studio-code&quot;&gt;2. Setup on Visual Studio Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#3-writing-on-visual-studio-code&quot;&gt;3. Writing on Visual Studio Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#4-collaboration&quot;&gt;4. Collaboration&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#41-vscode-live-share&quot;&gt;4.1 VSCode Live Share&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#42-start-collaboration&quot;&gt;4.2 Start Collaboration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#43-join-a-shared-collaboration-session&quot;&gt;4.3 Join a shared collaboration session&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#44-live-share-maximum-collaborators&quot;&gt;4.4 Live Share Maximum collaborators&lt;/a&gt;
    
    </summary>
    
    
      <category term="Others" scheme="https://huntertran.github.io/blog/categories/Others/"/>
    
    
  </entry>
  
  <entry>
    <title>Machine Learning - 2.3 - Exercise</title>
    <link href="https://huntertran.github.io/blog/2018/10/18/machine-learning-2-3-exercise/"/>
    <id>https://huntertran.github.io/blog/2018/10/18/machine-learning-2-3-exercise/</id>
    <published>2018-10-18T09:58:06.000Z</published>
    <updated>2020-08-12T20:45:35.169Z</updated>
    
    <content type="html"><![CDATA[<p>Bài viết này đưa ra bài giải và chi tiết cách giải của mỗi bài tập trong tuần 2 của khóa học Machine Learning của giáo sư Andrew Ng.</p><p>Xem các bài viết khác tại <a href="https://coding4food.net/machine-learning-course/">Machine Learning Course Structure</a>.</p><a id="more"></a><ul><li><a href="#1-c%C3%A0i-%C4%91%E1%BA%B7t-octave">1. Cài đặt Octave</a></li><li><a href="#2-warmup">2. Warmup</a></li><li><a href="#3-cost-function-j">3. Cost Function J</a></li><li><a href="#4-gradient-descent">4. Gradient Descent</a></li><li><a href="#5-normal-equation">5. Normal Equation</a></li></ul><h1 id="1-Cai-dat-Octave"><a href="#1-Cai-dat-Octave" class="headerlink" title="1. Cài đặt Octave"></a>1. Cài đặt Octave</h1><p>Còn gì dễ hơn: <a href="https://www.gnu.org/software/octave/download.html">Download Octave</a></p><p>Chọn phiên bản 64-bit nha: octave-4.4.1-w64-installer.exe (~ 238 MB)</p><h1 id="2-Warmup"><a href="#2-Warmup" class="headerlink" title="2. Warmup"></a>2. Warmup</h1><p>Yêu cầu: Trả về 5x5 identity matrix</p><pre><code>A = eye(5);</code></pre><h1 id="3-Cost-Function-J"><a href="#3-Cost-Function-J" class="headerlink" title="3. Cost Function J"></a>3. Cost Function J</h1><p>Công thức:</p><p>$latex J(\theta) = \frac{1}{2m}\sum\limits_{i=1}^m(h_0(x^{(i)})-y^{(i)})^2$</p><p>Vectorize:</p><p>Ta có:</p><p>$latex h_0(x^{(i)}) =\theta_0X_0 + \theta_1X_1+…+\theta_nX_n$</p><p>Nếu coi $latex \theta$ là vector $latex n\times1$, X là matrix $latex m\times n$, thì phép tính trên còn đơn giản như sau:</p><p>$latex h_0(x^{(i)})=\begin{bmatrix}x_0^{(1)} &amp; x_1^{(1)} \\x_0^{(2)} &amp; x_1^{(2)} \\ … &amp; … \\ x_0^{(m)} &amp; x_1^{(m)} \end{bmatrix}\times\begin{bmatrix}\theta_0 \\ \theta_1 \\ … \\ \theta_m \end{bmatrix}=X\times\theta$</p><p>Vậy cost function biến đổi lại thành:</p><p>$latex J(\theta) = \frac{1}{2m}\sum\limits_{i=1}^m(X\times\theta-y)^2$</p><p>Code:</p><pre><code>J = (1/(2*m))*sum((X*theta - y).^2)</code></pre><h1 id="4-Gradient-Descent"><a href="#4-Gradient-Descent" class="headerlink" title="4. Gradient Descent"></a>4. Gradient Descent</h1><p>Thuật toán Gradient Descent có 2 bước:</p><ol><li>Tính bộ giá trị $latex \theta$</li><li>Thay vào cost function để kiểm tra hội tụ</li></ol><p>Để cho đơn giản, ta sẽ giả định rằng chỉ có 2 feature là $latex x_0 = 1$ và $latex x_1$ (n = 2)</p><p>Công thức:</p><p>$latex \theta_j = \theta_j - \alpha \frac{1}{m} \sum\limits_{i=1}^{m} (h_\theta(x^{(i)}) - y^{(i)}) \cdot x_j^{(i)}$</p><p>Ta tách công thức trên thành 2 phần:</p><p>$latex \theta_j = \theta_j - gradient$</p><p>với</p><p>$latex gradient = \alpha \frac{1}{m} \sum\limits_{i=1}^{m} (h_\theta(x^{(i)}) - y^{(i)}) \cdot x_j^{(i)}$</p><p>với:</p><ul><li>X = $latex \begin{bmatrix}x_0^{(1)} &amp; x_1^{(1)} \\x_0^{(2)} &amp; x_1^{(2)} \\ … &amp; … \\ x_0^{(m)} &amp; x_1^{(m)} \end{bmatrix}$</li><li>$latex \theta = \begin{bmatrix}\theta_0 \\ \theta_1 \end{bmatrix}$</li><li>y = $latex \begin{bmatrix}y_1 \\ y_2 \\ … \\ y_m \end{bmatrix}$</li></ul><p>Tương tự như cost function, ta có:</p><p>$latex (X\times\theta - y)=\begin{bmatrix} \theta_0x_0^{(1)}+\theta_1x_1^{(1)}-y_1 \\ \theta_0x_0^{(2)}+\theta_1x_1^{(2)}-y_2 \\ … \\ \theta_0x_0^{(m)}+\theta_1x_1^{(m)}-y_m \end{bmatrix}=\begin{bmatrix} a_1 \\ a_2 \\ … \\ a_m \end{bmatrix}= a$</p><p>với a là vector m x 1</p><p><strong>Nhân với $latex x_j^{(i)}$ và tính tổng</strong></p><p>Đối với mỗi tham số của vector a, ta nhân nó với x tương ứng, rồi cộng tất cả các kết quả lại.</p><p>Để vừa nhân, vừa tính tổng và trả về một vector chứa kết quả là các giá trị của gradient, ta sẽ phải biến đổi matrix X một chút.</p><p>$latex X^T = \begin{bmatrix}x_0^{(1)} &amp; x_0^{(2)} &amp; … &amp; x_0^{(m)}\\ x_1^{(1)} &amp; x_1^{(2)} &amp; … &amp; x_1^{(m)}\end{bmatrix}$</p><p>Khi nhân matrix này với vector a, ta sẽ có kết quả như mong muốn.</p><p>$latex X^T\times a = \begin{bmatrix}x_0^{(1)} &amp; x_0^{(2)} &amp; … &amp; x_0^{(m)}\\ x_1^{(1)} &amp; x_1^{(2)} &amp; … &amp; x_1^{(m)}\end{bmatrix} \times \begin{bmatrix} a_1 \\ a_2 \\ … \\ a_m \end{bmatrix}=\begin{bmatrix} a_1x_0^{(1)} + a_2x_0^{(2)} + … + a_mx_0^{(m)} \\ a_1x_1^{(1)} + a_2x_1^{(2)} + … + a_mx_1^{(m)} \end{bmatrix}$</p><p>Code:</p><pre><code>file gradientDescent.mfunction [theta, J_history] = gradientDescent(X, y, theta, alpha, num_iters)%GRADIENTDESCENT Performs gradient descent to learn theta%   theta = GRADIENTDESCENT(X, y, theta, alpha, num_iters) updates theta by%   taking num_iters gradient steps with learning rate alpha% Initialize some useful valuesm = length(y); % number of training examplesJ_history = zeros(num_iters, 1);for iter = 1:num_itersgradient = (alpha/m) * X&#39; * (X*theta - y);theta = theta - gradient;% Save the cost J in every iterationJ_history(iter) = computeCost(X, y, theta);endend</code></pre><blockquote><p>Code này có thể dùng chung cho gradient descent với nhiều feature</p></blockquote><h1 id="5-Normal-Equation"><a href="#5-Normal-Equation" class="headerlink" title="5. Normal Equation"></a>5. Normal Equation</h1><p>Cái này thì khá dễ, nên mình không giải thích mà sẽ đưa code luôn nhé</p><pre><code>file normalEqn.mfunction [theta] = normalEqn(X, y)%NORMALEQN Computes the closed-form solution to linear regression%   NORMALEQN(X,y) computes the closed-form solution to linear%   regression using the normal equations.theta = zeros(size(X, 2), 1);theta = pinv(X&#39;*X)*X&#39;*y;end</code></pre><p>Bắt đầu tuần 3 nào :D</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Bài viết này đưa ra bài giải và chi tiết cách giải của mỗi bài tập trong tuần 2 của khóa học Machine Learning của giáo sư Andrew Ng.&lt;/p&gt;
&lt;p&gt;Xem các bài viết khác tại &lt;a href=&quot;https://coding4food.net/machine-learning-course/&quot;&gt;Machine Learning Course Structure&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Machine Learning" scheme="https://huntertran.github.io/blog/categories/Machine-Learning/"/>
    
    
  </entry>
  
  <entry>
    <title>Machine Learning - 2.2 - Normal Equation</title>
    <link href="https://huntertran.github.io/blog/2018/10/09/machine-learning-2-2-normal-equation/"/>
    <id>https://huntertran.github.io/blog/2018/10/09/machine-learning-2-2-normal-equation/</id>
    <published>2018-10-09T09:39:28.000Z</published>
    <updated>2020-08-12T20:45:35.169Z</updated>
    
    <content type="html"><![CDATA[<p>Bài 2 phần 2 trong khóa học Machine Learning của giáo sư Andrew Ng. Trong bài này, ta sẽ tìm hiểu một cách thay thế cho thuật toán <code>Gradient Descent</code> cùng ưu nhược điểm của nó.</p><a id="more"></a><p>Xem các bài viết khác tại <a href="https://coding4food.net/machine-learning-course/">Machine Learning Course Structure</a></p><ul><li><p><a href="#1-normal-equation">1. Normal Equation</a></p><ul><li><a href="#11-c%C3%B4ng-th%E1%BB%A9c">1.1. Công thức</a></li><li><a href="#12-so-s%C3%A1nh">1.2. So sánh</a></li><li><a href="#13-non-invertibility-kh%C3%B4ng-th%E1%BB%83-%C4%91%E1%BA%A3o-ng%C6%B0%E1%BB%A3c">1.3. Non-invertibility (không thể đảo ngược)</a></li></ul></li><li><p><a href="#2-octave">2. Octave</a></p></li></ul><h1 id="1-Normal-Equation"><a href="#1-Normal-Equation" class="headerlink" title="1. Normal Equation"></a>1. Normal Equation</h1><p>Thuần túy về mặt toán học, đối với 1 hàm hypothesis, ta có thể tìm ra giá trị nhỏ nhất của nó bằng cách lấy đạo hàm, và tìm x khi đạo hàm = 0.</p><h2 id="1-1-Cong-thuc"><a href="#1-1-Cong-thuc" class="headerlink" title="1.1. Công thức"></a>1.1. Công thức</h2><p>Áp dụng cách nhân matrix với vector đã được giới thiệu ở bài trước, ta có công thức như sau:</p><p>$latex \theta = (X^TX)^{-1}X^Ty$</p><h2 id="1-2-So-sanh"><a href="#1-2-So-sanh" class="headerlink" title="1.2. So sánh"></a>1.2. So sánh</h2><p>Gradient Descent</p><p>Normal Equation</p><p>Cần phải chọn alpha</p><p>Không cần chọn alpha</p><p>Cần nhiều vòng lặp</p><p>Tính bụp phát ra luôn</p><p>Độ phức tạp $latex O (kn^2)$</p><p>Độ phức tạp $latex O (n^3)$, cần phải tích nghịch đảo của $latex X^TX$</p><p>n lớn vẫn chạy tốt</p><p>Chậm nếu n quá lớn</p><p>Tóm lại, nếu số lượng các feature quá lớn thì bạn nên sử dụng thuật toán <code>Gradient Descent</code> để nhanh ra kết quả.</p><h2 id="1-3-Non-invertibility-khong-the-dao-nguoc"><a href="#1-3-Non-invertibility-khong-the-dao-nguoc" class="headerlink" title="1.3. Non-invertibility (không thể đảo ngược)"></a>1.3. Non-invertibility (không thể đảo ngược)</h2><p>Trong một số trường hợp hiếm gặp, kết quả của $latex X^TX$ là <code>noninvertible</code>.</p><p>Điều này xảy ra là do các nguyên do sau: + Có các feature bị dư. Ví dụ như 2 feature có liên quan rất chặt chẽ với nhau (feature này phụ thuộc vào feature kia một cách tuyến tính chả hạn) + Có quá nhiều features (m &lt;= n).</p><p>Để giải quyết vấn đề này, ta có thể delete bớt các feature bị dư (kiểu như x1 là diện tích theo mét vuông, x2 là diện thích theo dặm), hoặc dùng các phương pháp <code>regularization</code> sẽ được nói đến ở các phần sau.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Bài 2 phần 2 trong khóa học Machine Learning của giáo sư Andrew Ng. Trong bài này, ta sẽ tìm hiểu một cách thay thế cho thuật toán &lt;code&gt;Gradient Descent&lt;/code&gt; cùng ưu nhược điểm của nó.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Machine Learning" scheme="https://huntertran.github.io/blog/categories/Machine-Learning/"/>
    
    
      <category term="normal equation" scheme="https://huntertran.github.io/blog/tags/normal-equation/"/>
    
  </entry>
  
  <entry>
    <title>Machine Learning - 2.1 - Multiple Features</title>
    <link href="https://huntertran.github.io/blog/2018/10/03/machine-learning-2-1-multiple-features/"/>
    <id>https://huntertran.github.io/blog/2018/10/03/machine-learning-2-1-multiple-features/</id>
    <published>2018-10-03T09:48:42.000Z</published>
    <updated>2020-08-12T20:45:35.169Z</updated>
    
    <content type="html"><![CDATA[<p>Tuần 2 trong course Machine Learning của giáo sư Andrew Ng trên Coursera. Trong phần này, bạn sẽ thấy linear regression được mở rộng thành <code>multiple input features</code>, và những best practices để thực hiện linear regression.</p><a id="more"></a><p>Xem các bài viết khác tại <a href="https://coding4food.net/machine-learning-course/">Machine Learning Course Structure</a></p><ul><li><p><a href="#1-mutiple-features">1. Mutiple Features</a></p><ul><li><a href="#11-k%C3%BD-hi%E1%BB%87u">1.1. Ký hiệu</a></li><li><a href="#12-hypothesis">1.2. Hypothesis</a></li><li><a href="#13-trick">1.3. Trick</a></li></ul></li><li><p><a href="#2-gradient-descent-cho-multiple-variables">2. Gradient Descent cho Multiple Variables</a></p></li><li><p><a href="#3-gradient-descent-in-practice">3. Gradient Descent in Practice</a></p><ul><li><a href="#31-feature-scaling-v%C3%A0-mean-normalization">3.1. Feature Scaling và Mean Normalization</a></li><li><a href="#32-learning-rate">3.2. Learning Rate</a></li></ul></li><li><p><a href="#4-features-v%C3%A0-polynomial-regression">4. Features và Polynomial Regression</a></p></li></ul><h1 id="1-Mutiple-Features"><a href="#1-Mutiple-Features" class="headerlink" title="1. Mutiple Features"></a>1. Mutiple Features</h1><p>Linear Regression với <code>multiple features</code> còn được biết đến với cái tên <code>multivariate linear regression</code>.</p><h2 id="1-1-Ky-hieu"><a href="#1-1-Ky-hieu" class="headerlink" title="1.1. Ký hiệu"></a>1.1. Ký hiệu</h2><ul><li>$latex x^{(i)}_j$ = giá trị của feature <code>j</code> trong training example thứ <code>i</code>.</li><li>$latex x^{(i)}$ = input (feature) thứ <code>i</code> của training example.</li><li>m = số training example</li><li>n = số features</li></ul><h2 id="1-2-Hypothesis"><a href="#1-2-Hypothesis" class="headerlink" title="1.2. Hypothesis"></a>1.2. Hypothesis</h2><p>Như vậy, hàm hypothesis của chúng ta được viết lại như sau:</p><p>$latex h_0(x) = \theta_0x_0 + \theta_1x_1 + … + \theta_nx_n$</p><p>với $latex x_0 = 1$.</p><h2 id="1-3-Trick"><a href="#1-3-Trick" class="headerlink" title="1.3. Trick"></a>1.3. Trick</h2><p>Áp dụng các kiến thức về phép nhân matrix đã học ở bài trước, ta có như sau</p><p>$latex h_0(x) = \begin{bmatrix} \theta_0 &amp; \theta_1 &amp; … &amp; \theta_n \end{bmatrix} \begin{bmatrix} x_0 \\ x_1 \\ … \\ x_n \end{bmatrix} = \theta^Tx$</p><p>Trên đây là công thức của hàm hypothesis được rút gọn thành phép nhân matrix với vector.</p><h1 id="2-Gradient-Descent-cho-Multiple-Variables"><a href="#2-Gradient-Descent-cho-Multiple-Variables" class="headerlink" title="2. Gradient Descent cho Multiple Variables"></a>2. Gradient Descent cho Multiple Variables</h1><p>Công thức cho thuật toán Gradient Descent thì y hệt như cũ. Ta chỉ lặp lại nó cho <code>n</code> features mà thôi.</p><p>Lặp lại cho tới khi hội tụ:</p><p>$latex \theta_0 := \theta_0 - \alpha \frac{1}{m} \sum\limits_{i=1}^{m} (h_\theta(x^{(i)}) - y^{(i)}) \cdot x_0^{(i)} \\ \theta_1 := \theta_1 - \alpha \frac{1}{m} \sum\limits_{i=1}^{m} (h_\theta(x^{(i)}) - y^{(i)}) \cdot x_1^{(i)} \\ \theta_2 := \theta_2 - \alpha \frac{1}{m} \sum\limits_{i=1}^{m} (h_\theta(x^{(i)}) - y^{(i)}) \cdot x_2^{(i)} \\ …$</p><p>hoặc diễn giải theo một cách khác:</p><p>$latex \theta_j := \theta_j - \alpha \frac{1}{m} \sum\limits_{i=1}^{m} (h_\theta(x^{(i)}) - y^{(i)}) \cdot x_j^{(i)}$</p><p>với j:= 0…n</p><blockquote><p>Đối với $latex \theta_0$, $latex x^i_0 = 1$</p></blockquote><h1 id="3-Gradient-Descent-in-Practice"><a href="#3-Gradient-Descent-in-Practice" class="headerlink" title="3. Gradient Descent in Practice"></a>3. Gradient Descent in Practice</h1><h2 id="3-1-Feature-Scaling-va-Mean-Normalization"><a href="#3-1-Feature-Scaling-va-Mean-Normalization" class="headerlink" title="3.1. Feature Scaling và Mean Normalization"></a>3.1. Feature Scaling và Mean Normalization</h2><p>Khi các features có giá trị giao động trong các khoảng cách xa nhau, thì thuật toán Gradient Descent thường tốn nhiều thơi gian để tìm ra kết quả.</p><p>Ví dụ ta có 2 feature là <code>diện tích nhà</code> và <code>số phòng ngủ</code>:</p><p>[code lang=text] 200 &lt; Diện tích nhà &lt; 2000 1 &lt; Số phòng ngủ &lt; 5 [/code]</p><p>Nếu vẽ đồ thị cho hàm hypothesis dự đoán giá nhà, bạn sẽ thấy nó là một dạng đồ thị hình cái tô với đáy rất nhọn, nhưng dẹp. Điều này làm cho mỗi step của gradient descent trải dài về bề ngang, nhưng không đi nhanh về điểm hội tụ, làm tổng thời gian chạy thuật toán gradient descent tăng lên.</p><p><img src="https://i.imgur.com/DA49vil.png" alt="plot"> <em>hình ảnh chỉ mang tính chất minh họa ;)</em></p><p>Ta có thể tăng tốc gradient descent bằng cách <code>biến đổi</code> các giá trị của feature cho nó nằm trong một khoảng gần giống nhau. Lý do là $latex \theta$ sẽ di chuyển nhanh hơn trong vùng bé hơn và ngược lại, chậm hơn trong vùng lớn hơn.</p><p>Nhìn chung, ta sẽ biến đổi sao cho:</p><p>$latex -1 \leq x_{(i)} \leq 1$</p><p>hoặc</p><p>$latex -0.5 \leq x_{(i)} \leq 0.5$</p><p>Trên đây chỉ là ví dụ, mục tiêu là làm cho vùng giá trị của các feature càng gần nhau càng tốt.</p><p>2 kỹ thuật để làm chuyện này là <code>Feature Scaling</code> và <code>Mean Normalization</code>.</p><blockquote><p>Feature Scaling là chia input với khoảng giá trị (max - min). Mean Normalization là input - giá trị trung bình của input.</p></blockquote><p>$latex x_i := \frac{x_i - \mu_i}{\delta_i}$</p><p>với:</p><ul><li>$latex \mu_i$: trung bình của feature i</li><li>$latex \delta_i$: Max - min hoặc độ lệch chuẩn</li></ul><blockquote><p>Max - min sẽ cho ra kết quả rất khác với độ lệch chuẩn.</p></blockquote><h2 id="3-2-Learning-Rate"><a href="#3-2-Learning-Rate" class="headerlink" title="3.2. Learning Rate"></a>3.2. Learning Rate</h2><p>Để xác định tham số $latex \alpha$, ta có thể áp dụng 1 số kỹ thuật:</p><ul><li>Vẽ đồ thị với trục x = số bước lặp của gradient descent, trục y = giá trị của $latex J(\theta)$. Nếu $latex J(\theta)$ tăng, thì bạn phải giảm giá trị $latex \alpha$ xuống và làm lại từ đầu.</li><li>Automatic convergence test: Xác định điểm hội tụ khi giá trị $latex J(\theta)$ không vượt quá E trong một lần lặp, với E là một giá trị rất nhỏ nào đó. Tuy nhiên trong thực tế, thường rất khó xác định giá trị E này.</li></ul><p>Người ta đã chứng minh được rằng, nếu learning rate $latex \alpha$ đủ nhỏ, thì giá trị $latex J(\theta)$ sẽ giảm sau mỗi lần lặp.</p><p>Túm lại: * Nếu $latex \alpha$ quá nhỏ: gradient descent chạy lâu. * Nếu $latex \alpha$ quá lớn: $latex J(\theta)$ có thể sẽ không giảm sau mỗi lần lặp -&gt; không hội tụ.</p><h1 id="4-Features-va-Polynomial-Regression"><a href="#4-Features-va-Polynomial-Regression" class="headerlink" title="4. Features và Polynomial Regression"></a>4. Features và Polynomial Regression</h1><p>Ta có thể cải thiện features và dạng của hàm hypothesis bằng nhiều cách.</p><p>Một trong số những cách đó là <strong>kết hợp</strong> các feature lại với nhau. Ví dụ như khi ta có 2 feature là <code>dài</code> và <code>rộng</code>, ta có thể kết hợp chúng thành <code>diện tích = dài * rộng</code>.</p><p>Ngoài ra, không phải lúc nào ta cũng có thể sử dụng được hàm hypothesis là một đường thẳng, nhất là khi nó không “vừa” với bộ data. Lúc này, có thể biến đổi nó một chút, hoặc bẻ cong nó bằng cách nâng lũy thừa, hoặc lấy căn của các features (hoặc bất cứ dạng nào khác đều được).</p><p>Ví dụ:</p><p>$latex h_{\theta}(x) = \theta_0 + \theta_1x_1$</p><p>Ta có thể thêm 1 feature mới bằng cách lũy thừa x lên:</p><p>$latex h_{\theta}(x) = \theta_0 + \theta_1x_1 + \theta_2x_1^2$</p><p>hoặc lấy căn của nó:</p><p>$latex h_{\theta}(x) = \theta_0 + \theta_1x_1 + \theta_2\sqrt{x_1}$</p><blockquote><p>Một điều quan trọng là khi bạn biến đổi các feature như thế này, vùng giá trị của nó sẽ trở nên cách biệt so với feature gốc. Lúc này, bạn sẽ phải áp dụng những cách tối ưu như <code>Feature Scaling</code> và <code>Mean Normalization</code> đã nói ở trên để tối ưu thuật toán Gradient Descent.</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Tuần 2 trong course Machine Learning của giáo sư Andrew Ng trên Coursera. Trong phần này, bạn sẽ thấy linear regression được mở rộng thành &lt;code&gt;multiple input features&lt;/code&gt;, và những best practices để thực hiện linear regression.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Machine Learning" scheme="https://huntertran.github.io/blog/categories/Machine-Learning/"/>
    
    
  </entry>
  
  <entry>
    <title>Machine Learning - 1.4 - Matrices and Vectors</title>
    <link href="https://huntertran.github.io/blog/2018/10/01/machine-learning-matrices-and-vectors/"/>
    <id>https://huntertran.github.io/blog/2018/10/01/machine-learning-matrices-and-vectors/</id>
    <published>2018-10-01T11:47:01.000Z</published>
    <updated>2020-08-12T20:45:35.169Z</updated>
    
    <content type="html"><![CDATA[<p>Bài viết thứ 4 trong loạt bài tự học Machine Learning trên Coursera của giáo sư Andrew Ng.</p><p>Trong bài viết này, ta sẽ nói về Matrix và Vector, cùng các phép toán của chúng.</p><a id="more"></a><p>Xem các bài viết khác tại <a href="https://coding4food.net/machine-learning-course/">Machine Learning Course Structure</a></p><ul><li><a href="#1-c%C3%A1c-k%C3%BD-hi%E1%BB%87u">1. Các ký hiệu</a><ul><li><a href="#11-matrix">1.1. Matrix</a></li><li><a href="#12-vector">1.2. Vector</a></li><li><a href="#13-k%C3%BD-hi%E1%BB%87u">1.3. Ký hiệu</a></li></ul></li><li><a href="#2-ph%E1%BA%A7n-m%E1%BB%81m">2. Phần mềm</a></li><li><a href="#3-c%C3%A1c-ph%C3%A9p-t%C3%ADnh">3. Các phép tính</a><ul><li><a href="#31-ph%C3%A9p-c%E1%BB%99ng-v%C3%A0-ph%C3%A9p-nh%C3%A2n-matrix-s%E1%BB%91-th%E1%BB%B1c">3.1. Phép cộng và phép nhân matrix số thực</a></li><li><a href="#32-nh%C3%A2n-matrix-v%E1%BB%9Bi-vector">3.2. Nhân matrix với vector</a></li><li><a href="#33-nh%C3%A2n-2-matrix-v%E1%BB%9Bi-nhau">3.3. Nhân 2 matrix với nhau</a></li><li><a href="#34-c%C3%A1c-t%C3%ADnh-ch%E1%BA%A5t-c%E1%BB%A7a-ph%C3%A9p-nh%C3%A2n-matrix">3.4. Các tính chất của phép nhân matrix</a></li><li><a href="#35-identity-matrix">3.5. Identity Matrix</a></li></ul></li><li><a href="#4-inverse-ngh%E1%BB%8Bch-%C4%91%E1%BA%A3o-v%C3%A0-transpose-chuy%E1%BB%83n-v%E1%BB%8B">4. Inverse (nghịch đảo) và Transpose (chuyển vị)</a><ul><li><a href="#41-inverse-ngh%E1%BB%8Bch-%C4%91%E1%BA%A3o">4.1. Inverse (nghịch đảo)</a></li><li><a href="#42-transpose-chuy%E1%BB%83n-v%E1%BB%8B">4.2. Transpose (chuyển vị)</a></li></ul></li></ul><h1 id="1-Cac-ky-hieu"><a href="#1-Cac-ky-hieu" class="headerlink" title="1. Các ký hiệu"></a>1. Các ký hiệu</h1><h2 id="1-1-Matrix"><a href="#1-1-Matrix" class="headerlink" title="1.1. Matrix"></a>1.1. Matrix</h2><p>Matrix là một mảng 2 chiều (có thể mở rộng ra n chiều).</p><p>$latex \begin{bmatrix}a &amp; b &amp; c \\d &amp; e &amp; f \\g &amp; h &amp; i \\j &amp; k &amp; l \end{bmatrix}$</p><p>Matrix bên trên có 4 dòng và 3 cột, ký hiệu là $latex R^{4x3}$.</p><h2 id="1-2-Vector"><a href="#1-2-Vector" class="headerlink" title="1.2. Vector"></a>1.2. Vector</h2><p>Vector là một matrix chỉ có 1 cột và nhiều dòng.</p><p>$latex \begin{bmatrix} w \\ x \\ y \\ z \end{bmatrix}$</p><p>Vector trên là một matrix 4x1.</p><h2 id="1-3-Ky-hieu"><a href="#1-3-Ky-hieu" class="headerlink" title="1.3. Ký hiệu"></a>1.3. Ký hiệu</h2><ul><li>$latex A_{ij}$ là phần tử ở dòng i và cột j của matrix.</li><li>Vector A với ‘n’ dòng sẽ là một Vector có n chiều.</li><li>$latex v_{i}$ là phần tử ở dòng i của vector.</li></ul><blockquote><p>Bình thường, vector và matrix sẽ dùng index bắt đầu từ 1. Trong đa số các ngôn ngữ lập trình, mảng thường bắt đầu từ phần tử 0.</p></blockquote><ul><li>Matrix thường được ký hiệu bằng chữ cái in hoa, vector thường được ký hiệu bằng chữ cái in thường.</li><li><code>Scalar</code> nghĩa là một vật thể là một giá trị, không phải vector hay matrix.</li><li>$latex \mathbb{R}$ được ký hiệu cho tập các số thực.</li><li>$latex \mathbb{R}^n$ được ký hiệu cho tập các vector số thực n chiều.</li></ul><h1 id="2-Phan-mem"><a href="#2-Phan-mem" class="headerlink" title="2. Phần mềm"></a>2. Phần mềm</h1><p>Để thử nghiệm nhanh chóng các giả thuyết - thuật toán liên quan tới toán học trong Machine Learning, ta có thể dùng một phần mềm mang tên <a href="https://www.gnu.org/software/octave/download.html">Octave</a></p><p>Bạn có thể chạy đoạn code dưới đây trong Octave hoặc Matlab</p><p>[code lang=matlab] % The ; denotes we are going back to a new row. A = [1, 2, 3; 4, 5, 6; 7, 8, 9; 10, 11, 12]</p><p>% Initialize a vector v = [1;2;3]</p><p>% Get the dimension of the matrix A where m = rows and n = columns [m,n] = size(A)</p><p>% You could also store it this way dim_A = size(A)</p><p>% Get the dimension of the vector v dim_v = size(v)</p><p>% Now let’s index into the 2nd row 3rd column of matrix A A_23 = A(2,3) [/code]</p><h1 id="3-Cac-phep-tinh"><a href="#3-Cac-phep-tinh" class="headerlink" title="3. Các phép tính"></a>3. Các phép tính</h1><h2 id="3-1-Phep-cong-va-phep-nhan-matrix-so-thuc"><a href="#3-1-Phep-cong-va-phep-nhan-matrix-so-thuc" class="headerlink" title="3.1. Phép cộng và phép nhân matrix số thực"></a>3.1. Phép cộng và phép nhân matrix số thực</h2><p>Đối với phép cộng và nhân, chỉ cần đơn giản cộng và nhân với mỗi phần tử của matrix.</p><p>$latex \begin{bmatrix} a &amp; b \\ c &amp; d \\ \end{bmatrix} +\begin{bmatrix} w &amp; x \\ y &amp; z \\ \end{bmatrix} =\begin{bmatrix} a+w &amp; b+x \\ c+y &amp; d+z \\ \end{bmatrix}$</p><p>Tương tự đối với phép nhân và chia:</p><p>$latex \begin{bmatrix} a &amp; b \\ c &amp; d \\ \end{bmatrix} * x =\begin{bmatrix} a*x &amp; b*x \\ c*x &amp; d*x \\ \end{bmatrix}$</p><p>$latex \begin{bmatrix} a &amp; b \\ c &amp; d \\ \end{bmatrix} / x =\begin{bmatrix} a /x &amp; b/x \\ c /x &amp; d /x \\ \end{bmatrix}$</p><h2 id="3-2-Nhan-matrix-voi-vector"><a href="#3-2-Nhan-matrix-voi-vector" class="headerlink" title="3.2. Nhân matrix với vector"></a>3.2. Nhân matrix với vector</h2><p>Để nhân một matrix với một vector, nhân mỗi phần tử rồi cộng kết quả:</p><p>$latex \begin{bmatrix} a &amp; b \\ c &amp; d \\ e &amp; f \end{bmatrix} *\begin{bmatrix} x \\ y \\ \end{bmatrix} =\begin{bmatrix} a*x + b*y \\ c*x + d*y \\ e*x + f*y\end{bmatrix}$</p><blockquote><p>Một matrix <code>m x n</code> nhân với một vector <code>n x 1</code> sẽ ra kết quả là một vector <code>m x 1</code>.</p></blockquote><p>Kiến thức về matrix này có thể áp dụng vào hàm hypothesis của linear regression:</p><p>Ta có bộ input các giá trị của x như sau:</p><p>[code lang=text] x1 = 21 x2 = 30 x3 = 25 x4 = 22 [/code]</p><p>hàm hypothesis:</p><p>$latex h_{0} = -40 + 0.25x$</p><p>Để tính nhanh các giá trị dự đoán của y, ta có thể tạo ra matrix x và vector hypothesis, và tạo thành phép tính như sau:</p><p>$latex \begin{bmatrix} 1 &amp; 21 \\ 1 &amp; 30 \\ 1 &amp; 25 \\ 1 &amp; 22 \end{bmatrix} * \begin{bmatrix} -40 \\ 0.25 \end{bmatrix}$</p><p>Phép tính này có thể dễ dàng tính toán bằng Octave</p><p>[code lang=matlab] A = [1,21;1,30;1,25;1,22] B = [-40;0.25]</p><p>mul_AB = A * B [/code]</p><p>Kết quả:</p><p>[code lang=matlab] A = 1 21 1 30 1 25 1 22</p><p>B = -40.00000 0.25000</p><p>mul_AB = -34.750 -32.500 -33.750 -34.500 [/code]</p><h2 id="3-3-Nhan-2-matrix-voi-nhau"><a href="#3-3-Nhan-2-matrix-voi-nhau" class="headerlink" title="3.3. Nhân 2 matrix với nhau"></a>3.3. Nhân 2 matrix với nhau</h2><p>Tương tự như việc nhân 1 matrix với 1 vector, bạn chỉ cần tách phép nhân 2 matrix thành nhiều phép nhân matrix với vector.</p><p>$latex \begin{bmatrix} a &amp; b \\ c &amp; d \\ e &amp; f \end{bmatrix} *\begin{bmatrix} w &amp; x \\ y &amp; z \\ \end{bmatrix} =\begin{bmatrix} a*w + b*y &amp; a*x + b*z \\ c*w + d*y &amp; c*x + d*z \\ e*w + f*y &amp; e*x + f*z\end{bmatrix}$</p><blockquote><p>Một matrix <code>m x n</code> khi nhân với một matrix <code>n x o</code> sẽ cho ra kết quả là một matrix <code>m x o</code>.</p></blockquote><h2 id="3-4-Cac-tinh-chat-cua-phep-nhan-matrix"><a href="#3-4-Cac-tinh-chat-cua-phep-nhan-matrix" class="headerlink" title="3.4. Các tính chất của phép nhân matrix"></a>3.4. Các tính chất của phép nhân matrix</h2><p>Phép nhân 2 số thực có một số tính chất không thể áp dụng với phép nhân 2 matrix.</p><p>Gọi $latex A$ và $latex B$ là 2 matrix, ta có:</p><ul><li>$latex A \times B \neq B \times A$</li><li>$latex A \times B \times C = A \times (B \times C) = (A \times B) \times C$</li></ul><h2 id="3-5-Identity-Matrix"><a href="#3-5-Identity-Matrix" class="headerlink" title="3.5. Identity Matrix"></a>3.5. Identity Matrix</h2><p>Một matrix bất kỳ khi nhân với một Identity matrix phù hợp sẽ có kết quả là chính nó.</p><p>Ký hiệu: $latex I$ hoặc $latex I_{n \times n}$</p><p>Ví dụ:</p><p>$latex I_{1 \times 1} = \begin{bmatrix} 1 \end{bmatrix}$</p><p>$latex I_{2 \times 2} = \begin{bmatrix} 1 &amp; 0 \\ 0 &amp; 1 \end{bmatrix}$</p><p>$latex I_{3 \times 3} = \begin{bmatrix} 1 &amp; 0 &amp; 0 \\ 0 &amp; 1 &amp; 0 \\ 0 &amp; 0 &amp; 1 \end{bmatrix}$</p><blockquote><p>Lưu ý: $latex A \times I = I \times A$</p></blockquote><h1 id="4-Inverse-nghich-dao-va-Transpose-chuyen-vi"><a href="#4-Inverse-nghich-dao-va-Transpose-chuyen-vi" class="headerlink" title="4. Inverse (nghịch đảo) và Transpose (chuyển vị)"></a>4. Inverse (nghịch đảo) và Transpose (chuyển vị)</h1><h2 id="4-1-Inverse-nghich-dao"><a href="#4-1-Inverse-nghich-dao" class="headerlink" title="4.1. Inverse (nghịch đảo)"></a>4.1. Inverse (nghịch đảo)</h2><blockquote><p><strong>Một ví dụ với số thực</strong></p><p>3 là một số thực. Ta có: $latex 3 \times (3^{-1}) = 1$</p><p>Tổng quát: $latex a \times (a^{-1}) = 1$</p></blockquote><p>Ta có matrix A:</p><p>$latex A \times A^{-1} = A^{-1} \times A = I$</p><blockquote><p>Matrix gồm toàn các phần tử 0 không có nghịch đảo</p></blockquote><h2 id="4-2-Transpose-chuyen-vi"><a href="#4-2-Transpose-chuyen-vi" class="headerlink" title="4.2. Transpose (chuyển vị)"></a>4.2. Transpose (chuyển vị)</h2><p>Gọi B là matrix chuyển vị của A, ta có:</p><p>$latex A = \begin{bmatrix} a &amp; b \\ c &amp; d \\ e &amp; f \end{bmatrix}$</p><p>$latex A^T = \begin{bmatrix} a &amp; c &amp; e \\ b &amp; d &amp; f \end{bmatrix}$</p><p>Hay nói cách khác:</p><p>$latex A_{ij} = A^T_{ji}$</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Bài viết thứ 4 trong loạt bài tự học Machine Learning trên Coursera của giáo sư Andrew Ng.&lt;/p&gt;
&lt;p&gt;Trong bài viết này, ta sẽ nói về Matrix và Vector, cùng các phép toán của chúng.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Machine Learning" scheme="https://huntertran.github.io/blog/categories/Machine-Learning/"/>
    
    
      <category term="matrice" scheme="https://huntertran.github.io/blog/tags/matrice/"/>
    
      <category term="matrix" scheme="https://huntertran.github.io/blog/tags/matrix/"/>
    
      <category term="vector" scheme="https://huntertran.github.io/blog/tags/vector/"/>
    
  </entry>
  
  <entry>
    <title>Machine Learning - 1.3 - Parameter Learning</title>
    <link href="https://huntertran.github.io/blog/2018/09/27/machine-learning-parameter-learning/"/>
    <id>https://huntertran.github.io/blog/2018/09/27/machine-learning-parameter-learning/</id>
    <published>2018-09-27T09:17:23.000Z</published>
    <updated>2020-08-12T20:45:35.169Z</updated>
    
    <content type="html"><![CDATA[<p>Bài thứ 3 trong chuỗi bài viết tự học Machine Learning.</p><p>Ở 2 bài trước, chúng ta đã có hàm hypothesis và cách để biết hàm đó có phù hợp với bộ training example của chúng ta hay ko. Bây giờ chúng ta sẽ tìm cách tìm ra các tham số cho hàm hypothesis.</p><a id="more"></a><p>Xem các bài viết khác tại <a href="https://coding4food.net/machine-learning-course/">Machine Learning Course Structure</a></p><ul><li><a href="#1-gradient-descent">1. Gradient Descent</a><ul><li><a href="#11-bi%E1%BB%83u-di%E1%BB%85n-%C4%91%E1%BB%93-th%E1%BB%8B">1.1. Biểu diễn đồ thị</a></li><li><a href="#12-m%C3%B4-t%E1%BA%A3-thu%E1%BA%ADt-to%C3%A1n">1.2. Mô tả thuật toán</a></li><li><a href="#13-x%C3%A2y-d%E1%BB%B1ng">1.3. Xây dựng</a></li></ul></li><li><a href="#2-gradient-descent-cho-linear-regression">2. Gradient Descent cho Linear Regression</a></li></ul><h1 id="1-Gradient-Descent"><a href="#1-Gradient-Descent" class="headerlink" title="1. Gradient Descent"></a>1. Gradient Descent</h1><p>Ở 2 bài trước, chúng ta đã có hàm hypothesis và cách để biết hàm đó có phù hợp với bộ training example của chúng ta hay ko. Bây giờ chúng ta sẽ tìm cách tìm ra các tham số cho hàm hypothesis, và đó là nhiệm vụ của <code>Gradient Descent</code>.</p><p>Để đơn giản, trong phần này, ta sẽ xét các hàm hypothesis có 2 tham số là $latex \theta_{0}$ và $latex \theta_{1}$. Đối với các trường hợp có nhiều hơn 2 tham số, cách thực hiện là tương tự.</p><h2 id="1-1-Bieu-dien-do-thi"><a href="#1-1-Bieu-dien-do-thi" class="headerlink" title="1.1. Biểu diễn đồ thị"></a>1.1. Biểu diễn đồ thị</h2><p>Gọi $latex J(\theta_{0},\theta_{1})$ là kết quả của cost function. Ta biểu diễn các tham số lên một đồ thị có 3 trục x, y và z như sau:</p><ul><li>$latex \theta_{0}$ là trục x.</li><li>$latex \theta_{1}$ là trục y.</li><li>$latex J(\theta_{0},\theta_{1})$ là trục z.</li></ul><p><img src="https://farm2.staticflickr.com/1899/44863403391_91a4cf87aa_o.png" alt="gradient descent graph"></p><p>Các mũi tên đỏ chỉ những điểm thấp nhất của đồ thị này, đó là các điểm mà ta tìm kiếm (nhằm mục đích tối thiểu giá trị của cost function).</p><h2 id="1-2-Mo-ta-thuat-toan"><a href="#1-2-Mo-ta-thuat-toan" class="headerlink" title="1.2. Mô tả thuật toán"></a>1.2. Mô tả thuật toán</h2><p>Chọn 1 điểm bất kỳ, sau đó di chuyển từng bước nhỏ về vùng trũng nhất của đồ thị.</p><p>Cách làm là lấy đạo hàm của cost function. Đối với một hàm số, đạo hàm của nó chính là đường tiếp tuyến của nó. Độ dốc của đường tiếp tuyến tại một điểm chính là giá trị của hàm đạo hàm tại điểm đó. Độ dốc này cho ta biết hướng đi để chọn điểm tiếp theo.</p><p>Độ dài của mỗi step được xác định bởi tham số $latex \alpha$, gọi là <code>learning rate</code>.</p><p>Điểm ban đầu được chọn khác nhau sẽ cho ra các kết quả rất khác nhau. Hình bên trên có 2 điểm ban đầu khác nhau, và sẽ cho ra 2 điểm thấp nhất là 2 mũi tên đỏ.</p><p>Như vậy, thuật toán Gradient Descent sẽ là:</p><p>lặp lại cho tới khi hội tụ:</p><p>$latex \theta_{j} := \theta_{j} - \alpha \frac{\partial}{\partial\theta_{j}}J(\theta_{0},\theta_{1})$</p><p>với:</p><p>$latex j=0,1,2,…,m$, đại diện cho index</p><p>Với mỗi lần lặp, cả $latex \theta_{0}$ và $latex \theta_{1}$ phải được tính đồng thời.</p><h2 id="1-3-Xay-dung"><a href="#1-3-Xay-dung" class="headerlink" title="1.3. Xây dựng"></a>1.3. Xây dựng</h2><p>Để cho đơn giản, ta sẽ dùng hàm số chỉ có 1 biến $latex \theta_{1}$ và từng bước xây dựng công thức cho <code>Gradient Descent</code>.</p><p>Vậy công thức của ta còn:</p><p>Lặp lại cho tới khi hội tụ:</p><p>$latex \theta_{1} := \theta_{1} - \alpha \frac{\partial}{\partial\theta_{1}}J(\theta_{1})$</p><p>với</p><ul><li>$latex \alpha$ là learning rate</li><li>$latex \frac{\partial}{\partial\theta_{1}}J(\theta_{1})$ là độ dốc của đường tiếp tuyến (slope) tại $latex \theta_{1}$</li></ul><p><img src="https://i.imgur.com/G01t68o.png" alt="plot"></p><p>Nhìn vào đồ thị trên, khi slope nằm bên trái của điểm hội tụ, thì giá trị $latex \theta_{1}$ tăng, và ngược lại khi nó nằm bên phải của điểm hội tụ.</p><blockquote><p>Tham số $latex \alpha$ nên được điều chỉnh hợp lý sao cho thuật toán gradient descent hội tụ trong 1 khoảng thời gian phù hợp.</p><p>Khi $latex \alpha$ quá nhỏ, thời gian tìm đến điểm hội tụ sẽ lâu. Khi quá lớn, thuật toán rất có thể sẽ không tìm thấy điểm hội tụ.</p></blockquote><p>Với một tham số $latex \alpha$ hợp lý, càng về gần điểm hội tụ, độ dốc của tiếp tuyến sẽ càng nhỏ, do đó, thuật toán gradient descent sẽ có bước đi nhỏ hơn, và sẽ bằng 0 khi tới điểm hội tụ.</p><p>Trong trường hợp điểm xuất phát chính là điểm hội tụ, thì thuật toán gradient descent sẽ cho ra $latex \theta_{1}$ không đổi với $latex \alpha$ bất kỳ, vì đạo hàm của nó là 0.</p><h1 id="2-Gradient-Descent-cho-Linear-Regression"><a href="#2-Gradient-Descent-cho-Linear-Regression" class="headerlink" title="2. Gradient Descent cho Linear Regression"></a>2. Gradient Descent cho Linear Regression</h1><p>Khi áp dụng thuật toán Gradient Descent vào hàm số Hypothesis của ta trong các bài viết trước, ta có thể tìm được 2 tham số $latex \theta_{0}$ và $latex \theta_{1}$:</p><p>Lặp lại cho tới khi hội tụ:</p><p>$latex \theta_0 := \theta_0 - \alpha \frac{1}{m} \sum\limits_{i=1}^{m}(h_\theta(x_{i}) - y_{i})$</p><p>$latex \theta_1 := \theta_1 - \alpha \frac{1}{m} \sum\limits_{i=1}^{m}\left((h_\theta(x_{i}) - y_{i}) x_{i}\right)$</p><p>với:</p><ul><li>m là tổng số training example.</li><li>$latex \theta_0$ tham số sẽ thay đổi đồng thời với $latex theta_1$ và $latex x_{i}$.</li><li>$latex y_{i}$ là các giá trị được cho bởi bộ training example.</li></ul><p>Như vậy, số 2 dưới mẫu trong công thức của bài kỳ trước đã bị triệt tiêu vì đạo hàm</p><blockquote><p>Gradient Descent trong bài toán này thường được gọi là <code>Batch Gradient Descent</code>, vì nó tính tổng của tất cả các giá trị</p><p>Hàm hypothesis của bài toán Linear Regression có hình dạng như một cái tô, và chỉ có 1 điểm hội tụ duy nhất.</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Bài thứ 3 trong chuỗi bài viết tự học Machine Learning.&lt;/p&gt;
&lt;p&gt;Ở 2 bài trước, chúng ta đã có hàm hypothesis và cách để biết hàm đó có phù hợp với bộ training example của chúng ta hay ko. Bây giờ chúng ta sẽ tìm cách tìm ra các tham số cho hàm hypothesis.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Machine Learning" scheme="https://huntertran.github.io/blog/categories/Machine-Learning/"/>
    
    
      <category term="gradient descent" scheme="https://huntertran.github.io/blog/tags/gradient-descent/"/>
    
      <category term="hypothesis" scheme="https://huntertran.github.io/blog/tags/hypothesis/"/>
    
  </entry>
  
  <entry>
    <title>Machine Learning - 1.2 - Model and Cost Function</title>
    <link href="https://huntertran.github.io/blog/2018/09/22/ml-model-and-cost-function/"/>
    <id>https://huntertran.github.io/blog/2018/09/22/ml-model-and-cost-function/</id>
    <published>2018-09-22T16:48:34.000Z</published>
    <updated>2020-08-12T20:45:35.169Z</updated>
    
    <content type="html"><![CDATA[<p>Bài thứ 2 trong chuỗi bài viết tự học Machine Learning Trong bài này, ta sẽ tìm hiểu về cost function, một function nhằm dự đoán giá trị output với một bộ các giá trị input/output cho trước.</p><a id="more"></a><p>Xem các bài viết khác tại <a href="https://coding4food.net/machine-learning-course/">Machine Learning Course Structure</a></p><ul><li><a href="#1-c%C3%A1c-k%C3%BD-hi%E1%BB%87u">1. Các ký hiệu</a></li><li><a href="#2-cost-function">2. Cost Function</a><ul><li><a href="#21-to%C3%A1n-h%E1%BB%8Dc">2.1. Toán học</a><ul><li><a href="#211-x%C3%A1c-xu%E1%BA%A5t-v%C3%A0-th%E1%BB%91ng-k%C3%AA-probability-and-statistic">2.1.1. Xác xuất và thống kê (Probability and Statistic)</a></li><li><a href="#212-ph%C6%B0%C6%A1ng-sai-variance">2.1.2. Phương sai (Variance)</a></li></ul></li><li><a href="#22-%C4%91%E1%BA%A1o-h%C3%A0m-derivative">2.2. Đạo hàm (Derivative)</a><ul><li><a href="#221-m%E1%BB%99t-v%C3%AD-d%E1%BB%A5-to%C3%A1n-h%E1%BB%8Dc">2.2.1. Một ví dụ toán học</a></li><li><a href="#222-l%E1%BB%9Bn-nh%E1%BA%A5t-hay-nh%E1%BB%8F-nh%E1%BA%A5t">2.2.2. Lớn nhất hay nhỏ nhất</a></li></ul></li><li><a href="#23-c%C3%B4ng-th%E1%BB%A9c">2.3. Công thức</a></li></ul></li></ul><h1 id="1-Cac-ky-hieu"><a href="#1-Cac-ky-hieu" class="headerlink" title="1. Các ký hiệu"></a>1. Các ký hiệu</h1><p>Chúng ta sẽ thống nhất 1 cách sử dụng các ký hiệu để biểu thị các thuộc tính của một bài toán.</p><blockquote><p>x(i) sẽ là giá trị đầu vào, cũng được gọi là <strong><em><code>input feature</code></em></strong>.</p><p>y(i) sẽ là đầu ra mà ta cố dự đoán.</p><p>Một cặp (x(i), y(i)) được gọi là một <code>training example</code>.</p><p>Số lượng <code>training example</code> được gọi là <code>m</code>. Như vậy, i=1,2,3,…,m</p></blockquote><p>Lưu ý rằng <code>(i)</code> chỉ là index của giá trị, không phải số lũy thừa</p><blockquote><p>Ta dùng ký tự <code>X</code>, <code>Y</code> để biểu thị vùng không gian của input và output</p><p>Ví dụ: <code>X = Y = ℝ</code></p></blockquote><p>Khi đưa ra một bộ dữ liệu training (<code>training set</code>), mục tiêu của chúng ta là tạo ra được 1 function <code>h</code> sao cho <code>h(x)</code> có thể dự đoán gần đúng nhất giá trị của <code>y</code>.</p><blockquote><p><code>h</code> là viết tắt cho từ <em>Hypothesis</em>, lý do cho tên gọi này chỉ đơn thuần là vì xưa kia, người ta đặt tên cho nó như vậy, và nó chết tên luôn.</p></blockquote><p>Như vậy, process của chúng ta sẽ như sau:</p><p><img src="https://farm2.staticflickr.com/1844/43995414074_2c530b4cb8_o.png" alt="process"></p><p>Khi y là một giá trị liên tục, ví dụ như giá nhà, giá cổ phiếu, thì đây là một <code>regression problem</code>.</p><p>Khi y chỉ là một số lượng nhỏ các giá trị nhất định (true/false - yes/no), thì đây là một <code>classification problem</code>.</p><h1 id="2-Cost-Function"><a href="#2-Cost-Function" class="headerlink" title="2. Cost Function"></a>2. Cost Function</h1><p>Chúng ta “tính toán” sự chính xác của hàm hypothesis bằng cách sử dụng 1 hàm số. Hàm số đó gọi là <em><code>cost function</code></em>.</p><blockquote><p>Trước khi đưa ra bất kỳ một công thức hay hàm số nào, hãy cùng tôi đào bới trong mớ kiến thức hỗn độn mà tôi chắc rằng sẽ giúp bạn hiểu ra nội dung cốt lõi của <code>Cost Function</code>.</p></blockquote><h2 id="2-1-Toan-hoc"><a href="#2-1-Toan-hoc" class="headerlink" title="2.1. Toán học"></a>2.1. Toán học</h2><h3 id="2-1-1-Xac-xuat-va-thong-ke-Probability-and-Statistic"><a href="#2-1-1-Xac-xuat-va-thong-ke-Probability-and-Statistic" class="headerlink" title="2.1.1. Xác xuất và thống kê (Probability and Statistic)"></a>2.1.1. Xác xuất và thống kê (Probability and Statistic)</h3><p>Trong xác xuất thống kê, có một khái niệm gọi là <code>Gaussian Distributed</code>.</p><blockquote><p>Đúng rồi, bạn không nhìn nhầm đâu. <code>Gaussian</code> cũng là một tính năng nổi tiếng của…Photoshop, khi mà nó làm <em>nhiễu</em> đi vùng được chọn. Tính năng đó gọi là <code>Gaussian Blur</code>.</p></blockquote><p>Trong lý thuyết xác xuất, <code>phân phối chuẩn</code>, hay còn gọi là <code>phân phối Gauss</code>, <code>phân phối Gaussian</code>, <code>phân phối Laplace-Gauss</code>, là một dạng phân phối xác xuất liên tục (<a href="https://en.wikipedia.org/wiki/Continuous_probability_distribution">Continuous probability distribution</a>).</p><p>Sở dĩ tôi nhắc tới phân phối chuẩn là bởi vì theo <em>định lý giới hạn trung tâm (<a href="https://en.wikipedia.org/wiki/Central_limit_theorem">Central limit theorem</a>)</em>, ở dạng tổng quát nhất của phân phối chuẩn, phân phối của tổng rất nhiều biến ngẫu nhiên độc lập sẽ có phân phối xấp xỉ chuẩn.</p><p>Tức là, số lượng <code>training example</code> càng nhiều thì mỗi một <code>training example</code> sẽ có giá trị càng gần với hàm <code>hypothesis</code> của chúng ta.</p><p>Tóm lại, ta sẽ chọn tham số sao cho khoảng cách từ đồ thị của hàm <code>hypothesis</code> tới <code>y</code> của các <code>training example</code> là ngắn nhất.</p><h3 id="2-1-2-Phuong-sai-Variance"><a href="#2-1-2-Phuong-sai-Variance" class="headerlink" title="2.1.2. Phương sai (Variance)"></a>2.1.2. Phương sai (Variance)</h3><blockquote><p>Trong lý thuyết xác suất và thống kê, phương sai của một biến ngẫu nhiên là một độ đo sự phân tán thống kê của biến đó, nó hàm ý các giá trị của biến đó thường ở cách giá trị kỳ vọng bao xa.</p></blockquote><p>Theo định nghĩa này của phương sai, đồ thị biểu diễn các giá trị kỳ vọng chính là đồ thị hàm hypothesis của chúng ta đó. Phương sai chính là giá trị mà ta muốn nó càng nhỏ càng tốt</p><blockquote><p>Phương sai của một biến ngẫu nhiên là bình phương của độ lệch chuẩn.</p></blockquote><p>Như đã nói ở phần trước, khi mà tập giá trị đầu vào <code>training example</code> của chúng ta đủ lớn, thì ta có thể xem mỗi training example là một biến ngẫu nhiên có phân phối chuẩn.</p><p>Vậy ta có:</p><p>Tập hợp kỳ vọng = hypothesis</p><p>$latex h_\theta(x)=\theta_0+\theta_1x$</p><p>Độ lệch chuẩn:</p><p>$latex h_\theta(x^{(i)})-y^{(i)}$</p><p>Phương sai = (độ lệch chuẩn)2</p><p>Vậy phương sai của tập hợp các training example sẽ là:</p><p>$latex \frac{1}{m}\sum_{i=1}^m(h_\theta(x^{(i)})-y^{(i)})^2$</p><p>Nhiệm vụ của ta là tìm ra giá trị nhỏ nhất của công thức trên.</p><h2 id="2-2-Dao-ham-Derivative"><a href="#2-2-Dao-ham-Derivative" class="headerlink" title="2.2. Đạo hàm (Derivative)"></a>2.2. Đạo hàm (Derivative)</h2><p>Để tìm giá trị lớn nhất / nhỏ nhất của một hàm số, ta có thể sử dụng đạo hàm.</p><h3 id="2-2-1-Mot-vi-du-toan-hoc"><a href="#2-2-1-Mot-vi-du-toan-hoc" class="headerlink" title="2.2.1. Một ví dụ toán học"></a>2.2.1. Một ví dụ toán học</h3><p>Một trái banh được ném lên trời. Độ cao của trái banh so với mặt đất tại bất kỳ thời điểm <em>t</em> nào được tính bởi công thức:</p><p>h = 3 + 14t -5t2</p><p>Vậy độ cao lớn nhất của trái banh là bao nhiêu?</p><p>Ứng dụng đạo hàm, ta giải bài toán này như sau:</p><p>$latex \frac{\text{d}}{\text{d}t}h=0+14-5(2t)=14-10t$</p><p>Hàm số trên biểu thị <em>mức độ thay đổi</em> của độ cao h tại thời điểm t. Như vậy, tại độ cao lớn nhất, _mức độ thay đổi độ cao h = 0 (vì trái banh không tiếp tục bay cao lên nữa mà bắt đầu rơi xuống).</p><p><img src="https://farm2.staticflickr.com/1972/43929799745_140b61938a_o.png" alt="hypolic function"></p><p>Vậy ta có:</p><p>[code lang=text] 14-10t = 0</p><p>=&gt; t = 1.4 [/code]</p><p>Vậy độ cao lớn nhất là</p><p>[code lang=text] h = 3 + 14x1.4 - 10x1.4x1.4 = 12.8 [/code]</p><h3 id="2-2-2-Lon-nhat-hay-nho-nhat"><a href="#2-2-2-Lon-nhat-hay-nho-nhat" class="headerlink" title="2.2.2. Lớn nhất hay nhỏ nhất"></a>2.2.2. Lớn nhất hay nhỏ nhất</h3><p>Làm sao ta biết được một hàm số sẽ có giá trị lớn nhất hay nhỏ nhất? Nếu dựa vào đồ thị thì quả là một cách tốn nhiều thời gian và công sức.</p><p>Tại đây, ta tiếp tục sử dụng đạo hàm (một lần nữa):</p><p>[code lang=text] f’(t) = 14 - 10t với t = 1.4 thì f’(t) = 0</p><p>=&gt; f’’(t) = -10 với t = 1.4 thì f’’(t) = -10 [/code]</p><p>Đây gọi là <a href="https://en.wikipedia.org/wiki/Derivative_test#Second_derivative_test_(single_variable)">Second Derivative Test</a>, phát biểu như sau:</p><blockquote><p>Khi một hàm số có mức độ thay đổi = 0 tại điểm x, thì giá trị hàm đạo hàm lần 2 của hàm số đó tại x nếu:</p><p>Nhỏ hơn 0: đó là giá trị lớn nhất.</p><p>Lớn hơn 0: đó là giá trị nhỏ nhất.</p><p>Bằng 0: chưa thể tìm được giá trị lớn nhất/nhỏ nhất của hàm số.</p></blockquote><h2 id="2-3-Cong-thuc"><a href="#2-3-Cong-thuc" class="headerlink" title="2.3. Công thức"></a>2.3. Công thức</h2><p>Áp dụng cả 2 phần đạo hàm và toán bên trên, ta sẽ có:</p><p>$latex \frac{1}{2m}\sum_{i=1}^m(h_\theta(x^{(i)})-y^{(i)})^2$</p><p>với</p><p>$latex h_\theta(x^{(i)}) = \theta_{0} + \theta_{1}x^{(i)}$</p><blockquote><p>Lý do của số 2 dưới mẫu số là để triệt tiêu khi ta làm đạo hàm. Nhìn chung, nó không ảnh hưởng tới kết quả, vì mục tiêu là tìm giá trị nhỏ nhất của hàm số trên.</p></blockquote><p>Vậy ta sẽ tìm giá trị của $latex \theta_{0}$ và $latex \theta_{1}$ để hàm số trên nhỏ nhất.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Bài thứ 2 trong chuỗi bài viết tự học Machine Learning Trong bài này, ta sẽ tìm hiểu về cost function, một function nhằm dự đoán giá trị output với một bộ các giá trị input/output cho trước.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Machine Learning" scheme="https://huntertran.github.io/blog/categories/Machine-Learning/"/>
    
    
      <category term="cost function" scheme="https://huntertran.github.io/blog/tags/cost-function/"/>
    
  </entry>
  
</feed>
