<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Đăng ký Imagine Cup 2012</title>
    <url>/2011/12/31/dang-ky-imagine-cup-2012/</url>
    <content><![CDATA[<p>Để đăng ký, các bạn trong team phải tạo một tài khoản trên <a href="http://www.imaginecup.com/">www.imaginecup.com</a></p>
<span id="more"></span>
<p>Sau đó, đăng nhập tài khoản của mình, tại mục Compete, chọn phần team bạn muốn tham gia <a href="http://cuoilennaocacban2.files.wordpress.com/2011/12/3112201193303pm.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2011/12/3112201193303pm.png" alt="31-12-2011 9-33-03 PM" title="31-12-2011 9-33-03 PM"></a></p>
<p>Ở đây mình chọn Windows Phone Challenge Ở Việt Nam, bạn có thể chọn:</p>
<ul>
<li>Software Design: Thiết kế phần mềm</li>
<li>Game Design: XBOXWINDOWS: Thiết kế game cho X Box</li>
<li>Game Design: Phone: Thiết kế game cho Windows Phone 7</li>
<li>Windows Phone Challenge: Thiết kế ứng dụng cho Windows Phone 7</li>
</ul>
<p>Sau đó, ở trang hiện ra, bấm Sign Up để đăng ký mục thi</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2011/12/3112201193921pm.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2011/12/3112201193921pm.png" alt="31-12-2011 9-39-21 PM" title="31-12-2011 9-39-21 PM"></a></p>
<p>Cập nhật thông tin cá nhân của bạn</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2011/12/3112201194641pm.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2011/12/3112201194641pm.png" alt="31-12-2011 9-46-41 PM" title="31-12-2011 9-46-41 PM"></a></p>
<p>Rồi bấm nút <strong>Update Profile</strong></p>
<p>Sau cùng, bấm nút Send Certification</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2011/12/3112201195017pm.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2011/12/3112201195017pm.png" alt="31-12-2011 9-50-17 PM" title="31-12-2011 9-50-17 PM"></a></p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2011/12/3112201195206pm.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2011/12/3112201195206pm.png" alt="31-12-2011 9-52-06 PM" title="31-12-2011 9-52-06 PM"></a></p>
<p>Sau khi có thông báo “A Competition Certificate has been sent to your e-mail address” tức là bạn đã đăng ký thành công. Check mail đi bạn Download tập tin đính kèm trong thư.</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2011/12/3112201195517pm.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2011/12/3112201195517pm.png" alt="31-12-2011 9-55-17 PM" title="31-12-2011 9-55-17 PM"></a></p>
<p>Thế là xong</p>
]]></content>
      <categories>
        <category>Imagine Cup</category>
      </categories>
  </entry>
  <entry>
    <title>[C++] Split class and header to separated files with Visual Studio</title>
    <url>//2012/01/04/cpp-split-class-and-header-to-separated-files-with-visual-studio/</url>
    <content><![CDATA[<p>Thói quen của sinh viên là viết Code luôn tuồn trên cùng một file. Khi biên dịch, file đó có kích thước rất lớn, chương trình chạy chậm, dễ phát sinh lỗi, vân vân và vân vân. Vậy làm thế nào để có thể tách các thành phần trong code ra thành những file riêng?</p>
<span id="more"></span>
<ul>
<li>  <a href="#1-kh%C3%B4ng-n%C3%AAn">1. Không nên</a></li>
<li>  <a href="#2-n%C3%AAn">2. Nên</a></li>
<li>  <a href="#3-v%C3%AD-d%E1%BB%A5">3. Ví dụ</a></li>
<li>  <a href="#4-t%C3%A1ch-class-th%C3%A0nh-file-ri%C3%AAng">4. Tách class thành file riêng</a></li>
<li>  <a href="#5-v%E1%BB%81-vi%E1%BB%87c-s%E1%BB%AD-d%E1%BB%A5ng-namespace">5. Về việc sử dụng Namespace</a></li>
</ul>
<p>Nếu bạn chưa có nền tảng về lập trình hướng đối tượng bằng C++, hãy quay lại blog này sớm nhất có thể ngay khi bạn đủ khả năng nhé.</p>
<h1 id="1-Khong-nen"><a href="#1-Khong-nen" class="headerlink" title="1. Không nên"></a>1. Không nên</h1><p>Việc tạo class trong file riêng bắt buộc bạn phải dùng câu lệnh include một thư viện nhiều lần. Trong file riêng và trong chương trình chính</p>
<pre class="line-numbers language-c" data-language="c"><code class="language-c">#include &quot;stdafx.h&quot;
#include &quot;iostream&quot;
using namespace std;</code></pre>

<h1 id="2-Nen"><a href="#2-Nen" class="headerlink" title="2. Nên"></a>2. Nên</h1><p>Không cần phải làm như vậy. Việc include một thư viện trùng lặp sẽ phát sinh lỗi.</p>
<p>Thay vào đó, trong file header của class, hãy thêm câu lệnh sau:</p>
<pre class="line-numbers language-c" data-language="c"><code class="language-c">#ifndef TÊNCLASS_H
#define TÊNCLASS_H

các thư viện cần thiết

các dòng lệnh

#endif</code></pre>

<p>Sau đó, trong hàm main, bạn include thêm file <code>header.h</code> vừa tạo</p>
<h1 id="3-Vi-du"><a href="#3-Vi-du" class="headerlink" title="3. Ví dụ"></a>3. Ví dụ</h1><p>Để giúp các bạn hình dung rõ hơn, bạn có thể xem một số screen shot</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2011/11/0411201174149pm.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2011/11/0411201174149pm.png" alt="04-11-2011 7-41-49 PM" title="04-11-2011 7-41-49 PM"></a></p>
<p>Khai báo tên class trong <code>PhoneNumber.h</code></p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2011/11/0411201174418pm.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2011/11/0411201174418pm.png" alt="04-11-2011 7-44-18 PM" title="04-11-2011 7-44-18 PM"></a></p>
<p>Sau đó, trong file định nghĩa các hàm thành viên của PhoneNumber, ta include thêm file <code>PhoneNumber.h</code></p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2011/11/0411201174544pm.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2011/11/0411201174544pm.png" alt="04-11-2011 7-45-44 PM" title="04-11-2011 7-45-44 PM"></a></p>
<p>Sau cùng là Include nó vào hàm Main. Chương trình sẽ chạy trơn tru</p>
<p>Một cách khác mới hơn, đơn giản hơn (nhưng cũng đòi hỏi trình biên dịch là <a href="http://www.microsoft.com/visualstudio" title="Microsoft Visual Studio">Visual Studio 2005</a> trở lên)</p>
<pre class="line-numbers language-c" data-language="c"><code class="language-c">#pragma once</code></pre>

<p>Thêm dòng này vào đầu của file .h. Nó sẽ thông báo cho trình biên dịch chỉ include các thư viện 1 lần duy nhất.</p>
<h1 id="4-Tach-class-thanh-file-rieng"><a href="#4-Tach-class-thanh-file-rieng" class="headerlink" title="4. Tách class thành file riêng"></a>4. Tách class thành file riêng</h1><p>Để minh họa, tôi sẽ tạo một class MyInt đơn giản, dùng để biểu diễn số nguyên</p>
<p>Đầu tiên, khởi động Visual Studio</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012105758am.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012105758am.png" alt="04-01-2012 10-57-58 AM" title="04-01-2012 10-57-58 AM"></a></p>
<p>Chọn loại Project mong muốn, đặt tên cho nó và nhấn OK</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012105917am.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012105917am.png" alt="04-01-2012 10-59-17 AM" title="04-01-2012 10-59-17 AM"></a></p>
<p>Bấm Finish ở Wizard tạo Project</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012110433am.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012110433am.png" alt="04-01-2012 11-04-33 AM" title="04-01-2012 11-04-33 AM"></a></p>
<p>Sau đó, Visual Studio (VS)</p>
<p>sẽ tạo một project mới cho bạn, với tên bạn đặt và header đã được biên dịch sẵn là stdadx.h</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012110805am.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012110805am.png" alt="04-01-2012 11-08-05 AM" title="04-01-2012 11-08-05 AM"></a></p>
<p>Để thêm mới một class bằng cách thông thường, click phải vào Header Files, chọn Add &gt; New Item…</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012111110am.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012111110am.png" alt="04-01-2012 11-11-10 AM" title="04-01-2012 11-11-10 AM"></a></p>
<p>Chọn Header File</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012111204am.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012111204am.png" alt="04-01-2012 11-12-04 AM" title="04-01-2012 11-12-04 AM"></a></p>
<p>Đặt tên cho nó và nhấn Add</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012111253am.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012111253am.png" alt="04-01-2012 11-12-53 AM" title="04-01-2012 11-12-53 AM"></a></p>
<p>Một file mới hoàn toàn có tên <code>MyInt.h</code> được tạo ra. Đây là file dành cho việc khai báo class MyInt. Bạn cũng có thể định nghĩa class trong file này, nhưng việc đó không được khuyến cáo</p>
<pre class="line-numbers language-c" data-language="c"><code class="language-c">&#x2F;&#x2F; MyInt class declaration

#prama once

#include &quot;stdafx.h&quot;

class MyInt
&#123;
private:
    int data;

public:
    MyInt();
    MyInt(int);
&#125;;</code></pre>

<p>Như bạn có thể thấy, chúng ta sử dụng kỹ thuật <code>#pragma once</code> để tránh include quá nhiều thư viện Tương tự, hãy Add một file MyInt.cpp mới trong thư mục Source Files</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012111801am.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012111801am.png" alt="04-01-2012 11-18-01 AM" title="04-01-2012 11-18-01 AM"></a></p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012111817am.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012111817am.png" alt="04-01-2012 11-18-17 AM" title="04-01-2012 11-18-17 AM"></a></p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012111838am.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012111838am.png" alt="04-01-2012 11-18-38 AM" title="04-01-2012 11-18-38 AM"></a></p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012111908am.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012111908am.png" alt="04-01-2012 11-19-08 AM" title="04-01-2012 11-19-08 AM"></a></p>
<p>Sau đó, hãy định nghĩa các thuộc tính và hàm của lớp <code>MyInt</code> trong file <code>MyInt.cpp</code></p>
<pre class="line-numbers language-c" data-language="c"><code class="language-c">&#x2F;&#x2F; MyInt class definition

#include &quot;stdafx.h&quot;
#include &quot;iostream&quot;
using std::cin;

#include &quot;MyInt.h&quot;

MyInt::MyInt()
    : data(0)
&#123;
&#125;

MyInt::MyInt(int re)
    : data(re)
&#123;
&#125;</code></pre>

<p>Ở dòng 7, vì class <code>MyInt</code> được khai báo ở file header <code>MyInt.h</code>, nên bạn phải include nó vào để sử dụng.</p>
<p>Thế là xong. Có một cách khác để tạo class trong file riêng bằng Wizard của VS. Trong thư mục Header Files, click phải, chọn Add &gt; Class…</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012112720am.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012112720am.png" alt="04-01-2012 11-27-20 AM" title="04-01-2012 11-27-20 AM"></a></p>
<p>Chọn CPP class rồi bấm Add</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012112847am.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012112847am.png" alt="04-01-2012 11-28-47 AM" title="04-01-2012 11-28-47 AM"></a></p>
<p>Trong Wizard mới hiện ra, bạn chỉ cần gõ tên class, tên file header và file source sẽ được tạo tự độn</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012112946am.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012112946am.png" alt="04-01-2012 11-29-46 AM" title="04-01-2012 11-29-46 AM"></a></p>
<p>Bấm Finish, ngay lập tức, 2 file mới sẽ được tạo, có sẵn code và được phân phối và thư mục tương ứn</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012113311am.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012113311am.png" alt="04-01-2012 11-33-11 AM" title="04-01-2012 11-33-11 AM"></a></p>
<p>Code tạo sẵn trong file header MyInt2.h</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012113208am.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012113208am.png" alt="04-01-2012 11-32-08 AM" title="04-01-2012 11-32-08 AM"></a></p>
<p>Code tạo sẵn trong file source MyInt2.cpp</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012113512am.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/04012012113512am.png" alt="04-01-2012 11-35-12 AM" title="04-01-2012 11-35-12 AM"></a></p>
<p>Như vậy, tất cả công việc ta làm bằng tay đều được VS làm tự động, nhưng nó sinh ra một số code dư thừa. Nhiều lập trình viên không thích điều này, họ vẫn thích tự tạo class file cho mình hơn.</p>
<h1 id="5-Ve-viec-su-dung-Namespace"><a href="#5-Ve-viec-su-dung-Namespace" class="headerlink" title="5. Về việc sử dụng Namespace"></a>5. Về việc sử dụng Namespace</h1><p>Như đã nói ở trên, lập trình hướng đối tượng với VC++ 2010, sinh viên thường <code>#include</code> rất nhiều thư viện dư thừa, rồi sau đó <code>using namespace std;</code> Điều đó không cần thiết. Trong namespace <code>std</code>, tức <code>STANDARD</code>, có rất nhiều hàm xây dựng sẵn mà bạn không cần dùng. Dùng hàm nào, bạn khai báo hàm đó. Ví dụ như hình trên, tôi dùng hàm <code>cout</code>, <code>cin</code>, <code>endl</code> nên chỉ khai báo 3 hàm đó thôi.</p>
<pre class="line-numbers language-c" data-language="c"><code class="language-c">#include &quot;stdafx.h&quot;
#include &quot;iostream&quot;
using std::cout;
using std::cin;
using std::endl;</code></pre>

<p>3 hàm này nằm trong thư viện iostream Một số thư viện thường dùng:</p>
<ul>
<li>  <code>stdafx.h</code> – tiêu chuẩn cho VC++ 2010</li>
<li>  <code>iostream</code> – chứa các hàm <code>cout</code>, <code>cin</code>, <code>endl</code></li>
<li>  <code>string</code> – chứa các hàm xử lý chuỗi</li>
<li>  <code>iomanip</code> – chứa hàm định khoảng cho output (<code>setw</code>, <code>serfill</code>)</li>
<li>  <code>conio.h</code> – chứa hàm <code>getch()</code>. Hàm này thường được dùng để dừng màn hình. Nhưng không nên sử dụng nó.</li>
</ul>
]]></content>
      <categories>
        <category>CPlusPlus</category>
      </categories>
      <tags>
        <tag>class</tag>
        <tag>Header (computing)</tag>
        <tag>Separate class</tag>
        <tag>Source</tag>
        <tag>Visual Studio</tag>
      </tags>
  </entry>
  <entry>
    <title>[IC03] Tạo tài khoản Imagine Cup 2012</title>
    <url>/2012/01/14/ic03/</url>
    <content><![CDATA[<p>Các bước đăng ký một tài khoản đúng tiêu chuẩn cho Imagine Cup 2012</p>
<span id="more"></span>
<p>Bước 1: Truy cập trang Imagine Cup: <a href="http://www.imaginecup.com/">www.imaginecup.com</a>, bấm nút Sign Up</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/1-14-2012-8-40-26-pm.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/1-14-2012-8-40-26-pm.png" alt="1-14-2012 8-40-26 PM" title="1-14-2012 8-40-26 PM"></a></p>
<p>Bước 2: Điền các thông tin tương tự hình dưới</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/1-14-2012-8-46-29-pm.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/1-14-2012-8-46-29-pm.png" alt="1-14-2012 8-46-29 PM" title="1-14-2012 8-46-29 PM"></a></p>
<p>Thay đổi thông tin cho phù hợp với bạn</p>
<p>Lưu ý mục Participant Type: Student và Attending School: Yes</p>
<p>School Name, chọn là University of Information Technology (VNU-HCM City). Nó sẽ hiện ra cho bạn chọn khi đăng gõ</p>
<p>Nhấn nút Register</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/1-14-2012-8-49-10-pm.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/1-14-2012-8-49-10-pm.png" alt="1-14-2012 8-49-10 PM" title="1-14-2012 8-49-10 PM"></a></p>
<p>Vậy là xong.</p>
]]></content>
      <categories>
        <category>Imagine Cup</category>
      </categories>
  </entry>
  <entry>
    <title>[IC04] Đăng ký cho Team của bạn [Dành cho Nhóm trưởng]</title>
    <url>/2012/01/31/ic04/</url>
    <content><![CDATA[<p>Sau khi đăng nhập, vào mục Compete &gt; Chọn phần bạn đã đăng ký thi</p>
<span id="more"></span>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/1-31-2012-8-07-28-pm.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/1-31-2012-8-07-28-pm.png" alt="1-31-2012 8-07-28 PM" title="1-31-2012 8-07-28 PM"></a></p>
<p>Sau đó, bên tay phải, nhấp vào hình dấu + của mục Team để mở nó ra, bấm vào link “Create a Team”</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/1-31-2012-8-10-25-pm.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/1-31-2012-8-10-25-pm.png" alt="1-31-2012 8-10-25 PM" title="1-31-2012 8-10-25 PM"></a></p>
<p>Bạn điền các thông tin cần thiết như hình</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/1-31-2012-8-12-09-pm.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/1-31-2012-8-12-09-pm.png" alt="1-31-2012 8-12-09 PM" title="1-31-2012 8-12-09 PM"></a></p>
<p>Team Name: Tên của Team</p>
<p>Team Info: điền gì tùy thích</p>
<p>Ở cột bên phải, nhấp vào nút hình kính lúp để tìm thành viên</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/1-31-2012-8-13-11-pm.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/1-31-2012-8-13-11-pm.png" alt="1-31-2012 8-13-11 PM" title="1-31-2012 8-13-11 PM"></a></p>
<p>Ở bảng hiện ra, gõ tên các thành viên nhóm bạn hoặc chọn Location Vietnam để lọc lại danh sách</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/1-31-2012-8-14-47-pm.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/1-31-2012-8-14-47-pm.png" alt="1-31-2012 8-14-47 PM" title="1-31-2012 8-14-47 PM"></a></p>
<p>Sau đó tìm ID của thành viên, bấm nút Add to Team</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/1-31-2012-8-16-05-pm.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/1-31-2012-8-16-05-pm.png" alt="1-31-2012 8-16-05 PM" title="1-31-2012 8-16-05 PM"></a></p>
<p>Thế là xong.</p>
<p>Lưu ý: Các bạn được Add vào Team phải chấp nhận lời mời thì Team mới được đăng ký.</p>
]]></content>
      <categories>
        <category>Imagine Cup</category>
      </categories>
  </entry>
  <entry>
    <title>[IC05] Đăng ký tài khoản Mentor</title>
    <url>/2012/03/08/ic05/</url>
    <content><![CDATA[<p>Các bước đăng ký một tài khoản đúng tiêu chuẩn cho Imagine Cup 2012</p>
<span id="more"></span>
<p>Bước 1: Truy cập trang Imagine Cup: <a href="http://www.imaginecup.com/">www.imaginecup.com</a>, bấm nút Sign Up</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/1-14-2012-8-40-26-pm.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/1-14-2012-8-40-26-pm.png" alt="1-14-2012 8-40-26 PM" title="1-14-2012 8-40-26 PM"></a></p>
<p>Bước 2: Điền các thông tin tương tự hình dưới</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/03/3-8-2012-9-07-38-pm.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/03/3-8-2012-9-07-38-pm.png" title="3-8-2012 9-07-38 PM"></a></p>
<p>Thay đổi thông tin cho phù hợp với bạn</p>
<p>Lưu ý mục Participant Type: Mentor</p>
<p>Sau đó, bấm dấu check đồng ý với các điều khoản, điều kiện của cuộc thi</p>
<p>Nhấn nút Register</p>
<p><a href="http://cuoilennaocacban2.files.wordpress.com/2012/01/1-14-2012-8-49-10-pm.png"><img src="http://cuoilennaocacban2.files.wordpress.com/2012/01/1-14-2012-8-49-10-pm.png" alt="1-14-2012 8-49-10 PM" title="1-14-2012 8-49-10 PM"></a></p>
<p>Vậy là xong.</p>
]]></content>
      <categories>
        <category>Imagine Cup</category>
      </categories>
  </entry>
  <entry>
    <title>Microsoft Student Partner [MSP] – for life</title>
    <url>/2013/08/29/microsoft-student-partner-msp-for-life-2/</url>
    <content><![CDATA[<p>Đam mê công nghệ thông tin, từ cấp 3, tôi đã may mắn biết được chương trình Microsoft Student Partner của Microsoft dành cho sinh viên toàn cầu.</p>
<span id="more"></span>
<p>Tham gia MSP, tôi đã có cơ hội học hỏi nhiều thứ, thử sức ở các lĩnh vực vô cùng mới mẻ và hấp dẫn, mà sau này là xu hướng công nghệ. Công nghệ thông tin là một lĩnh vực thay đổi liên tục, phát triển từng ngày. MSP sẽ cho bạn cơ hội để tiếp cận những công nghệ mới nhất, tiên tiến nhất, để từ đó, bạn có thể sáng tạo ra những sản phẩm, những tiện ích vô cùng độc đáo.</p>
<p>Chương trình MSP thường xuyên tổ chức các Workshop về kỹ thuật lập trình, cũng như những buổi training kỹ năng mềm, các buổi chia sẻ. Tôi đã tham dự nhiều buổi như vậy, ví dụ như Workshop lập trình ứng dụng Windows Phone, training kỹ năng trình bày, buổi chia sẻ YouthSpark với các giám đốc Microsoft khu vực diễn ra gần đây.</p>
<p>Nếu bạn đang lo lắng công nghệ của Microsoft là một công nghệ đóng, phải tốn chi phí, bạn đã hoàn toàn sai lầm. Đối với sinh viên, Microsoft có chương trình hỗ trợ MS DreamSpark, cung cấp bản quyền phần mềm miễn phí cho sinh viên các trường đại học – cao đẳng đào tạo công nghệ thông tin trên toàn thế giới. Là MSP, tôi còn được cấp thêm một tài khoản MSDN Subscription, bao gồm bản quyền tất cả phần mềm thương mại của Microsoft, kèm với các lợi ích như được ưu tiên phát hành các phần mềm mới, ưu tiên tham dự các hội thảo do Microsoft tổ chức, hàng tháng nhận các tạp chí về công nghệ và lập trình miễn phí.</p>
<p>Có thể nói, MSP là tập hợp các bạn sinh viên có đam mê, nhiệt huyết và thường rất giỏi trong lĩnh vực của mình. Tham gia MSP, tôi đã được gặp gỡ và tiếp xúc với những bậc đàn anh, cũng như học hỏi từ họ, từ đó, nâng cao kiến thức, kỹ năng của mình.</p>
<p>Hằng năm, Microsoft tổ chức nhiều buổi hội thảo, các khóa đào tạo công nghệ. Là một MSP, tôi được ưu tiên mời tham dự các sự kiện chỉ dành cho đối tác và các chuyên gia kỹ thuật này.</p>
<p>Microsoft cũng tổ chức các chuyến team building dành cho MSP hai miền nam bắc. Năm 2012, MSPs Việt Nam đã có một chuyến đi đáng nhớ tại Đà Nẵng</p>
<p><img src="http://cuoilennaocacban2.files.wordpress.com/2013/08/082913_1112_microsoftst1.jpg"></p>
]]></content>
      <categories>
        <category>Others</category>
      </categories>
  </entry>
  <entry>
    <title>Windows Phone 7 Chooser</title>
    <url>/2013/09/02/windows-phone-7-chooser/</url>
    <content><![CDATA[<p>Windows Phone có nhiều tài nguyên để bạn tận dụng, carmera này, danh bạ này, hình ảnh này, blah blah blah. Làm sao để sử dụng những tài nguyên này trong ứng dụng Windows Phone của bạn?</p>
<span id="more"></span>
<p>Có một cách: Windows Phone Chooser API. Nó sẽ giúp cho bạn truy cập các tài nguyên này một cách đơn giản và hiệu quả</p>
<p>Đây là danh sách các chooser của WP</p>
<ul>
<li>  CameraCaptureTask – kích hoạt camera để chụp hình, trả về hình (tất nhiên)</li>
<li>  EmailAddressChooserTask – kích hoạt ‘Contacts’, trả về địa chỉ email của contact đã chọn</li>
<li>  PhoneNumberChooserTask – như trên, nhưng trả về số điện thoại</li>
<li>  PhotoChooserTask – kích hoạt Photo, trả về hình đã chọn</li>
<li>  SaveEmailAddressTask - Kích hoạt ‘Contact’ và cho phép bạn gắn địa chỉ email vào một contact nào đó. Trả về giá trị xác định có thành công hay ko.</li>
<li>  SavePhoneNumberTask – Như trên, nhưng mà cho phép bạn gắn số điện thoại :3</li>
</ul>
<p>Xài làm sao?</p>
<p>Tùy vào từng Task sẽ có từng cách xài riêng, bạn tự google nhé. Hiện tại chưa kịp viết :3 Sẽ edit bài này sau</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows Phone</category>
      </categories>
      <tags>
        <tag>chooser</tag>
        <tag>windows phone</tag>
      </tags>
  </entry>
  <entry>
    <title>[04-09-2013] Dreamspark - Cách gia hạn tài khoản hoặc lấy Registration Code</title>
    <url>/2013/09/04/dreamspark-gia-han-ti-khoan-hoac-lay-registration-code/</url>
    <content><![CDATA[<p>Nếu bạn chưa có tài khoản Windows Store Dev hoặc Windows Phone Dev, bạn có thể đăng ký 1 cái</p>
<p>Lưu ý: yêu cầu phải có thẻ visa</p>
<p>Sau khi đăng ký, sẽ tới bước trả phí cho tài khoản. Phí là $ 99 / 1 năm. Nhưng nếu là sinh viên UIT, bạn sẽ được đăng ký miễn phí mà ko mất khoản phí này.</p>
<span id="more"></span>
<p>Bước 1: Vào địa chỉ sau:</p>
<p><a href="https://www.dreamspark.com/Student/Windows-Store-Access.aspx">https://www.dreamspark.com/Student/Windows-Store-Access.aspx</a></p>
<p><a href="http://www.flickr.com/photos/28322228@N04/9670314545/"><img src="http://cuoilennaocacban2.files.wordpress.com/2013/09/0409201332445pm.png" alt="04-09-2013 3-24-45 PM" title="04-09-2013 3-24-45 PM"></a></p>
<p>Bước 2: Nhấn vào nút Verify Now</p>
<p>[<img src="http://cuoilennaocacban2.files.wordpress.com/2013/09/0409201332539pm8.png" alt="04-09-2013 3-25-39 PM[8]" title="04-09-2013 3-25-39 PM[8]">](<a href="http://www.flickr.com/photos/28322228@N04/9670335057/">http://www.flickr.com/photos/28322228@N04/9670335057/</a>)</p>
<p>Chọn I Do not have a DreamSpark account</p>
<p><a href="http://www.flickr.com/photos/28322228@N04/9670339423/"><img src="http://cuoilennaocacban2.files.wordpress.com/2013/09/0409201332603pm.png" alt="04-09-2013 3-26-03 PM" title="04-09-2013 3-26-03 PM"></a></p>
<p>Điền thông tin. Ở mục Country chọn Vietnam nhé ban. Sẽ có lợi cho bạn sau này</p>
<p><a href="http://www.flickr.com/photos/28322228@N04/9670345477/"><img src="http://cuoilennaocacban2.files.wordpress.com/2013/09/0409201332755pm.png" alt="04-09-2013 3-27-55 PM" title="04-09-2013 3-27-55 PM"></a></p>
<p>Chờ nó một tí</p>
<p><a href="http://www.flickr.com/photos/28322228@N04/9670352403/"><img src="http://cuoilennaocacban2.files.wordpress.com/2013/09/0409201332941pm.png" alt="04-09-2013 3-29-41 PM" title="04-09-2013 3-29-41 PM"></a></p>
<p><a href="http://www.flickr.com/photos/28322228@N04/9673582136/"><img src="http://cuoilennaocacban2.files.wordpress.com/2013/09/0409201333016pm.png" alt="04-09-2013 3-30-16 PM" title="04-09-2013 3-30-16 PM"></a></p>
<p>Gõ tên trường mình vào rồi chọn nhé. Nó sẽ tự kiếm cho mình</p>
<p><a href="http://www.flickr.com/photos/28322228@N04/9670358251/"><img src="http://cuoilennaocacban2.files.wordpress.com/2013/09/0409201333112pm.png" alt="04-09-2013 3-31-12 PM" title="04-09-2013 3-31-12 PM"></a></p>
<p>Nhập địa chỉ mail gm.uit.edu.vn vào</p>
<p><a href="http://www.flickr.com/photos/28322228@N04/9673589480/"><img src="http://cuoilennaocacban2.files.wordpress.com/2013/09/0409201333150pm.png" alt="04-09-2013 3-31-50 PM" title="04-09-2013 3-31-50 PM"></a></p>
<p>Check mail</p>
<p><a href="http://www.flickr.com/photos/28322228@N04/9670366271/"><img src="http://cuoilennaocacban2.files.wordpress.com/2013/09/0409201333306pm.png" alt="04-09-2013 3-33-06 PM" title="04-09-2013 3-33-06 PM"></a></p>
<p>Làm theo hướng dẫn trong mail</p>
<p><a href="http://www.flickr.com/photos/28322228@N04/9673593868/"><img src="http://cuoilennaocacban2.files.wordpress.com/2013/09/0409201333339pm.png" alt="04-09-2013 3-33-39 PM" title="04-09-2013 3-33-39 PM"></a></p>
<p><a href="http://www.flickr.com/photos/28322228@N04/9670372137/"><img src="http://cuoilennaocacban2.files.wordpress.com/2013/09/0409201333400pm.png" alt="04-09-2013 3-34-00 PM" title="04-09-2013 3-34-00 PM"></a></p>
<p>Status đã trở thành Verified. Bạn nhấn Get Code Now</p>
<p><a href="http://www.flickr.com/photos/28322228@N04/9673600080/"><img src="http://cuoilennaocacban2.files.wordpress.com/2013/09/0409201333528pm.png" alt="04-09-2013 3-35-28 PM" title="04-09-2013 3-35-28 PM"></a></p>
<p><a href="http://www.flickr.com/photos/28322228@N04/9673604352/"><img src="http://cuoilennaocacban2.files.wordpress.com/2013/09/0409201333556pm.png" alt="04-09-2013 3-35-56 PM" title="04-09-2013 3-35-56 PM"></a></p>
<p>Nhập code bạn có vào ô Registration Code, nhấn Update total</p>
<p><a href="http://www.flickr.com/photos/28322228@N04/9670379429/"><img src="http://cuoilennaocacban2.files.wordpress.com/2013/09/0409201333628pm.png" alt="04-09-2013 3-36-28 PM" title="04-09-2013 3-36-28 PM"></a></p>
<p>Xong. Đã thành miễn phí nhé</p>
<p><a href="http://www.flickr.com/photos/28322228@N04/9670383941/"><img src="http://cuoilennaocacban2.files.wordpress.com/2013/09/0409201333726pm.png" alt="04-09-2013 3-37-26 PM" title="04-09-2013 3-37-26 PM"></a></p>
<p><a href="http://www.flickr.com/photos/28322228@N04/9670386771/"><img src="http://cuoilennaocacban2.files.wordpress.com/2013/09/0409201333840pm.png" alt="04-09-2013 3-38-40 PM" title="04-09-2013 3-38-40 PM"></a></p>
<p><a href="http://www.flickr.com/photos/28322228@N04/9670388069/"><img src="http://cuoilennaocacban2.files.wordpress.com/2013/09/0409201333958pm.png" alt="04-09-2013 3-39-58 PM" title="04-09-2013 3-39-58 PM"></a></p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows Store App</category>
      </categories>
      <tags>
        <tag>account</tag>
        <tag>dev center</tag>
        <tag>store</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows Phone – Silverlight: Khác nhau giữa “resource&quot; và “content&quot;</title>
    <url>/2013/09/07/wp-sl-khac-nhau-resource-content/</url>
    <content><![CDATA[<p>Mọi thứ có trong project folder, ta đều phải lựa chọn: Resource hay Content? Bài viết này sẽ nói về sự khác biệt giữa 2 thể loại này, cũng như lợi/hại của từng loại</p>
<span id="more"></span>
<ul>
<li>  <a href="#1-kh%C3%A1c-nhau">1. Khác nhau</a></li>
<li><a href="#2-truy-xu%E1%BA%A5t">2. Truy xuất</a><ul>
<li>  <a href="#21-h%C3%ACnh-%E1%BA%A3nh-thu%E1%BB%99c-t%C3%ADnh-content">2.1. Hình ảnh thuộc tính Content</a></li>
<li>  <a href="#22-h%C3%ACnh-%E1%BA%A3nh-thu%E1%BB%99c-t%C3%ADnh-resource">2.2. Hình ảnh thuộc tính Resource</a></li>
</ul>
</li>
<li>  <a href="#3-ch%E1%BB%8Dn-c%C3%A1i-n%C3%A0o">3. Chọn cái nào</a></li>
</ul>
<h1 id="1-Khac-nhau"><a href="#1-Khac-nhau" class="headerlink" title="1. Khác nhau"></a>1. Khác nhau</h1><p>khác biệt chính là Resource được kèm vào trong file dll, trong khi đó, Content lại trở thành một file riêng, đi kèm với file dll.</p>
<p>Bạn tự hỏi, vậy Isolated Storage là gì. Đừng nhầm lẫn, Isolated Storage lại là một khái niệm khác, một bộ nhớ độc lập được tạo ra khi bạn cài đặt ứng dụng</p>
<p>Hãy làm một bài test nhỏ. Tạo một project Silverlight (Windows Phone cho dễ :3 ), thêm vào vài cái hình. Rồi chọn resource cho một số hình, và content cho các hình còn lại. Build file XAP. Đổi tên file XAP thành ZIP, giải nén nó ra. Bạn sẽ thấy, những file có thuộc tính content thì nằm ngay bên ngoài. Những file Resource thì đã được nhúng kèm trong dll, nên chúng ta ko thấy nữa.</p>
<h1 id="2-Truy-xuat"><a href="#2-Truy-xuat" class="headerlink" title="2. Truy xuất"></a>2. Truy xuất</h1><p>Truy xuất tới các file resource và content khác nhau một tí</p>
<h2 id="2-1-Hinh-anh-thuoc-tinh-Content"><a href="#2-1-Hinh-anh-thuoc-tinh-Content" class="headerlink" title="2.1. Hình ảnh thuộc tính Content"></a>2.1. Hình ảnh thuộc tính Content</h2><p>Content là một file nằm riêng biệt, nên truy xuất dễ dàng:</p>
<p>XAML:</p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">&lt;Image Stretch&#x3D;&quot;None&quot; Source&#x3D;&quot;&#x2F;images&#x2F;yourImage.png&quot;&#x2F;&gt;</code></pre>

<p>C#:</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">Uri uri &#x3D; new Uri(&quot;&#x2F;images&#x2F;yourImage.png&quot;, UriKind.Relative);
BitmapImage imgSource &#x3D; new BitmapImage(uri);</code></pre>

<h2 id="2-2-Hinh-anh-thuoc-tinh-Resource"><a href="#2-2-Hinh-anh-thuoc-tinh-Resource" class="headerlink" title="2.2. Hình ảnh thuộc tính Resource"></a>2.2. Hình ảnh thuộc tính Resource</h2><p>Resource, vì nằm trong một file dll, nên truy xuất nó khó khăn hơn nhiều</p>
<p>XAML:</p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">&lt;Image Source&#x3D;&quot;&#x2F;TestProjet;component&#x2F;images&#x2F;yourImage.png&quot;&#x2F;&gt;</code></pre>

<p>C#:</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">Uri uri &#x3D; new Uri(&quot;&#x2F;TestProjet;component&#x2F;images&#x2F;yourImage.png&quot;, UriKind.Relative);
this.Image.Source &#x3D; new BitmapImage(uri);</code></pre>

<h1 id="3-Chon-cai-nao"><a href="#3-Chon-cai-nao" class="headerlink" title="3. Chọn cái nào"></a>3. Chọn cái nào</h1><p>Hiểu rồi, giờ bạn sẽ chọn cái nào cho các file thêm vào project?</p>
<p>Một file Resource sẽ load nhanh hơn khi bạn truy xuất nó. Tuy nhiên, ứng dụng sẽ khởi động chậm hơn. Và ngược lại, một file Content sẽ load chậm hơn, bù lại, ứng dụng sẽ không phải load file này vào bộ nhớ trong lúc đang khởi động.</p>
<p>Nếu bạn cần truy xuất một file rất lớn, mà ứng dụng chưa cần ngay, hay chọn ngay Content. Ngược lại, nếu ứng dụng của bạn cần load file đó ngay khi chạy (ví dụ như Wallpaper chẳng hạn), thì lời khuyên là nên chọn Resource cho nó, vì đằng nào bạn cũng phải load nó lên.</p>
<p>Chọn Resource sẽ giảm thiểu hiện tượng ứng dụng load lên được mấy phần trăm giây thì bỗng nhiên Background Image “xuất hiện”</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows Phone</category>
      </categories>
      <tags>
        <tag>windows phone</tag>
        <tag>content</tag>
        <tag>file</tag>
        <tag>project</tag>
        <tag>resource</tag>
      </tags>
  </entry>
  <entry>
    <title>[Windows Phone – Silverlight] Uniform to fill, centered</title>
    <url>/2013/09/12/windows-phone-silverlight-uniform-to-fill-centered/</url>
    <content><![CDATA[<p>Hiển thị hình ảnh trong các ứng dụng Silverlight, bạn thường sử dụng Image Control.</p>
<p>Image Control có một số thuộc tính về hiển thị như Stretch, Fill, Uniform, UniformToFill. Uniform To Fill sẽ mở rộng tấm hình ra cho vừa kích thước của control, và thực tế là nó cắt mất một góc trái trên của tấm hình, cho ta có cảm giác như tấm hình được canh giữa</p>
<p><img src="http://cuoilennaocacban2.files.wordpress.com/2013/09/steeve2.png" alt="perfect"></p>
<p>Làm sao đạt được tấm hình “Tuyệt vời”</p>
<span id="more"></span>
<h1 id="Stretch-Property"><a href="#Stretch-Property" class="headerlink" title="Stretch Property"></a>Stretch Property</h1><p>Image Control có 4 trạng thái của Stretch Property (Hình minh họa)</p>
<ul>
<li>  <strong>None:</strong> không resize hình</li>
<li>  <strong>Fill:</strong> Hình bị scale lại để vừa với kích thước control</li>
<li>  <strong>Uniform:</strong> Hình cũng bị Scale lại, nhưng giữ nguyên tỷ lệ</li>
<li>  <strong>Uniform To Fill:</strong> Hình bị scale, giữ nguyên tỷ lệ và fill đầy control. Nếu control có tỷ lệ khác với Image, một phần góc trái và góc phải sẽ bị cắt mất</li>
</ul>
<h1 id="Giai-phap"><a href="#Giai-phap" class="headerlink" title="Giải pháp"></a>Giải pháp</h1><p>Thêm một Border bọc ngoài Image Control</p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">&lt;border Width&#x3D;&quot;200&quot; Height&#x3D;&quot;200&quot;&gt; 
  &lt;Image Source&#x3D;&quot;&#x2F;your_source&quot; Stretch&#x3D;&quot;UniformToFill&quot;&gt; 
&lt;&#x2F;border&gt;</code></pre>

<p>Ngay khi thêm border, bạn sẽ thấy nó hiển thị một kết quả như khi không có border. Cũng như ko =.=</p>
<p>Tuy nhiên, Image control sẽ bị giới hạn bởi Border bọc bên ngoài nó có kích thước nhất định.</p>
<p>Bây giờ, bạn có thể canh chỉnh bằng thuộc tính HorizontalAlignment và VerticalAlignment để chỉnh vị trí của ImageControl. Áp dụng “Center” cho cả hai, bạn sẽ có tấm hình “Tuyệt vời”</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows Phone</category>
      </categories>
      <tags>
        <tag>centered image</tag>
        <tag>stretch</tag>
        <tag>uniform</tag>
        <tag>uniformtofill</tag>
      </tags>
  </entry>
  <entry>
    <title>[Windows Phone] Windows Phone Power Tools – the best way to work with Isolated Storage</title>
    <url>/2013/09/14/windows-phone-windows-phone-power-tools-the-best-way-to-work-with-isolated-storage/</url>
    <content><![CDATA[<p>Isolated Storage là một vùng nhớ trên Windows Phone, đúng như tên gọi của nó, đã bị Isolated (Cô lập). Cô lập tức là ứng dụng khác không thể truy cập vào nó, và bạn cũng không thể truy cập vào ứng dụng khác (trừ phi bạn có quyền root, chỉ dành cho Lumia 710 cooked room)</p>
<p>Vậy trong lúc phát triển app, làm sao để truy cập vùng nhớ này trực quan, sinh động và dễ dàng?</p>
<span id="more"></span>
<p>Có một cách, và theo mình, cách này là hay nhất, vô cùng trực quan, sinh động và thao tác dễ dàng. Bạn không cần phải gõ bất kỳ dòng lệnh nào để chạy nó so với Isolated Storage Explorer Tool</p>
<ul>
<li>  <a href="#1-c%C3%A0i-%C4%91%E1%BA%B7t">1. Cài đặt</a></li>
<li><a href="#2-s%E1%BB%AD-d%E1%BB%A5ng">2. Sử dụng</a><ul>
<li>  <a href="#21-install--update">2.1. Install | Update</a></li>
<li>  <a href="#22-dev-apps">2.2. Dev Apps</a></li>
<li>  <a href="#23-guild">2.3. Guild</a></li>
<li>  <a href="#24-name">2.4. Name</a></li>
<li>  <a href="#25-isolated-storage">2.5. Isolated Storage</a></li>
<li>  <a href="#26-n%C3%BAt-get">2.6. Nút Get</a></li>
<li>  <a href="#27-n%C3%BAt-put-file">2.7. Nút Put File</a></li>
<li>  <a href="#28-n%C3%BAt-put-directory">2.8. Nút Put Directory</a></li>
<li>  <a href="#29-n%C3%BAt-delete">2.9. Nút Delete</a></li>
<li>  <a href="#210-profile-beta">2.10. Profile (Beta)</a></li>
<li>  <a href="#211-gi%E1%BA%A3i-ph%C3%A1p">2.11. Giải pháp</a></li>
</ul>
</li>
<li>  <a href="#3-k%E1%BA%BFt-lu%E1%BA%ADn">3. Kết luận</a></li>
</ul>
<h1 id="1-Cai-dat"><a href="#1-Cai-dat" class="headerlink" title="1. Cài đặt"></a>1. Cài đặt</h1><p>Tải và cài tại: <a href="http://wptools.codeplex.com/">Windows Phone Power Tools on CodePlex</a></p>
<h1 id="2-Su-dung"><a href="#2-Su-dung" class="headerlink" title="2. Sử dụng"></a>2. Sử dụng</h1><p>Mở một project Windows Phone bất kỳ, Run with Emulator (hoặc Device)</p>
<p><a href="http://www.flickr.com/photos/28322228@N04/9739566696/"><img src="http://cuoilennaocacban2.files.wordpress.com/2013/09/14-09-2013-10-47-34-am.png" alt="14-09-2013 10-47-34 AM" title="14-09-2013 10-47-34 AM"></a></p>
<p>Bạn phải chờ cho ứng dụng bắt đầu chạy trên Emulator hoặc device, sau đó quay lại Power Tools Nhấn Connect, nhớ chọn đúng thiết bị bạn đang build project</p>
<p><a href="http://www.flickr.com/photos/28322228@N04/9737431929/"><img src="http://cuoilennaocacban2.files.wordpress.com/2013/09/14-09-2013-11-04-20-am.png" alt="14-09-2013 11-04-20 AM" title="14-09-2013 11-04-20 AM"></a></p>
<p>Thế là xong</p>
<h2 id="2-1-Install-Update"><a href="#2-1-Install-Update" class="headerlink" title="2.1. Install | Update"></a>2.1. Install | Update</h2><p>Phần này cho phép bạn cài đặt một app mới hoặc cập nhật một app sẵn có trên thiết bị. Tất cả mọi thứ bạn cần là Emulator đang chạy (hoặc thiết bị đang được kết nối), file XAP của ứng dụng. Đối với Windows Phone 7, bạn cần có Zune. Bạn chỉ được cài đặt các app chưa được ký bởi store (App ký rồi sẽ ko cài được). Và bạn chỉ được cập nhật các app đang develop</p>
<h2 id="2-2-Dev-Apps"><a href="#2-2-Dev-Apps" class="headerlink" title="2.2. Dev Apps"></a>2.2. Dev Apps</h2><p><a href="http://www.flickr.com/photos/28322228@N04/9739591682/"><img src="http://cuoilennaocacban2.files.wordpress.com/2013/09/14-09-2013-11-07-46-am.png" alt="14-09-2013 11-07-46 AM" title="14-09-2013 11-07-46 AM"></a></p>
<p>Mục này cho phép bạn tùy chỉnh nhiều thứ về ứng dụng đang được develop trên thiết bị.</p>
<h2 id="2-3-Guild"><a href="#2-3-Guild" class="headerlink" title="2.3. Guild"></a>2.3. Guild</h2><p>Guild là mã số của ứng dụng của bạn. Mỗi ứng dụng có một số Guild riêng. Và số này sẽ bị ghi đè khi upload và verified trên store</p>
<h2 id="2-4-Name"><a href="#2-4-Name" class="headerlink" title="2.4. Name"></a>2.4. Name</h2><p>Tên của ứng dụng của bạn. Bạn có thể chỉnh sửa nó để dễ nhìn hơn khi sử dụng Power Tools để dev nhiều app cùng lúc</p>
<p><a href="http://www.flickr.com/photos/28322228@N04/9739602720/"><img src="http://cuoilennaocacban2.files.wordpress.com/2013/09/14-09-2013-11-10-52-am.png" alt="14-09-2013 11-10-52 AM" title="14-09-2013 11-10-52 AM"></a></p>
<p><a href="http://www.flickr.com/photos/28322228@N04/9737458719/"><img src="http://cuoilennaocacban2.files.wordpress.com/2013/09/14-09-2013-11-11-42-am.png" alt="14-09-2013 11-11-42 AM" title="14-09-2013 11-11-42 AM"></a></p>
<p>Nhấn Enter sau khi đổi tên, Ứng dụng của bạn đã có tên mới.</p>
<p>Bạn phải connect lại một lần nữa tới thiết bị để hiển thị thay đổi này trong Isolated Storage. Nhấn vào nút <code>Connect to a device</code> bên trên cùng của Power Tools và chọn Connect lại</p>
<h2 id="2-5-Isolated-Storage"><a href="#2-5-Isolated-Storage" class="headerlink" title="2.5. Isolated Storage"></a>2.5. Isolated Storage</h2><p><a href="http://www.flickr.com/photos/28322228@N04/9739619928/"><img src="http://cuoilennaocacban2.files.wordpress.com/2013/09/14-09-2013-11-14-05-am.png" alt="14-09-2013 11-14-05 AM" title="14-09-2013 11-14-05 AM"></a></p>
<p>Thành phần chính của Power Tools</p>
<blockquote>
<p>Nếu bạn vẫn thấy ứng dụng của mình là dãy số Guild sau khi đổi tên ở mục Dev Apps, hãy nhấn <code>connect to a device</code> ở trên thanh tiêu đề, kết nối lại với emulator hoặc device, bạn sẽ thấy tên ứng dụng thay đổi đúng như mong muốn</p>
</blockquote>
<p>Đây chính là Isolated Storage của ứng dụng bạn đang chạy trên máy. Isolated Storage này phản ánh chính xác mọi thứ bạn đang có trên bộ nhớ thật, theo một cấu trúc thư mục. Nhấn vào một file hoặc folder bất kỳ, thông tin của nó sẽ hiện ra</p>
<p><a href="http://www.flickr.com/photos/28322228@N04/9739643620/"><img src="http://cuoilennaocacban2.files.wordpress.com/2013/09/14-09-2013-11-15-59-am.png" alt="14-09-2013 11-15-59 AM" title="14-09-2013 11-15-59 AM"></a></p>
<h2 id="2-6-Nut-Get"><a href="#2-6-Nut-Get" class="headerlink" title="2.6. Nút Get"></a>2.6. Nút Get</h2><p>nút get cho phép bạn lấy file bạn đang chọn, và lưu nó trên máy tính. Bạn cũng có thể double click một file để mở nó trực tiếp, nhưng đó chỉ là một bản copy của file bạn đang chọn trong Isolated Storage, mọi thao tác chỉnh sửa đối với file này sẽ không được lưu lại trong Isolated Storage</p>
<h2 id="2-7-Nut-Put-File"><a href="#2-7-Nut-Put-File" class="headerlink" title="2.7. Nút Put File"></a>2.7. Nút Put File</h2><p>nút này cho phép bạn “đặt” một file vào trong Isolated Storage. Chính xác hơn là copy một file từ máy tính vào Isolated Storage. Tùy chọn Overwrite Existing sẽ ghi đè file trùng tên</p>
<h2 id="2-8-Nut-Put-Directory"><a href="#2-8-Nut-Put-Directory" class="headerlink" title="2.8. Nút Put Directory"></a>2.8. Nút Put Directory</h2><p>như nút put file, nhưng thực hiện cho cả một thư mục</p>
<h2 id="2-9-Nut-Delete"><a href="#2-9-Nut-Delete" class="headerlink" title="2.9. Nút Delete"></a>2.9. Nút Delete</h2><p>Xóa một file ra khỏi Isolated Storage. Bạn không thể phục hồi nó. Hãy cân nhắc trước khi xóa. Lưu một bản sao của chúng trên máy tính</p>
<h2 id="2-10-Profile-Beta"><a href="#2-10-Profile-Beta" class="headerlink" title="2.10. Profile (Beta)"></a>2.10. Profile (Beta)</h2><p>công cụ này, theo nhà phát triển, sẽ giúp bạn đánh giá ứng dụng của mình. Theo thử nghiệm của tôi, nó hoạt động ko được tốt lắm.</p>
<ul>
<li>  Đòi quyền quản trị –&gt; đã cấp quyền quản trị</li>
<li>  Yêu cầu khởi động lại Power Tools –&gt; đã làm</li>
</ul>
<p>Trong quá trình thử nghiệm, Power Tool bị lỗi và ko thể khởi động lại được. Khi cài lại, không có thiết bị nào trong danh sách để kết nối.</p>
<h2 id="2-11-Giai-phap"><a href="#2-11-Giai-phap" class="headerlink" title="2.11. Giải pháp"></a>2.11. Giải pháp</h2><p>Gỡ bỏ &gt; Cài đặt lại &gt; Tắt Emulator / Ngắt kết nối thiết bị &gt; Chạy lại Emulator / Kết nối lại</p>
<h1 id="3-Ket-luan"><a href="#3-Ket-luan" class="headerlink" title="3. Kết luận"></a>3. Kết luận</h1><p>Power Tools, theo tôi là công cụ tốt nhất để thao tác với Isolated Storage, nhưng công cụ Profile của nó có một số lỗi khó chịu. Ngoài lỗi này ra, tất cả đều tuyệt vời</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows Phone</category>
      </categories>
      <tags>
        <tag>windows phone</tag>
        <tag>isolated storage</tag>
        <tag>power tools</tag>
      </tags>
  </entry>
  <entry>
    <title>[Windows Phone] Input Scope</title>
    <url>/2013/09/18/windows-phone-input-scope/</url>
    <content><![CDATA[<p>Trong Windows Phone, bạn có một tính năng rất hay gọi là “Input Scope”</p>
<p>Nếu đã dùng thử Android, bạn sẽ thấy nó cố gắng nhồi nhét thật nhiều thứ vào bàn phím ảo, dẫn tới việc bạn dễ bị bấm nhầm từ không mong muốn.</p>
<span id="more"></span>
<p>Windows Phone giải quyết việc thiếu không gian này bằng các Input Scope, chỉ hiển thị các ký tự cần thiết khi nhập một cái gì đó lên màn hình.</p>
<p><img src="http://farm8.staticflickr.com/7433/9796093016_baa65fbbae_o.jpg" alt="keyboard"></p>
<p>Giả sử, bạn muốn nhập một địa chỉ email. Các nút “@” và “.” sẽ hiển thị lên bàn phím ảo</p>
<p>Tương tự, bạn muốn nhập một số điện thoại, bàn phím sẽ chuyển về dạng bàn phím số.</p>
<p>Để thiết lập Input Scope cho một input control (TextBox), rất đơn giản.</p>
<p><img src="http://farm8.staticflickr.com/7437/9796016076_d007a63394_o.png" alt="inputcontrol"></p>
<p>Chọn cho mình một InputScope phù hợp, và ứng dụng của bạn sẽ được người dùng đánh giá cao, vì tiết kiệm cho họ một khoảng thời gian nho nhỏ.</p>
<p>Có nhiều Input Scope không thay đổi bàn phím ảo, nhưng có một số tính năng tiện dụng:</p>
<ul>
<li>  PersonalFullName: Tự động đổi sang ký tự in hoa cho chữ cái đầu tiên của mỗi từ</li>
<li>  Password: nhập password</li>
<li>  DateMonthName: Tên của tháng</li>
<li>  Digits: Số, có thập phân</li>
<li>  Email các loại: hiển thị thêm ký tự @</li>
</ul>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows Phone</category>
      </categories>
      <tags>
        <tag>windows phone</tag>
        <tag>input</tag>
        <tag>input scope</tag>
        <tag>scope</tag>
        <tag>textbox</tag>
      </tags>
  </entry>
  <entry>
    <title>[Windows Phone 8] No Windows Phone 8 Device connected – Why and How to fix this?</title>
    <url>/2013/09/22/windows-phone-8-no-windows-phone-8-device-connected-why-and-how-to-fix-this/</url>
    <content><![CDATA[<p>Nhiều tính năng của Windows Phone đòi hỏi ta phải có 1 cái máy thiệt để test (NFC, Pinch Zoom). Hoặc là sau cùng, ta cũng cần 1 cái máy thiệt để xem ứng dụng hoạt động như thế nào.</p>
<p>Cắm điện thoại vào cổng USB, chọn Device trong Visual Studio. Nhấn chạy. Nhưng:</p>
<p><img src="http://www.f5debug.net/image.axd?picture=image_620.png" alt="bug"></p>
<span id="more"></span>
<ul>
<li>  <a href="#1-nguy%C3%AAn-nh%C3%A2n">1. Nguyên nhân</a></li>
<li>  <a href="#2-tri%E1%BB%87u-ch%E1%BB%A9ng">2. Triệu chứng</a></li>
<li>  <a href="#3-kh%E1%BA%AFc-ph%E1%BB%A5c">3. Khắc phục</a></li>
</ul>
<p>Rõ ràng đã kết nối. Check lại trong Device Manager nào:</p>
<p><img src="http://farm4.staticflickr.com/3711/9867408893_b658aee6fb_o.png" alt="lumia"></p>
<p>Bình thường. Vậy nguyên nhân do đâu?</p>
<h1 id="1-Nguyen-nhan"><a href="#1-Nguyen-nhan" class="headerlink" title="1. Nguyên nhân"></a>1. Nguyên nhân</h1><ol>
<li> <strong>Không đúng ngày giờ:</strong> Ngày giờ trên điện thoại của bạn khác xa so với ngày giờ trên máy tính</li>
<li> <strong>Chưa bật các kết nối:</strong> Thường xảy ra với máy chưa dev unlock. Khi Unlock, điện thoại phải bật các kết nối có sẵn (Wifi / 3G hoặc cả hai) để nó yêu cầu unlock từ phía Microsoft. Nếu không bật các kết nối này, nó sẽ không kết nối được và tất nhiên là không unlock được.</li>
<li> <strong>Sử dụng Windows 8 trên các laptop hoặc Desktop hơi cổ:</strong> Các thể loại Laptop này dùng Intel Chipset 6 Series, hiện tại đang gặp vấn đề về tương thích với Windows 8 trở lên. Các chipset này điều khiển các kết nối USB. Máy hay bị lỗi nhất là các máy có cả cổng USB 3.0 Native và USB 2.0 cũ</li>
<li> <strong>Hư cáp USB:</strong> Cáp USB nếu bị đứt một thành phần nào đó bên trong thì thường dẫn tới kết nối im re không có hiện tượng gì xảy ra. Còn không, có thể cáp bị nhiễu tín hiệu</li>
</ol>
<h1 id="2-Trieu-chung"><a href="#2-Trieu-chung" class="headerlink" title="2. Triệu chứng"></a>2. Triệu chứng</h1><p>Mọi thứ đều bình thường. Bạn có thể thấy thư mục hình ảnh, nhạc, video trong điện thoại. Có thể đồng bộ hóa, copy thêm vào, nhưng tuyệt nhiên không thể deploy một file XAP lên được</p>
<h1 id="3-Khac-phuc"><a href="#3-Khac-phuc" class="headerlink" title="3. Khắc phục"></a>3. Khắc phục</h1><ol>
<li> Cài đặt lại đúng ngày giờ cho trùng với trên máy tính. Máy tính bạn nên bật chức năng tự động cập nhật thời gian để có thời gian chính xác</li>
<li> Mở các kết nối</li>
<li> Disable/Enable các driver bị lỗi của Intel Chipset 6. Nó sẽ hoạt động bình thường trở lại.</li>
</ol>
<p>Sau khi thực hiện các bước trên. Bạn tiếp tục vào Device Manager, uninstall các driver liên quan tới điện thoại của mình (Portable Devices và Unversal Serial Bus devices). Mục đích của bước này là xóa các Registry Key bị lỗi. Nếu không, máy bạn sẽ không bao giờ Deploy được, cho dù có thử như thế nào đi nữa, vì nó sẽ không ghi đè các Registry Key</p>
<ol>
<li> Tiếp tục chuyển sang một cổng USB 2.0 (phòng ngừa tình trạng tính năng Legacy trên USB 3.0 không hoạt động)</li>
<li> Cắm điện thoại vào và chờ nó cài đặt driver</li>
<li> Thử lại vận may của bạn</li>
</ol>
<p>Tôi đã thử, và thành công. Còn bạn?</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows Phone</category>
      </categories>
      <tags>
        <tag>windows phone</tag>
        <tag>deploy</tag>
        <tag>no device</tag>
      </tags>
  </entry>
  <entry>
    <title>[Windows Phone] Simulate the hard key on Emulator</title>
    <url>/2013/09/26/windows-phone-simulate-the-hard-key-on-emulator/</url>
    <content><![CDATA[<p>Windows Phone SDK đi kèm với một chiếc máy ảo tiện lợi: Windows Phone Emulator.</p>
<p>Nhưng nó có 1 điểm phiền toái. Làm thế nào để “bấm” được các phím cứng, ngoài 3 phím mặc định là Back, Start và Search?</p>
<p><img src="https://farm6.staticflickr.com/5452/9950348143_fa7dbf41af_o.png" alt="phone"></p>
<p>Có 1 cách, và nó đã được tích hợp sẵn</p>
<span id="more"></span>
<p>Windows Phone SDK đã tích hợp sẵn rất nhiều phím tắt để bạn có thể giả lập các phím cứng. Dưới đây sẽ là danh sách</p>
<p>Phím</p>
<p>Phím cứng trên điện thoại</p>
<p>Ý nghĩa</p>
<p>F1</p>
<p>Back</p>
<p>Tương đương phím back. Bạn có thể nhấn giữ (hold)</p>
<p>F2</p>
<p>Start</p>
<p>Tương đương phím Start. Có thể hold</p>
<p>F3</p>
<p>Search</p>
<p>F6</p>
<p>Camera Half</p>
<p>Nhấn một nửa phím Camera. Dùng để lấy tiêu cự</p>
<p>F7</p>
<p>Camera Full</p>
<p>Nhấn toàn bộ phím Camera, dùng để chụp hình</p>
<p>F9</p>
<p>Volumn Up</p>
<p>F10</p>
<p>Volumn Down</p>
<p>F12</p>
<p>Power</p>
<p>Phím nguồn. Nhấn để tắt/mở màn hình</p>
<p>ESC</p>
<p>Back</p>
<p>Như F1</p>
<p>PAUSE/BREAK</p>
<p>Toggle Keyboard</p>
<p>Kích hoạt/Ẩn bàn phím cứng. (Cần phân biệt với bàn phím ảo)</p>
<p>PAGE UP</p>
<p>Keyboard Up</p>
<p>Dùng bàn phím ảo</p>
<p>PAGE DOWN</p>
<p>Keyboard Down</p>
<p>Dùng bàn phím máy tính thay cho bàn phím ảo</p>
<p>Một số hình ảnh</p>
<p><img src="https://farm8.staticflickr.com/7323/9950551883_09633fbdf7_o.png" alt="phone"></p>
<p><img src="https://farm4.staticflickr.com/3820/9950411475_fa5201553c_o.png" alt="phone"></p>
<p><img src="http://www.flickr.com/photos/28322228@N04/9950464034/" alt="phone"></p>
<p><img src="https://farm4.staticflickr.com/3771/9950484766_31e96f2b42_o.png" alt="phone"></p>
<p>[youtube=<a href="http://www.youtube.com/watch?v=MprFcKyrTAA&amp;w=448&amp;h=252&amp;hd=1%5C%5D">http://www.youtube.com/watch?v=MprFcKyrTAA&amp;w=448&amp;h=252&amp;hd=1\]</a></p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows Phone</category>
      </categories>
      <tags>
        <tag>windows phone</tag>
        <tag>emulator</tag>
        <tag>keyboard shotcuts</tag>
      </tags>
  </entry>
  <entry>
    <title>[Event][03-10-2013] Seminar Imagine Cup 2014, Microsoft Student Partner, Application Life-Cycle Management at UIT</title>
    <url>/2013/10/03/event03-10-2013-seminar-imagine-cup-2014-microsoft-student-partner-application-life-cycle-management-at-uit/</url>
    <content><![CDATA[<p>Sáng nay, tại phòng A106, trường Đại học Công nghệ thông tin – Đại học Quốc gia Tp.HCM đã diễn ra buổi Seminar đầy tính cởi mở và thân mật giữa các Developer Evengelist của Microsoft Việt Nam và sinh viên của trường</p>
<span id="more"></span>
<h1 id="1-Mo-dau"><a href="#1-Mo-dau" class="headerlink" title="1. Mở đầu"></a>1. Mở đầu</h1><p>Bắt đầu sự kiện, ITIClub đã cho các bạn xem một số đoạn Video đầy thú vị về Microsoft và chương trình MSP, cũng như cuộc thi Imagine Cup các năm</p>
<p>Chương trình Microsoft Student Partner</p>
<p>[youtube=<a href="http://www.youtube.com/watch?v=fYhn7-vWbuI&amp;w=448&amp;h=252&amp;hd=1%5C%5D">http://www.youtube.com/watch?v=fYhn7-vWbuI&amp;w=448&amp;h=252&amp;hd=1\]</a></p>
<p>Chương trình Microsoft Student Partner toàn cầu</p>
<p>Cuộc thi Imagine Cup 2012 – Úc</p>
<p>[youtube=<a href="http://www.youtube.com/watch?v=PHGReiaTdbA&amp;w=448&amp;h=252&amp;hd=1%5C%5D">http://www.youtube.com/watch?v=PHGReiaTdbA&amp;w=448&amp;h=252&amp;hd=1\]</a></p>
<p>Imagine Cup 2012 Kick off</p>
<p>Cuộc thi Imagine Cup 2013 – Nga</p>
<p>Vì giới hạn của Wordpress, bạn vui lòng bấm vào link sau để xem: <a href="http://www.youtube.com/watch?v=-WEwQsTbxC0">Imagine Cup 2013 - Kick off Video</a></p>
<h1 id="2-Bat-dau"><a href="#2-Bat-dau" class="headerlink" title="2. Bắt đầu"></a>2. Bắt đầu</h1><p>Anh Nguyễn Thiên Ca – Microsoft Developer Evengelist – bắt đầu giới thiệu về những điểm mới của cuộc thi Imagine Cup 2014</p>
<ul>
<li>  Cuộc thi sẽ diễn ra tại Seatle – trụ sở chính của Microsoft Toàn cầu</li>
<li>  Rất có khả năng các bạn sẽ được gặp gỡ những lãnh đạo cao cấp nhất của Microsoft</li>
<li>  Giải thưởng lại tăng <img src="http://cuoilennaocacban2.files.wordpress.com/2013/10/wlemoticon-flirtmale.png" alt="Flirt male"></li>
<li>  Nếu ý tưởng tốt, bạn có thể sẽ được tài trợ một khoản tiền để lập một Start Up</li>
<li>Có 4 lĩnh vực bạn có thể tham gia<ul>
<li>  Game – Viết Game</li>
<li>  Innovation – Sáng tạo</li>
<li>  World Citizenship – Phần nào đó giải quyết hoặc cải thiện các vấn đề của thế giới (8 mục tiêu thiên niên kỷ của Liên Hợp Quốc + các vấn đề khác trong cuộc sống)</li>
<li>  Pitch Video – Một phần thi mới đầy hấp dẫn và sáng tạo. Hãy thuyết trình trong 5 phút về ý tưởng của bạn cho bất kỳ lĩnh vực nào, và 3000 USD sẽ là của bạn</li>
</ul>
</li>
</ul>
<p>Nghe thú vị nhỉ, và tôi đã có sẵn một ý tưởng để có thể tham gia Pitch Video</p>
<h1 id="3-Application-Life-Cycle-Management"><a href="#3-Application-Life-Cycle-Management" class="headerlink" title="3. Application Life-Cycle Management"></a>3. Application Life-Cycle Management</h1><p>Phần tiếp theo, anh Huỳnh Bảo Toàn – Microsoft Developer Evengelist – bắt đầu bằng một hình ảnh khá thú vị</p>
<p><img src="https://farm4.staticflickr.com/3727/10067683046_8ee06cf21d_o.gif" alt="tree"></p>
<p>và đây chính xác là những gì xảy ra trong đời thực, và làm sao để tránh nó?</p>
<p>Và thế là, Application Life-Cycle Management ra đời (môn ở trường các bạn học chính là “Quản lý dự án Công nghệ thông tin”, nhưng theo tôi thấy thì không được hữu ích lắm, và nội dung cũng không liên quan nhiều)</p>
<p>tiếp theo đó, anh Toàn đã giới thiệu về mô hình thác nước truyền thống, rồi tới Agile, Scrum và sự hỗ trợ của Microsoft đối với các mô hình này bằng Team Foundation Service.</p>
<p>Từng chức vụ trong một dự án phát triển phần mềm được anh giới thiệu khá kỹ lưỡng và chi tiết. Anh cũng chia sẻ một số kinh nghiệm làm việc của mình cho các bạn.</p>
<blockquote>
<p>Fun fact: Bạn Đinh Thúy An – khoa CNTN06, đứng lên có ý kiến: “Anh nói nhanh quá” =&gt; kết quả là bạn được tặng một cái áo Microsoft cực cool <img src="https://cuoilennaocacban2.files.wordpress.com/2013/10/wlemoticon-partysmile.png" alt="smile"></p>
</blockquote>
<h1 id="4-Ket-thuc"><a href="#4-Ket-thuc" class="headerlink" title="4. Kết thúc"></a>4. Kết thúc</h1><p>kết thúc chương trình, anh Lương Thanh Thế nói về chương trình tuyển chọn MSP năm 2014</p>
<ul>
<li>  Chương trình kết thúc đăng ký vào tháng 11</li>
<li>  Các bạn muốn đăng ký chương trình MSP, vui lòng liên hệ <a href="mailto:tuan.tran-van@studentpartner.com">tuan.tran-van@studentpartner.com</a> để được hướng dẫn chi tiết</li>
<li>  Tham gia MSP, các bạn sẽ được áp dụng bộ frame của Microsoft toàn cầu về MSP, bao gồm 4 cấp độ, tương đương với 4 mức quyền lợi, trong đó có quyền được cấp tài khoản MSDN Subscription trị giá 13 600 USD (đúng rồi, mười ba ngàn sáu trăm đô) và đi du lịch ít nhất 1 năm 1 lần với Microsoft (cheer)</li>
</ul>
]]></content>
      <categories>
        <category>Event</category>
      </categories>
      <tags>
        <tag>Application Life-cycle</tag>
        <tag>Imagine Cup</tag>
        <tag>MSP</tag>
      </tags>
  </entry>
  <entry>
    <title>[Windows Phone] Textblock tip and trick – Part 1</title>
    <url>/2013/10/07/windows-phone-textblock-tip-and-trick-part-1/</url>
    <content><![CDATA[<p>Vậy là, bạn đã có một thời gian dài làm việc với Windows Phone</p>
<p>Hôm nay, tôi sẽ hướng dẫn bạn một số mẹo vặt khi sử dụng Textblock trong Windows Phone</p>
<p><img src="https://farm8.staticflickr.com/7407/10135898285_7ea60ebd9a_o.png" alt="advanced text"></p>
<span id="more"></span>
<ul>
<li>  <a href="#1-multiple-line-trong-c%C3%B9ng-textblock">1. Multiple line trong cùng Textblock</a></li>
<li><a href="#2-canh-%C4%91%E1%BB%81u-2-b%C3%AAn-cho-textblock">2. Canh đều 2 bên cho Textblock</a><ul>
<li>  <a href="#21-gi%E1%BA%A3i-ph%C3%A1p">2.1. Giải pháp</a></li>
</ul>
</li>
<li>  <a href="#3-run-control">3. Run Control</a></li>
</ul>
<h1 id="1-Multiple-line-trong-cung-Textblock"><a href="#1-Multiple-line-trong-cung-Textblock" class="headerlink" title="1. Multiple line trong cùng Textblock"></a>1. Multiple line trong cùng Textblock</h1><p><img src="https://farm4.staticflickr.com/3782/10136087586_2967ef0062_o.png"></p>
<p>Đây là một textblock bình thường</p>
<p>Vấn đề được đặt ra: Làm thế nào để có thể hiển thị 2 dòng trong Textblock này?</p>
<p><img src="https://farm8.staticflickr.com/7386/10136108785_5fe51d5aa7_o.png"></p>
<p>Problem Solved <img src="https://cuoilennaocacban2.files.wordpress.com/2013/10/wlemoticon-partysmile1.png" alt="Party smile"></p>
<p>Vậy còn trong Code C# thì sao?</p>
<p><img src="https://farm8.staticflickr.com/7316/10136204654_88cfbb6b67_o.png"></p>
<h1 id="2-Canh-deu-2-ben-cho-Textblock"><a href="#2-Canh-deu-2-ben-cho-Textblock" class="headerlink" title="2. Canh đều 2 bên cho Textblock"></a>2. Canh đều 2 bên cho Textblock</h1><p>chờ chút đã, canh đều 2 bên thì có gì khó. Justify là xong</p>
<p>Đây là Right</p>
<p><img src="https://farm3.staticflickr.com/2888/10136343715_2961551886_o.png"></p>
<p>Đây là Center</p>
<p><img src="https://farm4.staticflickr.com/3699/10136477973_38ce651897_o.png"></p>
<p>Và đây là Justify</p>
<p><img src="https://farm4.staticflickr.com/3829/10136441596_37cb7b47d7_o.png"></p>
<h2 id="2-1-Giai-phap"><a href="#2-1-Giai-phap" class="headerlink" title="2.1. Giải pháp"></a>2.1. Giải pháp</h2><p>Dùng RichTextBox như hình dưới</p>
<p><img src="https://farm3.staticflickr.com/2883/10139054113_9a87a5c1fd_o.png"></p>
<p>Problem Solved</p>
<h1 id="3-Run-Control"><a href="#3-Run-Control" class="headerlink" title="3. Run Control"></a>3. Run Control</h1><p>Trong các ví dụ trên, nhiều lần bạn gặp từ khóa “Run”. Nó là một control con nằm trong các control TextBlock và TextBox, RichTextBox.</p>
<p>Run Control cho phép bạn hiển thị các đoạn văn bản khác nhau trong cùng một control TextBlock hoặc TextBox. Mỗi Run Control sẽ mang các thuộc tính định dạng riêng.</p>
<p>Hết rồi, hẹn gặp lại các bạn ở phần 2 nhé</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows Phone</category>
      </categories>
      <tags>
        <tag>windows phone</tag>
        <tag>textbox</tag>
        <tag>richtextbox</tag>
        <tag>textblock</tag>
      </tags>
  </entry>
  <entry>
    <title>[Windows Phone] - TextBlock Tips and Tricks – Part 2 – TextBox too</title>
    <url>/2013/10/13/windows-phone-textblock-and-textbox-tips-and-tricks-part-2/</url>
    <content><![CDATA[<p>Ở phần trước, bạn đã có một số tips and tricks khá thú vị phải ko?</p>
<blockquote>
<p>Link phần trước: <a href="https://wp.me/p1V2Tb-43">[Windows Phone] - Textblock Tips and Tricks - Part 1</a></p>
</blockquote>
<p><img src="https://farm8.staticflickr.com/7407/10135898285_7ea60ebd9a_o.png"></p>
<p>Trong phần này, bạn sẽ còn có nhiều điều thú vị hơn nữa</p>
<span id="more"></span>
<ul>
<li><a href="#1-text-qu%C3%A1-d%C3%A0i-v%C3%A0-v%E1%BA%A5n-%C4%91%E1%BB%81-b%E1%BB%8B-m%E1%BA%A5t-ch%E1%BB%AF">1. Text quá dài và vấn đề bị mất chữ</a><ul>
<li>  <a href="#11-nguy%C3%AAn-nh%C3%A2n">1.1. Nguyên nhân</a></li>
<li>  <a href="#12-kh%E1%BA%AFc-ph%E1%BB%A5c">1.2. Khắc phục</a></li>
</ul>
</li>
<li>  <a href="#2-selectable-textblock">2. Selectable TextBlock</a></li>
</ul>
<h1 id="1-Text-qua-dai-va-van-de-bi-mat-chu"><a href="#1-Text-qua-dai-va-van-de-bi-mat-chu" class="headerlink" title="1. Text quá dài và vấn đề bị mất chữ"></a>1. Text quá dài và vấn đề bị mất chữ</h1><p><img src="https://farm3.staticflickr.com/2834/10238287965_30e435db37_o.png"></p>
<p>Chữ bị mất một cách vô cùng kỳ quái phải không?</p>
<h2 id="1-1-Nguyen-nhan"><a href="#1-1-Nguyen-nhan" class="headerlink" title="1.1. Nguyên nhân"></a>1.1. Nguyên nhân</h2><p>Tất cả các control trong Windows Phone đều có 1 giới hạn kích thước mặc định: 2000 pixel</p>
<p>2000 pixel lớn tới mức nào? màn hình laptop tiêu chuẩn là 1366 x 768. So sánh với 2000 x 2000. Vậy là hơn gấp đôi</p>
<p>nhưng đối với một số máy Windows Phone có độ phân giải Full HD (1900 x 1080), thì chỉ cần nhân đôi chiều rộng của máy ra là ta sẽ có 1 kích thước tối đa sao? Không phải vậy. Kích thước 2k chỉ áp dụng cho app Windows Phone 7</p>
<h2 id="1-2-Khac-phuc"><a href="#1-2-Khac-phuc" class="headerlink" title="1.2. Khắc phục"></a>1.2. Khắc phục</h2><p>Cách khắc phục rất đơn giản. Chia text của bạn ra nhiều phần, và gắn chúng vào các textblock khác nhau. Bao các textblock này trong ScrollViewer. Xong!</p>
<h1 id="2-Selectable-TextBlock"><a href="#2-Selectable-TextBlock" class="headerlink" title="2. Selectable TextBlock"></a>2. Selectable TextBlock</h1><p>Textblock, dĩ nhiên là không select được rồi.</p>
<p>Vậy ta sẽ chỉnh một chút cho TextBox giống với TextBlock, để lợi dụng tính “Selectable” của nó</p>
<p>add code sau vào resource</p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">&lt;Style x:Key&#x3D;&quot;TextBoxStyle1&quot; TargetType&#x3D;&quot;TextBox&quot;&gt;
    &lt;Setter Property&#x3D;&quot;Background&quot; Value&#x3D;&quot;&#123;StaticResource PhoneBackgroundBrush&#125;&quot; &#x2F;&gt;
    &lt;Setter Property&#x3D;&quot;Foreground&quot; Value&#x3D;&quot;&#123;StaticResource PhoneForegroundBrush&#125;&quot; &#x2F;&gt;
    &lt;Setter Property&#x3D;&quot;BorderBrush&quot; Value&#x3D;&quot;&#123;StaticResource PhoneBackgroundBrush&#125;&quot; &#x2F;&gt;
    &lt;Setter Property&#x3D;&quot;SelectionBackground&quot; Value&#x3D;&quot;&#123;StaticResource PhoneAccentBrush&#125;&quot; &#x2F;&gt;
    &lt;Setter Property&#x3D;&quot;SelectionForeground&quot; Value&#x3D;&quot;&#123;StaticResource PhoneTextBoxSelectionForegroundBrush&#125;&quot; &#x2F;&gt;
    &lt;Setter Property&#x3D;&quot;Template&quot;&gt;
        &lt;Setter.Value&gt;
            &lt;ControlTemplate TargetType&#x3D;&quot;TextBox&quot;&gt;
                &lt;Grid Background&#x3D;&quot;Transparent&quot;&gt;
                    &lt;VisualStateManager.VisualStateGroups&gt;
                        &lt;VisualStateGroup x:Name&#x3D;&quot;CommonStates&quot;&gt;
                            &lt;VisualState x:Name&#x3D;&quot;ReadOnly&quot;&gt;
                                &lt;Storyboard&gt;
                                    &lt;ObjectAnimationUsingKeyFrames Storyboard.TargetName&#x3D;&quot;EnabledBorder&quot; Storyboard.TargetProperty&#x3D;&quot;Visibility&quot;&gt;
                                        &lt;DiscreteObjectKeyFrame KeyTime&#x3D;&quot;0&quot;&gt;
                                            &lt;DiscreteObjectKeyFrame.Value&gt;
                                                &lt;Visibility&gt;Collapsed&lt;&#x2F;Visibility&gt;
                                            &lt;&#x2F;DiscreteObjectKeyFrame.Value&gt;
                                        &lt;&#x2F;DiscreteObjectKeyFrame&gt;
                                    &lt;&#x2F;ObjectAnimationUsingKeyFrames&gt;
                                    &lt;ObjectAnimationUsingKeyFrames Storyboard.TargetName&#x3D;&quot;DisabledOrReadonlyBorder&quot; Storyboard.TargetProperty&#x3D;&quot;Visibility&quot;&gt;
                                        &lt;DiscreteObjectKeyFrame KeyTime&#x3D;&quot;0&quot;&gt;
                                            &lt;DiscreteObjectKeyFrame.Value&gt;
                                                &lt;Visibility&gt;Visible&lt;&#x2F;Visibility&gt;
                                            &lt;&#x2F;DiscreteObjectKeyFrame.Value&gt;
                                        &lt;&#x2F;DiscreteObjectKeyFrame&gt;
                                    &lt;&#x2F;ObjectAnimationUsingKeyFrames&gt;
                                    &lt;ObjectAnimationUsingKeyFrames Storyboard.TargetName&#x3D;&quot;DisabledOrReadonlyBorder&quot; Storyboard.TargetProperty&#x3D;&quot;Background&quot;&gt;
                                        &lt;DiscreteObjectKeyFrame KeyTime&#x3D;&quot;0&quot; Value&#x3D;&quot;&#123;StaticResource PhoneBackgroundBrush&#125;&quot; &#x2F;&gt;
                                    &lt;&#x2F;ObjectAnimationUsingKeyFrames&gt;
                                    &lt;ObjectAnimationUsingKeyFrames Storyboard.TargetName&#x3D;&quot;DisabledOrReadonlyBorder&quot; Storyboard.TargetProperty&#x3D;&quot;BorderBrush&quot;&gt;
                                        &lt;DiscreteObjectKeyFrame KeyTime&#x3D;&quot;0&quot; Value&#x3D;&quot;&#123;StaticResource PhoneBackgroundBrush&#125;&quot; &#x2F;&gt;
                                    &lt;&#x2F;ObjectAnimationUsingKeyFrames&gt;
                                    &lt;ObjectAnimationUsingKeyFrames Storyboard.TargetName&#x3D;&quot;DisabledOrReadonlyContent&quot; Storyboard.TargetProperty&#x3D;&quot;Foreground&quot;&gt;
                                        &lt;DiscreteObjectKeyFrame KeyTime&#x3D;&quot;0&quot; Value&#x3D;&quot;&#123;StaticResource PhoneForegroundBrush&#125;&quot; &#x2F;&gt;
                                    &lt;&#x2F;ObjectAnimationUsingKeyFrames&gt;
                                &lt;&#x2F;Storyboard&gt;
                            &lt;&#x2F;VisualState&gt;
                        &lt;&#x2F;VisualStateGroup&gt;
                    &lt;&#x2F;VisualStateManager.VisualStateGroups&gt;
                    &lt;Border x:Name&#x3D;&quot;EnabledBorder&quot;
                            Margin&#x3D;&quot;&#123;StaticResource PhoneTouchTargetOverhang&#125;&quot;
                            Background&#x3D;&quot;&#123;TemplateBinding Background&#125;&quot;
                            BorderBrush&#x3D;&quot;&#123;TemplateBinding BorderBrush&#125;&quot;
                            BorderThickness&#x3D;&quot;&#123;TemplateBinding BorderThickness&#125;&quot;&gt;
                        &lt;ContentControl x:Name&#x3D;&quot;ContentElement&quot;
                                        Margin&#x3D;&quot;&#123;StaticResource PhoneTextBoxInnerMargin&#125;&quot;
                                        HorizontalContentAlignment&#x3D;&quot;Stretch&quot;
                                        VerticalContentAlignment&#x3D;&quot;Stretch&quot;
                                        BorderThickness&#x3D;&quot;0&quot;
                                        Padding&#x3D;&quot;&#123;TemplateBinding Padding&#125;&quot; &#x2F;&gt;
                    &lt;&#x2F;Border&gt;
                    &lt;Border x:Name&#x3D;&quot;DisabledOrReadonlyBorder&quot;
                            Margin&#x3D;&quot;&#123;StaticResource PhoneTouchTargetOverhang&#125;&quot;
                            Background&#x3D;&quot;Transparent&quot;
                            BorderBrush&#x3D;&quot;&#123;StaticResource PhoneDisabledBrush&#125;&quot;
                            BorderThickness&#x3D;&quot;&#123;TemplateBinding BorderThickness&#125;&quot;
                            Visibility&#x3D;&quot;Collapsed&quot;&gt;
                        &lt;TextBox x:Name&#x3D;&quot;DisabledOrReadonlyContent&quot;
                                 Background&#x3D;&quot;Transparent&quot;
                                 FontFamily&#x3D;&quot;&#123;TemplateBinding FontFamily&#125;&quot;
                                 FontSize&#x3D;&quot;&#123;TemplateBinding FontSize&#125;&quot;
                                 FontStyle&#x3D;&quot;&#123;TemplateBinding FontStyle&#125;&quot;
                                 FontWeight&#x3D;&quot;&#123;TemplateBinding FontWeight&#125;&quot;
                                 Foreground&#x3D;&quot;&#123;StaticResource PhoneDisabledBrush&#125;&quot;
                                 IsReadOnly&#x3D;&quot;True&quot;
                                 SelectionBackground&#x3D;&quot;&#123;TemplateBinding SelectionBackground&#125;&quot;
                                 SelectionForeground&#x3D;&quot;&#123;TemplateBinding SelectionForeground&#125;&quot;
                                 Template&#x3D;&quot;&#123;StaticResource PhoneDisabledTextBoxTemplate&#125;&quot;
                                 Text&#x3D;&quot;&#123;TemplateBinding Text&#125;&quot;
                                 TextAlignment&#x3D;&quot;&#123;TemplateBinding TextAlignment&#125;&quot;
                                 TextWrapping&#x3D;&quot;&#123;TemplateBinding TextWrapping&#125;&quot; &#x2F;&gt;
                    &lt;&#x2F;Border&gt;
                &lt;&#x2F;Grid&gt;
            &lt;&#x2F;ControlTemplate&gt;
        &lt;&#x2F;Setter.Value&gt;
    &lt;&#x2F;Setter&gt;
&lt;&#x2F;Style&gt;</code></pre>

<p>Khi dùng, chỉ cần</p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">&lt;TextBox x:Name&#x3D;&quot;testTextBox&quot;
         IsReadOnly&#x3D;&quot;True&quot;
         Style&#x3D;&quot;&#123;StaticResource TextBoxStyle1&#125;&quot;
         Text&#x3D;&quot;Hello world&quot;
         TextWrapping&#x3D;&quot;Wrap&quot; &#x2F;&gt;</code></pre>

<p>Thế là xong</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows Phone</category>
      </categories>
      <tags>
        <tag>textbox</tag>
        <tag>textblock</tag>
        <tag>tip</tag>
        <tag>tips</tag>
        <tag>trick</tag>
        <tag>tricks</tag>
      </tags>
  </entry>
  <entry>
    <title>[Windows Phone] Where to put load data method?</title>
    <url>/2013/11/02/windows-phone-where-to-put-load-data-method/</url>
    <content><![CDATA[<p>Lập trình ứng dụng cho Windows Phone, bắt buộc phải load data và hiển thị chúng lên giao diện.</p>
<p><img src="https://farm8.staticflickr.com/7339/10619092335_673c78c2fc_o.png"></p>
<p>Vậy cách nào là tối ưu để load data?</p>
<span id="more"></span>
<ul>
<li><a href="#c%C3%A1ch-1-thisloaded-event-handler">Cách 1: this.Loaded event handler</a><ul>
<li>  <a href="#ho%E1%BA%A1t-%C4%91%E1%BB%99ng">Hoạt động</a></li>
<li>  <a href="#c%C3%A1ch-d%C3%B9ng">Cách dùng</a></li>
<li>  <a href="#%C6%B0u-%C4%91i%E1%BB%83m">Ưu điểm</a></li>
<li>  <a href="#nh%C6%B0%E1%BB%A3c-%C4%91i%E1%BB%83m">Nhược điểm</a></li>
<li>  <a href="#k%E1%BA%BFt-lu%E1%BA%ADn">Kết luận</a></li>
</ul>
</li>
<li><a href="#c%C3%A1ch-2-onnavigatedto">Cách 2: OnNavigatedTo</a><ul>
<li>  <a href="#ho%E1%BA%A1t-%C4%91%E1%BB%99ng-1">Hoạt động</a></li>
<li>  <a href="#c%C3%A1ch-d%C3%B9ng-1">Cách dùng</a></li>
<li>  <a href="#%C6%B0u-%C4%91i%E1%BB%83m-1">Ưu điểm</a></li>
<li>  <a href="#nh%C6%B0%E1%BB%A3c-%C4%91i%E1%BB%83m-1">Nhược điểm</a></li>
<li>  <a href="#k%E1%BA%BFt-lu%E1%BA%ADn-1">Kết luận</a></li>
</ul>
</li>
<li>  <a href="#t%C3%B3m-l%E1%BA%A1i">Tóm lại</a></li>
</ul>
<p>Khi tạo mới một page trong Windows Phone, bạn có 1 số phương thức được khởi tạo sẵn</p>
<p><img src="https://farm8.staticflickr.com/7314/10619173056_305079cfe7_o.png"></p>
<p>Đây là phương thức khởi tạo (Contructor) Phương thức khởi tạo có chức năng chính là…construct, hay xây dựng, thi công nên trang mà mình mong muốn. Một sai lầm cơ bản là mọi người thường load dữ liệu ngay dưới phương thức này.</p>
<p><img src="https://farm8.staticflickr.com/7430/10619462526_9716012411_o.png"></p>
<p>Giả sử như data của bạn nhiều, LoadData chạy khá lâu. Lúc đó thì page của bạn sẽ chỉ xuất hiện khi toàn bộ Contructor đã chạy xong. Tức là từ page cũ, bấm sang page này, sẽ có một khoảng thời gian ứng dụng bị “đơ”, đó chính là thời gian cần thiết để chạy phương thức khởi tạo page.</p>
<p>Windows Phone ko hoạt động theo kiểu HTML, một khi tất cả đã sẵn sàng trong RAM, nó mới vẽ page đó ra trên màn hình, trong khi HTML là có cái jì là nó vẽ cái đó :3</p>
<p>Rất nhiều người sử dụng cách này, vì trong một số đoạn video và hầu hết các tài liệu chính thức trên MSDN, MS hướng dẫn bạn theo cách này ==’</p>
<h1 id="Cach-1-this-Loaded-event-handler"><a href="#Cach-1-this-Loaded-event-handler" class="headerlink" title="Cách 1: this.Loaded event handler"></a>Cách 1: this.Loaded event handler</h1><h2 id="Hoat-dong"><a href="#Hoat-dong" class="headerlink" title="Hoạt động"></a>Hoạt động</h2><p>Loaded event sẽ được gọi ngay khi vẽ xong giao diện của page lên màn hình (sau khi khởi tạo xong) và khi có một sự thay đổi về giao diện (thêm bớt các element)</p>
<h2 id="Cach-dung"><a href="#Cach-dung" class="headerlink" title="Cách dùng"></a>Cách dùng</h2><p><img src="https://farm4.staticflickr.com/3794/10619772596_db30767db0_o.png"></p>
<p>Dùng như hình trên</p>
<h2 id="Uu-diem"><a href="#Uu-diem" class="headerlink" title="Ưu điểm"></a>Ưu điểm</h2><p>Windows Phone sử dụng cơ chế DataBinding, giao diện sẽ tự động thay đổi khi dữ liệu thay đổi. Hãy thử tưởng tượng từng item xuất hiện trong list, và bạn có thể tương tác với chúng.</p>
<p>Phương pháp này làm được việc đó Việc khởi tạo page vô cùng nhanh chóng, ứng dụng của bạn sẽ không bị đơ, đảm bảo tương tác với người dùng</p>
<h2 id="Nhuoc-diem"><a href="#Nhuoc-diem" class="headerlink" title="Nhược điểm"></a>Nhược điểm</h2><p>Bất kỳ khi nào có một sự thay đổi về giao diện (thêm bớt các element), phương thức này sẽ được gọi lại.</p>
<p>Như vậy, ta không thể đảm bảo được rằng trong suốt quá trình tương tác trên page, phương thức này chỉ được gọi 1 lần.</p>
<p>Gọi nhiều lần hàm load sẽ dẫn tới những kết cục không mong muốn, chưa kể đến sự hao phí tài nguyên và năng lượng Giả sử nếu bạn cần thời gian rất lâu để load dữ liệu, mà dữ liệu của bạn chưa được binding trước khi load xong, thì sẽ có 1 hiện tượng là page đã vẽ xong, nhưng nội dung thì vẫn trống trơn. Dù vẫn phản hồi tốt, người dùng sẽ tưởng app lỗi và rate thấp :3</p>
<h2 id="Ket-luan"><a href="#Ket-luan" class="headerlink" title="Kết luận"></a>Kết luận</h2><p>Nếu page của bạn, bạn chắc chắn không có sự thêm bớt về giao diện, có thể dùng phương thức này. Một lưu ý nhỏ là hãy binding dữ liệu trước khi tiến hành load dữ liệu lên. Binding lên một Collection không có phần tử hoàn toàn không sao cả. (không phải collection null nhé)</p>
<blockquote>
<p>Nếu dùng phương thức này mà gặp một số lỗi lạ về dữ liệu, hãy nghĩ tới trường hợp event được gọi nhiều lần</p>
</blockquote>
<h1 id="Cach-2-OnNavigatedTo"><a href="#Cach-2-OnNavigatedTo" class="headerlink" title="Cách 2: OnNavigatedTo"></a>Cách 2: OnNavigatedTo</h1><h2 id="Hoat-dong-1"><a href="#Hoat-dong-1" class="headerlink" title="Hoạt động"></a>Hoạt động</h2><p>OnNavigatedTo được gọi khi một page trở thành page active trong frame. Như vậy có nghĩa là nó sẽ được gọi trước khi event loaded xảy ra. Thứ tự: Contructor =&gt; OnNavigatedTo =&gt; Loaded</p>
<h2 id="Cach-dung-1"><a href="#Cach-dung-1" class="headerlink" title="Cách dùng"></a>Cách dùng</h2><p><img src="https://farm4.staticflickr.com/3668/10620480973_e2599e3065_o.png"></p>
<h2 id="Uu-diem-1"><a href="#Uu-diem-1" class="headerlink" title="Ưu điểm"></a>Ưu điểm</h2><p>OnNavigatedTo có một số tham số liên quan tới việc chuyển page. Bạn có thể dùng các tham số này để xác định các thành phần sẽ hiển thị lên page như thế nào</p>
<h2 id="Nhuoc-diem-1"><a href="#Nhuoc-diem-1" class="headerlink" title="Nhược điểm"></a>Nhược điểm</h2><p>Page cũ sẽ bị đơ trước khi chuyển</p>
<h2 id="Ket-luan-1"><a href="#Ket-luan-1" class="headerlink" title="Kết luận"></a>Kết luận</h2><p>Chỉ dùng phương thức này khi thời gian đơ là không đáng kể. Nếu bạn load 2 dòng dữ liệu thì okie, còn nếu 20000 dòng thì nên dùng Loaded</p>
<h1 id="Tom-lai"><a href="#Tom-lai" class="headerlink" title="Tóm lại"></a>Tóm lại</h1><p>Tùy và lượng dữ liệu, cũng như thời gian mà bạn sử dụng linh hoạt 1 trong 2 phương pháp</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows Phone</category>
      </categories>
      <tags>
        <tag>data</tag>
        <tag>loaded</tag>
        <tag>onnavigatedto</tag>
      </tags>
  </entry>
  <entry>
    <title>Xách Laptop lên và....săn lumia</title>
    <url>/2013/11/03/xach-laptop-len-va-san-lumia/</url>
    <content><![CDATA[<p>Lưu ý: chỉ dành cho sinh viên UIT</p>
<span id="more"></span>
<blockquote>
<p><strong><em>Chinh phục Lumia cùng WP Competition.</em></strong> <img src="http://farm3.staticflickr.com/2819/10642027536_ed0a9a6c2a_z.jpg"> <strong><em>Giải thưởng</em></strong> <img src="http://farm3.staticflickr.com/2821/10642032485_8e23de30db_b.jpg"> <img src="http://farm3.staticflickr.com/2808/10642040315_da77331be4_b.jpg"> <strong><em>Quy trình tham gia</em></strong> <img src="http://farm3.staticflickr.com/2868/10642011045_8a0847a1f6_b.jpg"> <img src="http://farm8.staticflickr.com/7343/10642268783_f97e191b4c_b.jpg"></p>
<p><img src="http://forum.uit.edu.vn/emo/dribble.gif" title="Dribble"><img src="http://forum.uit.edu.vn/emo/dribble.gif" title="Dribble"><img src="http://forum.uit.edu.vn/emo/dribble.gif" title="Dribble"><img src="http://forum.uit.edu.vn/emo/dribble.gif" title="Dribble"><img src="http://forum.uit.edu.vn/emo/dribble.gif" title="Dribble"><img src="http://forum.uit.edu.vn/emo/dribble.gif" title="Dribble"> <img src="http://farm6.staticflickr.com/5500/10642293243_21e53de8fb_z.jpg"></p>
<p><img src="http://forum.uit.edu.vn/emo/Funny.gif" title="Funny"><img src="http://forum.uit.edu.vn/emo/Funny.gif" title="Funny"> <strong><em>Chỉ dành riêng UIT SV</em></strong> <img src="http://forum.uit.edu.vn/emo/brick.png" title="Brick"><img src="http://forum.uit.edu.vn/emo/brick.png" title="Brick"><img src="http://forum.uit.edu.vn/emo/brick.png" title="Brick"><img src="http://forum.uit.edu.vn/emo/brick.png" title="Brick"></p>
</blockquote>
]]></content>
      <categories>
        <category>Event</category>
      </categories>
  </entry>
  <entry>
    <title>[Visual Studio] NUGET the Magician</title>
    <url>/2013/11/11/visual-studio-nuget-the-magician/</url>
    <content><![CDATA[<p>Khi sử dụng Visual Studio để lập trình, chắc hẳn sẽ có lúc bạn cần thêm các thư viện từ bên ngoài. Cách cũ là lên Google search (Bing search), rồi tìm thư viện, tải về và add thủ công vào Project. Từ bây giờ, bạn không cần phải làm như thế nữa.</p>
<p><img src="https://farm1.staticflickr.com/819/40232598394_27c397f3e4_o.png" alt="nuget"></p>
<p>Nuget là một công cụ giúp bạn thêm các thư viện ngoài vào Project của mình. Sử dụng Nuget rất đơn giản và dễ dàng</p>
<span id="more"></span>
<ul>
<li>  <a href="#1-chu%E1%BA%A9n-b%E1%BB%8B">1. Chuẩn bị</a></li>
<li>  <a href="#2-c%E1%BA%ADp-nh%E1%BA%ADt-nuget-package">2. Cập nhật Nuget Package</a></li>
<li><a href="#3-s%E1%BB%AD-d%E1%BB%A5ng">3. Sử dụng</a><ul>
<li>  <a href="#31-c%C3%A0i-%C4%91%E1%BA%B7t-1-g%C3%B3i-nuget">3.1. Cài đặt 1 gói Nuget</a></li>
</ul>
</li>
<li>  <a href="#4-gi%E1%BB%9Bi-thi%E1%BB%87u-m%E1%BB%99t-s%E1%BB%91-g%C3%B3i-nuget-hay">4. Giới thiệu một số gói Nuget hay</a></li>
</ul>
<h1 id="1-Chuan-bi"><a href="#1-Chuan-bi" class="headerlink" title="1. Chuẩn bị"></a>1. Chuẩn bị</h1><p>Đổi DNS của bạn thành Google DNS</p>
<p>Không hiểu vì lý do gì mà khi để DNS mặc định, mình không thể truy cập Nuget</p>
<p><img src="https://farm6.staticflickr.com/5509/10797602224_31099726fb_o.png"></p>
<p><img src="https://farm3.staticflickr.com/2875/10797506925_685b5619ac_o.png"></p>
<p><img src="https://farm3.staticflickr.com/2890/10797641014_1c326253d2_o.png"></p>
<h1 id="2-Cap-nhat-Nuget-Package"><a href="#2-Cap-nhat-Nuget-Package" class="headerlink" title="2. Cập nhật Nuget Package"></a>2. Cập nhật Nuget Package</h1><p>Mở Visual Studio lên, chọn Tool &gt; Extension and Update</p>
<p>Chọn Mục Update và update tất cả mọi thứ mà bạn có thể. Nếu bạn chưa update lần nào thì rất có thể bạn sẽ có mục Nuget Package trong các gói update</p>
<p><img src="https://farm8.staticflickr.com/7415/10797728624_43f2fd7efb_o.png"></p>
<h1 id="3-Su-dung"><a href="#3-Su-dung" class="headerlink" title="3. Sử dụng"></a>3. Sử dụng</h1><p>Mở một Project bất kỳ, ở đây mình sẽ chọn Windows Phone, Project mẫu là RSS Reader</p>
<p>Bật Solution Explorer, nhấn chuột phải vào References &gt; Manage Nuget Package</p>
<p><img src="https://farm6.staticflickr.com/5539/10799289075_a237ff0703_o.png"></p>
<p>Chọn mục Online</p>
<p><img src="https://farm6.staticflickr.com/5525/10799278546_20f8a4db7f_o.png"></p>
<p>Từ đây, bạn có thể thấy rất nhiều package hay ho cho ứng dụng của bạn</p>
<p>Nếu ứng dụng của bạn dùng Json, bạn có thể cài đặt Json.NET</p>
<p>Ở cột bên phải là các thông tin liên quan tới gói Nuget đang được chọn. Nhiều gói Nuget có cả thông tin về cách sử dụng.</p>
<p>Bạn có thể lên <a href="https://www.nuget.org/" title="https://www.nuget.org">https://www.nuget.org</a> để tìm hiểu thêm hoặc tìm kiếm các gói nuget phù hợp nhanh hơn</p>
<h2 id="3-1-Cai-dat-1-goi-Nuget"><a href="#3-1-Cai-dat-1-goi-Nuget" class="headerlink" title="3.1. Cài đặt 1 gói Nuget"></a>3.1. Cài đặt 1 gói Nuget</h2><p>Gõ cái bạn muốn tìm vào ô Search</p>
<p><img src="https://farm3.staticflickr.com/2855/10799595293_319514afd3_o.png"></p>
<p>Chọn gói Nuget thích hợp ở bên trái, nhấn Install</p>
<p><img src="https://farm3.staticflickr.com/2818/10799522506_b6433bafaa_o.png"></p>
<p>Chờ nó cài đặt một tí. Bạn sẽ luôn có gói Nuget mới nhất phù hợp với project của bạn. Nếu Project của bạn không phù hợp, Nuget Package Manager sẽ tự động gỡ nó ra khỏi Project</p>
<p><img src="https://farm8.staticflickr.com/7386/10799395825_24406f0f1f_o.png"></p>
<p>Vậy là xong, bạn đã có thể bắt đầu sử dụng ngay gói Nuget đó</p>
<h1 id="4-Gioi-thieu-mot-so-goi-Nuget-hay"><a href="#4-Gioi-thieu-mot-so-goi-Nuget-hay" class="headerlink" title="4. Giới thiệu một số gói Nuget hay"></a>4. Giới thiệu một số gói Nuget hay</h1><ul>
<li>  <strong>Json.NET</strong>: Dùng để thao tác với dữ liệu Json</li>
<li>  <strong>HtmlAgilityPack</strong>: Dùng để thao tác với dữ liệu HTML</li>
</ul>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows Phone</category>
      </categories>
      <tags>
        <tag>windows phone</tag>
        <tag>nuget</tag>
      </tags>
  </entry>
  <entry>
    <title>[Basic for Absolute Beginner] - [Part 1] - Layout with XAML</title>
    <url>/2013/11/21/windows-phone-silverlight-layout-with-xaml-basic-for-absolute-beginner/</url>
    <content><![CDATA[<p>Trong thời gian qua, nhất là khi Nokia tổ chức nhiều cuộc thi với giải thưởng là những cái điện thoại hấp dẫn, rất nhiều bạn đã PM mình để hỏi một số vấn đề cơ bản về các control hiển thị giao diện trong Windows Phone.</p>
<p>Bài viết này sẽ giúp các bạn có một khái niệm chung về giao diện và biết cách sử dụng nó trong lập trình Windows Phone nhé</p>
<p><img src="https://farm1.staticflickr.com/819/40941396061_a7abc65129_o.png" alt="xaml"></p>
<p>Trong phạm vi bài viết này, tôi sẽ giới thiệu cho các bạn những điều cơ bản nhất về giao diện trong XAML</p>
<span id="more"></span>
<ul>
<li><a href="#1-basic-control--nest-control">1. Basic Control – Nest Control</a><ul>
<li><a href="#11-gridcolumndefinition-and-gridrowdefinition">1.1. Grid.ColumnDefinition and Grid.RowDefinition</a><ul>
<li>  <a href="#111-fixed-size">1.1.1. Fixed Size</a></li>
<li>  <a href="#112-auto-size">1.1.2. Auto Size</a></li>
<li>  <a href="#113-star-size">1.1.3. Star Size</a></li>
</ul>
</li>
<li>  [1.2. Nested Grid – A “Gridception” :3](#12-nested-grid -a-gridception-3)</li>
</ul>
</li>
<li><a href="#2-stackpanel">2. StackPanel</a><ul>
<li>  <a href="#21-b%E1%BA%A3n-ch%E1%BA%A5t-c%E1%BB%A7a-stackpanel">2.1. Bản chất của StackPanel</a></li>
<li>  <a href="#22-hi%E1%BB%83n-th%E1%BB%8B-stackpanel-v%C6%B0%E1%BB%A3t-qu%C3%A1-m%C3%A0n-h%C3%ACnh">2.2. Hiển thị StackPanel vượt quá màn hình</a></li>
</ul>
</li>
</ul>
<h1 id="1-Basic-Control-–-Nest-Control"><a href="#1-Basic-Control-–-Nest-Control" class="headerlink" title="1. Basic Control – Nest Control"></a>1. Basic Control – Nest Control</h1><p>Trong XAML, bạn có 2 control chính dùng để “chứa” các control khác, đó là <strong><code>Grid</code></strong> và <strong><code>StackPanel</code></strong></p>
<p>2 control này khá khác nhau, ở bảng dưới</p>
<p><strong>Grid</strong></p>
<p><strong>StackPanel</strong></p>
<p>Các control con có thể đè lên nhau</p>
<p>Các control con xếp theo hàng dọc hoặc ngang, không đè lên nhau</p>
<p>Có thể chia thành dòng và cột</p>
<p>Không có</p>
<p>Tự động mở rộng theo control chứa nó</p>
<p>Mở rộng theo nội dung bên trong nó</p>
<p>Hãy tạo một Project Windows Phone mới và thử nghiệm những gì Grid có thể làm được</p>
<p>Trong MainPage.xaml, hãy để ý giao diện mở đầu của nó.</p>
<p><img src="https://cuoilennaocacban2.files.wordpress.com/2013/11/112213_0144_windowsphon2.png"></p>
<p>Bây giờ, hãy mạnh dạn Delete hết, chỉ chừa lại cái “LayoutRoot” Grid thôi nhé</p>
<p><img src="https://cuoilennaocacban2.files.wordpress.com/2013/11/112213_0144_windowsphon3.png"></p>
<p>Đây là Grid Control, nó có thể chứa các control khác bên trong, và các control này mặc định sẽ nằm đè lên nhau.</p>
<p>Thêm những dòng sau đây vào LayoutRoot Grid</p>
<p><img src="https://cuoilennaocacban2.files.wordpress.com/2013/11/112213_0144_windowsphon4.png"></p>
<p>Và để ý sự thay đổi ở giao diện</p>
<p><img src="https://cuoilennaocacban2.files.wordpress.com/2013/11/112213_0144_windowsphon5.png"></p>
<p>Như bạn có thể thấy, 2 dòng TextBlock với FontSize khác nhau này nằm đè lên nhau trong giao diện</p>
<p>Khoan đã, tại sao tôi lại cần tới khả năng này của Grid? Tôi không cần bất cứ control nào nằm đè lên nhau trong ứng dụng của tôi cả.</p>
<p>Có đấy bạn: Hãy xem hình dưới đây</p>
<p><img src="https://cuoilennaocacban2.files.wordpress.com/2013/11/112213_0144_windowsphon6.png"></p>
<p>Logo Windows nằm chìm bên dưới, dòng chữ Hello world nổi lên trên, cũng khá hay phải không. Tôi tin chắc rằng bạn sẽ tìm ra nhiều cách hay ho hơn để tận dụng khả năng này của Grid</p>
<h2 id="1-1-Grid-ColumnDefinition-and-Grid-RowDefinition"><a href="#1-1-Grid-ColumnDefinition-and-Grid-RowDefinition" class="headerlink" title="1.1. Grid.ColumnDefinition and Grid.RowDefinition"></a>1.1. Grid.ColumnDefinition and Grid.RowDefinition</h2><p>Như trong bảng so sánh ở trên, Grid Control có thể chia không gian bên trong nó ra thành nhiều dòng và cột</p>
<p><img src="https://cuoilennaocacban2.files.wordpress.com/2013/11/112213_0144_windowsphon7.png"></p>
<p>Grid.RowDefinition là một tag định nghĩa chia dòng cho Grid RowDefintion đi liền với thuộc tính Height Các con số trong thuộc tính Height là số Pixel mà Row đó được định nghĩa Danh sách các Row được đánh số thứ tự, bắt đầu từ 0</p>
<p>Trong các control con bên trong Grid, ta khai báo nó thuộc về dòng nào bằng cách khai báo thêm thuộc tính Grid.Row=”Số thứ tự dòng”</p>
<p>Và đây là giao diện</p>
<p><img src="https://cuoilennaocacban2.files.wordpress.com/2013/11/112213_0144_windowsphon8.png"></p>
<p>Tương tự như vậy với ColumnDefintion</p>
<p><img src="https://cuoilennaocacban2.files.wordpress.com/2013/11/112213_0144_windowsphon9.png"></p>
<p>Cùng điểm lại một chút. Trong thuộc tính Width của ColumnDefinition hoặc thuộc tính Height của RowDefinition, bạn sẽ thấy ngoài việc xác lập một con số, ta còn có thể xác lập nó thành “Auto” hoặc “*“. Đâu là điểm khác biệt giữa các xác lập này?</p>
<h3 id="1-1-1-Fixed-Size"><a href="#1-1-1-Fixed-Size" class="headerlink" title="1.1.1. Fixed Size"></a>1.1.1. Fixed Size</h3><p>Fixed Size là một con số. Như bạn thấy ở hình trên, ta có 3 column, column 0 = 60 pixel, column 1 = 70 pixel, column 2 = 150 pixel</p>
<p>Điều này có nghĩa là dù bạn làm gì giao diện đi nữa, ta vẫn luôn luôn có 3 cột với 3 “số đo” như trên.</p>
<p>Điều gì xảy ra khi bạn mở rộng màn hình, đối với Windows Phone là bạn có 1 devices có độ phân giải cao hơn nhiều?</p>
<p>Đối với các ứng dụng WPF và Silverlight, kích thước mà hình không được định sẵn, khi mở rộng, 3 cột với 3 số đo như trên vẫn sẽ giữ nguyên không thay đổi. Tức là bạn sẽ có một vùng đen rất rộng phía bên phải, và 3 cột chen chúc nhau ở bên trái</p>
<p>Đối với Windows Phone, theo như một số tài liệu MSDN, 3 cột này sẽ giữ nguyên vị trí, ứng dụng của bạn đơn giản chỉ là được scale up bằng độ phân giải của máy thôi.</p>
<h3 id="1-1-2-Auto-Size"><a href="#1-1-2-Auto-Size" class="headerlink" title="1.1.2. Auto Size"></a>1.1.2. Auto Size</h3><p>Đối với cột Auto, ta sẽ có 1 thứ khác. Hãy thử thay đổi cột đầu tiên thành Auto, và bạn sẽ thấy rõ.</p>
<p>Cột đầu tiên được mở rộng đúng bằng với chiều rộng dòng chữ bên trong nó phải không? Đó chính là công dụng của Auto Size.</p>
<p>Auto sẽ cho phép tạo ra cột với độ rộng bằng nội dung chứa bên trong nó. Nhưng hãy cẩn thận, khi nội dung quá dài, cột sẽ tự động mở rộng và đôi khi vượt quá màn hình của máy</p>
<h3 id="1-1-3-Star-Size"><a href="#1-1-3-Star-Size" class="headerlink" title="1.1.3. Star Size"></a>1.1.3. Star Size</h3><p>Star Size lại là một chuyện vui. Hãy thử vui một chút, tạo thật nhiều Grid con bên trong một grid lớn và xem chuyện gì xảy ra nhé</p>
<p><img src="https://farm6.staticflickr.com/5488/10986643416_2fe9f2c287_o.png"></p>
<p>3 cột đầu tiên, mỗi cột có fixed size = 50 pixel</p>
<p>Cột thứ 4 có Width = “*“ =&gt; Cột thứ 4 sẽ chiếm hết toàn bộ chiều rộng còn lại.</p>
<p>Bây giờ, hãy thay đổi code một chút, nhiều điều thú vị đang chờ bạn</p>
<p><img src="https://farm4.staticflickr.com/3720/10986785764_6181e246a7_o.png"></p>
<p>Một con số trước dấu * mang ý nghĩa phần. 1 + 2 + 3 + 4 = 10 phần, và cột đầu tiên chiếm 1/10, cột thứ 2 chiếm 2/10, cột 3 chiếm 3/10, cột 4 chiếm 4/10. Cho dù thiết bị của bạn có độ phân giải cao đến đâu, hoặc Grid mẹ có kích thước như thế nào, phần trăm mỗi cột chiếm dụng là không đổi. Thật tuyệt phải không</p>
<h2 id="1-2-Nested-Grid-–-A-“Gridception”-3"><a href="#1-2-Nested-Grid-–-A-“Gridception”-3" class="headerlink" title="1.2. Nested Grid – A “Gridception” :3"></a>1.2. Nested Grid – A “Gridception” :3</h2><p>Hãy thử vui một chút, tạo thật nhiều Grid con bên trong một grid lớn và xem chuyện gì xảy ra nhé</p>
<p><img src="https://cuoilennaocacban2.files.wordpress.com/2013/11/112213_0144_windowsphon10.png"></p>
<p>Màu sắc chói lóa. Như vận bạn có thể thấy, trong một Grid có thể chứa thêm nhiều Grid khác nữa, và trong các Grid con lại có thể chứa thêm các Grid con. Điều này là vô hạn miễn là máy bạn đủ khả năng render ra hình ảnh. Nhưng tôi đoán chắc các bạn không cần nhiều hơn 5 lớp Grid đâu</p>
<h1 id="2-StackPanel"><a href="#2-StackPanel" class="headerlink" title="2. StackPanel"></a>2. StackPanel</h1><p>StackPanel khá giống với Grid ở mặt chứa được nhiều control khác bên trong nó, nhưn stackpanel không thể chia dòng và cột</p>
<p>Sửa lại như sau</p>
<p><img src="https://cuoilennaocacban2.files.wordpress.com/2013/11/112213_0144_windowsphon11.png"></p>
<p>Khoan, tất cả các Grid màu đi đâu hết rồi :(</p>
<p>Hãy quay lại với bản chất của StackPanel</p>
<h2 id="2-1-Ban-chat-cua-StackPanel"><a href="#2-1-Ban-chat-cua-StackPanel" class="headerlink" title="2.1. Bản chất của StackPanel"></a>2.1. Bản chất của StackPanel</h2><p>Mặc định, StackPanel sẽ có chiều rộng / chiều cao đúng bằng nội dung chứa bên trong nó.</p>
<p>Như vậy, với 4 cái Grid ở trên đều không có kích thước, tức là sẽ có kích thước mặc định. Nếu 4 Grid đó được chứa trong 1 Grid lớn, thì nó sẽ được tự động bung ra tràn đầy Grid mẹ. Nhưng với StackPanel, 4 Grid này sẽ bị thu nhỏ lại thành 0.</p>
<p>Bằng cách lập kích thước cho mỗi Grid, ta sẽ thấy điều kỳ diệu xảy ra</p>
<p><img src="https://farm8.staticflickr.com/7406/10986838364_70a4e51924_o.png"></p>
<p>4 Grid của chúng ta đã hiển thị, và xếp hàng theo chiều dọc. Bây giờ, bạn thêm thuộc tính Orientation=”Horizontal” vào StackPanel, và sửa Height thành Width</p>
<p><img src="https://farm4.staticflickr.com/3737/10986918494_709849b7f9_o.png"></p>
<p>Như vậy, ta có thể thấy StackPanel sẽ thu gọn tối đa theo chiều chính, và mở rộng ra hết control mẹ ở chiều còn lại.</p>
<h2 id="2-2-Hien-thi-StackPanel-vuot-qua-man-hinh"><a href="#2-2-Hien-thi-StackPanel-vuot-qua-man-hinh" class="headerlink" title="2.2. Hiển thị StackPanel vượt quá màn hình"></a>2.2. Hiển thị StackPanel vượt quá màn hình</h2><p><img src="https://farm4.staticflickr.com/3795/10986793265_e22218b72b_o.png"></p>
<p>Tôi đang chọn một vật thể nằm ngoài màn hình.</p>
<p>Thêm một ScrollViewer sẽ giải quyết vấn đề</p>
<p><img src="https://farm8.staticflickr.com/7410/10987169593_dbaab3425c_o.png"></p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows Phone</category>
        <category>Windows Store App</category>
      </categories>
      <tags>
        <tag>auto</tag>
        <tag>column</tag>
        <tag>columndefinition</tag>
        <tag>grid</tag>
        <tag>stackpanel</tag>
        <tag>star size</tag>
      </tags>
  </entry>
  <entry>
    <title>14-12-2013 – Beginning with Imagine Cup 2014</title>
    <url>/2013/12/14/beginning-with-imagine-cup-2014/</url>
    <content><![CDATA[<p><img src="https://farm8.staticflickr.com/7329/11364392626_9b74cf5a4b_o.jpg"></p>
<p>Sáng nay, tại phòng C301, ITIC đã có buổi giới thiệu cuộc thi Imagine Cup 2014</p>
<p>Tham gia buổi giới thiệu, các bạn đã được hướng dẫn đăng ký tài khoản Imagine Cup 2014, đồng thời tham gia 2 trên 3 minigame đang diễn ra trong khoảng thời gian vô cùng ngắn nhằm đạt giải thưởng là $1000 và $3000 từ ban tổ chức</p>
<span id="more"></span>
<ul>
<li>  <a href="#1-%C4%91%C4%83ng-k%C3%BD">1. Đăng ký</a></li>
<li>  <a href="#2-braingame-20-quiz-1">2. Braingame 2.0 Quiz 1</a></li>
<li><a href="#3-project-blueprint">3. Project Blueprint</a><ul>
<li>  <a href="#31-concept">3.1. Concept</a></li>
<li>  <a href="#32-target-audience">3.2. Target Audience</a></li>
<li>  <a href="#33-early-feedback">3.3. Early Feedback</a></li>
<li>  <a href="#34-competition">3.4. Competition</a></li>
<li>  <a href="#35-personas">3.5. Personas</a></li>
<li>  <a href="#36-top-user-stories">3.6. Top User Stories</a></li>
<li>  <a href="#37-business-model">3.7. Business Model</a></li>
</ul>
</li>
</ul>
<h1 id="1-Dang-ky"><a href="#1-Dang-ky" class="headerlink" title="1. Đăng ký"></a>1. Đăng ký</h1><p>Đăng ký Imagine Cup 2014 thậm chí còn đơn giản hơn nhiều so với năm ngoái. Chỉ cần có một tài khoản Microsoft là các bạn đã có thể tham gia.</p>
<p>Đối với những bạn nhất quyết không dùng MS Account, các bạn vẫn có thể đăng ký bằng các tài khoản email thông thường khác</p>
<p>Lưu ý khi đăng ký, nhớ chọn quốc gia Việt Nam nhé Các bạn đã đăng ký vui lòng điền vào mẫu đơn sau để nhận được hỗ trợ đặc biệt từ phía nhà trường và ITIClub: <a href="https://docs.google.com/forms/d/1SRbaqZoA1m4VjmYZbHl0H00Y-babT9boOEw-X-lcY6s/viewform">Đơn đăng ký</a></p>
<p><img src="https://farm8.staticflickr.com/7347/11364442916_15e680b7e9_o.png"></p>
<h1 id="2-Braingame-2-0-Quiz-1"><a href="#2-Braingame-2-0-Quiz-1" class="headerlink" title="2. Braingame 2.0 Quiz 1"></a>2. Braingame 2.0 Quiz 1</h1><p>Mỗi tháng, Imagine Cup sẽ tổ chức 2 cuộc thi Braingame, giải thưởng là $1000 cho mỗi cuộc thi dành cho thí sinh trả lời đúng nhất và nhanh nhất</p>
<p>Braingame tháng 12 bao gồm 10 câu hỏi thú vị xoay quanh các chủ đề liên quan tới Windows Phone, Unity, và một số câu hỏi về lịch sử (các dòng máy tính cổ, PDA) cùng một số câu hỏi về Smartphone nói chung khác</p>
<p>Tại phòng C301 sáng nay, hơn 10 bạn đã có những cú click chuột chính xác có khả năng nhận giải từ ban tổ chức</p>
<p><img src="https://farm6.staticflickr.com/5511/11364492066_ff5966f665_o.png"></p>
<p>Nếu bạn chưa tham gia, hãy tham gia ngay</p>
<p>Đăng nhập <a href="https://www.imaginecup.com/">www.imaginecup.com</a></p>
<p>Chọn Competitions &gt; Braingame : <a href="https://www.imaginecup.com/Competition/1005">https://www.imaginecup.com/Competition/1005</a></p>
<p>Tại đây, bạn sẽ được hướng dẫn các bước làm bài thi Braingame Vào Dashboard <img src="https://farm6.staticflickr.com/5478/11364526066_596ba840fe_o.png"></p>
<p>Tìm mục My Individual Challenge <img src="https://cms.imaginecup.com/images/default-source/GetStarted/braingames/2-challenges.png"></p>
<p>Click vào ô Register để đăng ký, quá trình đăng ký diễn ra tự động, mất khoảng 2s <img src="https://cms.imaginecup.com/images/default-source/GetStarted/braingames/3-register.png"></p>
<p>Sau đó, click vào ô Compete để mở khóa bài Quiz <img src="https://cms.imaginecup.com/images/default-source/GetStarted/braingames/4-compete.png"></p>
<p>Bấm vào đường link Take the Quiz <img src="https://cms.imaginecup.com/images/default-source/GetStarted/braingames/5-start.png"></p>
<p>Bắt đầu làm bài khi bấm vào đường Link như hình trên</p>
<p><strong>QUAN TRỌNG:</strong></p>
<p>Sau khi làm bài xong, sẽ có một bảng hiện ra, bạn bấm vào chữ click here như hình dưới thì điểm của bạn mới được ghi nhận <img src="https://cms.imaginecup.com/images/default-source/GetStarted/braingames/6-return.png"></p>
<h1 id="3-Project-Blueprint"><a href="#3-Project-Blueprint" class="headerlink" title="3. Project Blueprint"></a>3. Project Blueprint</h1><p>Project Blueprint là một minigame thú vị dành cho tất cả các đội tham gia Imagine Cup 2014 Trong Project Blueprint, bạn có cơ hội thể hiện ý tưởng của mình và nhận được giải thưởng lên tới $3000 của ban tổ chức. Để tham gia được minigame này, bạn làm theo các bước sau Vào Dashboard của bạn <img src="https://farm4.staticflickr.com/3765/11364718153_e5f7c29580_o.png"></p>
<p>Đăng ký tên Team, thành viên trong Team. Bước này là bắt buộc. Sau đó, quay trở lại Dashboard, click vào tên team của bạn <img src="https://farm8.staticflickr.com/7360/11364637476_15e8cf2bac_o.png"></p>
<p>Bạn sẽ thấy có nhiều Challenge đang diễn ra, bên cạnh là thời gian biểu của nó. Cũng tương tự như Braingame, bạn đánh dấu vào 2 ô Registered và Competing để bắt đầu nộp bài Sau khi đánh dấu, đường Link Assign Roles hiện ra, bạn đăng ký vai trò của các thành viên trong nhóm mình.</p>
<p>Đăng ký xong, link Submission sẽ xuất hiện Hỗ trợ cho các bạn tham gia Braingame, Imagine Cup có một số tài liệu</p>
<p>Mẫu bài nộp: <a href="https://cms.imaginecup.com/docs/default-source/rules/imagine-cup-project-blueprint-challenge-template.doc?sfvrsn=2">https://cms.imaginecup.com/docs/default-source/rules/imagine-cup-project-blueprint-challenge-template.doc?sfvrsn=2</a></p>
<p>Các bước điền vào mẫu bài nộp, lưu ý mục Concept có phần đánh giá ý tưởng rất hay</p>
<h2 id="3-1-Concept"><a href="#3-1-Concept" class="headerlink" title="3.1. Concept"></a>3.1. Concept</h2><ul>
<li>  <a href="https://www.youtube.com/watch?v=p0FyjLUz1Ag&feature=youtu.be">Trendmapping as a tool for identifying future trends and build companies around these</a></li>
<li>  <a href="https://philmckinney.com/archives/2012/03/the-6-features-needed-in-your-idea-management-system.html">6 features you need to manage your ideas</a></li>
<li>  <a href="https://philmckinney.com/archives/2008/03/podcast-ranking-your-ideas.html">How to rank your ideas - and ensure you are working on the best ideas that will have the most impact</a></li>
<li>  <a href="https://www.ted.com/playlists/20/where_do_ideas_come_from.html">Where do ideas come from? How to recognize opportunities?</a></li>
<li>  <a href="https://open-tube.com/top-12-best-free-mind-mapping-tools-2/">Top 30 free Mind-Mapping Tools</a></li>
</ul>
<h2 id="3-2-Target-Audience"><a href="#3-2-Target-Audience" class="headerlink" title="3.2. Target Audience"></a>3.2. Target Audience</h2><ul>
<li>  <a href="https://www.worldometers.info/">World-O-Meter</a></li>
<li>  <a href="https://www.internetworldstats.com/stats.htm">Global internet users</a></li>
<li>  <a href="https://www.cia.gov/library/publications/the-world-factbook/">World Factbook</a></li>
<li>  <a href="https://data.worldbank.org/topic">World Bank global demographics</a></li>
</ul>
<h2 id="3-3-Early-Feedback"><a href="#3-3-Early-Feedback" class="headerlink" title="3.3. Early Feedback"></a>3.3. Early Feedback</h2><ul>
<li>  <a href="https://www.inc.com/ilya-pozin/how-to-validate-your-start-up-idea.html">How to Validate Your Startup Idea</a></li>
<li>  <a href="https://fundersandfounders.com/how-to-test-your-startup-idea-for-50/">How to Test Your Startup Idea for $50</a></li>
<li>  <a href="https://www.startupbros.com/3-steps-to-validate-your-business-idea-for-free/">3 Steps to Validate Your Business Idea for Free . . . Almost</a></li>
</ul>
<h2 id="3-4-Competition"><a href="#3-4-Competition" class="headerlink" title="3.4. Competition"></a>3.4. Competition</h2><ul>
<li>  <a href="https://justinmares.com/a-startup-guide-to-competitive-research/">A Startup Guide to Competitive Research</a></li>
<li>  <a href="https://www.inc.com/guides/2010/05/conducting-competitive-research.html">How to Conduct Competitive Research</a></li>
<li>  <a href="https://www.cbsnews.com/8301-505125_162-51060253/how-to-gather-competitive-research/">How to Gather Competitive Research</a></li>
</ul>
<h2 id="3-5-Personas"><a href="#3-5-Personas" class="headerlink" title="3.5. Personas"></a>3.5. Personas</h2><ul>
<li>  <a href="https://www.markevanstech.com/2013/05/21/personas/">Why Startups Should Create Customer Personas</a></li>
<li>  <a href="https://casjam.com/defining-customer-personas/">The Importance of Defining Customer Personas</a></li>
<li>  <a href="https://marketingbeforefunding.com/2013/02/26/complete-guide-to-creating-a-customer-persona-for-your-startup/">Complete Guide to Creating a Customer Persona for Your Startup</a></li>
</ul>
<h2 id="3-6-Top-User-Stories"><a href="#3-6-Top-User-Stories" class="headerlink" title="3.6. Top User Stories"></a>3.6. Top User Stories</h2><ul>
<li>  <a href="https://agileatlas.org/articles/item/user-stories">Agile Atlas’s User Stories</a></li>
<li>  <a href="https://codesqueeze.com/the-easy-way-to-writing-good-user-stories/">The Easy Way to Writing Good User Stories</a></li>
<li>  <a href="https://www.slideshare.net/romanpichler/writing-great-user-stories">Ten Tips for Writing Great User Stories</a></li>
</ul>
<h2 id="3-7-Business-Model"><a href="#3-7-Business-Model" class="headerlink" title="3.7. Business Model"></a>3.7. Business Model</h2><ul>
<li>  <a href="https://msdn.microsoft.com/en-us/library/windows/apps/hh465433.aspx">Plan for Monetization</a></li>
<li>  <a href="https://venturebeat.com/2013/06/02/mobile-app-monetization-think-business-model-not-ads/">Mobile App Monetization</a></li>
<li>  <a href="https://dailyemerald.com/2013/08/12/the-freemium-business-model-unpredictable-unbalanced-and-permeating-the-gaming-industry/">The Freemium Business Model</a></li>
</ul>
<p>Chúc các bạn đạt giải cao trong các Minigame này nhé</p>
]]></content>
      <categories>
        <category>Event</category>
      </categories>
  </entry>
  <entry>
    <title>[Imagine Cup 2014 – Brain game] January Quiz #1 Now Open</title>
    <url>/2014/01/21/imagine-cup-2014-brain-game-january-quiz-1-now-open-2/</url>
    <content><![CDATA[<p>Lần thứ 3 trong kỳ thi Imagine Cup 2014, cuộc thi Brain Game lại mở ra đón nhận thí sinh với kỹ năng search Google tuyệt hảo để trả lời các câu hỏi hóc búa.</p>
<p>Nếu bạn đang thắc mắc Brain Game là gì, thì đúng như tên gọi của nó, Brain Game là một trò chơi nhỏ để thi tài giữa các thí sinh</p>
<p>Bạn sẽ có 10 câu hỏi trắc nghiệm, mỗi câu hỏi có 3 phương án lựa chọn.</p>
<p>Chủ đề của lần này sẽ là Cloud Computing nói chung và Windows Azure</p>
<p>Giải thưởng: Mỗi một kỳ Brain Game là 1000 USD -&gt; 5000 USD</p>
<p>Nghe hấp dẫn phải không? Vậy làm thế nào để lấy giải?</p>
<span id="more"></span>
<h1 id="Dang-ky-tai-khoan"><a href="#Dang-ky-tai-khoan" class="headerlink" title="Đăng ký tài khoản"></a>Đăng ký tài khoản</h1><p>Để bắt đầu thi, bạn cần có 1 tài khoản Imagine Cup</p>
<p>Bước 1: Truy cập vào trang chủ của cuộc thi tại địa chỉ <a href="http://www.imaginecup.com/">http://www.imaginecup.com/#?fbid=0rl5lvjR9yj</a> và click vào link Sign in ở góc trên bên phải trang web.</p>
<p><img src="http://farm4.staticflickr.com/3807/11905330936_7872323c94_o.png"></p>
<p>Bước 2: Đăng nhập bằng tài khoản Microsoft của bạn. Đó có thể là @live.com, @hotmail.com, @outlook.com và thậm chí là <a href="mailto:mssv@sv.uit.edu.vn">mssv@sv.uit.edu.vn</a> (email sinh viên cũ của bạn)</p>
<p><img src="http://farm6.staticflickr.com/5530/11903250565_0ce7f350ec_o.png"></p>
<p>Bước 3: Cho phép Imagine Cup truy cập vào một số thông tin của bạn</p>
<p><img src="http://farm4.staticflickr.com/3671/11903697084_4fdedf45fc_o.png"></p>
<p>Bấm Yes ở hình trên</p>
<p>Bước 4: Điền các thông tin cơ bản. Đặc biệt chú ý ở mục Country chọn Vietnam (nếu không thì không nhận được quà tại Việt Nam đâu)</p>
<p><img src="http://farm8.staticflickr.com/7323/11903586873_467141ae91_o.png"></p>
<p>Điền xong bấm Save ở dưới cùng</p>
<p>Khi bạn thấy dòng chữ này tức là bạn đã đăng ký thành công</p>
<p><img src="http://farm6.staticflickr.com/5532/11904203366_d13f01dc0c_o.png"></p>
<p>Bước 5: Vào link sau: <a href="https://docs.google.com/forms/d/1SRbaqZoA1m4VjmYZbHl0H00Y-babT9boOEw-X-lcY6s/viewform">https://docs.google.com/forms/d/1SRbaqZoA1m4VjmYZbHl0H00Y-babT9boOEw-X-lcY6s/viewform</a></p>
<p>Điền các thông tin cần thiết để ITIClub có thể hỗ trợ bạn (ý tưởng, mentor, trao quà)</p>
<h1 id="Brain-Game-lan-1-–-Thang-1-nam-2014"><a href="#Brain-Game-lan-1-–-Thang-1-nam-2014" class="headerlink" title="Brain Game lần 1 – Tháng 1 năm 2014"></a>Brain Game lần 1 – Tháng 1 năm 2014</h1><h2 id="Dang-ky-du-thi-Brain-Game"><a href="#Dang-ky-du-thi-Brain-Game" class="headerlink" title="Đăng ký dự thi Brain Game"></a>Đăng ký dự thi Brain Game</h2><p>Okie, giờ chúng ta đã có tài khoản rồi, bây giờ là thi tài thôi</p>
<p><img src="http://farm4.staticflickr.com/3775/11903841074_ed9daa38f2_o.png"></p>
<p>Nhấn vào ô vuông màu xanh bên trên</p>
<p>Bạn sẽ được chuyển sang Dashboard của bạn, là nơi bạn sẽ quản lý quá trình tham gia Imagine Cup của mình</p>
<p>Tìm mục My Individual Challenge</p>
<p><img src="http://farm6.staticflickr.com/5505/11903856804_86ed1e6f75_o.png"></p>
<p>Nhấn Register, chờ một lúc cho nó hoàn tất đăng ký, rồi nhấn Compete</p>
<p><img src="http://farm4.staticflickr.com/3797/11903443215_4029803c20_o.png"><img src="http://farm4.staticflickr.com/3828/11903455605_71202057a4_o.png"></p>
<p>Đã có link để làm bài, nhấn Take the Quiz</p>
<h2 id="Luu-y-truoc-khi-lam-bai-thi"><a href="#Luu-y-truoc-khi-lam-bai-thi" class="headerlink" title="Lưu ý trước khi làm bài thi"></a>Lưu ý trước khi làm bài thi</h2><p>Bạn sẽ trả lời 10 câu hỏi dạng trắc nghiệm về chủ đề Windows Azure và Cloud Computing nói chung</p>
<p>Bạn có thể sử dụng các công cụ tìm kiếm như Bing hoặc Google để trả lời câu hỏi</p>
<p>Điểm của bạn được tính trên thời gian làm bài. Làm càng nhanh điểm càng cao</p>
<h2 id="Bat-dau-lam-bai"><a href="#Bat-dau-lam-bai" class="headerlink" title="Bắt đầu làm bài"></a>Bắt đầu làm bài</h2><p>Nhấn dòng chữ Take the Quiz</p>
<p><img src="http://farm8.staticflickr.com/7309/11903931924_1434451bb5_o.png"></p>
<p>Và thế là bạn bắt đầu làm bài</p>
<h2 id="Ho-tro-lam-bai"><a href="#Ho-tro-lam-bai" class="headerlink" title="Hỗ trợ làm bài"></a>Hỗ trợ làm bài</h2><p>Một lần nữa, xin vui lòng điền vào mẫu form nếu bạn chưa điền: <a href="https://docs.google.com/forms/d/1SRbaqZoA1m4VjmYZbHl0H00Y-babT9boOEw-X-lcY6s/viewform">https://docs.google.com/forms/d/1SRbaqZoA1m4VjmYZbHl0H00Y-babT9boOEw-X-lcY6s/viewform</a></p>
<p>Sau đây sẽ là danh sách các từ khóa mà bạn sử dụng để search câu hỏi trên google hoặc bing. Câu trả lời thường nằm ở kết quả đầu tiên hoặc trong 10 kết quả dầu tiên</p>
<ul>
<li>  Jeff Bezos a properly sized team</li>
<li>  Heroku’s first supported language</li>
<li>  Windows Azure offer platform as a service wiki</li>
<li>  “Carbon Disclosure Project” save annually by the year 2020</li>
<li>  The 3Com Ergo Audrey</li>
<li>  Microsoft is upping the encryption and security measures for its cloud services</li>
<li>  spent on cloud computing services in 2014</li>
<li>  created an entire Cloud Computing Iniative in 2011</li>
<li>  Lost prime number</li>
</ul>
<p>Sau khi trả lời 10 câu hỏi, bạn bấm nút Submit như trong hình</p>
<p><img src="http://farm6.staticflickr.com/5544/11902545335_32741f6f93_o.png"></p>
<p>Lưu ý quan trọng: Bắt buộc phải nhấn vào dòng chữ Click here như hình dưới để Imagine Cup ghi nhận câu trả lời của bạn</p>
<p><img src="http://farm8.staticflickr.com/7444/11902856543_f5d1020bd3_o.png"></p>
<p>Và sau cùng, bạn sẽ có cơ hội nhận thêm 4000 USD nữa (tổng cộng 5000 USD) nếu bạn chia sẻ một link mời mọi người tham gia Brain Game (Tối thiểu 2 người nhé)</p>
<p><img src="http://farm8.staticflickr.com/7347/11904671933_fc8393e8a5_o.png"></p>
]]></content>
      <categories>
        <category>Imagine Cup</category>
      </categories>
      <tags>
        <tag>brain</tag>
        <tag>game</tag>
      </tags>
  </entry>
  <entry>
    <title>[Basic for Absolute Beginner] - [Part 2] - Layout with XAML</title>
    <url>/2014/01/21/windows-phone-silverlight-layout-with-xaml-basic-for-absolute-beginner-part-2/</url>
    <content><![CDATA[<p>Đây là phần 2 của loạt bài viết Layout with XAML – Basic for Absolute Beginner</p>
<p>Bài 1 ở đây: <a href="http://cuoilennaocacban2.wordpress.com/2013/11/22/windows-phone-silverlight-layout-with-xaml-basic-for-absolute-beginner/" title="[Windows Phone – Silverlight] Layout with XAML–Basic for AbsoluteBeginner - Part 1">[Windows Phone – Silverlight] Layout with XAML – Basic for AbsoluteBeginner - Part 1</a></p>
<p><img src="http://farm8.staticflickr.com/7369/11949617853_c885ed2f42_o.png%22"></p>
<p>Như các bạn đã biết, ngoài Stackpanel và Grid ra, XAML còn có 1 control cơ bản khác, đó là ListBox (và GridView, ListView, nếu bạn đang lập trình cho Windows 8 hay các ứng dụng WPF)</p>
<p>Trong phạm vi bài viết này, mình sẽ đề cập tới ListBox cùng cách thiết kế nó trên giao diện.</p>
<span id="more"></span>

<!-- TOC -->

<ul>
<li><a href="#1-listbox-control">1. LISTBOX CONTROL</a><ul>
<li><a href="#11-c%C3%A1c-thu%E1%BB%99c-t%C3%ADnh-quan-tr%E1%BB%8Dng">1.1. Các thuộc tính quan trọng</a><ul>
<li><a href="#111-itemssource">1.1.1. ItemsSource</a></li>
<li><a href="#112-selectedindex">1.1.2. SelectedIndex</a></li>
<li><a href="#113-selecteditem">1.1.3. SelectedItem</a></li>
<li><a href="#114-dataconext--ng%E1%BB%AF-c%E1%BA%A3nh-d%E1%BB%AF-li%E1%BB%87u">1.1.4. DataConext – ngữ cảnh dữ liệu</a></li>
</ul>
</li>
<li><a href="#12-th%E1%BB%AD-nghi%E1%BB%87m">1.2. Thử nghiệm</a></li>
</ul>
</li>
<li><a href="#2-databinding--ph%C6%B0%C6%A1ng-ph%C3%A1p-tuy%E1%BB%87t-v%E1%BB%9Di-%C4%91%E1%BB%83-hi%E1%BB%83n-th%E1%BB%8B-d%E1%BB%AF-li%E1%BB%87u">2. DataBinding – Phương pháp tuyệt vời để hiển thị dữ liệu</a><ul>
<li><a href="#21-chu%E1%BA%A9n-b%E1%BB%8B">2.1. Chuẩn bị</a></li>
<li><a href="#22-ki%E1%BB%83u-d%E1%BB%AF-li%E1%BB%87u">2.2. Kiểu dữ liệu</a></li>
<li><a href="#23-ngu%E1%BB%93n-d%E1%BB%AF-li%E1%BB%87u">2.3. Nguồn dữ liệu</a></li>
<li><a href="#24-n%E1%BA%A1p-d%E1%BB%AF-li%E1%BB%87u">2.4. Nạp dữ liệu</a></li>
<li><a href="#25-binding">2.5. Binding</a></li>
<li><a href="#26-datatemplate">2.6. DataTemplate</a></li>
</ul>
</li>
<li><a href="#3-event-handling">3. Event Handling</a></li>
</ul>
<!-- /TOC -->

<h1 id="1-LISTBOX-CONTROL"><a href="#1-LISTBOX-CONTROL" class="headerlink" title="1. LISTBOX CONTROL"></a>1. LISTBOX CONTROL</h1><p><a id="markdown-listbox-control" name="listbox-control"></a></p>
<p>ListBox control dùng để hiện thị một danh sách các item.</p>
<p>Danh sách này sẽ có một giao diện nhất định, một kiểu dữ liệu nhất định tùy bạn chọn</p>
<p>Ví dụ: “Top 30 video được xem nhiều nhất trên youtube” là một dạng dữ liệu mà ta sẽ dùng ListBox để hiển thị</p>
<h2 id="1-1-Cac-thuoc-tinh-quan-trong"><a href="#1-1-Cac-thuoc-tinh-quan-trong" class="headerlink" title="1.1. Các thuộc tính quan trọng"></a>1.1. Các thuộc tính quan trọng</h2><p><a id="markdown-c%C3%A1c-thu%E1%BB%99c-t%C3%ADnh-quan-tr%E1%BB%8Dng" name="c%C3%A1c-thu%E1%BB%99c-t%C3%ADnh-quan-tr%E1%BB%8Dng"></a></p>
<p><img src="http://farm8.staticflickr.com/7352/11957902726_0aa577d3c4_o.png"></p>
<h3 id="1-1-1-ItemsSource"><a href="#1-1-1-ItemsSource" class="headerlink" title="1.1.1. ItemsSource"></a>1.1.1. ItemsSource</h3><p><a id="markdown-itemssource" name="itemssource"></a></p>
<p>ItemsSource là nguồn dữ liệu. Listbox này sẽ hiển thị dữ liệu từ đâu?</p>
<p>ItemsSource có thể là một List hoặc một ObservableCollection, ta sẽ nói đến nó ở phần sau</p>
<h3 id="1-1-2-SelectedIndex"><a href="#1-1-2-SelectedIndex" class="headerlink" title="1.1.2. SelectedIndex"></a>1.1.2. SelectedIndex</h3><p><a id="markdown-selectedindex" name="selectedindex"></a></p>
<p>Cái tên đã nói lên tất cả. Đây là item đang được chọn trong listbox của bạn. Trong quá trình khởi tạo, giá trị này sẽ là -1</p>
<p>Lưu ý rằng item bắt đầu từ số 0 trở đi. Giả sử bạn có 5 items, thì nó sẽ được đánh số từ 0 tới 4</p>
<h3 id="1-1-3-SelectedItem"><a href="#1-1-3-SelectedItem" class="headerlink" title="1.1.3. SelectedItem"></a>1.1.3. SelectedItem</h3><p><a id="markdown-selecteditem" name="selecteditem"></a></p>
<p>Đây lại là một thuộc tính khác. Giá trị của thuộc tínhnày bằng null khi khởi tạo. Và khi người dùng chọn một item nào đó trong listbox, item đó sẽ được phản xạ sang thuộc tính này.</p>
<p>Thuộc tính này có kiểu dữ liệu là Object, khi dùng bạn phải ép kiểu sang kiểu dữ liệu của danh sách</p>
<h3 id="1-1-4-DataConext-–-ngu-canh-du-lieu"><a href="#1-1-4-DataConext-–-ngu-canh-du-lieu" class="headerlink" title="1.1.4. DataConext – ngữ cảnh dữ liệu"></a>1.1.4. DataConext – ngữ cảnh dữ liệu</h3><p><a id="markdown-dataconext-%E2%80%93-ng%E1%BB%AF-c%E1%BA%A3nh-d%E1%BB%AF-li%E1%BB%87u" name="dataconext-%E2%80%93-ng%E1%BB%AF-c%E1%BA%A3nh-d%E1%BB%AF-li%E1%BB%87u"></a></p>
<p>DataContext sẽ được dùng trong một số trường hợp advance binding, hiện tại thì bạn chưa cần phải quan tâm tới nó</p>
<h2 id="1-2-Thu-nghiem"><a href="#1-2-Thu-nghiem" class="headerlink" title="1.2. Thử nghiệm"></a>1.2. Thử nghiệm</h2><p><a id="markdown-th%E1%BB%AD-nghi%E1%BB%87m" name="th%E1%BB%AD-nghi%E1%BB%87m"></a></p>
<p>Tạo một project Windows Phone</p>
<p>Trong LayoutRootGrid, tạo một Listbox</p>
<p><img src="http://farm3.staticflickr.com/2858/11958105964_af2da41349_o.png"></p>
<p>Chọn thẻ Property khi đang select listbox này</p>
<p><img src="http://farm4.staticflickr.com/3749/11957691795_1e3ce3c8ef_o.png"></p>
<p>Trong mục Items, bạn thêm mới một số item cho listbox</p>
<p><img src="http://farm4.staticflickr.com/3665/11958004856_387a1bbb07_o.png%22"></p>
<p>Sau đó, chọn Listbox Item, rồi nhấn nút Add</p>
<p><img src="http://farm4.staticflickr.com/3717/11958010686_b3baba9d9d_o.png%22"></p>
<p>Như bạn có thể thấy, một item với index = xuất hiện cùng thuộc tính của nó</p>
<p><img src="http://farm4.staticflickr.com/3679/11957481983_4c4a040752_o.png%22"></p>
<p>Rồi thêm vào content như hình sau:</p>
<p><img src="http://farm8.staticflickr.com/7414/11957661595_36e5271615_o.png%22"></p>
<p>Nhấn nút chạy thử, và bạn sẽ thấy cách hoạt động của listbox</p>
<p><a href="http://youtu.be/8cu_REIkxPQ">http://youtu.be/8cu_REIkxPQ</a></p>
<p>Bây giờ bạn đã nắm cách thức Listbox hoạt động cơ bản nhất. Ta hãy cùng “Đào sâu” vào thế giới XAML nhé</p>
<h1 id="2-DataBinding-–-Phuong-phap-tuyet-voi-de-hien-thi-du-lieu"><a href="#2-DataBinding-–-Phuong-phap-tuyet-voi-de-hien-thi-du-lieu" class="headerlink" title="2. DataBinding – Phương pháp tuyệt vời để hiển thị dữ liệu"></a>2. DataBinding – Phương pháp tuyệt vời để hiển thị dữ liệu</h1><p><a id="markdown-databinding-%E2%80%93-ph%C6%B0%C6%A1ng-ph%C3%A1p-tuy%E1%BB%87t-v%E1%BB%9Di-%C4%91%E1%BB%83-hi%E1%BB%83n-th%E1%BB%8B-d%E1%BB%AF-li%E1%BB%87u" name="databinding-%E2%80%93-ph%C6%B0%C6%A1ng-ph%C3%A1p-tuy%E1%BB%87t-v%E1%BB%9Di-%C4%91%E1%BB%83-hi%E1%BB%83n-th%E1%BB%8B-d%E1%BB%AF-li%E1%BB%87u"></a></p>
<p>Listbox được dùng nhiều nhất với kỹ thuật DataBinding này (tạm dịch là gắn kết dữ liệu đi)</p>
<p>Kỹ thuật này cho phép bạn hiển thị dữ liệu từ một nguồn nào đó lên trên listbox. Nguồn đó có thể là một List, hoặc một Observable Collection</p>
<p>Nhiều người khi nghĩ tới DataBinding, họ sẽ nghĩ ngay tới mô hình MVVM.</p>
<p>Khoan đã, trong vai một người mới học, hẳn bạn cũng sẽ không biết MVVM là cái gì, mặt mũi nó ra sao.</p>
<p>Vì vậy, hãy tìm hiểu một số khái niệm và cách thức cơ bản trước đã</p>
<h2 id="2-1-Chuan-bi"><a href="#2-1-Chuan-bi" class="headerlink" title="2.1. Chuẩn bị"></a>2.1. Chuẩn bị</h2><p><a id="markdown-chu%E1%BA%A9n-b%E1%BB%8B" name="chu%E1%BA%A9n-b%E1%BB%8B"></a></p>
<p>Để thực hiện theo bài viết này, bạn cần có các công cụ sau:</p>
<p>Visual Studio, chắc cái này bạn có rồi</p>
<p>ReSharper: hỗ trợ cho bạn tự động hóa các công việc nhàm chán nhưng cần thiết. Lưu ý đây là phần mềm thương mại</p>
<p>Sau khi cài ReSharper, hãy tiếp tục bài viết nhé</p>
<h2 id="2-2-Kieu-du-lieu"><a href="#2-2-Kieu-du-lieu" class="headerlink" title="2.2. Kiểu dữ liệu"></a>2.2. Kiểu dữ liệu</h2><p><a id="markdown-ki%E1%BB%83u-d%E1%BB%AF-li%E1%BB%87u" name="ki%E1%BB%83u-d%E1%BB%AF-li%E1%BB%87u"></a></p>
<p>Để gắn dữ liệu lên ListBox, ta cần phải có một “Nguồn dữ liệu”, và nguồn dữ liệu đó phải được tạo ra bởi một kiểu dữ liệu nào đó, vì nó là một danh sách các item</p>
<p>Ví dụ: một danh sách các chuỗi, một danh sách các số nguyên</p>
<p>Tuy nhiên, bạn cũng có thể tạo ra kiểu dữ liệu riêng của mình, như kiểu “Danh sách các món ăn”</p>
<p>Vậy tạo ra kiểu dữ liệu như thế nào?</p>
<p>Tạo một Folder mới, đặt tên là Model</p>
<p><img src="http://farm6.staticflickr.com/5535/11958266823_83eee63384_o.png%22"></p>
<p>Hãy tạo một file class mới trong folder đó với tên gọi DataStructure</p>
<p><img src="http://farm8.staticflickr.com/7418/11958284923_ed6b439987_o.png%22"></p>
<p>Một class DataStructure mới được tạo ra. Bạn có thể xóa nó đi, và bắt đầu định nghĩa cho class riêng của mình</p>
<p><img src="http://farm4.staticflickr.com/3769/11958468354_7b160fd49c_o.png%22"></p>
<p>Theo như hình trên, bạn có 3 thuộc tính private. Khoan đã, private không thể truy cập ngoài class, nên ta cần tạo các public property cho chúng</p>
<p>Trước khi tạo các public property, ta nên làm một chuyện khác, đó là khai báo Interface <code>INotifyPropertyChanged</code></p>
<p>Interface này giúp cho việc binding dữ liệu lên giao diện được “liên tục”. Tức là khi có một sự thay đổi về mặt dữ liệu trong nguồn dữ liệu, sự thay đổi đó sẽ lập tức được hiển thị trên giao diện.</p>
<p>Giả sử như bạn có 5 FoodItem, với 5 tên khác nhau. Bạn muốn thay đổi tên của item thứ 2, bạn chỉ cần truy xuất tới item 2 và thay đổi giá trị của thuộc tính foodName, trên giao diện sẽ tự động thay đổi theo mà không cần thêm một dòng code nào cả</p>
<p>Okie, khai báo thuộc tính nào</p>
<p><img src="http://farm8.staticflickr.com/7448/11958537464_42bf1c99d6_o.png%22"></p>
<p>Bạn phải bắt buộc khai báo thêm 1 event và một Method trong class của mình sau khi khai báo Interface</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">protected virtual void OnPropertyChanged([CallerMemberName] string propertyName &#x3D; null)
&#123;
    PropertyChangedEventHandler handler &#x3D; PropertyChanged;

    if (handler !&#x3D; null)
    &#123;
      handler(this, new PropertyChangedEventArgs(propertyName));
    &#125;
&#125;</code></pre>

<p>Nếu bạn có ReShaper, thì mọi việc đơn giản hơn nhiều</p>
<p><img src="http://farm8.staticflickr.com/7353/11958604664_35f1789b07_o.png%22"></p>
<p>Tiếp tục chọn Yes nhé</p>
<p><img src="http://farm8.staticflickr.com/7389/11958614374_ec6174c194_o.png%22"></p>
<p>Và bạn sẽ thấy kết quả</p>
<p><img src="http://farm8.staticflickr.com/7396/11958478293_516b79813d_o.png%22"></p>
<p>Lưu ý là ReSharper sẽ thêm một file vào Property của Project bạn đang viết</p>
<p><img src="http://farm3.staticflickr.com/2886/11958202385_53fea80434_o.png%22"></p>
<p>File Dropbox cho bạn nào không có ReSharper: <a href="https://db.tt/ycsvjt1S">https://db.tt/ycsvjt1S</a></p>
<p>Rồi, bây giờ ta sẽ tạo các Public Property</p>
<p>Một lần nữa, ReSharper sẽ giúp ích chúng ta.</p>
<p>Đặt con trỏ vào dưới các thuộc tính Private, chọn ReShaper &gt; Edit &gt; Generate Code…</p>
<p><img src="http://farm8.staticflickr.com/7350/11958249665_5a3716b5f1_o.png%22"></p>
<p>Chọn Property cho hộp thoại hiện ra</p>
<p><img src="http://farm4.staticflickr.com/3771/11958694544_91d3348748_o.png%22"></p>
<p>Check cả 3 thuộc tính, check luôn tùy chọn “Notify on Property Changes”</p>
<p><img src="http://farm3.staticflickr.com/2884/11958705564_54415bb772_o.png%22"></p>
<p>Thế là bạn có 3 thuộc tính đúng chuẩn như sau</p>
<p><img src="http://farm8.staticflickr.com/7290/11958720644_183a2247f4_o.png%22"></p>
<h2 id="2-3-Nguon-du-lieu"><a href="#2-3-Nguon-du-lieu" class="headerlink" title="2.3. Nguồn dữ liệu"></a>2.3. Nguồn dữ liệu</h2><p><a id="markdown-ngu%E1%BB%93n-d%E1%BB%AF-li%E1%BB%87u" name="ngu%E1%BB%93n-d%E1%BB%AF-li%E1%BB%87u"></a></p>
<p>Bạn đã có 1 kiểu dữ liệu, bây giờ bạn sẽ cần 1 nguồn dữ liệu</p>
<p>Tạo một Folder mới tên Data</p>
<p><img src="http://farm6.staticflickr.com/5471/11959227656_5759b227f4_o.png%22"></p>
<p>Tạo một class mới tên StaticData trong Folder đó</p>
<p><img src="http://farm4.staticflickr.com/3671/11958698323_1b848ffb0a_o.png%22"></p>
<p>Khai báo một biến static ObservableCollection</p>
<p><img src="http://farm8.staticflickr.com/7447/11959251496_b5da65d4fc_o.png%22"></p>
<p>Khi có ReSharper, nó sẽ tự động thêm các Namespace cần thiết cho bạn. Ở đây, class FoodItem thuộc namespace TestAd.Model</p>
<p>Kết quả là bạn có như sau:</p>
<p><img src="http://farm3.staticflickr.com/2879/11958878734_06cb55d64e_o.png%22"></p>
<h2 id="2-4-Nap-du-lieu"><a href="#2-4-Nap-du-lieu" class="headerlink" title="2.4. Nạp dữ liệu"></a>2.4. Nạp dữ liệu</h2><p><a id="markdown-n%E1%BA%A1p-d%E1%BB%AF-li%E1%BB%87u" name="n%E1%BA%A1p-d%E1%BB%AF-li%E1%BB%87u"></a></p>
<p>Bây giờ, ta sẽ nạp dữ liệu vào ObservableCollection này</p>
<p>Mở file code behind của page có chứa listbox mà bạn đã tạo trong phần 1</p>
<p>Khai báo như sau, bạn sẽ thấy kiểu khai báo này quen thuộc trong bài: <a href="http://cuoilennaocacban.blogspot.com/2013/11/windows-phone-where-to-put-load-data.html">[Windows Phone] Where to put LoadData method</a></p>
<p><img src="http://farm6.staticflickr.com/5472/11961364684_421975edb5_o.png%22"></p>
<p>Bước 1: kiểm tra dữ liệu đã tồn tại</p>
<p>Đặc trưng cơ bản của cách khai báo LoadData như thế này là khi ta navigate tới trang này, hoặc có sự thay đổi về elements trên giao diện, event OnLoaded sẽ được gọi lại.</p>
<p>Vì vậy, ta chỉnh sửa event OnLoaded để ngăn ngừa việc load lại dữ liệu như sau:</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">private void OnLoaded(object sender, RoutedEventArgs routedEventArgs)
&#123; 
  if (StaticData.FoodItemCollection.Count &#x3D;&#x3D; 0)
  &#123;
    LoadData();
  &#125;
&#125;</code></pre>

<p>Thêm một số code như sau vào hàm LoadData</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">private void LoadData() 
&#123; 
  for (int i &#x3D;0;i &lt;5;i++)
  &#123; 
    FoodItem foodItem &#x3D;new FoodItem();
    foodItem.Id &#x3D; i;
    foodItem.FoodName &#x3D;&quot;Food Name is &quot; +i;
    foodItem.ImageLink &#x3D;&quot;FoodItem_&quot; + i + &quot;_imageLink&quot;;
    StaticData.FoodItemCollection.Add(foodItem);
  &#125;
&#125;</code></pre>

<p>Mục tiêu của đoạn code trên là add 5 item giả vào FoodItemCollection.</p>
<h2 id="2-5-Binding"><a href="#2-5-Binding" class="headerlink" title="2.5. Binding"></a>2.5. Binding</h2><p><a id="markdown-binding" name="binding"></a></p>
<p>Vậy ta đã có dữ liệu, có nguồn dữ liệu, có luôn listbox, bây giờ ta sẽ tiến hành binding dữ liệu này vào listbox</p>
<p>Việc này được thực hiện bởi 1 dòng code duy nhất.</p>
<p>Đặt tên cho listbox của bạn:</p>
<p><img src="http://farm4.staticflickr.com/3740/11961472144_46f86145ef_o.png%22"></p>
<p>Sửa event OnLoaded lại như sau:</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">private void OnLoaded(object sender, RoutedEventArgs routedEventArgs)
&#123;
  if (StaticData.FoodItemCollection.Count &#x3D;&#x3D; 0)
  &#123; 
    LoadData();
    FoodListBox.ItemsSource &#x3D; StaticData.FoodItemCollection;
  &#125;
&#125;</code></pre>

<p>Sau đó, bấm chạy thử trên Emulator hay trên Device tùy thích</p>
<p><img src="http://farm4.staticflickr.com/3712/11961887436_8c77ca2cce_o.png%22"></p>
<p>Và đây chính là thành quả của các bạn</p>
<p><img src="http://farm4.staticflickr.com/3826/11961917396_bb27d31e3c_o.png%22"></p>
<h2 id="2-6-DataTemplate"><a href="#2-6-DataTemplate" class="headerlink" title="2.6. DataTemplate"></a>2.6. DataTemplate</h2><p><a id="markdown-datatemplate" name="datatemplate"></a></p>
<p>Vậy là dữ liệu đã được hiển thị trên giao diện, nhưng không theo cách bạn mong muốn</p>
<p>Chính vì thế, ta sẽ tạo một DataTemplate cho Listbox, mục đích là để “định nghĩa” cách hiển thị dữ liệu</p>
<p>Vào code XAML của bạn, bấm chọn Document Outline</p>
<p><img src="http://farm8.staticflickr.com/7314/11961424713_95b6a4b3de_o.png%22"></p>
<p>Document Outline là nơi thể hiện toàn bộ mọi thứ có trên giao diện của bạn dưới dạng cây</p>
<p>Bấm chuột phải vào ListBox của bạn và chọn</p>
<p><img src="http://farm6.staticflickr.com/5535/11961470493_0b1b86675f_o.png%22"></p>
<p><img src="http://farm4.staticflickr.com/3666/11962019876_076607132c_o.png%22"></p>
<p>Đặt tên cho DataTemplate của bạn rồi nhấn OK</p>
<p><img src="http://farm8.staticflickr.com/7324/11961488143_d9af248312_o.png%22"></p>
<p>Nếu bạn chọn Define in Application, DataTemplate này có thể được dùng ở mọi page trong project của bạn mà không cần phải khai báo lại</p>
<p>Trong lúc thiết kế, bạn có thể thấy thiết kế của mình được hiển thị trực quan</p>
<p><img src="http://farm8.staticflickr.com/7405/11961742983_933fc0557f_o.png%22"></p>
<p>Nhấn chạy một lần nữa, và mọi thứ sẽ đúng như ý bạn</p>
<p><img src="http://farm8.staticflickr.com/7397/11961908164_dfe6879e28_o.png%22"></p>
<h1 id="3-Event-Handling"><a href="#3-Event-Handling" class="headerlink" title="3. Event Handling"></a>3. Event Handling</h1><p><a id="markdown-event-handling" name="event-handling"></a></p>
<p>Vậy là bạn đã có 1 listbox, bây giờ ta sẽ áp dụng một số sự kiện cho nó để thông báo cho người dùng biết họ đã chọn Listbox nào</p>
<p>Trong Property của FoodListBox, chọn nút Event</p>
<p><img src="http://farm4.staticflickr.com/3678/11961483605_78ff2960f3_o.png%22"></p>
<p>Double Click vào event “Selection Changed” để khai báo event</p>
<p>Thêm đoạn code sau vào event mới được tạo</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">if (FoodListBox.SelectedIndex !&#x3D; –1)
&#123;
  FoodItem foodItem &#x3D; FoodListBox.SelectedItem as FoodItem;
  MessageBox.Show(foodItem.FoodName);
&#125;</code></pre>

<p>Chạy thử và chọn một item bất kỳ</p>
<p><img src="http://farm4.staticflickr.com/3751/11962377686_6b9e9bdb79_o.png%22"></p>
<p>Thật tuyệt vời phải không</p>
<p>Vậy là hết rồi, hẹn gặp lại các bạn ở episode tiếp theo của Series Absolute Beginner nhé</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows Phone</category>
      </categories>
      <tags>
        <tag>windows phone</tag>
        <tag>layout</tag>
        <tag>listbox</tag>
        <tag>template</tag>
        <tag>xaml</tag>
      </tags>
  </entry>
  <entry>
    <title>[Basic for Absolute Beginner] – [Part 3] – App’s Structure and how customized it</title>
    <url>/2014/02/26/basic-for-absolute-beginner-part-3-apps-structure-and-how-customized-it/</url>
    <content><![CDATA[<p><img src="http://farm4.staticflickr.com/3740/12789845873_f26035990e_o.png%22"> Chào các bạn,</p>
<p>Sau đợt nghỉ lễ dài, hôm nay mình giới thiệu phần 3 của loạt bài viết [Basic for Absolute Beginner]</p>
<p>Phần 1 nói về các control cơ bản là Grid và StackPanel: <a href="http://cuoilennaocacban2.wordpress.com/2013/11/22/windows-phone-silverlight-layout-with-xaml-basic-for-absolute-beginner/">[Windows Phone–Silverlight] Layout with XAML–Basic for Absolute Beginner – Part 1</a></p>
<p>Phần 2 nói về thiết kế giao diện với XAML: <a href="http://cuoilennaocacban2.wordpress.com/2014/01/21/windows-phone-silverlight-layout-with-xaml-basic-for-absolute-beginner-part-2/">[Windows Phone – Silverlight] Layout with XAML – Basic for Absolute Beginner – Part 2</a></p>
<p>Tại sao tôi lại nói 2 phần này trước cả App’s Structure. Các control là điều cơ bản nhất, cho dù sau này Structure một project có thể sẽ thay đổi, nhưng bạn sẽ tìm ra cách hiểu chúng nhanh thôi. Khi mới tạo một project Windows Phone, Visual Studio đã mở sẵn cho bạn file Mainpage.xaml để bạn chỉnh sửa.</p>
<p>Bây giờ, làm một cú lội ngược dòng, bạn sẽ học về cấu trúc một ứng dụng trong Windows Phone nhé</p>
<span id="more"></span>
<ul>
<li>  <a href="#1-c%C3%A1ch-th%E1%BB%A9c-%E1%BB%A9ng-d%E1%BB%A5ng-ho%E1%BA%A1t-%C4%91%E1%BB%99ng-tr%C3%AAn-thi%E1%BA%BFt-b%E1%BB%8B"><strong>1. Cách thức ứng dụng hoạt động trên thiết bị</strong></a></li>
<li><a href="#2-c%E1%BA%A5u-tr%C3%BAc-c%E1%BB%A7a-%E1%BB%A9ng-d%E1%BB%A5ng"><strong>2. Cấu trúc của ứng dụng</strong></a><ul>
<li><a href="#21-c%C3%A1c-th%C3%A0nh-ph%E1%BA%A7n"><strong>2.1 Các thành phần</strong></a><ul>
<li>  <a href="#211-giao-di%E1%BB%87n-ch%C3%ADnh"><strong>2.1.1 Giao diện chính</strong></a></li>
<li>  <a href="#212-properties"><strong>2.1.2 Properties</strong></a></li>
<li>  <a href="#213-references"><strong>2.1.3 References</strong></a></li>
<li>  <a href="#214-assets"><strong>2.1.4 Assets</strong></a></li>
<li>  <a href="#215-resource"><strong>2.1.5 Resource</strong></a></li>
<li>  <a href="#216-appxaml-v%C3%A0-appxamlcs"><strong>2.1.6 App.xaml và App.xaml.cs</strong></a></li>
<li>  <a href="#217-localizedstringcs"><strong>2.1.7 LocalizedString.cs</strong></a></li>
<li>  <a href="#218-mainpagexaml-v%C3%A0-mainpagexamlcs"><strong>2.1.8 MainPage.xaml và MainPage.xaml.cs</strong></a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="1-Cach-thuc-ung-dung-hoat-dong-tren-thiet-bi"><a href="#1-Cach-thuc-ung-dung-hoat-dong-tren-thiet-bi" class="headerlink" title="1. Cách thức ứng dụng hoạt động trên thiết bị"></a><strong>1. Cách thức ứng dụng hoạt động trên thiết bị</strong></h1><p>Khi cài ứng dụng lên thiết bị, bạn sẽ có một mô hình như sau:</p>
<p>Áp dụng cho Windows Phone 7 và Windows Phone 8. Hứa hẹn sẽ có thay đổi lớn trong Windows Phone 8.1 <img src="http://farm4.staticflickr.com/3834/12789771723_b7d84196a3_o.png"></p>
<p>Các mũi tên màu vàng biểu thị cho khả năng truy xuất</p>
<p>Nhìn hình trên, bạn sẽ thấy Ứng dụng của bạn chỉ được phép truy cập vào Isolated Storage của chính nó mà thôi (Cái tên Isolated tức là “Cô lập”)</p>
<p>Ngoài ra, nếu muốn truy cập vào thẻ nhớ, ứng dụng của bạn bắt buộc phải thông qua API của hệ điều hành. Hiện tại thì Windows Phone chỉ mới cho phép đọc ghi các file media (nhạc, hình, video) lên thẻ nhớ mà thôi.</p>
<h1 id="2-Cau-truc-cua-ung-dung"><a href="#2-Cau-truc-cua-ung-dung" class="headerlink" title="2. Cấu trúc của ứng dụng"></a><strong>2. Cấu trúc của ứng dụng</strong></h1><p>Mở Visual Studio 2013 lên, bạn sẽ thấy giao diện như sau:</p>
<p><img src="http://farm6.staticflickr.com/5497/12791385094_05d22bf96d_o.png%22"></p>
<p>Bấm chọn New Project, chọn Windows Phone &gt; Windows Phone App</p>
<p><img src="http://farm8.staticflickr.com/7351/12790972835_528e1f2515_o.png%22"></p>
<p>Một số loại Project khác bạn sẽ có cơ hội thực tập với nó sau</p>
<p>Ở bên dưới, có 2 tùy chọn khá vui</p>
<p><img src="http://farm4.staticflickr.com/3810/12791424864_1cb8e8fe4a_o.png%22"></p>
<ul>
<li>  Create directory for Solution: Solution của bạn sẽ được đặt trong một folder “mẹ”, và Project sẽ được đặt trong folder “con”</li>
</ul>
<p>Nói thêm một chút về các thể loại Project của Visual Studio: Khi tạo mới, bạn sẽ tạo một Solution (đuôi file .sln). Và toàn bộ Project của bạn sẽ nằm trong Solution đó. Một Solution có thể chứa nhiều Project.</p>
<p>Vậy tại sao bạn lại cần nhiều Project trong 1 Solution? Vì mỗi Project sẽ tạo ra một module khác nhau của hệ thống. Có thể Project chính của bạn là một ứng dụng nghe nhạc, và Project phụ sẽ là một module cho phép cập nhật ngầm, tự động thông tin bài nhạc, hình album vân vân</p>
<ul>
<li>  Add to source control: Source Control là một thuật ngữ cho một loại công cụ giúp bạn quản lý code của mình được hiệu quả. Microsoft có một công cụ Source Control là Team Foundation Server. Các bài viết sau sẽ nói về nó nhé</li>
</ul>
<p>Nhấn Ok để tạo Project</p>
<p><img src="http://farm3.staticflickr.com/2812/12792547075_8aaa4aa9d4_o.png%22"></p>
<p>Trên đây là giao diện sau khi tạo (của bạn có thể không giống lắm)</p>
<h2 id="2-1-Cac-thanh-phan"><a href="#2-1-Cac-thanh-phan" class="headerlink" title="2.1 Các thành phần"></a><strong>2.1 Các thành phần</strong></h2><h3 id="2-1-1-Giao-dien-chinh"><a href="#2-1-1-Giao-dien-chinh" class="headerlink" title="2.1.1 Giao diện chính"></a><strong>2.1.1 Giao diện chính</strong></h3><p><img src="http://farm3.staticflickr.com/2842/12792570385_36061d5837_o.png%22"></p>
<p>Đây là designer, hiển thị trực quan những gì bạn code trong file XAML</p>
<p><img src="http://farm8.staticflickr.com/7427/12793026714_6bcf6ec07b_o.png%22"></p>
<p>XAML, code định nghĩa giao diện của bạn. Cột bên phải là thanh cuộn cải tiến có từ Visual 2012</p>
<p><img src="http://farm4.staticflickr.com/3673/12792616615_8cea25525e_o.png%22"></p>
<p>3 nút này có chức năng thay đổi cách bố cục. Nhấn thử và bạn sẽ biết</p>
<p><img src="http://farm8.staticflickr.com/7301/12792644865_d7f85b1efd_o.png%22"></p>
<p>Còn đây là Solution Explorer, chứa cấu trúc tập tin trong Project của bạn</p>
<h3 id="2-1-2-Properties"><a href="#2-1-2-Properties" class="headerlink" title="2.1.2 Properties"></a><strong>2.1.2 Properties</strong></h3><p>Mở Properties ra, bạn sẽ thấy có 3 file</p>
<p><img src="http://farm8.staticflickr.com/7292/12793106684_21d1a2cd0f_o.png%22"></p>
<p>Đối với người mới bắt đầu, bạn chỉ cần quan tâm tới “WMAppManifest.xml” là được. Double click vào nó để mở ra</p>
<p>Mục Application UI định nghĩa cho tên gọi, các Icon của ứng dụng</p>
<p><img src="http://farm4.staticflickr.com/3783/12792710505_cd2f45bfd7_o.png%22"></p>
<p>Mục Capabilities định nghĩa những tài nguyên mà ứng dụng sử dụng như Camera, thư viện nhạc, hình, video, các loại cảm biến, mạng Internet, etc.</p>
<p><img src="http://farm4.staticflickr.com/3810/12793179894_6ec2e78465_o.png%22"></p>
<p>Ứng dụng của bạn cần sử dụng cái gì thì tick chọn cái đó. Đừng tick dư</p>
<p>Requirement là những tài nguyên mà ứng dụng bạn “đòi” để có thể chạy được, ví dụ như NFC, Gyroscope</p>
<p><img src="http://farm4.staticflickr.com/3681/12792917443_60e514fc62_o.png%22"></p>
<p>Tại sao vậy? Vì không hẳn tất cả các máy Windows Phone đều như nhau. Có máy có camera trước, có máy không có, blah blah blah. Nếu ứng dụng của bạn nhất thiết phải đòi có những tài nguyên đó, bạn hãy tick vào các ô này. Trên Windows Phone Store, tất cả các máy có cấu hình không đáp ứng được đòi hỏi của bạn sẽ không thể tải được.</p>
<p>Và cái cuối cùng dành cho việc đóng gói và hỗ trợ đa ngôn ngữ. Hiện thời bạn chưa cần quan tâm tới nó</p>
<p><img src="http://farm8.staticflickr.com/7379/12792874415_005fd92688_o.png%22"></p>
<h3 id="2-1-3-References"><a href="#2-1-3-References" class="headerlink" title="2.1.3 References"></a><strong>2.1.3 References</strong></h3><p>References là thư mục chứa các thư viện mà ứng dụng của bạn sẽ sử dụng</p>
<p><img src="http://farm6.staticflickr.com/5528/12792993413_7876c769c3_o.png%22"></p>
<p>Đa phần các thư viện này có thể cài đặt bằng NuGet</p>
<p>Tham khảo bài viết sau: <a href="http://cuoilennaocacban2.wordpress.com/2013/11/11/visual-studio-nuget-the-magician/">[Visual Studio] NUGET the Magician</a></p>
<p>Double click vào một thư viện sẽ cho bạn xem toàn bộ các class và method có trong thư viện đó (máy bạn nào yếu không nên bấm vào, treo máy đấy)</p>
<p>Tính năng này được gọi là Object Explorer, đã có từ lâu rồi</p>
<p><img src="http://farm8.staticflickr.com/7422/12793098413_e19c21cbe5_o.png%22"></p>
<h3 id="2-1-4-Assets"><a href="#2-1-4-Assets" class="headerlink" title="2.1.4 Assets"></a><strong>2.1.4 Assets</strong></h3><p>Thư mục Assets chứa các tập tin hình ảnh, icon, âm thanh, video mà ứng dụng bạn sẽ sử dụng. Thực ra bạn không bị bắt buộc phải để cá tập tin đó vào thư mục này, nhưng cứ làm vậy cho nó có hệ thống</p>
<p>Nhấn chuột phải vào một tập tin nào đó và nhấn Property, bạn sẽ thấy thuộc tính của tập tin này. Thuộc tính quan trọng nhất là Build Action và Copy to output folder</p>
<p><img src="http://farm4.staticflickr.com/3818/12793481294_7d345a6ec2_o.png%22"></p>
<p>Tham khảo bài viết sau để hiểu rõ về chúng: <a href="http://cuoilennaocacban2.wordpress.com/2013/09/07/wp-sl-khac-nhau-resource-content/">[Windows Phone – Silverlight] - Khác nhau giữa “resource” và “content”</a></p>
<p>Để thêm một tập tin nào đó vào thư mục này, chỉ đơn giản là nhấn phải &gt; Add &gt; Existing Item…</p>
<h3 id="2-1-5-Resource"><a href="#2-1-5-Resource" class="headerlink" title="2.1.5 Resource"></a><strong>2.1.5 Resource</strong></h3><p>Thư mục Resource chứa file Resource của ứng dụng.</p>
<p>File Resource thường được dùng để lưu các thông số, thuộc tính vân vân của ứng dụng. Tuy nhiên công dụng lớn nhất của nó là dùng để chuyển đổi ứng dụng của bạn thành ứng dụng đa ngôn ngữ. Ta sẽ nói về nó sau</p>
<h3 id="2-1-6-App-xaml-va-App-xaml-cs"><a href="#2-1-6-App-xaml-va-App-xaml-cs" class="headerlink" title="2.1.6 App.xaml và App.xaml.cs"></a><strong>2.1.6 App.xaml và App.xaml.cs</strong></h3><p>Đối với mỗi một file XAML sẽ có một file XAML.CS đi kèm.</p>
<p>File XAML định nghĩa giao diện, còn CS sẽ định nghĩa cách thức hoạt động</p>
<p>File App.xaml và App.xaml.cs sẽ định nghĩa việc khởi tạo ứng dụng của bạn, khi mở lên như thế nào, đóng ứng dụng thì như thế nào, vân vân.</p>
<p>Bạn sẽ cần tới nó trong một số trường hợp sau này. Bạn có thể mở nó lên để xem thử</p>
<h3 id="2-1-7-LocalizedString-cs"><a href="#2-1-7-LocalizedString-cs" class="headerlink" title="2.1.7 LocalizedString.cs"></a><strong>2.1.7 LocalizedString.cs</strong></h3><p>File này cho phép ứng dụng hỗ trợ đa ngôn ngữ. Code trong file này do Visual Studio tự sinh ra, bạn không cần phải chỉnh sửa nó</p>
<h3 id="2-1-8-MainPage-xaml-va-MainPage-xaml-cs"><a href="#2-1-8-MainPage-xaml-va-MainPage-xaml-cs" class="headerlink" title="2.1.8 MainPage.xaml và MainPage.xaml.cs"></a><strong>2.1.8 MainPage.xaml và MainPage.xaml.cs</strong></h3><p>Cuối cùng, đây là trang giao diện đầu tiên của ứng dụng. File MainPage.xaml sẽ được mở sẵn sau khi tạo mới ứng dụng</p>
<p>Như vậy, bạn đã hiểu rõ các thành phần cấu tạo nên một ứng dụng Windows Phone, áp dụng bài viết số 1 và số 2, hãy bắt tay vào thiết kế ngay cho bạn một ứng dụng Windows Phone hữu ích nào đó nhé</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows Phone</category>
      </categories>
      <tags>
        <tag>windows phone</tag>
        <tag>app</tag>
        <tag>beginner</tag>
        <tag>structure</tag>
      </tags>
  </entry>
  <entry>
    <title>[Basic for Absolute Beginner] – [Part 4] – Basic Steps for a new app</title>
    <url>/2014/03/31/basic-for-absolute-beginner-part-4-basic-steps-for-a-new-app/</url>
    <content><![CDATA[<p><img src="http://farm4.staticflickr.com/3780/13527961224_118ccd2b50_o.png"></p>
<p><a href="http://cuoilennaocacban2.wordpress.com/2013/11/22/windows-phone-silverlight-layout-with-xaml-basic-for-absolute-beginner/">[Basic for Absolute Beginner] – [Part 1] – Layout with XAML</a></p>
<p><a href="http://cuoilennaocacban2.wordpress.com/2014/01/21/windows-phone-silverlight-layout-with-xaml-basic-for-absolute-beginner-part-2/">[Basic for Absolute Beginner] – [Part 2] – Layout with XAML</a></p>
<p><a href="http://cuoilennaocacban2.wordpress.com/2014/02/26/basic-for-absolute-beginner-part-3-apps-structure-and-how-customized-it/">[Basic for Absolute Beginner] – [Part 3] – App’s Structure and how to customize it</a></p>
<p>Vậy là bạn đã biết cách bố cục giao diện với XAML, cấu trúc một ứng dụng. Bây giờ, ta sẽ đi tiếp vào phần các bước cơ bản để tạo một ứng dụng mới</p>
<p>Khoan đã, trong 2 part kia, bạn đã tạo kha khá “New Project” rồi phải ko. Bây giờ, bạn sẽ biết tới nó một cách bài bản</p>
<span id="more"></span>
<ul>
<li><a href="#1-h%C3%ACnh-th%C3%A0nh-%C3%BD-t%C6%B0%E1%BB%9Fng"><strong>1 Hình thành ý tưởng</strong></a><ul>
<li>  <a href="#11-tinh-g%E1%BB%8Dt-%C3%BD-t%C6%B0%E1%BB%9Fng-c%E1%BB%A7a-b%E1%BA%A1n"><strong>1.1 Tinh gọt ý tưởng của bạn</strong></a></li>
<li>  <a href="#12-stick-to-the-plan"><strong>1.2 Stick to the plan</strong></a></li>
</ul>
</li>
<li><a href="#2-t%E1%BA%A1o-project"><strong>2 Tạo project</strong></a><ul>
<li>  <a href="#21-c%C3%A0i-%C4%91%E1%BA%B7t-c%C3%A1c-g%C3%B3i-nuget-c%E1%BA%A7n-thi%E1%BA%BFt"><strong>2.1 Cài đặt các gói Nuget cần thiết</strong></a></li>
<li>  <a href="#22-t%E1%BA%A1o-c%C3%A1c-folder-ch%C3%ADnh"><strong>2.2 Tạo các folder chính</strong></a></li>
<li>  <a href="#23-c%E1%BA%A7n-m%E1%BB%99t-file-cho-viewmodel-hay-staticdata"><strong>2.3 Cần một file cho ViewModel, hay StaticData</strong></a></li>
</ul>
</li>
<li><a href="#3-c%C3%A1c-page-c%C6%A1-b%E1%BA%A3n-ph%E1%BA%A3i-c%C3%B3"><strong>3 Các Page cơ bản phải có</strong></a><ul>
<li>  <a href="#31-about"><strong>3.1 About</strong></a></li>
<li>  <a href="#32-setting"><strong>3.2 Setting</strong></a></li>
</ul>
</li>
<li><a href="#4-chu%E1%BA%A9n-b%E1%BB%8B-d%E1%BB%AF-li%E1%BB%87u"><strong>4 Chuẩn bị dữ liệu</strong></a><ul>
<li>  <a href="#41-t%E1%BA%A1o-model"><strong>4.1 Tạo Model</strong></a></li>
<li>  <a href="#42-load-data-%E1%BB%9F-%C4%91%C3%A2u-trong-code-behind"><strong>4.2 Load Data ở đâu trong code behind?</strong></a></li>
</ul>
</li>
</ul>
<h1 id="1-Hinh-thanh-y-tuong"><a href="#1-Hinh-thanh-y-tuong" class="headerlink" title="1 Hình thành ý tưởng"></a><strong>1 Hình thành ý tưởng</strong></h1><p>Ý tưởng sẽ định hình cho ứng dụng của bạn. Không bao giờ bắt tay vào viết ứng dụng mới khi bạn chưa hề biết ứng dụng của bạn sẽ làm gì</p>
<p>Bí ý tưởng, hãy lên google play store, Apple App Store để học hỏi từ những ứng dụng hay ho trên đó, nhưng đừng sao chép chúng, hãy tận dụng ý tưởng của họ, cải tiến nó, làm nó tốt hơn, bằng cách dưới đây</p>
<h2 id="1-1-Tinh-got-y-tuong-cua-ban"><a href="#1-1-Tinh-got-y-tuong-cua-ban" class="headerlink" title="1.1 Tinh gọt ý tưởng của bạn"></a><strong>1.1 Tinh gọt ý tưởng của bạn</strong></h2><p>Khi đã có ý tưởng rồi, việc tiếp theo bạn làm là sẽ đánh giá ý tưởng đó.</p>
<p>Nghe có vẻ khá buồn cười, nhưng tôi khuyên bạn viết ra giấy câu sau đây:</p>
<blockquote>
<p><em><strong>“[Tên ứng dụng] is the best app of its kind in [chức năng chính], [điểm nổi bật]“</strong></em></p>
</blockquote>
<p>Ví dụ nhé: <em><strong>“Karaoke Online Free is the best app of its kind in singing karaoke on windows phone, it helps people singing at most 2 taps”</strong></em></p>
<p>Tên ứng dụng: <strong>Karaoke Online Free</strong> (search trên store, bạn sẽ thấy ứng dụng này có hơn 4000 review, trung bình 4.3 sao)</p>
<p>Chức năng chính: <strong>hát karaoke trên điện thoại windows phone</strong></p>
<p>Điểm nổi bật: <strong>sử dụng vô cùng đơn giản, chỉ cần 2 chạm là đã có thể hát</strong></p>
<h2 id="1-2-Stick-to-the-plan"><a href="#1-2-Stick-to-the-plan" class="headerlink" title="1.2 Stick to the plan"></a><strong>1.2 Stick to the plan</strong></h2><p>Bạn đã có một câu “review” đầy quyền lực mới tạo ra bên trên rồi, hãy bám chặt lấy nó. Giả sử khi làm xong, bạn cần tới 3 chạm, hoặc 4 chạm mới có thể hát được, thì ứng dụng của bạn vẫn chưa hoàn chỉnh.</p>
<p>Điều tệ hại nhất là “tính năng chính” mà ứng dụng bạn cung cấp lại không hoàn hảo. Kế hoạch là hát karaoke trên điện thoại, sau cùng bạn chỉ làm được việc tra cứu bài hát hoặc lời nhạc, thì đây là một ý tưởng fail hoàn toàn, vì ứng dụng bạn viết ra không dành cho mục đích đó.</p>
<h1 id="2-Tao-project"><a href="#2-Tao-project" class="headerlink" title="2 Tạo project"></a><strong>2 Tạo project</strong></h1><p>Tạo một Project mới, quá đơn giản rồi phải không?</p>
<h2 id="2-1-Cai-dat-cac-goi-Nuget-can-thiet"><a href="#2-1-Cai-dat-cac-goi-Nuget-can-thiet" class="headerlink" title="2.1 Cài đặt các gói Nuget cần thiết"></a><strong>2.1 Cài đặt các gói Nuget cần thiết</strong></h2><p>Ứng dụng của bạn sẽ cần 1 số thư viện ngoài, và các thư viện này có thể cài đặt qua Nuget: <a href="http://cuoilennaocacban2.wordpress.com/2013/11/11/visual-studio-nuget-the-magician/">[Visual Studio] NUGET the Magician</a></p>
<p>Giới thiệu một số gói Nuget hay ho:</p>
<ul>
<li>  HTMLAgilityPack: thao tác với chuỗi HTML</li>
<li>  JSON.NET: thao tác với dữ liệu json</li>
<li>  Windows Phone Toolkit: bộ toolkit các control và tiện ích cộng thêm cho ứng dụng</li>
</ul>
<h2 id="2-2-Tao-cac-folder-chinh"><a href="#2-2-Tao-cac-folder-chinh" class="headerlink" title="2.2 Tạo các folder chính"></a><strong>2.2 Tạo các folder chính</strong></h2><p>Đặt tất các các page bạn sẽ tạo trong một folder tên là PageGroups. Điều này giúp bản quản lý code dễ dàng hơn, dễ dàng chỉnh sửa hơn, và bạn sẽ luôn biết một đoạn code nằm ở đâu. Nếu ứng dụng phức tạp hơn, mỗi một mục nội dung, hãy tạo cho nó một folder trong PageGroups, ví dụ như “LoginGroup”, “SettingGroup”</p>
<p>Đặt tất cả các đoạn code dùng chung trong một thư mục tên là Utilities. Đoạn code dùng chung có thể là một method chuyển đổi đơn vị, một method lấy dữ liệu từ API, chúng có thể gọi từ bất kỳ page nào trong ứng dụng (tất nhiên là những method này “Static”)</p>
<p>Tạo một folder cho Data hoặc Database. Bạn sẽ không muốn để Database ngay bên ngoài Project đâu</p>
<p>Tạo một Folder cho các Data Model, một folder cho CustomControl</p>
<blockquote>
<p>Chốt: Tạo folder cho tất cả những thứ bạn thấy có thể gom nhóm lại với nhau. Nên nhớ, trong folder có thể tạo thêm folder khác. Hãy quản lý chúng thật chặt chẽ</p>
</blockquote>
<h2 id="2-3-Can-mot-file-cho-ViewModel-hay-StaticData"><a href="#2-3-Can-mot-file-cho-ViewModel-hay-StaticData" class="headerlink" title="2.3 Cần một file cho ViewModel, hay StaticData"></a><strong>2.3 Cần một file cho ViewModel, hay StaticData</strong></h2><p>Nếu bạn đã biết về MVC, hay MVVM, thì bạn sẽ biết rằng trong các ví dụ, họ thường tạo các class ViewModel ngay trong App.xaml.cs</p>
<p>Vậy thì tại sao ta không tạo hẳn một file chỉ để chứa những class này?</p>
<p>Tạo một file mới tên là “ViewModelInstances” để chứa các ViewModel, và khai báo các ViewModel như cũ</p>
<p>Bạn cũng sẽ cần một file gọi là StaticData, để lưu những dữ liệu trung gian, tồn tại suốt thời gian chạy app</p>
<h1 id="3-Cac-Page-co-ban-phai-co"><a href="#3-Cac-Page-co-ban-phai-co" class="headerlink" title="3 Các Page cơ bản phải có"></a><strong>3 Các Page cơ bản phải có</strong></h1><h2 id="3-1-About"><a href="#3-1-About" class="headerlink" title="3.1 About"></a><strong>3.1 About</strong></h2><p>About nói về bạn và ứng dụng của bạn. About page chỉ mất khoản 5 phút để làm, nhưng bạn sẽ có một ứng dụng ấn tượng</p>
<p>Thậm chí, about còn có thể đóng các vai trò sau:</p>
<ul>
<li>  Nhắc người dùng Rate và Review ứng dụng của bạn</li>
<li>  Cho phép người dùng gửi thư góp ý, hoặc UserVoice</li>
<li>  Thể hiện các change log</li>
<li>  Quảng cáo cho các ứng dụng khác của bạn</li>
</ul>
<h2 id="3-2-Setting"><a href="#3-2-Setting" class="headerlink" title="3.2 Setting"></a><strong>3.2 Setting</strong></h2><p>Setting là page mà người dùng có thể tinh chỉnh một số thiết lập trong ứng dụng của bạn. Page này giúp người dùng có cảm giác như “Điều khiển” được ứng dụng theo cách họ muốn</p>
<p>Nếu ứng dụng của bạn ko có gì để setting cả, thì page này cũng không cần thiết. Nhưng hãy cân nhắc kỹ, các ứng dụng viết vội vàng thường kém chất lượng và không có các tùy chọn</p>
<h1 id="4-Chuan-bi-du-lieu"><a href="#4-Chuan-bi-du-lieu" class="headerlink" title="4 Chuẩn bị dữ liệu"></a><strong>4 Chuẩn bị dữ liệu</strong></h1><h2 id="4-1-Tao-Model"><a href="#4-1-Tao-Model" class="headerlink" title="4.1 Tạo Model"></a><strong>4.1 Tạo Model</strong></h2><p>Model là cấu trúc dữ liệu của bạn. Thường thì công việc này, bạn phải tạo bằng tay.</p>
<p>Tuy nhiên, nếu bạn nhận dữ liệu dạng Json, thì có một các vui hơn để tự động hóa việc này: <a href="https://jsonutils.com/">JsonUtils</a></p>
<p><img src="https://farm5.staticflickr.com/4590/25062147588_bdc3372aa0_o.png"></p>
<blockquote>
<ol>
<li> Chọn ngôn ngữ là C#</li>
<li> Sử dụng Pascal Case cho tên các thuộc tính</li>
<li> Dùng Property là JsonProperty</li>
<li> Paste đoạn data json của bạn vào đây</li>
<li> Nhấn Submit</li>
</ol>
</blockquote>
<p>Còn nữa, nếu bạn sử dụng cơ chế Binding, bạn sẽ muốn khai báo kế thừa từ Interface INotifyPropertyChanged</p>
<p>Và bộ công cụ Resharper sẽ giúp ích cho bạn</p>
<p>Đọc thêm về Resharper ở đây: <a href="http://cuoilennaocacban2.wordpress.com/2014/01/21/windows-phone-silverlight-layout-with-xaml-basic-for-absolute-beginner-part-2/">[Windows Phone – Silverlight] Layout with XAML – Basic for Absolute Beginner – Part 2</a>, phần 2.1</p>
<h2 id="4-2-Load-Data-o-dau-trong-code-behind"><a href="#4-2-Load-Data-o-dau-trong-code-behind" class="headerlink" title="4.2 Load Data ở đâu trong code behind?"></a><strong>4.2 Load Data ở đâu trong code behind?</strong></h2><p>Load data là việc bắt buộc phải làm. Nhưng load data ở đâu? Nếu đặt nhầm chỗ, ứng dụng của bạn sẽ chậm phản hồi tới người dùng, và sẽ bị bad review</p>
<p>Và có hẳn một bài blog viết về nó: <a href="http://cuoilennaocacban2.wordpress.com/2013/11/02/windows-phone-where-to-put-load-data-method/">[Windows Phone] Where to put load data method?</a></p>
<p>Thế là xong rồi, hãy dùng kiến thức bạn có trong bài Layout with XAML để bắt đầu thiết kế và tạo nên ứng dụng Windows Phone thực sự đầu tiên của bạn</p>
<p>Chúc vui ;)</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows Phone</category>
      </categories>
      <tags>
        <tag>windows phone</tag>
        <tag>windows store</tag>
      </tags>
  </entry>
  <entry>
    <title>[Basic for Absolute Beginner] – [Part 5] – Analytics for your apps</title>
    <url>/2014/04/04/basic-for-absolute-beginner-part-5-analytics-for-your-apps/</url>
    <content><![CDATA[<p>Phân tích hành vi người dùng là một điều hết sức cần thiết và quan trọng trong việc cải thiện chất lượng ứng dụng của bạn.</p>
<p>Và lần này, ta sẽ dựa và công cụ phân tích và theo dõi người dùng kinh khủng nhất thế giới: Google Analytics</p>
<p><img src="https://farm8.staticflickr.com/7322/13573942035_b413d8924a_o.png"></p>
<p>Đúng rồi, Windows Phone và Windows 8, sử dụng dịch vụ Analytics của “đối thủ”. Nghe lạ chưa :3</p>
<span id="more"></span>

<!-- TOC -->

<ul>
<li><a href="#1-tr%C3%AAn-project">1. Trên Project</a><ul>
<li><a href="#11-c%C3%A0i-sdk">1.1. Cài SDK</a></li>
<li><a href="#12-khai-b%C3%A1o-th%C3%B4ng-tin">1.2. Khai báo thông tin</a></li>
</ul>
</li>
<li><a href="#2-tr%C3%AAn-google-analytics">2. Trên Google Analytics</a></li>
<li><a href="#3-thi%E1%BA%BFt-l%E1%BA%ADp-theo-d%C3%B5i">3. Thiết lập theo dõi</a><ul>
<li><a href="#31-coding">3.1. Coding</a></li>
</ul>
</li>
<li><a href="#4-xem-analytics">4. Xem Analytics</a></li>
</ul>
<!-- /TOC -->

<h1 id="1-Tren-Project"><a href="#1-Tren-Project" class="headerlink" title="1. Trên Project"></a>1. Trên Project</h1><p><a id="markdown-tr%C3%AAn-project" name="tr%C3%AAn-project"></a></p>
<h2 id="1-1-Cai-SDK"><a href="#1-1-Cai-SDK" class="headerlink" title="1.1. Cài SDK"></a>1.1. Cài SDK</h2><p><a id="markdown-c%C3%A0i-sdk" name="c%C3%A0i-sdk"></a></p>
<p>Mở project của bạn lên, vào Tools &gt; NuGet Package Manager &gt; Package Manager Console</p>
<p><img src="http://farm8.staticflickr.com/7070/13574117965_55d85b93db_o.png"></p>
<p>Một ô nho nhỏ xinh xinh hiện ra, gõ dòng lệnh sau</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Install-Package GoogleAnalyticsSDK</code></pre>

<p><img src="http://farm3.staticflickr.com/2835/13574223523_c343351607_o.png"></p>
<p>Chờ một chút cho nó chạy</p>
<h2 id="1-2-Khai-bao-thong-tin"><a href="#1-2-Khai-bao-thong-tin" class="headerlink" title="1.2. Khai báo thông tin"></a>1.2. Khai báo thông tin</h2><p><a id="markdown-khai-b%C3%A1o-th%C3%B4ng-tin" name="khai-b%C3%A1o-th%C3%B4ng-tin"></a></p>
<p>Sau khi chạy xong, Project của bạn sẽ có thêm một số thứ mới</p>
<p>File analytics.xml</p>
<p>File này chứa các thông số cần thiết để Google Analytics theo dõi ứng dụng của bạn.</p>
<p>Trong file này có các dòng comment vô cùng đầy đủ, bạn có thể Comment out nó và tự điền các thông số mong muốn</p>
<p><img src="http://farm8.staticflickr.com/7185/13574595064_28071ab5ae_o.png"></p>
<p>File analytics.xsd</p>
<p>Là file compiled của file trên, bạn không cần quan tâm tới file này</p>
<h1 id="2-Tren-Google-Analytics"><a href="#2-Tren-Google-Analytics" class="headerlink" title="2. Trên Google Analytics"></a>2. Trên Google Analytics</h1><p><a id="markdown-tr%C3%AAn-google-analytics" name="tr%C3%AAn-google-analytics"></a></p>
<p>vào link này: <a href="http://google.com/analytics">Google Analytics Account</a></p>
<p>Nhấn nút Đăng nhập</p>
<p><img src="http://farm8.staticflickr.com/7316/13574390013_fc95019363_o.png"></p>
<p>Chọn tab Quản trị</p>
<p><img src="http://farm8.staticflickr.com/7026/13574407623_8c32c154eb_o.png"></p>
<p>Tạo thuộc tính mới</p>
<p><img src="http://farm4.staticflickr.com/3781/13574432883_7b8b91df2f_o.png"></p>
<p>Chọn các thông số phù hợp. Lưu ý, ở mục “Bạn muốn theo dõi điều gì”, chọn Ứng dụng di động nhé</p>
<p><img src="http://farm4.staticflickr.com/3819/13574765814_c96d25bb44_o.png"></p>
<p>Sau đó, bạn sẽ có 1 ID theo dõi dạng UA-#######-##, copy chuỗi này và paste vào bên trong file analytics.xml trong project của bạn</p>
<h1 id="3-Thiet-lap-theo-doi"><a href="#3-Thiet-lap-theo-doi" class="headerlink" title="3. Thiết lập theo dõi"></a>3. Thiết lập theo dõi</h1><p><a id="markdown-thi%E1%BA%BFt-l%E1%BA%ADp-theo-d%C3%B5i" name="thi%E1%BA%BFt-l%E1%BA%ADp-theo-d%C3%B5i"></a></p>
<p>Về cơ bản, bạn có thể theo dõi rất nhiều thứ, bao gồm:</p>
<ul>
<li>  Màn hình ứng dụng: màn hình nào người dùng sử dụng nhiều</li>
<li>  Event: Nút nào được click nhiều, sự kiện nào xảy ra nhiều</li>
<li>  Exception: Lỗi nào bị bắt nhiều nhất</li>
<li>  Transaction: Thanh toán, mua đồ, In-app Purchase</li>
<li>  Social: Chia sẻ trong mạng xã hội</li>
<li>  Timing: thời gian mà ứng dụng chạy một task nào đó</li>
</ul>
<p>Và tất nhiên, bạn sẽ có các con số sau đây:</p>
<ul>
<li>  Số lượng người dùng</li>
<li>  Người dùng mới cài đặt trong ngày</li>
<li>  Người dùng đang sử dụng app hiện tại (Realtime)</li>
<li>  Mức độ trung thành</li>
<li>  Tỷ lệ thoát ứng dụng</li>
<li>  Phiên bản ứng dụng (cái này phải cài đặt trong file XML)</li>
</ul>
<h2 id="3-1-Coding"><a href="#3-1-Coding" class="headerlink" title="3.1. Coding"></a>3.1. Coding</h2><p><a id="markdown-coding" name="coding"></a></p>
<p>Trong sự kiện <code>RootFrame_NavigationFailed</code>, thêm đoạn code sau</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">GoogleAnalytics.EasyTracker.GetTracker().SendException(e.Exception.Message, false);</code></pre>

<p>Đoạn code này có nhiệm vụ theo dõi các Exception khi lỗi chuyển trang</p>
<p>Trong sự kiện <code>Application_UnhandledException</code>, thêm đoạn code sau:</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">GoogleAnalytics.EasyTracker.GetTracker().SendException(e.ExceptionObject.Message, false);</code></pre>

<p>Đoạn code này có nhiệm vụ theo dõi các Exception cho tất cả các lỗi khác</p>
<p>Trong method <code>InitializePhoneApplication()</code>, khai báo một Event Handler:</p>
<p><code>csharp // Track Navigation RootFrame.Navigated += RootFrame_Navigated; </code></p>
<p>Trong Event Handler, thêm đoạn code sau:</p>
<p><code>csharp if (e.Content != null) &#123; GoogleAnalytics.EasyTracker.GetTracker().SendView(e.Content.ToString()); &#125; </code></p>
<h1 id="4-Xem-Analytics"><a href="#4-Xem-Analytics" class="headerlink" title="4. Xem Analytics"></a>4. Xem Analytics</h1><p><a id="markdown-xem-analytics" name="xem-analytics"></a></p>
<p>Xem kết quả Analytics khá thú vị ở chỗ nó cho phép bạn xem rất nhiều thông tin, mà cái hay nhất có lẽ là số người dùng hiện tại đang sử dụng app</p>
<p><img src="http://farm4.staticflickr.com/3726/13575637933_a49df7e626_o.png"></p>
<p>Bạn có thể khám phá thêm trong trang Google Analytics của mình.</p>
<p>Lưu ý là ứng dụng nhiều người dùng, sử dụng mạng thì mới xem được Analytics nhé.</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows Phone</category>
        <category>Windows Store App</category>
      </categories>
      <tags>
        <tag>windows phone</tag>
        <tag>windows store</tag>
        <tag>analytics</tag>
      </tags>
  </entry>
  <entry>
    <title>[Windows Store] Universal Apps across all Windows devices</title>
    <url>/2014/04/13/windows-store-universal-apps-across-all-windows-devices/</url>
    <content><![CDATA[<p>Ở hội nghị BUILD 2014, Microsoft đã nhắc tới Universal App, ứng dụng có thể chạy được trên cả Windows và Windows Phone</p>
<p>Và ngay bây giờ, từ bản cập nhật Update 2 RC của Visual Studio 2013, bạn đã có thể xây dựng một ứng dụng như thế</p>
<p><img src="http://farm8.staticflickr.com/7132/13789811995_025cfbd0bc_o.png"></p>
<span id="more"></span>

<h1 id="Cap-nhat-Visual-Studio-2013-len-Updat-2-RC"><a href="#Cap-nhat-Visual-Studio-2013-len-Updat-2-RC" class="headerlink" title="Cập nhật Visual Studio 2013 lên Updat 2 RC"></a>Cập nhật Visual Studio 2013 lên Updat 2 RC</h1><p>Ngày 13-04-2014: Link tải: <a href="http://blogs.msdn.com/b/windowsazure/archive/2014/04/09/deep-dive-visual-studio-2013-update-2-rc-and-azure-sdk-2-3.aspx">http://blogs.msdn.com/b/windowsazure/archive/2014/04/09/deep-dive-visual-studio-2013-update-2-rc-and-azure-sdk-2-3.aspx</a></p>
<h1 id="Tao-Project-Universal"><a href="#Tao-Project-Universal" class="headerlink" title="Tạo Project Universal"></a>Tạo Project Universal</h1><p>Sau khi cài đặt xong, bạn sẽ có thêm một số tùy chọn mới trong Visual Studio</p>
<p><img src="http://farm8.staticflickr.com/7212/13789855595_5d445495c2_o.png"></p>
<p>Chọn New Project</p>
<p><img src="http://farm4.staticflickr.com/3808/13790231944_a53d45556f_o.png"></p>
<p>Chọn Visual C# &gt; Store Apps &gt; Universal Apps</p>
<p>Tạo project xong, bạn sẽ có một Solution như trong hình dưới</p>
<p><img src="http://farm8.staticflickr.com/7447/13789942533_67c31f57db_o.png"></p>
<p>Nhìn vào là ta cũng biết ngay, Project Windows 8.1 và project Windows Phone 8.1</p>
<p>Còn Project “Shared” sẽ chứa các file dùng chung, cụ thể là Model và View Model</p>
<p>Ta sẽ tạo một ứng dụng đọc tin RSS đơn giản nhé</p>
<h1 id="Xay-dung-Model-va-ViewModel"><a href="#Xay-dung-Model-va-ViewModel" class="headerlink" title="Xây dựng Model và ViewModel"></a>Xây dựng Model và ViewModel</h1><p>Tạo 2 thư mục mới tên là Model và ViewModel trong Project Shared</p>
<p><img src="http://farm8.staticflickr.com/7414/13790305334_ae2e50f650_o.png"></p>
<p>Giả sử ta lấy trang này làm nguồn tin: <a href="http://nhipsongso.tuoitre.vn/RssFeeds.aspx?ChannelID=430">http://nhipsongso.tuoitre.vn/RssFeeds.aspx?ChannelID=430</a></p>
<p>Vậy Model sẽ bao gồm 1 title và 1 content</p>
<p>Ta tạo class News với 2 Properties là Title và Content, tương ứng với 2 biến là title và content</p>
<p><img src="http://farm8.staticflickr.com/7387/13790346144_0eda252f4e_o.png"></p>
<p>Tạo file class trong Folder “Model”</p>
<p><img src="http://farm8.staticflickr.com/7117/13790357494_ca7a9589b9_o.png"></p>
<p>Kết quả</p>
<p><img src="http://farm8.staticflickr.com/7261/13790057603_73d1eb4d5e_o.png"></p>
<p>Tạo 2 biến private, dùng Resharper generate code ra Property</p>
<p>À mà quên, bạn phải khai báo kế thừa từ Interface INotifyPropertyChanged</p>
<p><img src="http://farm4.staticflickr.com/3820/13790402894_fb134c2ecc_o.png"></p>
<p>Sau đó dùng Generate Code của Resharper</p>
<p><img src="http://farm3.staticflickr.com/2934/13790084775_4662772e1a_o.png"></p>
<p>Chọn Property</p>
<p><img src="http://farm8.staticflickr.com/7427/13790093875_eb1cc4a58d_o.png"></p>
<p>Chọn luôn như hình, bấm finish</p>
<p><img src="http://farm8.staticflickr.com/7437/13790126693_3277529e49_o.png"></p>
<p>Thế là xong Model</p>
<p>Tạo class NewsViewModel trong Folder ViewModel</p>
<p>Trong class đó, khai báo một ObservableCollection</p>
<p><img src="http://farm8.staticflickr.com/7440/13816583833_af8e4ff21f_o.png"></p>
<p>Tạo thêm một class StaticViewModels trong Folder ViewModel. File class này sẽ chứa các biến ViewModel dạng static mà ta sẽ sử dụng trong toàn App (Trước kia bạn thường khai báo chúng trực tiếp trong file App.xaml.cs, nay gom nó lại một nơi để dễ quản lý)</p>
<p><img src="http://farm4.staticflickr.com/3811/13816896774_7eda94c0fd_o.png"></p>
<p>Trong file này, khai báo một Intance của NewsViewModel</p>
<p><img src="http://farm8.staticflickr.com/7349/13817716275_cd906cb30a_o.png"></p>
<p>Tạo một thư mục Utilities, trong đó, tạo một class StaticMethod. Ta sẽ nhét code lấy HTML vào đây</p>
<p><img src="http://farm8.staticflickr.com/7066/13816648423_80664aab92_o.png"></p>
<p>Trong này, gõ lệnh như sau</p>
<p><img src="http://farm4.staticflickr.com/3718/13816652445_57b587715d_o.png"></p>
<p>Mở lại file NewsViewModel, tạo thêm method GetNewsAsyncTask</p>
<p><img src="http://farm8.staticflickr.com/7090/13818091324_6f9567c7ce_o.png"></p>
<p>Thư viện HtmlDocument lấy từ HtmlAgilityPack trong Nuget, bạn phải add nó vào trong References của Project Windows 8.1</p>
<p>Sau khi xong, mở file MainPage.xaml của Project Windows 8.1 lên, thêm vào đó một ListBox để hiển thị danh sách tin</p>
<p><img src="http://farm8.staticflickr.com/7396/13818053024_8a8f63e046_o.png"></p>
<p>Sau đó, mở file Code Behind và thêm những dòng sau:</p>
<p><img src="http://farm6.staticflickr.com/5095/13818062924_84818d20d1_o.png"></p>
<p>Chạy thử</p>
<p><img src="http://farm8.staticflickr.com/7371/13817751965_3b549082de_o.png"></p>
<h1 id="Xay-dung-Template"><a href="#Xay-dung-Template" class="headerlink" title="Xây dựng Template"></a>Xây dựng Template</h1><p>Mở file MainPage.xaml trong Project Windows 8.1</p>
<p>Click chuột phải vào ListBox &gt; Edit Additional Template &gt; Create Empty</p>
<p><img src="http://farm4.staticflickr.com/3794/13818117864_1bac953a3c_o.png"></p>
<p>Trong hộp thoại hiện ra, đặt tên nó là DataTemplate</p>
<p><img src="http://farm8.staticflickr.com/7308/13818173834_c9983506b6_o.png"></p>
<p>Edit lại thành như sau</p>
<p><img src="http://farm3.staticflickr.com/2903/13817868373_46fdd7e116_o.png"></p>
<p>Nhấn nút Local Machine để chạy thử</p>
<p><img src="http://farm3.staticflickr.com/2844/13817864265_226b8940eb_o.png"></p>
<p>Thật tuyệt phải không?</p>
<h1 id="Tao-tuong-tu-ben-Windows-Phone-8-1"><a href="#Tao-tuong-tu-ben-Windows-Phone-8-1" class="headerlink" title="Tạo tương tự bên Windows Phone 8.1"></a>Tạo tương tự bên Windows Phone 8.1</h1><p>Mở file MainPage.xaml của Project Windows Phone 8.1, copy và paste những thứ tương tự nhau</p>
<p><img src="http://farm8.staticflickr.com/7457/13818218074_cfcbe1015f_o.png"></p>
<p>Tiếp tục mở code behind, và làm tương tự</p>
<p><img src="http://farm4.staticflickr.com/3802/13818261174_95d475e43e_o.png"></p>
<p>Chọn lại Startup Project</p>
<p><img src="http://farm8.staticflickr.com/7433/13817947335_83e0d03ede_o.png"></p>
<p>Ôi không, lỗi xuất hiện :’(</p>
<p><img src="http://farm4.staticflickr.com/3809/13818652393_97c16b491e_o.png"></p>
<p>Khi bạn chọn Startup Project là Windows Phone, vì trong Reference của Windows Phone chưa có thư viện HtmlAgilityPack nên các tham chiếu tới thư viện này đều gặp lỗi</p>
<p>Ta add thêm thư viện này thông qua Nuget</p>
<p><img src="http://farm4.staticflickr.com/3732/13818649855_10b7a8e826_o.png"></p>
<p>Một lỗi xuất hiện</p>
<p><img src="http://farm4.staticflickr.com/3786/13818700683_7345a9aa07_o.png"></p>
<p>Nó phàn nàn là cái package này chả chứa file nào target tới Windows Phone 8.1 cả.</p>
<p>Vì dùng chung một bộ thư viện với Windows 8.1, Windows Phone 8.1 có khả năng add các DLL chỉ tương thích với Windows 8.1.</p>
<p>Chọn References &gt; Ad References…</p>
<p><img src="http://farm4.staticflickr.com/3793/13818743355_40d8d045a1_o.png"></p>
<p>Chọn mục Browse &gt; Nhấn nút Browse, tìm đến thư mục bin &gt; Debug của Windows 8.1 để add thư viện HtmlAgilityPack</p>
<p><img src="http://farm8.staticflickr.com/7361/13819126364_02dda6cce9_o.png"></p>
<p><img src="http://farm4.staticflickr.com/3763/13819120204_1aa2d2caff_o.png"></p>
<p>Và khi add xong, woala, mọi lỗi đã biến mất, code đã “green” trở lại</p>
<p>Lưu ý: Copy file Annotation.cs trong thư mục Property của Project Windows 8.1 và Paste nó vào bất kỳ chỗ nào trong Project Windows Phone (thực hiện việc Copy và Paste này trên Solution Explorer nhé). Nếu bạn có Resharper, bạn có thể để Resharper tự sinh lại file này bằng cách xóa các method OnPropertyChanged trong News Model, và để Resharper Implement lại nó</p>
<p>Chạy thử Project WP8.1</p>
<p><img src="http://farm3.staticflickr.com/2891/13818903143_7951e186c4_o.png"></p>
<p>Done, bạn đã tự tạo một UniversalApp rồi đấy</p>
<h1 id="XAML-va-CodeBehind-dung-chung"><a href="#XAML-va-CodeBehind-dung-chung" class="headerlink" title="XAML và CodeBehind dùng chung"></a>XAML và CodeBehind dùng chung</h1><p>Như bạn có thể thấy ở hình trên, XAML và CodeBehind ở cả 2 Project rất giống nhau, hầu như không thay đổi gì cả</p>
<p>Cách đây rất lâu, trong một buổi training tại văn phòng Microsoft, đã có người từng hỏi “tại sao không dùng chung XAML cho cả Windows 8 và Windows Phone?”. Câu trả lời khi đó là Windows 8 và Windows Phone có bộ thư viện hơi khác nhau, nên một số control cũng khác nhau. Bây giờ, Microsoft đã đem lại khả năng “dùng chung” đó</p>
<p>Tạo một Folder tên View trong Project Shared</p>
<p>Add New một BlankPage, đặt tên nó là MainPage</p>
<p><img src="http://farm8.staticflickr.com/7104/13819321114_2b92d23a10_o.png"></p>
<p>Copy và Paste code từ Project Windows Phone (cả XAML lẫn code Behind)</p>
<p>Ở trên cùng của XAML Editor, bạn sẽ thấy một Drop down list thú vị</p>
<p><img src="http://farm8.staticflickr.com/7269/13819008325_d5b627d827_o.png"></p>
<p>Ở đây, bạn có thể thay đổi kiểu View mà Code XAML này được compile, trong hình đang chọn Windows Phone</p>
<p>Hãy thử chuyển nó sang Windows, bạn sẽ thấy giao diện Visual Editor thay đổi</p>
<p>Mở file App.xaml.cs, kéo xuống dòng 98, chỉnh sửa thành View.MainPage</p>
<p><img src="http://farm4.staticflickr.com/3730/13819137865_97f6aea455_o.png"></p>
<p>Chỉnh Startup Project là Windows</p>
<p><img src="http://farm6.staticflickr.com/5006/13819151033_e8fe2f0c54_o.png"></p>
<p>Chạy thử</p>
<p><img src="http://farm3.staticflickr.com/2937/13819149935_bea2bb72da_o.png"></p>
<p>Chỉnh Startup Project thành Windows Phone, nhấn chạy thử</p>
<p><img src="http://farm3.staticflickr.com/2891/13818903143_7951e186c4_o.png"></p>
<p>Thế là xong, bạn đã có một Page hiển thị được ở cả 2 giao diện nhé.</p>
<p>Trong các bài Blog sau, mình hy vọng sẽ có giải thích rõ ràng hơn về các Control dùng chung và cách hiển thị của chúng trên giao diện. Dù sao thì đây mới chỉ là Release Candidate. Sẽ còn thay đổi nhiều trong tương lai.</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows Phone</category>
        <category>Windows Store App</category>
      </categories>
      <tags>
        <tag>windows phone</tag>
        <tag>windows store</tag>
        <tag>universal</tag>
      </tags>
  </entry>
  <entry>
    <title>[Basic for Absolute Beginner] – [Part 6] – Source Control</title>
    <url>/2014/05/02/basic-for-absolute-beginner-part-6-source-control/</url>
    <content><![CDATA[<p>Hãy thử tưởng tượng, bạn đã làm xong một thành phần nào đó trong ứng dụng của mình. Bạn tiếp tục làm thêm một thứ gì đó, và nhấn Run. Và đột nhiên, mọi thứ báo lỗi, bug xuất hiện khắp nơi, bạn xóa những đoạn code mới thêm vào, nhưng lỗi vẫn còn, và hình như bạn còn thiếu gì đó?</p>
<p>Tưởng tượng tiếp, Team của bạn đang làm một dự án nào đó, nhưng mỗi thành viên lại ở một chỗ khác nhau, và các bạn không có cách gì gặp nhau được. Làm thế nào để làm việc cùng nhau trên một dự án?</p>
<p>Tất cả câu hỏi đó, và nhiều câu hỏi khác, được trả lời bằng một tính năng gọi là “Team Foundation Server” của Visual Studio</p>
<p><img src="https://i2.wp.com/farm6.staticflickr.com/5032/14076910292_20d9511445_o.png"></p>
<span id="more"></span>
<ul>
<li>  <a href="#kh%C3%A1i-ni%E1%BB%87m">Khái niệm</a></li>
<li>  <a href="#%C4%91%C4%83ng-k%C3%BD-t%C3%A0i-kho%E1%BA%A3n">Đăng ký tài khoản</a></li>
<li><a href="#tr%C3%AAn-service">Trên Service</a><ul>
<li>  <a href="#t%E1%BA%A1o-project">Tạo Project</a></li>
<li><a href="#qu%E1%BA%A3n-l%C3%BD-th%C3%A0nh-vi%C3%AAn">Quản lý thành viên</a><ul>
<li>  <a href="#trong-m%E1%BB%99t-project">Trong một Project</a></li>
<li>  <a href="#trong-to%C3%A0n-b%E1%BB%99-c%C3%A1c-project">Trong toàn bộ các Project</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#tr%C3%AAn-visual-studio">Trên Visual Studio</a><ul>
<li>  <a href="#connect-t%E1%BB%9Bi-t%C3%A0i-kho%E1%BA%A3n-c%E1%BB%A7a-b%E1%BA%A1n">Connect tới tài khoản của bạn</a></li>
<li>  <a href="#th%C3%AAm-project-v%C3%A0o-source-control">Thêm Project vào Source Control</a></li>
<li>  <a href="#ch%E1%BB%89nh-s%E1%BB%ADa-v%C3%A0-check-in">Chỉnh sửa và Check in</a></li>
<li>  <a href="#get-latest-version--get-specific-version--undo-pending-change">Get Latest Version – Get Specific Version – Undo Pending Change</a></li>
</ul>
</li>
</ul>
<p>Các phần cũ: <a href="https://cuoilennaocacban2.wordpress.com/2013/11/22/windows-phone-silverlight-layout-with-xaml-basic-for-absolute-beginner/" title="[Basic for Absolute Beginner] - [Part 1] Layout with XAML 1">[Basic for Absolute Beginner] – [Part 1] – Layout with XAML 1</a> <a href="https://cuoilennaocacban2.wordpress.com/2014/01/21/windows-phone-silverlight-layout-with-xaml-basic-for-absolute-beginner-part-2/" title="[Basic for Absolute Beginner] – [Part 2] – Layout with XAML 2">[Basic for Absolute Beginner] – [Part 2] – Layout with XAML 2</a> <a href="https://cuoilennaocacban2.wordpress.com/2014/02/26/basic-for-absolute-beginner-part-3-apps-structure-and-how-customized-it/">[Basic for Absolute Beginner] – [Part 3] – App’s Structure and how to customize it</a> <a href="https://cuoilennaocacban2.wordpress.com/2014/03/31/basic-for-absolute-beginner-part-4-basic-steps-for-a-new-app/">[Basic for Absolute Beginner] – [Part 4] – Basic Steps for a new app</a> <a href="https://cuoilennaocacban2.wordpress.com/2014/04/04/basic-for-absolute-beginner-part-5-analytics-for-your-apps/">[Basic for Absolute Beginner] – [Part 5] – Analytics for your apps</a></p>
<h1 id="Khai-niem"><a href="#Khai-niem" class="headerlink" title="Khái niệm"></a>Khái niệm</h1><p>Source Control là một cách để quản lý source code của bạn. Quản lý có nghĩa là bạn có thể xem các phiên bản, lưu trữ, phục hồi, chia sẻ, vân vân và vân vân. Khi code nhầm một cái gì đó, bạn có thể phục hồi lại đoạn code trước đó. Bạn có thể tạo một project mới từ source có sẵn, bạn có thể cho phép một thành viên mới tải toàn bộ source code về để làm việc chung trên một dự án, và người này cũng có thể xem, xóa, lưu phiên bản, vân vân đối với các phần code của họ Ở mức cơ bản nhất, bài blog này sẽ hướng dẫn bạn sử dụng Team Foundation Server để quản lý phiên bản source code của bạn</p>
<h1 id="Dang-ky-tai-khoan"><a href="#Dang-ky-tai-khoan" class="headerlink" title="Đăng ký tài khoản"></a>Đăng ký tài khoản</h1><p>Team Foundation Server của Microsoft, hiện tại đã được đổi tên thành Visual Studio Online, là một dịch vụ miễn phí. Bạn có thể tạo bao nhiêu Project tùy thích, nhưng tất cả các Project, bạn chỉ được thêm tối đa 5 thành viên miễn phí. Như vậy, khi đăng ký tài khoản Visual Studio Online (VSO), bạn sẽ được cấp một vùng lưu trữ không giới hạn (đúng rồi, không giới hạn), tối đa 5 thành viên, không giới hạn số project, và nhiều công cụ khác đòi hỏi phải có kiến thức chuyên sâu để sử dụng <a href="http://www.visualstudio.com/">http://www.visualstudio.com/</a> Vào trang trên, bấm nút Get Started for Free màu tím <img src="https://i2.wp.com/farm8.staticflickr.com/7423/14077027941_131d9fe8b9_o.png"> Bạn sẽ được đưa đến một trang, dùng tài khoản Microsoft để đăng nhập trang này <img src="https://i0.wp.com/farm8.staticflickr.com/7042/14077110182_67ddb90db7_o.png"> Bạn điền thêm một số thông tin cần thiết, hoặc trả lời bất kỳ câu hỏi nào mà nó đưa ra <img src="https://i1.wp.com/farm8.staticflickr.com/7426/14057171186_c1f58d0d92_o.png"> Sau khi đăng nhập, bạn đã có thể tạo Project đầu tiên của mình</p>
<h1 id="Tren-Service"><a href="#Tren-Service" class="headerlink" title="Trên Service"></a>Trên Service</h1><h2 id="Tao-Project"><a href="#Tao-Project" class="headerlink" title="Tạo Project"></a>Tạo Project</h2><p><img src="https://i1.wp.com/farm3.staticflickr.com/2939/14077138942_7fc7d459e9_o.png"> Bấm vào nút New để tạo một Project mới <img src="https://i1.wp.com/farm8.staticflickr.com/7337/13893692388_453e4325a5_o.png"> Điền vào các thông tin cần thiết và bấm nút Create Project Sau khi tạo xong, bấm nút Navigate to Project để tới trang quản lý Project của bạn Trang này chứa nhiều thông tin, hiện tại bạn chỉ cần quan tâm tới mục Member <img src="https://i0.wp.com/farm8.staticflickr.com/7306/14100357193_a79e22a996_o.png"> Tại đây sẽ hiển thị toàn bộ thành viên có trong project của bạn. Bấm nút Manage… để thêm hoặc bớt các thành viên</p>
<h2 id="Quan-ly-thanh-vien"><a href="#Quan-ly-thanh-vien" class="headerlink" title="Quản lý thành viên"></a>Quản lý thành viên</h2><h3 id="Trong-mot-Project"><a href="#Trong-mot-Project" class="headerlink" title="Trong một Project"></a>Trong một Project</h3><p><img src="https://i0.wp.com/farm3.staticflickr.com/2937/13893748200_d0b2bfd795_o.png"> Ở tên mỗi người có một nút Remove. Bấm vào đây để xóa một thành viên. Bấm nút Add để thêm mới Thành viên bắt buộc phải sử dụng một tài khoản Microsoft để sử dụng dịch vụ này</p>
<h3 id="Trong-toan-bo-cac-Project"><a href="#Trong-toan-bo-cac-Project" class="headerlink" title="Trong toàn bộ các Project"></a>Trong toàn bộ các Project</h3><p>Ở trang đầu tiên, nhấn vào nút Users để xem danh sách toàn bộ thành viên có trong tài khoản của bạn <img src="https://i0.wp.com/farm8.staticflickr.com/7426/14077207562_e677848f77_o.png"> Hiện tại có nhiều loại tài khoản, VS Utimate with MSDN là tài khoản của các bạn Microsoft Student Parter, Early Adopter là tài khoản miễn phí, sau này sẽ được đổi thành Basic <img src="https://i2.wp.com/farm8.staticflickr.com/7420/14080365235_3f8073d7a7_o.png"> Nếu bạn là một MSP, bạn có thể dùng MSDN Subscription của mình để đăng ký VSO. Bạn có thể thêm không giới hạn các tài khoản VS Ultimate with MSDN. Nhưng bạn chỉ được thêm tối đa 5 tài khoản Basic thôi. Hình dưới đây sẽ thể hiện điều đó <img src="https://i1.wp.com/farm6.staticflickr.com/5455/13893764527_924181318e_o.png"> Vậy là xong, Bây giờ, hãy mở Visual Studio lên để thiết lập nhé</p>
<h1 id="Tren-Visual-Studio"><a href="#Tren-Visual-Studio" class="headerlink" title="Trên Visual Studio"></a>Trên Visual Studio</h1><h2 id="Connect-toi-tai-khoan-cua-ban"><a href="#Connect-toi-tai-khoan-cua-ban" class="headerlink" title="Connect tới tài khoản của bạn"></a>Connect tới tài khoản của bạn</h2><p>Chọn Menu &gt; Team &gt; Connect to Team Foudation Server Đăng nhập bằng chính tài khoản Microsoft bạn đã dùng để tạo Online <img src="https://i2.wp.com/farm8.staticflickr.com/7181/14080415865_cea0f2115b_o.png"> Server có dạng: <a href="https://nickname.visualstudio.com/">https://nickname.visualstudio.com</a> Sau khi đăng nhập, tất cả các Project có sẵn trên Server sẽ được hiện ra. Tick vào các Project bạn muốn connect (các project bạn đang làm việc) và nhấn Connect</p>
<h2 id="Them-Project-vao-Source-Control"><a href="#Them-Project-vao-Source-Control" class="headerlink" title="Thêm Project vào Source Control"></a>Thêm Project vào Source Control</h2><p>Bạn mở Solution của mình lên <img src="https://i0.wp.com/farm8.staticflickr.com/7386/13893812187_43fc27c6e2_o.png"> Sau khi mở ra, nhấn chuột phải vào Solution &gt; Add Solution to Source Control…, bạn sẽ được hỏi sử dụng dịch vụ nào. <img src="https://i0.wp.com/farm3.staticflickr.com/2928/14065466846_0be4d81154_o.png"> Git là một dịch vụ miễn phí, và khó sử dụng hơn so với Team Foundation. Một bản hiện ra, bạn chọn Project bạn vừa tạo trên Web, rồi nhấn OK <img src="https://i1.wp.com/farm6.staticflickr.com/5443/13902073928_3a5166bb42_o.png"> Quá trình thêm vào diễn ra âm thầm. Có thể bạn sẽ cảm nhận được Visual Studio bị đơ 2-3 giây. Sau đó, trước mỗi file trong Solution, sẽ có 1 biểu tượng dấu + <img src="https://i1.wp.com/farm8.staticflickr.com/7400/13902049219_54c1ce6b04_o.png"> Lúc này, Project của bạn đã được quản lý bởi Source Control Team Foundation Server. Tuy nhiên, đây mới chỉ là “thay đổi”. Bạn cần phải Check in để các thay đổi này được lưu lại. Bấm chuột phải vào Solution &gt; Check In… <img src="https://i1.wp.com/farm8.staticflickr.com/7068/14065573286_3388d5ff11_o.png"> Trong ô Comment, bạn nhập vào chú thích của lần check in này <img src="https://i2.wp.com/farm8.staticflickr.com/7451/13902095378_6c8b207a01_o.png"> Mục Included Changes (number) là nơi liệt kê các tập tin trong Solution đã bị thay đổi và sẽ được lưu lại Source Control trong lần check in này Sau khi kiểm tra tất cả các chi tiết, bạn nhấn Check in <img src="https://i2.wp.com/farm6.staticflickr.com/5527/14085562102_33c66105e1_o.png"> Sau khi check in thành công, một thông báo nhỏ xuất hiện, thông báo số changeset. Bạn sẽ cần con số này để phục hồi về sau <img src="https://i0.wp.com/farm6.staticflickr.com/5488/13902099877_0f0a7e14ab_o.png"> Quay trở lại Solution Explorer, bạn sẽ thấy trước mỗi file có hình một chiếc khóa, biểu hiện cho việc file này từ lần check in trước chưa bị thay đổi <img src="https://i1.wp.com/farm6.staticflickr.com/5484/14108858123_8884d622d9_o.png"></p>
<h2 id="Chinh-sua-va-Check-in"><a href="#Chinh-sua-va-Check-in" class="headerlink" title="Chỉnh sửa và Check in"></a>Chỉnh sửa và Check in</h2><p>Khi bạn bắt đầu chỉnh sửa một file nào đó, biểu tượng chiếc khóa bị thay đổi <img src="https://i0.wp.com/farm3.staticflickr.com/2905/14085667152_399a036b26_o.png"> Để thay đổi này lưu vào Source Control, bạn nhấn chuột phải lên nó và chọn Check in. Lưu ý, khi thay đổi nhiều file trong Project, bạn có thể chọn cả Project để check in. Nếu thay đổi trong nhiều Project, bạn có thể chọn cả Solution để check in. Thông thường, chọn cả Solution sẽ đảm bảo bạn không “Check in” thiếu thứ gì. Team Foundation sẽ tự động tìm ra các file bị thay đổi của bạn</p>
<h2 id="Get-Latest-Version-–-Get-Specific-Version-–-Undo-Pending-Change"><a href="#Get-Latest-Version-–-Get-Specific-Version-–-Undo-Pending-Change" class="headerlink" title="Get Latest Version – Get Specific Version – Undo Pending Change"></a>Get Latest Version – Get Specific Version – Undo Pending Change</h2><p>Nếu bạn làm trong một dự án nhiều thành viên, và các thành viên kia hoàn tất phần code của họ và Check in lên Server. Bạn sẽ phải lấy các phần code mới nhất về Nhấn chuột phải vào phần bạn muốn cập nhật &gt; Get Latest Version (Recursive) <img src="https://i1.wp.com/farm3.staticflickr.com/2933/13902262929_2db6b4718f_o.png"></p>
<ul>
<li>  Recursive tức là đệ quy. Tất cả các file bên trong nó cũng sẽ được cập nhật theo</li>
</ul>
<p>Khi bạn dùng lệnh này mà một số file của bạn có thay đổi chưa check in, nếu Team Foundation thấy có thể xử lý, nó sẽ xử lý giúp bạn luôn bằng cách gộp chung các thay đổi này với nhau. Tuy nhiên nếu có các thay đổi xung đột nhau, bạn sẽ có tùy chọn xem các xung đột để ra quyết định</p>
<ul>
<li>Get Specific version lại là một cách khác để đưa Project hoặc file nào đó về hiện trạng y hệt như một lần check in nào đó. Bạn có thể dùng số Changeset, hoặc ngày tháng để tìm kiếm toàn bộ các lần check in và quyết định “phục hồi”</li>
<li>Undo Pending Change xóa bỏ toàn bộ các thay đổi của bạn, và đưa Project hoặc file về lần Check in gần nhất.</li>
</ul>
<p>Như vậy, bạn đã có trong tay một cỗ máy thời gian thần kỳ để kiểm soát Source Code của mình, đồng thời hợp tác làm Team một các hiệu quả</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows Phone</category>
        <category>Windows Store App</category>
      </categories>
      <tags>
        <tag>source control</tag>
        <tag>Team foundation</tag>
      </tags>
  </entry>
  <entry>
    <title>[Not so Basic] – Solve your problems</title>
    <url>/2014/06/27/not-so-basic-solve-your-problems/</url>
    <content><![CDATA[<p>Okie, bạn đã có trong tay hầu như mọi thứ cần thiết để tạo ra ứng dụng của mình:</p>
<p><a href="http://cuoilennaocacban2.wordpress.com/2013/11/22/windows-phone-silverlight-layout-with-xaml-basic-for-absolute-beginner/">[Basic for Absolute Beginner] – [Part 1] – Layout with XAML</a></p>
<p><a href="http://cuoilennaocacban2.wordpress.com/2014/01/21/windows-phone-silverlight-layout-with-xaml-basic-for-absolute-beginner-part-2/">[Basic for Absolute Beginner] – [Part 2] – Layout with XAML</a></p>
<p><a href="http://cuoilennaocacban2.wordpress.com/2014/02/26/basic-for-absolute-beginner-part-3-apps-structure-and-how-customized-it/">[Basic for Absolute Beginner] – [Part 3] – App’s Structure and how customized it</a></p>
<p><a href="http://cuoilennaocacban2.wordpress.com/2014/03/31/basic-for-absolute-beginner-part-4-basic-steps-for-a-new-app/">[Basic for Absolute Beginner] – [Part 4] – Basic Steps for a new app</a></p>
<p><a href="http://cuoilennaocacban2.wordpress.com/2014/04/04/basic-for-absolute-beginner-part-5-analytics-for-your-apps/">[Basic for Absolute Beginner] – [Part 5] – Analytics for your apps</a></p>
<p><a href="http://cuoilennaocacban2.wordpress.com/2014/05/02/basic-for-absolute-beginner-part-6-source-control/">[Basic for Absolute Beginner] – [Part 6] – Source Control</a></p>
<p>Và trong lúc làm, bạn gặp phải một vấn đề gì đó. Làm thế nào để giải quyết nó?</p>
<p>Đây sẽ là bài viết cuối cùng trước khi thi của mình</p>
<h1 id="Van-de-cua-ban-la-gi"><a href="#Van-de-cua-ban-la-gi" class="headerlink" title="Vấn đề của bạn là gì?"></a>Vấn đề của bạn là gì?</h1><p>Bạn đang làm một ứng dụng xem tin tức. Và bạn muốn những tin mà người đọc xem rồi sẽ không xuất hiện lại nữa.</p>
<p>Bạn muốn sắp xếp theo thứ tự một mảng dài 500 000 phần tử.</p>
<p>Bạn muốn tìm kiếm một phần tử trong mảng 1 triệu phần tử.</p>
<p>Vân vân và vân vân.</p>
<p>Đây là loại vấn đề mà bạn cần phải giải quyết trước khi tiếp tục xây dựng ứng dụng của mình</p>
<p><img src="https://farm6.staticflickr.com/5536/14517912312_3f2977f5e1_o.jpg"></p>
<span id="more"></span>
<h1 id="Giai-quyet-van-de-cua-ban"><a href="#Giai-quyet-van-de-cua-ban" class="headerlink" title="Giải quyết vấn đề của bạn"></a>Giải quyết vấn đề của bạn</h1><p>Bước đầu tiên, một phương pháp ultimate để giải quyết rất nhiều vấn đề, từ ngớ ngẩn đến phức tạp. Google nó.</p>
<h2 id="Search-Google"><a href="#Search-Google" class="headerlink" title="Search Google"></a>Search Google</h2><h3 id="Search-bang-tieng-anh-cho-van-de-cua-ban"><a href="#Search-bang-tieng-anh-cho-van-de-cua-ban" class="headerlink" title="Search bằng tiếng anh cho vấn đề của bạn."></a>Search bằng tiếng anh cho vấn đề của bạn.</h3><p>Cái này chỉ là kinh nghiệm cá nhân. Bạn sẽ dễ dàng bắt gặp vấn đề của mình hơn, và khả năng cao là đã có người giải quyết được. Tuy nhiên, cái này đỏi hỏi bạn phải có khả năng tiếng anh tốt</p>
<h3 id="Tham-khao-cac-doan-code-mau-tu-cac-nguon-uy-tin"><a href="#Tham-khao-cac-doan-code-mau-tu-cac-nguon-uy-tin" class="headerlink" title="Tham khảo các đoạn code mẫu từ các nguồn uy tín"></a>Tham khảo các đoạn code mẫu từ các nguồn uy tín</h3><p>Một trang diễn đàn không tên tuổi sẽ không thể nào đánh bại một câu trả lời được đánh dấu và bình chọn trong StackOverflow. Một đoạn code nằm lưng chừng không thể nào bằng một bài viết trong Nokia Developer.</p>
<p>Và uy tín hơn hết tất cả các thứ trên cộng lại, đó chính là thư viện tham khảo MSDN. Tuy nhiên thư viện này chỉ là một bộ tài liệu khổng lồ cho Microsoft Technologies. Hoạt động không khác gì một quyển từ điển. Bạn có thể tra cứu định nghĩa hàm, chức năng, tham số, giá trị. Vân vân và vân vân.</p>
<h3 id="Tu-khoa-tu-khoa-tu-khoa"><a href="#Tu-khoa-tu-khoa-tu-khoa" class="headerlink" title="Từ khóa, từ khóa, từ khóa"></a>Từ khóa, từ khóa, từ khóa</h3><p>Từ khóa đóng một vai trò quan trọng khi tìm kiếm vấn đề của bạn.</p>
<p>Ví dụ như cùng một vấn đề, trên Windows có thể sẽ dùng thuật toán này, nhưng Windows Phone sẽ dùng thuật toán khác. Vì Windows Phone có nguồn tài nguyên giới hạn hơn rất nhiều lần so với Windows. Vì vậy hãy thêm từ khóa: Windows Phone vào</p>
<p>Mà khoan. Các công nghệ .NET của Microsoft phát triển liên tục. Vì vậy bạn phải kèm theo luôn số phiên bản của nền tảng bạn đang lập trình.</p>
<p>Ví dụ: Querry SQL database in Windows Phone 8.1</p>
<h2 id="Ask"><a href="#Ask" class="headerlink" title="Ask"></a>Ask</h2><p>Khi bạn gặp một vấn đề về kỹ thuật, mà chỉ có người tạo ra kỹ thuật đó mới có thể giài quyết, cách tốt nhất là “hỏi”.</p>
<p>Tuy nhiên, hỏi ở đây không có nghĩa là bạn bắt tay vào hỏi liền tại chỗ. Kiểu này rất hay gặp đối với sinh viên Việt Nam. Bạ đâu cũng hỏi. Hỏi cũng cần phải có văn hóa riêng.</p>
<p>Giả sử như bạn đang gặp một vấn đề về kết nối mạng. Bạn mới thử chừng 1-2 cách nhưng chưa cách nào thành công. Bạn liền kiếm ngay một đàn anh, một chiên za, ít ra cũng là một người có hiểu biết về vấn đề này để hỏi. Nếu họ lịch sự, họ sẽ trả lời. Nếu không, họ sẽ im lặng, và bạn đánh giá họ là “không nhiệt tình”.</p>
<h3 id="Why-You-asked"><a href="#Why-You-asked" class="headerlink" title="Why? You asked?"></a>Why? You asked?</h3><p>Vì mục tiêu chính của bạn không phải là học hỏi. Mà là lợi dụng sự hiểu biết của họ để giải quyết vấn đề cho mình. Có hẳn một công việc trả lương cho nó, đó là “Tư vấn”. Đặc biệt là tư vấn kỹ thuật giá rất mắc, mà bạn đang muốn miễn phí ư? No way.</p>
<p>Ít ra bạn cũng phải cho họ biết tường tận vấn đề của mình, bạn đã thử những cách nào, kết quả ra sao, chuẩn đoán của bạn là gì (phải thử chừng 10 cách rồi hẵng hỏi), và đừng bắt họ phải trả lời ngay. Rất có thể trong những cách mà bạn thử nghiệm, có nhiều cách hay ho mới lạ sẽ mở đường cho một hướng đi mới, một công nghệ mới, hoặc sẽ là bình minh của cả một ngành khoa học mới. Và người được hỏi sẽ rất có hứng thú trả lời câu hỏi của bạn, thậm chí mời bạn tới trao đổi thêm.</p>
<p>Bạn có biết một nhà khoa học khi cố gắng chứng minh một tiên đề Euclid, ông ấy đã thử một cách mà trở thành một ngành toán học mới, gọi là “Hình học phi Euclid”. Nhà khoa học đó tên là Lobachevsky.</p>
<p>Và điều tối quan trọng là <strong>“Search trước khi hỏi”.</strong> Vấn đề đối với bạn là lạ hoắc, nhưng đối với những người khác thì vô cùng cơ bản, và đã có câu trả lời nằm chình ình ở một chỗ nào đó.</p>
<h2 id="Brainstorm"><a href="#Brainstorm" class="headerlink" title="Brainstorm"></a>Brainstorm</h2><p>Đối với các vấn đề mà chỉ có mình bạn giải quyết được. Thì Brainstorm là giải pháp duy nhất.</p>
<p>Tại sao chỉ có mình bạn giải quyết được nó? Vì bạn là người duy nhất suy nghĩ về nó. Hãy thử 40 phương pháp sáng tạo (google it). Hãy thử đảo ngược vấn đề, hãy thử suy nghĩ theo một hướng khác.</p>
<h2 id="Share-your-idea"><a href="#Share-your-idea" class="headerlink" title="Share your idea"></a>Share your idea</h2><p>Chia sẻ vấn đề của bạn, ý tưởng của bạn, và bạn sẽ có những cải tiến đáng giá, ít ra là những khuyết điểm mà bạn không hề nhận thức rằng nó tồn tại. Đối với các loại vấn đề, bạn có thể sẽ gặp những cách giải quyết vô cùng sáng tạo. Tuy nhiên, hãy đề phòng nạn “đạo ý tưởng”, xảy ra ở khắp mọi nơi trên thế giới. Vì vậy, chỉ chia sẻ cho những người mà bạn biết rằng họ sẽ không ăn cắp ý tưởng của mình, trừ phi bạn có đăng ký bảo hộ ý tưởng đó :3</p>
]]></content>
      <categories>
        <category>CSharp</category>
      </categories>
      <tags>
        <tag>problem</tag>
        <tag>solve</tag>
      </tags>
  </entry>
  <entry>
    <title>How to make yourself work when you just don’t want to?</title>
    <url>/2014/07/14/how-to-make-yourself-work-when-you-just-dont-want-to/</url>
    <content><![CDATA[<p>Repost from: <a href="http://blogs.hbr.org/2014/02/how-to-make-yourself-work-when-you-just-dont-want-to/">http://blogs.hbr.org/2014/02/how-to-make-yourself-work-when-you-just-dont-want-to/</a></p>
<p>By</p>
<p><img src="http://cuoilennaocacban2.files.wordpress.com/2014/07/071414_1416_howtomakeyo1.jpg"></p>
<p><a href="http://blogs.hbr.org/heidi-grant-halvorson/" title="Posts by Heidi Grant Halvorson">Heidi Grant Halvorson</a></p>
<p><a href="http://www.heidigranthalvorson.com/">Heidi Grant Halvorson</a>, Ph.D. is associate director for the Motivation Science Center at the Columbia University Business School and author of <a href="http://hbr.org/product/nine-things-successful-people-do-differently/an/11065-PDF-ENG"><em>Nine Things Successful People Do Differently</em></a> and <a href="http://www.amazon.com/Focus-Different-Seeing-Success-Influence/dp/1594631026/ref=la_B004GT04DE_1_4"><em>Focus: Use Different Ways of Seeing the World to Power Influence and Success</em></a>. Dr. Halvorson is available for <a href="http://www.brightsightgroup.net/2011/01/heidi-grant-halvorson.html">speaking and training</a>. She’s on Twitter <a href="https://twitter.com/hghalvorson">@hghalvorson</a>.</p>
<p>Heidi Grant Halvorson, tiến sỹ, là một giám đốc hợp tác của Trung tâm Khoa học Mục đích (tạm dịch) của Columbia University Business School, và là tác giả của quyển sách “9 điều mà người thành đạt làm một cách khác biệt” và “Tập trung: Sử dụng những cách nhìn khác nhau về thế giới để đạt thành công”</p>
<p>Bài dịch</p>
<p>Bạn đang có 1 dự án đang chạy chán ngắt – cái dự án mà deadline đang ngày càng gần hơn trên lịch. Khách hàng thì đang réo rắt gọi điện cho bạn, kiểu gọi mà chả giải quyết được vấn đề gì ngoài việc phàn nàn và làm mất thời gian quý báu của bạn. Ý khoan, chả phải là bạn đang muốn xem một bộ phim hay trên TV sao?</p>
<p>Bạn có thể tưởng tượng bao nhiêu mặc cảm tội lỗi, stress, và căng thẳng sẽ biến mất khi bạn – bằng cách kỳ diệu nào đó – làm những việc mà bạn không muốn làm, mà thực tế là bạn nên làm những việc đó?</p>
<p>Tin tốt (rất tốt) là bạn có thể cải thiện tình trạng này, nếu bạn sử dụng các chiến lược đúng đắn. Việc chỉ ra các chiến lược để sử dụng phụ thuộc vào lý do tại sao bạn đang trì hoãn.</p>
<span id="more"></span>
<p><strong>Lý do #1: Bạn né tránh làm điều gì đó vì bạn sợ sẽ làm hỏng nó.</strong></p>
<p>Giải pháp: Áp dụng “Trọng tâm ngăn ngừa”</p>
<p>Có 2 cách để nhìn vào bất kỳ nhiệm vụ nào. Bạn có thể làm điều gì đó nếu bạn thấy rằng bạn sẽ kết thúc nó tốt đẹp hơn so với hiện tại. Kiểu như “nếu tôi hoàn thành dự án này, tôi sẽ gây ấn tượng với sếp”, hay “Nếu tôi tập thể dục thường xuyên, thân hình tôi sẽ tuyệt vời”. Các nhà tâm lý học gọi đây là “Trọng tâm cầu tiến” – và các nghiên cứu chỉ ra rằng nếu bạn có một “trọng tâm cầu tiến”, bạn sẽ được thúc đẩy bởi các suy nghĩ đạt được thành quả, và bạn sẽ làm việc tốt nhất khi bạn cảm thấy háo hức và lạc quan. Nghe tốt đấy, phải không. Tuy nhiên nếu bạn sợ rằng bạn sẽ làm hỏng nó, bạn sẽ tạo ra sự lo lắng và nghi ngờ, làm cho bạn ít có khả năng thực hiện bất kỳ hành động nào cả.</p>
<p>Cái bạn cần là một cách nhìn mà không bị ảnh hưởng bởi yếu tố nghi ngờ. Khi bạn có một “trọng tâm ngăn ngừa”, thay vì suy nghĩ bạn sẽ hoàn tất nó tốt đẹp hơn như thế nào, hãy suy nghĩ công việc đó là cách mà bạn sẽ bảo toàn những gì đang có – ngăn ngừa mất mát. Ví dụ đối với một trọng tâm ngăn ngừa: “Hoàn tất dự án này sẽ làm cho sếp không tức giận” hay “tập thể dục thường xuyên để ngăn ngừa cơ thể phì nộn”. Hàng thập kỷ nghiên cứu, điều mà tôi đã mô tả trong quyển Focus, chỉ ra rằng động lực ngăn ngừa được tăng cường bởi sự lo lắng về những điều có thể đi sai so với kế hoạch. Khi bạn tập trung vào ngăn ngừa mất mát, bạn nhận ra rằng cách duy nhất để thoát ra khỏi nguy hiểm là hành động ngay lập tức. Càng lo lắng nhiều bao nhiêu, thì bạn sẽ hoàn tất công việc đó nhanh bấy nhiêu.</p>
<p>Tôi biết rằng điều này rất không thoải mái, đặc biệt là khi bạn thường có “Trọng tâm cầu tiến” (đa số mọi người đều có), nhưng đây có thể là cách duy nhất để bạn vượt qua sự lo lắng về làm hỏng mọi thứ, thay vì suy nghĩ về những hậu quả thảm khốc khi bạn không làm gì cả. Cố lên, sợ tụt quần đi. Khủng khiếp nhưng nó có ích.</p>
<p><strong>Lý do #2: Bạn né tránh điều gì đó vì bạn không “cảm thấy” như làm việc đó.</strong></p>
<p>Giải pháp: Cư xử như Spock, bỏ qua cảm xúc của bạn. Nó đang chặn đường đi của bạn.</p>
<p>Giải thích một tý: Khi bạn nói “Tôi sẽ đọc sách tại thư viện”, thì não bạn sẽ tự động tưởng tượng ra cảnh mình đi tới thư viện, chọn một quyển sách, và ngồi vào một cái ghế và đọc. Điều này xảy ra nhanh tới mức bạn không hề nghĩ rằng mình đã có những suy nghĩ đó. Khi bạn không thể tưởng tượng được cảnh này, bạn sẽ thấy mình không có cảm giác làm những việc đó.</p>
<p>Trong một quyển sách xuất sắc của mình: “Thuốc giải: Hạnh phúc cho người không thể có tư duy tích cực”, Oliver Burkeman chỉ ra rằng rất nhiều lần chúng ta nói “Tôi không thể rời khỏi giường lúc sáng sớm”, hay “Tôi không thể tập thể dục được”, thực ra ý của bạn là bạn không có cảm giác mình làm những điều đó. Sau cùng, chả có ai trói bạn trên giường buổi sáng sớm cả, cũng chả có tên côn đồ nào chặn đường đi tới phòng tập thể dục của bạn. Không có gì mang tính vật chất đang chặn đường của bạn – chẳng qua là bạn không có cảm giác làm việc đó. Tuy nhiên, mắc gì bạn phải chờ cho tới khi có “cảm giác” làm điều gì để để thực sự làm nó?</p>
<p>Hãy nghĩ về nó một tí, vì nó rất quan trọng. Trước tới giờ, chúng ta đều tin rằng để có động lực và hiệu quả, chúng ta cần phải có cảm giác rằng chúng ta muốn hành động. Phải sẵn sàng để làm điều đó. Tôi không biết tại sao chúng ta tin vào điều đó, vì nó 100% vô nghĩa. Đúng là ở một mức độ nào đó, bạn cần phải có một cam kết với những gì bạn đang làm. Bạn cần phải có sự mong muốn dự án hoàn tất, hoặc khỏe mạnh hơn, hoặc dậy sớm hơn. Nhưng bạn chả cần phải có cảm giác làm điều đó.</p>
<p>Trên thực thế, như Burkeman đã chỉ ra, rất nhiều họa sĩ, nhà văn, nhà sáng tạo đạt năng suất làm việc cao do họ có một thói quen hằng ngày bắt buộc họ làm việc trong một khoảng thời gian nhất định mỗi ngày, không quan trọng là họ có cảm hứng hay không. Burkeman dẫn chứng lời của họa sỹ Chuck Close: “Cảm hứng là dành cho mấy tên nghiệp dư, phần còn lại như chúng tôi chỉ đơn giản là xuất hiện và làm việc”.</p>
<p>Vì vậy, nếu bạn đang ngồi đó, né tránh làm việc chỉ vì bạn không có cảm giác làm những việc đó, hãy nhớ rằng bạn thực sự chả cần cảm giác đó. Chả có gì ngăn cản bạn cả.</p>
<p><strong>Lý do #3: Bạn né tránh làm việc vì nó khó, nó chán, hay nó khó chịu</strong></p>
<p>Giải pháp: Sử dụng cách lên kế hoạch “Nếu – thì”</p>
<p>Rất thường xuyên, chúng ta cố gắng giải quyết các vấn đề đặc biệt với một ý chí: “Lần tới, tôi sẽ làm cho bản thân mình bắt đầu làm việc này sớm hơn”. Dĩ nhiên là chúng ta có một sức mạnh ý chí để làm điều đó, chúng ta không bao giờ né tránh nó lúc mới bắt đầu cả. Nghiên cứu chỉ ra rằng chúng ta thường đánh giá quá cao khả năng tự kiểm soát của mình, và dựa vào nó quá nhiều để tránh khỏi rắc rối.</p>
<p>Hãy cho mình một đặc ân, thừa nhận rằng sức mạnh ý chí là có hạn, và nó có thể sẽ không luôn luôn làm cho bạn làm những việc bạn thấy khó khăn, tẻ nhạt hoặc khủng khiếp. Thay vào đó, hãy sử dụng cách lên kế hoạch “Nếu – thì”</p>
<p>Lên kế hoạch “Nếu – thì” phức tạp hơn là vạch ra các bước bạn phải làm, nó còn là quyết định xem địa điểm và thời gian bạn làm những bước đó.</p>
<p>“Nếu tới 2:00 PM, tôi sẽ dừng việc tôi đang làm để bắt đầu viết báo cáo mà Bob yêu cầu”</p>
<p>“Nếu sếp không đề cập tới chuyện tăng lương của tôi trong buổi họp tới, tôi sẽ nhắc lại nó trước khi buổi họp kết thúc”</p>
<p>Bằng cách quyết định trước một cách chính xác những gì bạn dự định làm, và khi điều kiện xảy ra, bạn sẽ không phải cân nhắc có nên làm việc đó hay không, hay bạn có nên làm một việc khác với việc bạn dự định làm hay không. Khi chúng ta cân nhắc, ý chí trở nên cần thiết cho các lựa chọn khó khăn. Tuy nhiên, dùng kế hoạch “Nếu – thì” sẽ làm giảm đáng kể yêu cầu cần tới ý chí, bằng cách đảm bảo rằng bạn đã ra quyết định đúng đắn trước khi thời điểm đó xảy ra. Trên thực tế, cách lên kế hoạch “Nếu – thì” đã được thể hiện trong hơn 200 nghiên cứu rằng nó sẽ làm tăng tỷ lệ đạt mục tiêu và nâng cao năng suất lên 200% đến 300%</p>
<p>Tôi nhận ra rằng 3 chiến lược mà tôi giới thiệu cho bạn – suy nghĩ về cách giảm thiểu hậu quả, mặc kệ cảm giác của mình, gắn kết với một kế hoạch điều kiện – không nghe vui vẻ hoặc hay ho như “Hãy đi theo niềm đam mê của bạn”, “Hãy tích cực”. Nhưng nó có lợi thế quyết định bởi thực sự đạt hiệu quả - điều mà bạn sẽ có khi bạn sử dụng chúng</p>
]]></content>
      <categories>
        <category>Life</category>
      </categories>
  </entry>
  <entry>
    <title>[Windows Store] When the property window in Visual Studio not responding</title>
    <url>/2014/10/10/windows-phone-when-the-design-pallet-not-working/</url>
    <content><![CDATA[<p>Khi làm việc với Visual Studio 2012, VS2013 trở lên, nhất là với việc thiết kế giao diện bằng ngôn ngữ XAML, bạn rất có thể sẽ bắt gặp một điều bất tiện: Sau một thời gian hoạt động ổn định, bạn không thể click, chỉnh sửa, tăng giảm bất cứ thứ gì trong cửa sổ property. Vậy là bạn phải chỉnh sửa trực tiếp trong code, khá bất tiện và mất thời gian.</p>
<p>Làm thế nào để sửa được lỗi này?</p>
<span id="more"></span>
<h1 id="OLD-WAY-Restart-your-Visual-Studio"><a href="#OLD-WAY-Restart-your-Visual-Studio" class="headerlink" title="OLD WAY: Restart your Visual Studio"></a>OLD WAY: Restart your Visual Studio</h1><p>Phải rồi, câu nói nổi tiếng của Apple Supporter: “Have you tried turn it off and on again?” Tắt đi bật lại Visual Studio chắc chắn sẽ giải quyết vấn đề cho bạn. Nhưng tiếp tục đọc tiếp bài blog này nhé</p>
<h1 id="NEW-WAY-Run-a-piece-of-code"><a href="#NEW-WAY-Run-a-piece-of-code" class="headerlink" title="NEW WAY: Run a piece of code"></a>NEW WAY: Run a piece of code</h1><p>Đoạn code sau sẽ cho phép bạn kill designer task bên trong Visual Studio. Chạy đoạn code này xong, vào Visual Studio, bấm đường link “Click here to reload Designer”, thế là xong.</p>
<p>Mở notepad, copy paste đoạn code sau:</p>
<p>taskkill /f /im XDesProc.exe</p>
<p>Lưu lại với đuôi .bat</p>
<p>Vậy là xong. Mỗi lần bị lỗi không thể edit trong khung property của Visual Studio, bạn chỉ cần double click file này là xong.</p>
<h1 id="More-details-What-does-Microsoft-say"><a href="#More-details-What-does-Microsoft-say" class="headerlink" title="More details: What does Microsoft say?"></a>More details: What does Microsoft say?</h1><p>Các kỹ sư của Microsoft đã biết đến sự tồn tại của lỗi này. Và họ đã “wánh” nó là Won-fix in this version. Tức là trừ phi có phiên bản Visual Studio mới hơn, lỗi này sẽ không được sửa trong phiên bản 2012, 2013.</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows Phone</category>
        <category>Windows Store App</category>
      </categories>
      <tags>
        <tag>Visual Studio</tag>
        <tag>windows phone</tag>
      </tags>
  </entry>
  <entry>
    <title>Upgrade your apps to Windows 8.1 – Tips and tricks</title>
    <url>/2014/10/20/upgrade-your-apps-to-windows-8-1-tips-and-tricks/</url>
    <content><![CDATA[<p>Vậy là Windows 8.1 ra mắt cũng đã lâu. Đối với các ứng dụng viết mới thì target mặc định của nó đã là Windows 8.1. Vậy đối với các ứng dụng cũ kỹ thì sao?</p>
<p>Microsoft cung cấp cho bạn một giải pháp, tuy chưa hoàn hảo, nhưng rất hữu ích. Bạn chỉ cần bấm và click.</p>
<span id="more"></span>
<h1 id="Retarget"><a href="#Retarget" class="headerlink" title="Retarget"></a>Retarget</h1><p>Để retarget ứng dụng từ windows 8 lên 8.1, rất đơn giản, chọn chuột phải vào Project, nhấn Retarget to Windows 8.1</p>
<p><img src="https://farm6.staticflickr.com/5597/14959569523_93a2eea021_o.png"></p>
<p>Một bảng nhỏ hiện ra, nói rằng bạn nên backup blah blah blah. Nếu bạn đang dùng version control như TFS, cách backup tốt nhất là check in trước khi retarget</p>
<p>Nhấn OK để Visual Studio tiến hành Retarget</p>
<p><img src="https://farm6.staticflickr.com/5615/15556047406_d430b4f604_o.png"></p>
<p>Khi bạn thấy cái bảng này là thành công….một nửa</p>
<p><img src="https://farm6.staticflickr.com/5604/15577095301_919a00e1f7_o.png"></p>
<h1 id="Fix-errors-and-Warning"><a href="#Fix-errors-and-Warning" class="headerlink" title="Fix errors and Warning"></a>Fix errors and Warning</h1><p>Như hình trên bạn cũng thấy, có nhiều Errors và Warning xuất hiện. Yên tâm, khi build thử project, bạn sẽ thấy còn nhiều errors hơn nữa</p>
<h2 id="Cac-errors-ve-References"><a href="#Cac-errors-ve-References" class="headerlink" title="Các errors về References"></a>Các errors về References</h2><p>Như hình trên, ứng dụng cũ dùng Microsoft Advertising SDK for Windows 8 (XAML) version 6.1. Bạn đã Upgrade lên 8.1, thì phải dùng SDK phiên bản mới hơn.</p>
<p>Right click Reference trong Project Folder, chọn Add Reference…</p>
<p><img src="https://farm4.staticflickr.com/3942/14959045524_c16f0ccea0_o.png"></p>
<p>Bỏ chọn các dòng bị mờ, và chọn dòng sáng rõ tương ứng. Như hình dưới đây. Xong rồi thì nhấn OK</p>
<p><img src="https://farm4.staticflickr.com/3938/15393674778_6d1b670903_o.png"></p>
<h2 id="Reinstall-Nuget-Package"><a href="#Reinstall-Nuget-Package" class="headerlink" title="Reinstall Nuget Package"></a>Reinstall Nuget Package</h2><p>Có một số Nuget Package chưa chịu target sang Windows 8.1. Mình sẽ target nó lại bằng cách…Reinstall</p>
<p>Mở Tool &gt; Nuget Package Manager &gt; Package Manager Console</p>
<p><img src="https://farm4.staticflickr.com/3951/15556131206_828262a120_o.png"></p>
<p>Có tùy chọn cho phép bạn Reinstall tất cả mọi nuget package, nhưng mà làm vậy thì hơi lâu. Bạn chỉ nên update một số package bị ảnh hưởng thôi. Tên Package bị ảnh hưởng nằm trong dòng thông báo lỗi</p>
<p>Gõ dòng lệnh sau vào. Đoạn cuối cùng là tên package</p>
<p><img src="https://farm4.staticflickr.com/3934/15580689642_679c2c614e_o.png"></p>
<p>Package Manager Console sẽ chạy, nhìn rất chuyên nghiệp :3</p>
<p>Chú ý: khi reinstall Google Analytics SDK, bạn sẽ thấy file bị conflict. Gõ N vô để nó bỏ qua không overwrite cái file này.</p>
<p><img src="https://farm4.staticflickr.com/3942/14959702053_fc3fe49d21_o.png"></p>
<p>Tiếp tục làm tương tự cho các package khác. Lần này, bạn chỉ cần gõ phím mũi tên để paste lại lệnh gần nhất. Edit cái tên package là xong</p>
<h2 id="Fix-warning-ve-Resource"><a href="#Fix-warning-ve-Resource" class="headerlink" title="Fix warning về Resource"></a>Fix warning về Resource</h2><p>Bạn nào làm app Multiple language sẽ gặp warning này. Lý do là method GetValue đã bị obsoleted, bạn cần phải nâng cấp một tí</p>
<p><img src="https://farm4.staticflickr.com/3939/15394661740_97dc995ef1_o.png"></p>
<p>Rất đơn giản. Thêm một dòng “ResourceContext.GetForCurrentView() làm tham số thứ 2 là xong</p>
<p><img src="https://farm6.staticflickr.com/5604/15577621901_91cf4673b5_o.png"></p>
<p>Đổi thành cái này</p>
<p><img src="https://farm6.staticflickr.com/5611/15394171128_99a5fc56b2_o.png"></p>
<h2 id="Fix-loi-querry-for-Windows-Size-directly"><a href="#Fix-loi-querry-for-Windows-Size-directly" class="headerlink" title="Fix lỗi querry for Windows Size directly"></a>Fix lỗi querry for Windows Size directly</h2><p>Ở windows 8.1, windows size đã có thể lấy trực tiếp ra ngoài. Vì vậy, dòng này trong Layout Aware Page bị lỗi thời.</p>
<p><img src="https://farm6.staticflickr.com/5607/15394693500_050c985474_o.png"></p>
<p>Sửa bằng cách ta sẽ sửa method DetermineVisualState</p>
<p>Chuột phải DetermineVisualState &gt; Go to Definition</p>
<p>Sửa lại như sau</p>
<p><code>protected virtual string DetermineVisualState() &#123; string visualState = &quot;FullScreenLandscape&quot;; var windowWidth = Window.Current.Bounds.Width; var windowHeight = Window.Current.Bounds.Height; if( windowWidth &lt;= 500 ) &#123; visualState = &quot;Snapped&quot; + &quot;_Detail&quot;; &#125; else if( windowWidth &lt;= 1366 ) &#123; if( windowWidth &lt; windowHeight ) &#123; visualState = &quot;FullScreenPortrait&quot; + &quot;_Detail&quot;; &#125; else &#123; visualState = &quot;FilledOrNarrow&quot;; &#125; &#125; return visualState; &#125;</code></p>
<p>Sau đó, thay thế method này với method cũ. Lưu ý method này không có tham số</p>
<p>Vậy là xong. Build lại, bạn sẽ thấy không còn lỗi nào :yay:</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows Store App</category>
      </categories>
      <tags>
        <tag>Visual Studio</tag>
        <tag>retarget</tag>
        <tag>upgrade</tag>
        <tag>windows 8.1</tag>
      </tags>
  </entry>
  <entry>
    <title>Fix your glitch Bluetooth mouse (or any bluetooth devices)</title>
    <url>/2014/11/14/fix-your-glitch-bluetooth-mouse/</url>
    <content><![CDATA[<p><a href="https://cuoilennaocacban2.files.wordpress.com/2014/11/2_5f00_77b60b43.jpg"><img src="https://cuoilennaocacban2.files.wordpress.com/2014/11/2_5f00_77b60b43.jpg" alt="2_5F00_77B60B43"></a></p>
<p>You have a great bluetooth mouse. Heavy, comfort for your hand, BlueTrack Technology, etc. Everything is great, but…the mouse got freezed, or lagged sometime.</p>
<p>How to fix this?</p>
<span id="more"></span>

<h1 id="Root-cause"><a href="#Root-cause" class="headerlink" title="Root cause"></a>Root cause</h1><p>The root cause of this problem, after so many search, is because Windows is allowed to turn off some devices when they’re not active after some period of time, to save battery.</p>
<h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>Right click on Start button &gt; Device Manager</p>
<p><img src="https://farm9.staticflickr.com/8661/15167914553_df323bc4bd_o.png"></p>
<p>Find <code>Bluetooth</code> category, find the devices with “Adaptor” in the name</p>
<p><img src="https://farm6.staticflickr.com/5609/15601546119_b9cc814b86_o.png"></p>
<p>Right click on that device &gt; Properties &gt; Power Management &gt; Uncheck “Allow the computer to turn off this device to save power”</p>
<p><img src="https://farm8.staticflickr.com/7513/15788949452_8f09bede17_o.png"></p>
<p>That’s it :3</p>
]]></content>
      <categories>
        <category>Computer Tips</category>
      </categories>
      <tags>
        <tag>tips</tag>
      </tags>
  </entry>
  <entry>
    <title>XAML Styler – Bug and fixes</title>
    <url>/2014/11/17/xaml-styler-bug-and-fixes/</url>
    <content><![CDATA[<p>Dành cho bạn nào chưa biết, XAML Styler là một extension nho nhỏ dành cho Visual Studio, dùng để format lại file thiết kế giao diện xaml cho đẹp.</p>
<p>XAML Styler được phát triển thêm dựa trên Beautiful Xaml extension, và sau này được đưa lên Visual Studio Gallery.</p>
<span id="more"></span>
<h1 id="The-Good"><a href="#The-Good" class="headerlink" title="The Good"></a>The Good</h1><p>XAML Styler cho Visual 2010 và 2012 phiên bản stable có thể download tại đây</p>
<p><a href="http://xamlstyler.codeplex.com/">http://xamlstyler.codeplex.com/</a></p>
<h1 id="The-Bad"><a href="#The-Bad" class="headerlink" title="The Bad"></a>The Bad</h1><p>Phiên bản bên trên chỉ dành cho 2012 trở xuống thôi nha. Nếu bạn đang dùng Visual Studio 2013 và vẫn muốn XAML Styler, thì đây là câu trả lời cho bạn</p>
<p>Thư mục chính của Project: <a href="https://github.com/nicovermeir/xamlstyler">https://github.com/nicovermeir/xamlstyler</a></p>
<p>Tải extension đã build ở đây: <a href="https://visualstudiogallery.msdn.microsoft.com/3de2a3c6-def5-42c4-924d-cc13a29ff5b7">https://visualstudiogallery.msdn.microsoft.com/3de2a3c6-def5-42c4-924d-cc13a29ff5b7</a></p>
<h2 id="It’s-have-a-bug-annoying-bug"><a href="#It’s-have-a-bug-annoying-bug" class="headerlink" title="It’s have a bug, annoying bug"></a>It’s have a bug, annoying bug</h2><p>XAML Styler dành cho 2013 có một bug rất khó chịu, đó là nó sẽ thêm nhiều dòng trống vào code XAML của bạn. Cách khắc phục?</p>
<h1 id="The-Ugly"><a href="#The-Ugly" class="headerlink" title="The Ugly"></a>The Ugly</h1><p>2012 so với 2013 về mặt cấu trúc cũng không khác nhau xa lắm. Đã có một người download toàn bộ XAML Styler của 2012 xuống và build lại cho phù hợp với Visual Studio 2013</p>
<p><a href="http://www.spikie.be/blog/post/2013/11/13/.aspx">http://www.spikie.be/blog/post/2013/11/13/.aspx</a></p>
<p>Tuy nhiên vô đây bạn sẽ hơi bị bối rối một chút. Để tiện cho việc download, mình đã up lại lên box.com</p>
<p><a href="https://app.box.com/s/5qi6fj9sqb88412tsgf5">https://app.box.com/s/5qi6fj9sqb88412tsgf5</a></p>
<p>Lưu ý là phiên bản này không có version control, tức là nó sẽ không tự động cập nhật khi có version mới.</p>
<h1 id="How-to-use"><a href="#How-to-use" class="headerlink" title="How to use"></a>How to use</h1><p>Sau khi tải về, các bạn khởi động lại Visual Studio để Extension có hiệu lực</p>
<p>Mở một file XAML bất kỳ, nhấn chuột phải, chọn Beautiful XAML</p>
<p><img src="https://farm8.staticflickr.com/7569/15805843611_61f1d5ce4f_o.png"></p>
<p>Trước khi format</p>
<p><img src="https://farm6.staticflickr.com/5612/15188291573_8707455bf8_o.png"></p>
<p>Sau khi format</p>
<p><img src="https://farm6.staticflickr.com/5616/15805857981_77e68fecc3_o.png"></p>
<h2 id="Chinh-cac-properties"><a href="#Chinh-cac-properties" class="headerlink" title="Chỉnh các properties"></a>Chỉnh các properties</h2><p>Vào Tools &gt; Option</p>
<p><img src="https://farm6.staticflickr.com/5615/15807753295_85a73c7f39_o.png"></p>
<p>Chọn XAML Styler nằm dưới cùng và tùy chỉnh như ý muốn</p>
<p><img src="https://farm6.staticflickr.com/5604/15187797314_d356dce01e_o.png"></p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows Phone</category>
      </categories>
      <tags>
        <tag>Visual Studio</tag>
        <tag>extension</tag>
      </tags>
  </entry>
  <entry>
    <title>Virtual Machine in Azure Part 1: Create virtual machine and connect to it</title>
    <url>/2014/12/03/virtual-machine-in-azure-part-1-create-virtual-machine-and-connect-to-it/</url>
    <content><![CDATA[<p>Chào các bạn, vậy là azure đã cho đăng ký chính thức ở Việt Nam.</p>
<p>Và 1 dịch vụ rất hay của Azure đó là máy ảo. Bạn được phép tạo một cái máy ảo như máy thật, chạy Windows Server 2012 hoặc 2014, thậm chí là tạo một cái máy ảo chạy thử Windows 10 Technical Preview cũng vẫn được.</p>
<span id="more"></span>
<h1 id="Tao-may-ao"><a href="#Tao-may-ao" class="headerlink" title="Tạo máy ảo"></a>Tạo máy ảo</h1><p>Đăng nhập vào portal của azure, tạo Storage Account. Bước này có thể làm tự động, nhưng tạo tay sẽ cho phép bạn đặt cho nó một cái tên ý nghĩa: <a href="https://manage.windowsazure.com/" title="https://manage.windowsazure.com">https://manage.windowsazure.com</a></p>
<p>Tiếp theo, tạo một Virtual Machine từ Gallery</p>
<p><img src="https://farm8.staticflickr.com/7490/15316844594_6ea298d7d3_o.png"></p>
<p>Ở đây, bạn có thể chọn từ rất nhiều Image, có cả các image có sẵn Visual Studio 2013, và có cả Windows 10 Enterprise Technical Preview</p>
<p><img src="https://farm8.staticflickr.com/7555/15938450692_9b8b964e62_o.png"></p>
<p>Đặt một cái tên mang tính gợi nhớ cho bạn. Ví dụ như Windows81VM hay gì đó đại loại vậy</p>
<p>Chọn cấu hình cho máy bạn. Nếu bạn chọn những Image có cài sẵn nhiều thứ, thì nên chọn cấu hình cao cao một chút. Lưu ý là cấu hình càng cao thì càng tốn tiền</p>
<p>Tạo username và password cho bạn. Phải nhớ username và password này</p>
<p><img src="https://farm8.staticflickr.com/7487/15938466492_dfc0b4d6f0_o.png"></p>
<p>Availability tức là VM của bạn sẽ được backup ở một số nơi khác ngoài nơi bạn tạo chính. Tất nhiên là sẽ tốn phí</p>
<p><img src="https://farm8.staticflickr.com/7554/15751845320_971cdc5574_o.png"></p>
<p>Xong hết rồi thì bấm Create. Chờ nó phân vùng, tạo máy ảo, đăng ký, khởi động, blah blah blah rất là lâu.</p>
<h1 id="Dang-nhap"><a href="#Dang-nhap" class="headerlink" title="Đăng nhập"></a>Đăng nhập</h1><p>Tạo xong thì phải đăng nhập. Và bạn sẽ đăng nhập bằng Remote Desktop của Windows</p>
<p>Sau khi máy ảo đã khởi động xong, bạn nhấn vào nút connect để tải về một file .RDP. Nút connect chỉ xuất hiện ở dashboard của Virtual Machine mà bạn tạo</p>
<p><img src="https://farm9.staticflickr.com/8668/15319517683_95abc6ee6a_o.png"></p>
<p>Double click file này để chạy, bạn sẽ thấy một khung đăng nhập. Bây giờ tới phần éo le</p>
<p>Select “Other Account”. Ở ô username, bạn nhập theo cú pháp “hostname\username”. Hostname lấy trong phần dashboard của virtual machine trong Azure. Password bạn nhập đúng password lúc tạo máy ảo</p>
<p><img src="https://farm9.staticflickr.com/8646/15938501022_5b036859a4_o.png"></p>
<p>Bạn sẽ gặp phải một vài cảnh báo về chứng chỉ. Cứ việc cho phép nó. Đến bây giờ bạn đã có thể đăng nhập vào máy ảo.</p>
]]></content>
      <categories>
        <category>Azure</category>
      </categories>
      <tags>
        <tag>azure</tag>
        <tag>virtual machine</tag>
      </tags>
  </entry>
  <entry>
    <title>2014 in review</title>
    <url>/2014/12/30/2014-in-review/</url>
    <content><![CDATA[<p>The WordPress.com stats helper monkeys prepared a 2014 annual report for this blog.</p>
<p><a href="http://cuoilennaocacban2.wordpress.com/2014/annual-report/"><img src="//s0.wp.com/wp-content/mu-plugins/annual-reports/img/2014-emailteaser.png"></a></p>
<p>Here’s an excerpt:</p>
<blockquote>
<p>The concert hall at the Sydney Opera House holds 2,700 people. This blog was viewed about <strong>11,000</strong> times in 2014. If it were a concert at Sydney Opera House, it would take about 4 sold-out performances for that many people to see it.</p>
</blockquote>
<p><a href="http://cuoilennaocacban2.wordpress.com/2014/annual-report/">Click here to see the complete report.</a></p>
]]></content>
      <categories>
        <category>Others</category>
      </categories>
  </entry>
  <entry>
    <title>Virtual Machine in Azure Part 2: Configure to login with Microsoft Account &amp; make it FTP Server</title>
    <url>/2014/12/29/virtual-machine-in-azure-part-2-configure-to-login-with-microsoft-account-make-it-ftp-server/</url>
    <content><![CDATA[<p>Chào các bạn, ở phần trước, các bạn đã biết cách tạo một Virtual Machine trên Azure. Phần này mình sẽ hướng dẫn cho các bạn cách thiết lập nó để đăng nhập bằng chính Microsoft Account của bạn, và biến nó thành một máy chủ FTP nhé.</p>
<span id="more"></span>
<h1 id="Login-with-MS-Account"><a href="#Login-with-MS-Account" class="headerlink" title="Login with MS Account"></a>Login with MS Account</h1><p>Tạo một user mới, dùng Microsoft Account làm username (ví dụ như <a href="mailto:blahblahblah@hotmail.com">blahblahblah@hotmail.com</a> chả hạn)</p>
<p><img src="https://farm8.staticflickr.com/7480/16133514591_b1627eeae8_o.png"></p>
<p><img src="https://farm8.staticflickr.com/7553/16135418725_c4193f946f_o.png"></p>
<p>Sau khi tạo xong, mở Computer Management, chọn mục Local Users and Groups trong System Tools. User mới tạo sẽ xuất hiện trong mục này với một cái tên bị cắt ngắn.</p>
<p>Bạn mở Property của User này lên, chuyển sang thẻ Member of, thêm người này vào nhóm Remote Desktop Users.</p>
<p><img src="https://farm8.staticflickr.com/7473/16134669652_56a4064c9b_o.png"></p>
<p><img src="https://farm8.staticflickr.com/7494/16109629516_1bbd681b2b_o.png"></p>
<p>Trong Control Panel, mở System and Security, chọt Allow Remote Access, bỏ chọn tùy chọn “Allow connections only … with Network Level Authentication”.</p>
<p><img src="https://farm8.staticflickr.com/7550/16134669472_0ca0f6cf48_o.png"></p>
<p>Bước cuối cùng là mở file .RDP lên bằng notepad, thay đổi dòng “<strong>prompt for credentials:i:1</strong>” thành “<strong>enablecredsspsupport:i:0</strong>”</p>
<p>Vậy là xong. Sau khi đăng nhập lần đầu tiên, bạn có thể undo 2 bước cuối cùng.</p>
<h1 id="FTP-Server"><a href="#FTP-Server" class="headerlink" title="FTP Server"></a>FTP Server</h1><h2 id="Cai-dat-tren-Azure-Portal"><a href="#Cai-dat-tren-Azure-Portal" class="headerlink" title="Cài đặt trên Azure Portal"></a>Cài đặt trên Azure Portal</h2><p>Bước đầu tiên, bạn phải tạo một port 21 trong phần quản lý của Azure</p>
<p>Click chọn Add trong phần Endpoint của Virtual Machine của bạn</p>
<p><img src="https://farm8.staticflickr.com/7555/15949429589_b3ec1b188f_o.png"></p>
<p>Chọn Add a stand alone endpoint và nhấn next</p>
<p><img src="https://farm8.staticflickr.com/7544/16133612571_e8534a1023_o.png"></p>
<p>Chọn FTP, các thông số sẽ tự điền vô cho bạn (:yay:)</p>
<p><img src="https://farm8.staticflickr.com/7520/15949443029_fc25fc17d1_o.png"></p>
<p>Chờ nó hoàn tất</p>
<p><img src="https://farm8.staticflickr.com/7568/15949450879_d152283f57_o.png"></p>
<h2 id="Cai-dat-tren-Virtual-Machine"><a href="#Cai-dat-tren-Virtual-Machine" class="headerlink" title="Cài đặt trên Virtual Machine"></a>Cài đặt trên Virtual Machine</h2><h3 id="Cai-FileZilla-Server"><a href="#Cai-FileZilla-Server" class="headerlink" title="Cài FileZilla Server"></a>Cài FileZilla Server</h3><p>Trên VM, bạn tải FileZilla Server về: <a href="https://filezilla-project.org/download.php?type=server">https://filezilla-project.org/download.php?type=server</a></p>
<p>Khi cài đặt, chấp nhận tất cả các tùy chọn mặc định của nó</p>
<p>Mở FileZilla Server lên, chọn Edit &gt; Users</p>
<p><img src="https://farm8.staticflickr.com/7558/15948351778_1d23368c73_o.png"></p>
<p>Thêm một User mới với tên tùy chọn. Đây là tên bạn sẽ dùng để đăng nhập vào FTP Server của mình sau này</p>
<p><img src="https://farm8.staticflickr.com/7509/15948353428_0c2804bfc0_o.png"> <img src="https://farm9.staticflickr.com/8655/16110010396_2ff5e90b5b_o.png"></p>
<p>Thêm password cho tài khoản này. Nếu không thì Man-in-the-middle sẽ truy cập được và server của bạn và tiến hành phá hoại</p>
<p><img src="https://farm8.staticflickr.com/7547/16135806475_92b2f1c975_o.png"></p>
<p>Tiếp theo, chọn Shared Folders và thêm vào Folder mà bạn sẽ kết nối để download hoặc upload dữ liệu</p>
<p><img src="https://farm9.staticflickr.com/8579/16134067331_1317d1baa7_o.png"></p>
<p>Lưu ý rằng có các tùy chọn cho phép các quyền khác nhau đối với folder, và các quyền này đi theo tài khoản mà bạn đã tạo và đã chọn trong FileZilla Server</p>
<p>Lưu ý 2: Không được chọn Folder gốc (C:/ D:/ E:/), luôn luôn chọn Folder dưới mức gốc 1 level</p>
<p>Tiếp tục, mở FileZilla Server Settings, chọn Passive Mode</p>
<p><img src="https://farm8.staticflickr.com/7553/16110037406_9a3392ff54_o.png"></p>
<p>Chọn “Use custom Port Range, và điền một số port cho cả 2 bên (vì bạn sẽ ko muốn tạo ra cả trăm port trên Azure Portal đâu)</p>
<p>Tiếp tục chọn Retrieve external IP Address from</p>
<p><img src="https://farm8.staticflickr.com/7529/16110190066_890fb9766c_o.png"></p>
<h3 id="Thiep-lap-Firewall"><a href="#Thiep-lap-Firewall" class="headerlink" title="Thiếp lập Firewall"></a>Thiếp lập Firewall</h3><p>Mở Windows Firewall lên và cho phép FileZilla Server</p>
<p>Chọn Allow an app through Windows Filewall</p>
<p><img src="https://farm8.staticflickr.com/7517/15950078947_c6588c56ac_o.png"></p>
<p>Nếu bạn không tìm thấy FileZilla Server trong danh sách, thì duyệt tới file thực thi .exe của nó</p>
<p><img src="https://farm8.staticflickr.com/7495/16135094662_38e4a8b7ab_o.png"></p>
<p>Sau cùng nó phải giống như vầy</p>
<p><img src="https://farm9.staticflickr.com/8675/15516120053_03bd077f97_o.png"></p>
<p>Tiếp theo, ở Control Panel &gt; Windows Firewall, chọn Advanced Settings</p>
<p><img src="https://farm9.staticflickr.com/8644/16133948991_6f9fb96a8d_o.png"></p>
<p>Chọn Inbound Rules, và thêm cái custom Port của bạn hồi nãy mới thiếp lập trong FileZilla Server</p>
<p><img src="https://farm8.staticflickr.com/7570/15513526614_76337d6844_o.png"> <img src="https://farm9.staticflickr.com/8638/16110072306_90f3ffacf3_o.png"> <img src="https://farm8.staticflickr.com/7462/16135112792_25b507d9d3_o.png"></p>
<p>Thiết lập cổng cho cái Inbound Rule này</p>
<p><img src="https://farm8.staticflickr.com/7485/15513532304_2608708f49_o.png"></p>
<h2 id="Cai-dat-tren-Local-Machine"><a href="#Cai-dat-tren-Local-Machine" class="headerlink" title="Cài đặt trên Local Machine"></a>Cài đặt trên Local Machine</h2><h3 id="Cai-dat-FileZilla-Client"><a href="#Cai-dat-FileZilla-Client" class="headerlink" title="Cài đặt FileZilla Client"></a>Cài đặt FileZilla Client</h3><p>Tải FileZilla Client tại: <a href="https://filezilla-project.org/download.php?type=client">https://filezilla-project.org/download.php?type=client</a></p>
<p>Khi khởi chạy, điền dải IP trong Public IP trên Azure của bạn</p>
<p><img src="https://farm8.staticflickr.com/7569/16135891365_c631a0fc94_o.png"></p>
<p>Điền các thông tin vào các ô tương ứng và nhấn quick connect</p>
<p><img src="https://farm9.staticflickr.com/8657/16134040481_9840ea9497_o.png"></p>
<p>Danh sách các Folder bạn đã Share sẽ hiện ra :3</p>
<p><img src="https://farm9.staticflickr.com/8667/15949873649_5254d44ec9_o.png"></p>
<h2 id="Thu-nghiem-toc-do-cua-FTP-Server-moi-tao"><a href="#Thu-nghiem-toc-do-cua-FTP-Server-moi-tao" class="headerlink" title="Thử nghiệm tốc độ của FTP Server mới tạo"></a>Thử nghiệm tốc độ của FTP Server mới tạo</h2><p>Tốc độ mạng của Azure</p>
<p><img src="http://www.speedtest.net/result/4018401482.png"></p>
<p>Download</p>
<p><img src="https://farm8.staticflickr.com/7556/15948706180_d594463823_o.png"></p>
<p>Mạng công ty bị QoS chặn download tốc độ cao file lớn (haiza)</p>
<p>Upload</p>
<p><img src="https://farm8.staticflickr.com/7470/15949950969_fbd629132e_o.png"></p>
<p>Mạng công ty bị QoS chặn upload tốc độ cao file lớn (haiza)</p>
]]></content>
      <categories>
        <category>Azure</category>
      </categories>
      <tags>
        <tag>file</tag>
        <tag>azure</tag>
        <tag>virtual machine</tag>
        <tag>ftp</tag>
      </tags>
  </entry>
  <entry>
    <title>[Browser Test] New Spartan&#39;s engine on IE 11 Technical Preview</title>
    <url>/2015/01/27/browser-test-new-spartans-engine-on-ie-11-technical-preview/</url>
    <content><![CDATA[<p>Hello friends, today I would like to show you the test result of the new Spartan’s engine on IE Technical Preview that came along with Windows 10 build 9926 (with Cortana and stuffs).</p>
<p>The test will be on 3 main browser: IE, Firefox and Chrome</p>
<span id="more"></span>
<p>The first test: SunSpider</p>
<p>IE: <a href="http://www.webkit.org/perf/sunspider-1.0.2/sunspider-1.0.2/results.html?%7B%22v%22:%20%22sunspider-1.0.2%22,%20%223d-cube%22:%5B7,8,15,7,5,4,4,18,6,4%5D,%223d-morph%22:%5B1,1,3,1,1,1,1,3,1,1%5D,%223d-raytrace%22:%5B6,5,16,11,5,5,4,17,7,5%5D,%22access-binary-trees%22:%5B1,1,4,1,2,1,1,3,2,3%5D,%22access-fannkuch%22:%5B3,3,9,3,3,3,3,9,3,3%5D,%22access-nbody%22:%5B3,3,7,3,3,4,3,9,3,4%5D,%22access-nsieve%22:%5B1,1,3,1,1,1,1,3,1,1%5D,%22bitops-3bit-bits-in-byte%22:%5B0,0,2,0,0,0,0,2,0,0%5D,%22bitops-bits-in-byte%22:%5B1,1,3,1,1,1,1,3,1,1%5D,%22bitops-bitwise-and%22:%5B3,3,3,3,3,3,3,3,3,3%5D,%22bitops-nsieve-bits%22:%5B3,3,6,3,3,3,4,5,4,3%5D,%22controlflow-recursive%22:%5B1,1,4,1,1,1,1,4,1,1%5D,%22crypto-aes%22:%5B17,3,12,6,3,3,3,12,5,3%5D,%22crypto-md5%22:%5B1,1,9,1,2,1,1,8,1,1%5D,%22crypto-sha1%22:%5B1,1,7,1,1,1,1,7,1,1%5D,%22date-format-tofte%22:%5B8,8,13,9,7,7,7,13,8,7%5D,%22date-format-xparb%22:%5B15,14,16,14,13,13,13,15,13,15%5D,%22math-cordic%22:%5B2,1,4,2,2,1,2,3,2,2%5D,%22math-partial-sums%22:%5B9,6,11,9,6,6,7,11,8,7%5D,%22math-spectral-norm%22:%5B1,1,4,1,1,1,1,5,1,1%5D,%22regexp-dna%22:%5B9,9,9,9,9,8,9,8,8,8%5D,%22string-base64%22:%5B2,2,6,2,2,2,2,7,2,2%5D,%22string-fasta%22:%5B8,8,11,7,7,8,7,10,7,7%5D,%22string-tagcloud%22:%5B18,20,21,19,18,19,18,23,20,19%5D,%22string-unpack-code%22:%5B15,16,20,16,16,15,16,20,17,16%5D,%22string-validate-input%22:%5B7,6,9,6,6,6,6,9,6,6%5D%7D" title="Sun Spider of IE">Sun Spider of IE</a></p>
<p>Firefox: <a href="http://www.webkit.org/perf/sunspider-1.0.2/sunspider-1.0.2/results.html?%7B%22v%22:%20%22sunspider-1.0.2%22,%20%223d-cube%22:%5B134,132,142,143,134,141,137,148,139,140%5D,%223d-morph%22:%5B206,230,190,190,193,189,202,196,191,193%5D,%223d-raytrace%22:%5B177,177,184,177,178,177,191,186,178,190%5D,%22access-binary-trees%22:%5B124,112,116,124,112,123,126,122,113,113%5D,%22access-fannkuch%22:%5B408,478,411,419,408,440,416,415,428,411%5D,%22access-nbody%22:%5B233,272,239,245,234,235,234,238,241,247%5D,%22access-nsieve%22:%5B118,127,112,115,115,119,114,112,111,110%5D,%22bitops-3bit-bits-in-byte%22:%5B80,86,79,88,81,86,90,83,82,101%5D,%22bitops-bits-in-byte%22:%5B105,130,117,108,105,108,105,112,105,105%5D,%22bitops-bitwise-and%22:%5B341,371,349,333,349,330,351,348,342,356%5D,%22bitops-nsieve-bits%22:%5B151,152,147,158,146,156,151,152,150,147%5D,%22controlflow-recursive%22:%5B79,74,72,72,75,72,75,70,75,77%5D,%22crypto-aes%22:%5B144,149,149,144,157,145,143,145,145,152%5D,%22crypto-md5%22:%5B70,71,79,70,70,71,73,70,71,70%5D,%22crypto-sha1%22:%5B73,74,75,81,74,77,77,74,75,73%5D,%22date-format-tofte%22:%5B85,85,88,90,88,88,87,86,91,86%5D,%22date-format-xparb%22:%5B54,56,56,55,60,59,61,56,55,57%5D,%22math-cordic%22:%5B183,191,185,186,183,193,198,197,184,195%5D,%22math-partial-sums%22:%5B136,138,136,139,152,147,144,136,135,162%5D,%22math-spectral-norm%22:%5B81,79,87,81,87,98,79,79,81,83%5D,%22regexp-dna%22:%5B105,104,105,105,104,105,104,103,104,110%5D,%22string-base64%22:%5B92,97,94,94,92,92,97,98,94,96%5D,%22string-fasta%22:%5B119,120,117,122,116,118,118,119,117,128%5D,%22string-tagcloud%22:%5B92,78,74,78,80,75,83,90,76,85%5D,%22string-unpack-code%22:%5B102,110,106,99,105,104,108,103,100,102%5D,%22string-validate-input%22:%5B128,97,89,98,100,97,94,101,102,120%5D%7D" title="Sun Spider of Firefox">Sun Spider of Firefox</a></p>
<p>Chrome: <a href="https://www.webkit.org/perf/sunspider-1.0.2/sunspider-1.0.2/results.html?%7B%22v%22:%20%22sunspider-1.0.2%22,%20%223d-cube%22:%5B28,28,52,76,27,28,24,44,29,32%5D,%223d-morph%22:%5B87,94,47,69,57,49,68,38,52,58%5D,%223d-raytrace%22:%5B49,90,85,60,34,33,39,60,44,30%5D,%22access-binary-trees%22:%5B5,11,10,4,3,5,2,3,6,4%5D,%22access-fannkuch%22:%5B71,19,15,40,15,24,15,15,15,15%5D,%22access-nbody%22:%5B5,21,41,7,9,12,13,13,8,16%5D,%22access-nsieve%22:%5B8,6,8,6,6,5,7,5,7,10%5D,%22bitops-3bit-bits-in-byte%22:%5B3,6,19,2,3,3,2,7,3,2%5D,%22bitops-bits-in-byte%22:%5B9,65,35,9,9,10,12,8,20,9%5D,%22bitops-bitwise-and%22:%5B4,6,6,6,4,5,5,10,4,10%5D,%22bitops-nsieve-bits%22:%5B11,40,71,9,13,10,12,15,27,17%5D,%22controlflow-recursive%22:%5B40,5,10,4,5,3,8,3,3,5%5D,%22crypto-aes%22:%5B14,14,19,51,19,15,20,15,14,14%5D,%22crypto-md5%22:%5B61,28,43,16,16,27,16,12,19,16%5D,%22crypto-sha1%22:%5B13,15,14,38,14,22,22,14,25,19%5D,%22date-format-tofte%22:%5B64,30,52,24,23,24,23,33,26,25%5D,%22date-format-xparb%22:%5B29,67,20,74,28,21,22,37,18,28%5D,%22math-cordic%22:%5B30,10,48,10,12,12,14,11,18,11%5D,%22math-partial-sums%22:%5B87,115,94,77,41,47,33,33,34,56%5D,%22math-spectral-norm%22:%5B8,7,7,8,7,11,9,9,9,8%5D,%22regexp-dna%22:%5B16,40,21,75,23,22,16,18,15,17%5D,%22string-base64%22:%5B16,13,29,12,12,19,15,13,16,15%5D,%22string-fasta%22:%5B69,24,27,35,27,24,54,44,40,23%5D,%22string-tagcloud%22:%5B122,73,140,149,73,77,67,100,82,87%5D,%22string-unpack-code%22:%5B89,106,97,68,70,70,71,55,71,63%5D,%22string-validate-input%22:%5B23,69,67,30,21,22,27,23,24,22%5D%7D" title="Sun Spider of Chrome">Sun Spider of Chrome</a></p>
<p>For a better comparison, here it is:</p>
<p>Firefox vs IE (FROM: Firefox, TO: IE) TEST                   COMPARISON               FROM                 TO             DETAILS</p>
<p>===============================================================================</p>
<p>** TOTAL **:           24.7x as fast     3645.6ms +/- 1.2%    147.6ms +/- 21.0%     significant</p>
<p>===============================================================================</p>
<p>3d:                  30.0x as fast      518.5ms +/- 1.6%     17.3ms +/- 42.6%     significant cube:              17.8x as fast      139.0ms +/- 2.5%      7.8ms +/- 44.4%     significant morph:             141.4x as fast     198.0ms +/- 4.5%      1.4ms +/- 43.0%     significant raytrace:          22.4x as fast      181.5ms +/- 2.3%      8.1ms +/- 42.7%     significant</p>
<p>access:              76.8x as fast      899.0ms +/- 2.7%     11.7ms +/- 38.4%     significant binary-trees:      62.4x as fast      118.5ms +/- 3.5%      1.9ms +/- 41.4%     significant fannkuch:          100.8x as fast     423.4ms +/- 3.6%      4.2ms +/- 43.0%     significant nbody:             57.6x as fast      241.8ms +/- 3.4%      4.2ms +/- 35.7%     significant nsieve:            82.4x as fast      115.3ms +/- 3.1%      1.4ms +/- 43.0%     significant</p>
<p>bitops:              81.6x as fast      693.6ms +/- 1.9%      8.5ms +/- 22.5%     significant 3bit-bits-in-byte: 214.0x as fast 85.6ms +/- 5.4% 0.4ms +/- 150.7% significant bits-in-byte:      78.6x as fast      110.0ms +/- 5.2%      1.4ms +/- 43.0%     significant bitwise-and:       115.7x as fast     347.0ms +/- 2.4%      3.0ms +/- 0.0%      significant nsieve-bits:       40.8x as fast      151.0ms +/- 1.8%      3.7ms +/- 20.5%     significant</p>
<p>controlflow:         46.3x as fast       74.1ms +/- 2.6%      1.6ms +/- 56.5%     significant recursive:         46.3x as fast       74.1ms +/- 2.6%      1.6ms +/- 56.5%     significant</p>
<p>crypto:              25.6x as fast      294.1ms +/- 1.2%     11.5ms +/- 58.6%     significant aes:               22.0x as fast      147.3ms +/- 2.2%      6.7ms +/- 54.4%     significant md5:               27.5x as fast       71.5ms +/- 2.8%      2.6ms +/- 86.1%     significant sha1:              34.2x as fast       75.3ms +/- 2.3%      2.2ms +/- 82.2%     significant</p>
<p>date:                6.33x as fast      144.3ms +/- 1.5%     22.8ms +/- 10.1%     significant format-tofte:      10.0x as fast       87.4ms +/- 1.6%      8.7ms +/- 19.4%     significant format-xparb:      4.04x as fast       56.9ms +/- 2.9%     14.1ms +/- 5.6%      significant</p>
<p>math:                35.2x as fast      415.5ms +/- 2.5%     11.8ms +/- 24.5%     significant cordic:            90.2x as fast      189.5ms +/- 2.3%      2.1ms +/- 29.8%     significant partial-sums:      17.8x as fast      142.5ms +/- 4.4%      8.0ms +/- 17.4%     significant spectral-norm:     49.1x as fast       83.5ms +/- 5.1%      1.7ms +/- 62.8%     significant</p>
<p>regexp:              12.2x as fast      104.9ms +/- 1.3%      8.6ms +/- 4.3%      significant dna:               12.2x as fast      104.9ms +/- 1.3%      8.6ms +/- 4.3%      significant</p>
<p>string:              9.32x as fast      501.6ms +/- 2.6%     53.8ms +/- 10.1%     significant base64:            32.6x as fast       94.6ms +/- 1.7%      2.9ms +/- 47.1%     significant fasta:             14.9x as fast      119.4ms +/- 2.1%      8.0ms +/- 12.6%     significant tagcloud:          4.16x as fast       81.1ms +/- 5.5%     19.5ms +/- 5.8%      significant unpack-code:       6.22x as fast      103.9ms +/- 2.4%     16.7ms +/- 7.8%      significant validate-input:    15.3x as fast      102.6ms +/- 8.4%      6.7ms +/- 13.4%     significant</p>
<p>Chrome vs IE (FROM: Chrome, TO: IE)</p>
<p>TEST                   COMPARISON               FROM                 TO             DETAILS</p>
<p>===============================================================================</p>
<p>** TOTAL **:           5.19x as fast     766.5ms +/- 19.0%   147.6ms +/- 21.0%     significant</p>
<p>===============================================================================</p>
<p>3d:                  8.73x as fast     151.1ms +/- 17.8%    17.3ms +/- 42.6%     significant cube:              4.72x as fast      36.8ms +/- 31.7%     7.8ms +/- 44.4%     significant morph:             44.2x as fast      61.9ms +/- 20.5%     1.4ms +/- 43.0%     significant raytrace:          6.47x as fast      52.4ms +/- 29.0%     8.1ms +/- 42.7%     significant</p>
<p>access:              4.36x as fast      51.0ms +/- 25.9%    11.7ms +/- 38.4%     significant binary-trees:      2.79x as fast       5.3ms +/- 40.2%     1.9ms +/- 41.4%     significant fannkuch:          5.81x as fast      24.4ms +/- 53.2%     4.2ms +/- 43.0%     significant nbody:             3.45x as fast      14.5ms +/- 51.3%     4.2ms +/- 35.7%     significant nsieve:            4.86x as fast       6.8ms +/- 16.3%     1.4ms +/- 43.0%     significant</p>
<p>bitops:              6.13x as fast      52.1ms +/- 53.4%     8.5ms +/- 22.5%     significant 3bit-bits-in-byte: 12.5x as fast 5.0ms +/- 74.4% 0.4ms +/- 150.7% significant bits-in-byte:      13.3x as fast      18.6ms +/- 70.4%     1.4ms +/- 43.0%     significant bitwise-and:       2.00x as fast       6.0ms +/- 26.9%     3.0ms +/- 0.0%      significant nsieve-bits:       6.08x as fast      22.5ms +/- 62.1%     3.7ms +/- 20.5%     significant</p>
<p>controlflow:         -                   8.6ms +/- 93.6%     1.6ms +/- 56.5% recursive:         -                   8.6ms +/- 93.6%     1.6ms +/- 56.5%</p>
<p>crypto:              5.61x as fast      64.5ms +/- 21.8%    11.5ms +/- 58.6%     significant aes:               2.91x as fast      19.5ms +/- 41.5%     6.7ms +/- 54.4%     significant md5:               9.77x as fast      25.4ms +/- 43.6%     2.6ms +/- 86.1%     significant sha1:              8.91x as fast      19.6ms +/- 28.2%     2.2ms +/- 82.2%     significant</p>
<p>date:                2.93x as fast      66.8ms +/- 24.0%    22.8ms +/- 10.1%     significant format-tofte:      3.72x as fast      32.4ms +/- 31.2%     8.7ms +/- 19.4%     significant format-xparb:      2.44x as fast      34.4ms +/- 41.3%    14.1ms +/- 5.6%      significant</p>
<p>math:                7.42x as fast      87.6ms +/- 28.9%    11.8ms +/- 24.5%     significant cordic:            8.38x as fast      17.6ms +/- 49.9%     2.1ms +/- 29.8%     significant partial-sums:      7.71x as fast      61.7ms +/- 34.2%     8.0ms +/- 17.4%     significant spectral-norm:     4.88x as fast       8.3ms +/- 10.8%     1.7ms +/- 62.8%     significant</p>
<p>regexp:              3.06x as fast      26.3ms +/- 50.5%     8.6ms +/- 4.3%      significant dna:               3.06x as fast      26.3ms +/- 50.5%     8.6ms +/- 4.3%      significant</p>
<p>string:              4.80x as fast     258.5ms +/- 14.7%    53.8ms +/- 10.1%     significant base64:            5.52x as fast      16.0ms +/- 22.6%     2.9ms +/- 47.1%     significant fasta:             4.59x as fast      36.7ms +/- 29.8%     8.0ms +/- 12.6%     significant tagcloud:          4.97x as fast      97.0ms +/- 21.9%    19.5ms +/- 5.8%      significant unpack-code:       4.55x as fast      76.0ms +/- 15.1%    16.7ms +/- 7.8%      significant validate-input:    4.90x as fast      32.8ms +/- 40.9%     6.7ms +/- 13.4%     significant</p>
<p>HTML  Test:</p>
<p>For HTML5, I don’t have any reliable test. I use PeaceKeeper</p>
<p>IE: <a href="http://peacekeeper.futuremark.com/results?key=AHJR&amp;resultId=5664056">http://peacekeeper.futuremark.com/results?key=AHJR&amp;resultId=5664056</a> - 1992</p>
<p>Chrome: <a href="http://peacekeeper.futuremark.com/results?key=AHJp&amp;resultId=5664119">http://peacekeeper.futuremark.com/results?key=AHJp&amp;resultId=5664119</a> - 1490</p>
<p>Firefox: <a href="http://peacekeeper.futuremark.com/results?key=AHJq&amp;resultId=5664118">http://peacekeeper.futuremark.com/results?key=AHJq&amp;resultId=5664118</a> - 850</p>
<p>CSS3 Test</p>
<p>For CSS3: I use <a href="http://css3test.com/">http://css3test.com/</a></p>
<p>IE: 50%, “Determined by passing <strong>614</strong> tests out of <strong>1416</strong> total for <strong>293</strong> features”</p>
<p>Firefox: 57%, “Determined by passing <strong>702</strong> tests out of <strong>1416</strong> total for <strong>293</strong> features”</p>
<p>Chrome: 58%, “Determined by passing 730 tests out of 1416 total for 293 features”</p>
<p>Thanks for reading this</p>
]]></content>
      <categories>
        <category>Computer Tips</category>
      </categories>
  </entry>
  <entry>
    <title>[MSP] MSP Asia – Pacific Newsletter – Jan 2015</title>
    <url>/2015/01/31/msp-msp-asia-pacific-newsletter-jan-2015-2/</url>
    <content><![CDATA[<p><strong>MSP Asia-Pacific Newsletter</strong></p>
<p>Vol.2 Dec-Jan 2014-2015</p>
<p><strong>Contents:</strong></p>
<p><strong>1.MAIN TOPIC</strong></p>
<p>Japan, New Zealand, Philippines, Thailand, Vietnam</p>
<p><strong>2.Super MSP</strong></p>
<p>Vishesh Oberoi (New Zealand), Supatporn Posoknistakul(Thailand)</p>
<p><strong>3.Highlights &amp; Upcoming Events</strong></p>
<p>Japan, New Zealand, Philippines, Singapore, Thailand, Vietnam</p>
<span id="more"></span>
<h1 id="1-MAIN-TOPIC"><a href="#1-MAIN-TOPIC" class="headerlink" title="1. MAIN TOPIC"></a>1. MAIN TOPIC</h1><p>Today’s Main Topic is Hour of Code!</p>
<h2 id="Japan-MSP-Japan-joined-Hour-of-Code"><a href="#Japan-MSP-Japan-joined-Hour-of-Code" class="headerlink" title="Japan: MSP Japan joined Hour of Code"></a>Japan: MSP Japan joined Hour of Code</h2><p> On Dec 12th, 2014, one of the events for the <a href="http://hourofcode.com/jp">Hour of Code</a> by MSPs was carried out with 36 young students who ranged from 15 to 18 of ages at an all girls’ high school in Tokyo. In collaboration with Life is Tech! Microsoft Japan provided the technologies and MSPs helped students write codes as a mentor. Through the event, students learned and developed the programming skills so fast to make an app on time and no one gave up, which made us surprised. From this experience, we now believe the importance for any learner, especially for beginners, to let them have easy access to the first steps with fun and excitement.</p>
<p><img src="http://cuoilennaocacban2.files.wordpress.com/2015/01/013115_1311_mspmspasia1.jpg"></p>
<p><em>“MSP Japan Niki Matsumura”</em></p>
<h2 id="New-Zealand-The-Microsoft-Student-Accelerator-Initiative"><a href="#New-Zealand-The-Microsoft-Student-Accelerator-Initiative" class="headerlink" title="New Zealand: The Microsoft Student Accelerator Initiative"></a>New Zealand: The Microsoft Student Accelerator Initiative</h2><p> 2014 has been a hectic but rewarding year for MSP New Zealand! The MSPs, along with Ryan Tarak (BDE, DX, Microsoft New Zealand), launched a brand new initiative called the Microsoft Student Accelerator (MSA). The MSA program aims to train students from all around the country on Microsoft technologies and better prepare them for the tech industry of today. The biggest benefit of the program is the placement of qualifying students with New Zealand’s biggest employers in the tech industry so they can gain work experience over the summer.</p>
<p>While 600 students trained in the first phase of the program, around 200 students moved on to complete phase 2 and finally, 94 students were placed with employers after rigorous individual and group assessments. A total of 35 employers participated in the program, including the University of Auckland (largest university in New Zealand), Coca-Cola, Lazyworm Apps (developers of MetroTube), Datacom and a few government organizations.  For more information, check out <a href="http://aka.ms/MSAInfograph">http://aka.ms/MSAInfograph</a>.</p>
<h2 id="Philippines-one-of-the-top-countries-in-the-“Hour-of-Code”-global-leaderboards"><a href="#Philippines-one-of-the-top-countries-in-the-“Hour-of-Code”-global-leaderboards" class="headerlink" title="Philippines: one of the top countries in the “Hour of Code” global leaderboards"></a>Philippines: one of the top countries in the “Hour of Code” global leaderboards</h2><p>In  the celebration of the 2014  Computer Science Education Week (December 8-14), though Hour of Code is not a competition, the  Philippines  is one of the  top countries in the  Hour of Code Global Leaderboards  for having one of the highest participation rates in Hour of Code activities, with a total of  112 events  as of today, January 11, 2015.</p>
<p>Though some of the events were rescheduled due to impending Typhoon Hagupit, that didn’t stop the teams from accomplishing their goal of teaching K-12 students and others from non-tech colleges how to code.</p>
<p>Read the rest of the article here: <a href="http://bit.ly/1sKnUkr">http://bit.ly/1sKnUkr</a></p>
<p><img src="http://cuoilennaocacban2.files.wordpress.com/2015/01/013115_1311_mspmspasia2.jpg"></p>
<h2 id="Thailand-Hour-of-Code-Thailand"><a href="#Thailand-Hour-of-Code-Thailand" class="headerlink" title="Thailand: Hour of Code Thailand"></a>Thailand: Hour of Code Thailand</h2><p> With the cooperation of Microsoft Student Partners from Mae Fah Luang University and Chiang Mai University, MSP Thailand organized Microsoft Hour of Code: Northern Thailand workshop to provide Windows AppStudio training for high-school students in northern Thailand. This event gathered 100 students who joined the workshop to learn how to develop universal application on Windows platform.</p>
<p><img src="http://cuoilennaocacban2.files.wordpress.com/2015/01/013115_1311_mspmspasia3.jpg"></p>
<h2 id="Vietnam-Hour-of-Code-in-Vietnam"><a href="#Vietnam-Hour-of-Code-in-Vietnam" class="headerlink" title="Vietnam: Hour of Code in Vietnam"></a>Vietnam: Hour of Code in Vietnam</h2><p>The Hour of Code in Vietnam was held successfully after attracting about 200 secondary school students. Approximately, per session was attended by around 20 students. As an addition, this year saw the introduction of ‘App Studio’ which created interest among the participants.</p>
<p><img src="http://cuoilennaocacban2.files.wordpress.com/2015/01/013115_1311_mspmspasia4.jpg"><img src="http://cuoilennaocacban2.files.wordpress.com/2015/01/013115_1311_mspmspasia5.jpg"></p>
<h1 id="2-Super-MSP"><a href="#2-Super-MSP" class="headerlink" title="2. Super MSP"></a>2. Super MSP</h1><h2 id="・New-Zealand"><a href="#・New-Zealand" class="headerlink" title="・New Zealand"></a>・New Zealand</h2><p><img src="http://cuoilennaocacban2.files.wordpress.com/2015/01/013115_1311_mspmspasia6.jpg"></p>
<p> <strong>Vishesh Oberoi:</strong> Vishesh has been a key player in making the MSA program a success. Equipped with his experience and strong technical knowledge in Azure, he organized and executed many of the MSP run workshops during the program. The workshops were very well received and the students found them very useful. Great work Vishesh!</p>
<h2 id="・Thailand"><a href="#・Thailand" class="headerlink" title="・Thailand"></a>・Thailand</h2><p> <img src="http://cuoilennaocacban2.files.wordpress.com/2015/01/013115_1311_mspmspasia7.jpg"> </p>
<p> <strong>Supatporn Posoknistakul:</strong> Supatporn has been working as a Microsoft Student Partner since FY15. Her expertise is in design and marketing aspect and she takes part in both leadership and designer role. As a participant in the Imagine Cup Thailand 2014, she showed her competitiveness and friendliness which earned her the most popular award. To expand her technical knowledge, she is currently studying in the Faculty of Engineering at Chulalongkorn University. Aside from this, she loves to discover new innovation sin designing and marketing by herself through relevant work experience.</p>
<h1 id="3-Highlights-amp-Upcoming-Events"><a href="#3-Highlights-amp-Upcoming-Events" class="headerlink" title="3. Highlights &amp; Upcoming Events"></a>3. Highlights &amp; Upcoming Events</h1><h2 id="Japan"><a href="#Japan" class="headerlink" title="Japan"></a>Japan</h2><h3 id="・Regular-Meeting-and-Presentation-Workshop"><a href="#・Regular-Meeting-and-Presentation-Workshop" class="headerlink" title="・Regular Meeting and Presentation Workshop"></a>・Regular Meeting and Presentation Workshop</h3><p>Two MSP Japan regular meetings were held last Dec 3rd, 2014 and Jan 14th, 2015. The former meeting was attended by 26 participants (9 participants online) and the latter by 15 participants (6 participants online). After the December regular meeting, a presentation workshop followed and 5 MSPs spoke about the topic: “I’d like to appeal about…” After the presentation, they were able to receive feedback on how to be more effective in their presentation.</p>
<p><img src="http://cuoilennaocacban2.files.wordpress.com/2015/01/013115_1311_mspmspasia8.jpg"> <img src="http://cuoilennaocacban2.files.wordpress.com/2015/01/013115_1311_mspmspasia9.jpg"> </p>
<h3 id="・Imagine-Cup-2015-Kick-off"><a href="#・Imagine-Cup-2015-Kick-off" class="headerlink" title="・Imagine Cup 2015 Kick-off"></a>・Imagine Cup 2015 Kick-off</h3><p> On Jan 18th, 2015, we introduced Imagine Cup to approximately 30 students as part of our Top Gun project. The aim was to motivate them create great apps and to challenge the world competition.</p>
<p><img src="http://cuoilennaocacban2.files.wordpress.com/2015/01/013115_1311_mspmspasia10.jpg"></p>
<h3 id="・MSPs-from-Indonesia-and-Nepal-visit-Microsoft-Japan"><a href="#・MSPs-from-Indonesia-and-Nepal-visit-Microsoft-Japan" class="headerlink" title="・MSPs from Indonesia and Nepal visit Microsoft Japan"></a>・MSPs from Indonesia and Nepal visit Microsoft Japan</h3><p> As 2014 ended, MSPs from Indonesia and Nepal visited Japan and had lunch with MSPs from Japan on Christmas Eve. The guests were also treated to a tour of Microsoft Japan. It was then followed by a dialogue of the participants, sharing the different activities and interesting styles of each country.</p>
<p><img src="http://cuoilennaocacban2.files.wordpress.com/2015/01/013115_1311_mspmspasia11.jpg"></p>
<h2 id="New-Zealand"><a href="#New-Zealand" class="headerlink" title="New Zealand"></a>New Zealand</h2><h3 id="・Future-of-MSA"><a href="#・Future-of-MSA" class="headerlink" title="・Future of MSA"></a>・Future of MSA</h3><p> Due to the success of the program, the program will be bigger and better in 2015. The MSA program will be the umbrella of all student activities for the year. To reach out to high schools, the program will start earlier in March as opposed to June.  For updated information, visit <a href="http://www.microsoft.co.nz/msa">http://www.microsoft.co.nz/msa</a> !</p>
<h3 id="・New-MSPs"><a href="#・New-MSPs" class="headerlink" title="・New MSPs"></a>・New MSPs</h3><p> In search for new MSPs, a recruitment round at the end of 2014 was held and after tough interviews and assessments, a strong team of new MSPs were selected. Many of the selected applicants came from the MSA program. Everybody is very excited to have the new MSPs on board and wait to hear all the fresh ideas they bring. Welcome to the family!</p>
<p><img src="http://cuoilennaocacban2.files.wordpress.com/2015/01/013115_1311_mspmspasia12.jpg"></p>
<h3 id="・Farewell-Message-to-all-graduating-MSPs"><a href="#・Farewell-Message-to-all-graduating-MSPs" class="headerlink" title="・Farewell Message to all graduating MSPs:"></a>・Farewell Message to all graduating MSPs:</h3><p> In search for new MSPs, a recruitment round at the end of 2014 was held and after tough interviews and assessments, a strong team of new MSPs were selected. Many of the selected applicants came from the MSA program. Everybody is very excited to have the new MSPs on board and wait to hear all the fresh ideas they bring. Welcome to the family!</p>
<h2 id="Philippines"><a href="#Philippines" class="headerlink" title="Philippines"></a>Philippines</h2><h3 id="・Project-Sing-From-The-Philippines-Clinches-Honorable-Mention-In-The-2015-Pitch-Video-Challenge"><a href="#・Project-Sing-From-The-Philippines-Clinches-Honorable-Mention-In-The-2015-Pitch-Video-Challenge" class="headerlink" title="・Project Sing! From The Philippines Clinches Honorable Mention In The 2015 Pitch Video Challenge"></a>・Project Sing! From The Philippines Clinches Honorable Mention In The 2015 Pitch Video Challenge</h3><p>After the judges have watched all the videos, reviewed the judging criteria, and made their decision, a Filipino team, <strong>Project Sing!</strong> made it to the honorable mention list for their project in the World Citizenship category. The competition was extremely fierce this year, with many high-quality pitch videos submitted in all three categories. In some cases, the scoring was almost too close to call. Members of the <strong>Project Sing!</strong> are from Ateneo de Manila University and are active members of the Microsoft Philippines Academic Team.  Meet the winners here: <a href="http://bit.ly/1ueyN9Q">http://bit.ly/1ueyN9Q</a></p>
<p><img src="http://cuoilennaocacban2.files.wordpress.com/2015/01/013115_1311_mspmspasia13.jpg"></p>
<h2 id="Singapore"><a href="#Singapore" class="headerlink" title="Singapore"></a>Singapore</h2><h3 id="・Singapore-MSPs-celebrate-a-fantastic-2014-outlook-for-2015-very-positive"><a href="#・Singapore-MSPs-celebrate-a-fantastic-2014-outlook-for-2015-very-positive" class="headerlink" title="・Singapore MSPs celebrate a fantastic 2014; outlook for 2015 very positive"></a>・Singapore MSPs celebrate a fantastic 2014; outlook for 2015 very positive</h3><p> On 20th of December 2014, Microsoft Student Partners from Singapore celebrated the holidays and a great end to 2014 with a Christmas Party which included some unique coding challenges and games! Everyone had lots of fun over lunch and exchanging gifts! MSP Singapore had a great year in reaching more students throughout the country and teaching them how to code. All of the MSPs look forward to new ways to contribute and grow in 2015. Happy New Year from the MSP Singapore team!</p>
<p><img src="http://cuoilennaocacban2.files.wordpress.com/2015/01/013115_1311_mspmspasia14.jpg"></p>
<h2 id="Thailand"><a href="#Thailand" class="headerlink" title="Thailand"></a>Thailand</h2><h3 id="・Audience-with-H-R-H-Princess-Maha-Chakri-Sirindhorn"><a href="#・Audience-with-H-R-H-Princess-Maha-Chakri-Sirindhorn" class="headerlink" title="・Audience with H.R.H Princess Maha Chakri Sirindhorn"></a>・Audience with H.R.H Princess Maha Chakri Sirindhorn</h3><p> Representative of MSP Thailand team had an audience with H.R.H Princess Maha Chakri Sirindhorn of Thailand to show applications on Windows Platform to students who joined the workshop at Chitralada Vocational School. The workshop at Chitralada Vocational School is a part of project that MSP in Thailand focusing on development of high school students to improve their computer science skills for a career in the future.</p>
<p><img src="http://cuoilennaocacban2.files.wordpress.com/2015/01/013115_1311_mspmspasia15.jpg"></p>
<h3 id="・Microsoft-Technology-Roadshow-and-Dream-Spark-Office365-Workshop"><a href="#・Microsoft-Technology-Roadshow-and-Dream-Spark-Office365-Workshop" class="headerlink" title="・Microsoft Technology Roadshow and Dream Spark / Office365 Workshop"></a>・Microsoft Technology Roadshow and Dream Spark / Office365 Workshop</h3><p> MSP Thailand team from Chulalongkorn University, Mahidol University and King Mongkut’s Institute of Technology Ladkrabang teamed-up to organize Microsoft Technology Roadshow and DreamSpark/Office365 workshop at their universities to update and educate students and lecturers about Microsoft Technology, DreamSpark Premium and Office 365 for Education. These group of events drew more than 500 students.</p>
<p><img src="http://cuoilennaocacban2.files.wordpress.com/2015/01/013115_1311_mspmspasia16.jpg"></p>
<h3 id="・ImagineCup-2015-BootCamp-in-Thailand"><a href="#・ImagineCup-2015-BootCamp-in-Thailand" class="headerlink" title="・ImagineCup 2015 BootCamp in Thailand"></a>・ImagineCup 2015 BootCamp in Thailand</h3><p> On 10 Jan 2015, Microsoft Thailand held the ImagineCup Thailand 2015 BootCamp for students who are interested in joining the ImagineCup competition this year. The objective of the event was to promote and explain about ImagineCup’s local round and global round information. Aside from that, students were also given the chance to discuss with international organizations like USAID (United States Agency for International Development) to find the stories or inspiration for their project.</p>
<p><img src="http://cuoilennaocacban2.files.wordpress.com/2015/01/013115_1311_mspmspasia17.jpg"></p>
<h3 id="–Upcoming-Events—"><a href="#–Upcoming-Events—" class="headerlink" title="-–Upcoming Events—"></a>-–Upcoming Events—</h3><h4 id="・Hour-of-Code-Central-of-Thailand"><a href="#・Hour-of-Code-Central-of-Thailand" class="headerlink" title="・Hour of Code: Central of Thailand"></a>・Hour of Code: Central of Thailand</h4><p> From January to March 2015, MSPs in the central area of Thailand are planning to organize the Hour of Code event for high school students. This 2015, Microsoft Thailand has special category for high school students called the “Windows AppStudio Jr. Challenge.” Hour of Code training from MSP will help high school students learn how to develop Windows platform application together with their preparation for the ImagineCup special category in Thailand. </p>
<h4 id="・MSP-Quarterly-Meeting-and-New-Year-Party"><a href="#・MSP-Quarterly-Meeting-and-New-Year-Party" class="headerlink" title="・MSP Quarterly Meeting and New Year Party"></a>・MSP Quarterly Meeting and New Year Party</h4><p> Microsoft Thailand is planning to have the quarterly meeting and New Year Party on 30th of January 2015 for MSP from each university. This meeting will give everyone a chance to share their experiences and exchange information about activities they have done in Q2 and their plans for Q3. </p>
<h2 id="Vietnam"><a href="#Vietnam" class="headerlink" title="Vietnam"></a>Vietnam</h2><h3 id="・New-MSP-Recruitment"><a href="#・New-MSP-Recruitment" class="headerlink" title="・New MSP Recruitment"></a>・New MSP Recruitment</h3><p> To expand the activities of MSPs in Vietnam, more MSPs are being recruited. The recruitment attracted the cream of the crop from the best universities in the country. Undoubtedly, this will be a successful FY year for MSPs in Vietnam.</p>
<p><img src="http://cuoilennaocacban2.files.wordpress.com/2015/01/013115_1311_mspmspasia18.jpg"> <img src="http://cuoilennaocacban2.files.wordpress.com/2015/01/013115_1311_mspmspasia19.jpg"> </p>
<p><em>The interview</em></p>
<p><img src="http://cuoilennaocacban2.files.wordpress.com/2015/01/013115_1311_mspmspasia20.jpg"></p>
<p><em>Welcoming the new MSPs</em></p>
<h3 id="・-MSP-Internal-Training"><a href="#・-MSP-Internal-Training" class="headerlink" title="・ MSP Internal Training"></a>・ MSP Internal Training</h3><p> The objective of the Internal Training was how to use Windows and Office Online in the most useful way. Moreover, many tips and tricks were shared during the training. Most of the participants installed Windows 10 Preview after.</p>
<p>Later that day, the participants were introduced to the Microsoft YouthSpark Program. Everyone got very excited upon learning about the program.</p>
<p><img src="http://cuoilennaocacban2.files.wordpress.com/2015/01/013115_1311_mspmspasia21.jpg"> <img src="http://cuoilennaocacban2.files.wordpress.com/2015/01/013115_1311_mspmspasia22.jpg"> </p>
<h3 id="・”Special-Christmas-for-You”-Contest"><a href="#・”Special-Christmas-for-You”-Contest" class="headerlink" title="・”Special Christmas for You” Contest"></a>・”Special Christmas for You” Contest</h3><p> Hundreds of students have started to learn how to use App Studio to make apps. Many IT students signed up for the MVA to learn how to code. This resulted to the publication of hundreds of apps in the store. Each one of them have been tested. Good apps (quantified by the number of downloads and rating) will be rewarded with Lumia, T-shirt and bags.</p>
<p> </p>
<h3 id="–Upcoming-Events—-1"><a href="#–Upcoming-Events—-1" class="headerlink" title="-–Upcoming Events—"></a>-–Upcoming Events—</h3><h4 id="・Microsoft-Imagine-Camp"><a href="#・Microsoft-Imagine-Camp" class="headerlink" title="・Microsoft Imagine Camp"></a>・Microsoft Imagine Camp</h4><p> January of every year, the Imagine Camp is held to help teams and students get started with their projects for Imagine Cup. For this event, participants are supported on which technology they should use, how to improve their ideas, and so on.</p>
<h4 id="・App-Studio-Training"><a href="#・App-Studio-Training" class="headerlink" title="・App Studio Training"></a>・App Studio Training</h4><p> App Studio is updating. More and more features have been added every week. The goal is for every student to know how easy it is to make an app for their own need.</p>
<h4 id="・App-Studio-Hackathon"><a href="#・App-Studio-Hackathon" class="headerlink" title="・App Studio Hackathon"></a>・App Studio Hackathon</h4><p> In the next few weeks, a Hackathon on App Studio will be held. This event will be more complex than the usual App Studio. The prize will be a Lumia for the champion and T-shirt for all participants.</p>
<p>Thank you for reading!</p>
<p>If you have news and updates from your country, we’ll be happy to share it with everyone!</p>
<p>This newsletter is managed by MSP Japan Global team in collaboration with MSP newsletter representatives from each Asia Pacific countries.</p>
<p>If there is any business, please email to <strong><a href="mailto:&#83;&#104;&#117;&#110;&#46;&#x4f;&#x6b;&#117;&#x62;&#111;&#x40;&#115;&#116;&#x75;&#100;&#x65;&#x6e;&#116;&#x70;&#x61;&#x72;&#116;&#110;&#101;&#x72;&#46;&#x63;&#111;&#109;">&#83;&#104;&#117;&#110;&#46;&#x4f;&#x6b;&#117;&#x62;&#111;&#x40;&#115;&#116;&#x75;&#100;&#x65;&#x6e;&#116;&#x70;&#x61;&#x72;&#116;&#110;&#101;&#x72;&#46;&#x63;&#111;&#109;</a></strong>.</p>
<p>Microsoft Student Partners <a href="https://www.microsoftstudentpartners.com/">https://www.microsoftstudentpartners.com</a></p>
]]></content>
      <categories>
        <category>Others</category>
      </categories>
  </entry>
  <entry>
    <title>[Computer Tips] Remove Skype Ads Quick and Easy</title>
    <url>/2015/03/31/computer-tips-remove-skype-ads-quick-and-easy/</url>
    <content><![CDATA[<p>Xài Skype, chắc ai cũng khó chịu với mấy cái quảng cáo lặp đi lặp lại chán phèo của Skype nhỉ</p>
<p>Và đây là cách loại bỏ mấy cái quảng cáo đó.</p>
<span id="more"></span>
<h1 id="1-Tat-thiet-lap-trong-Skype"><a href="#1-Tat-thiet-lap-trong-Skype" class="headerlink" title="1. Tắt thiết lập trong Skype"></a>1. Tắt thiết lập trong Skype</h1><p>Vào Skype &gt; Tools &gt; Options &gt; Privacy &gt; Privacy Settings &gt; Bỏ chọn “Allow Microsoft targeted ads blah blah blah”</p>
<h1 id="2-Tiep-tuc-chan-server-quang-cao"><a href="#2-Tiep-tuc-chan-server-quang-cao" class="headerlink" title="2. Tiếp tục chặn server quảng cáo"></a>2. Tiếp tục chặn server quảng cáo</h1><p>Control Panel -&gt; Internet Options -&gt; Security -&gt; Restricted Sites -&gt; Sites -&gt; thêm g.msn.com và apps.skype.com</p>
<h1 id="3-Chinh-sua-giao-dien-khung-chat-de-loai-bo-quang-cao"><a href="#3-Chinh-sua-giao-dien-khung-chat-de-loai-bo-quang-cao" class="headerlink" title="3. Chỉnh sửa giao diện khung chat để loại bỏ quảng cáo"></a>3. Chỉnh sửa giao diện khung chat để loại bỏ quảng cáo</h1><p>C:\users\youruser\AppData\Roaming\Skype\yourskypeuser\config.xml</p>
<p>Kiếm dòng <AdvertPlaceholder>1</AdvertPlaceholder> rồi xóa hẳn nó luôn :3</p>
]]></content>
      <categories>
        <category>Computer Tips</category>
      </categories>
      <tags>
        <tag>tips</tag>
      </tags>
  </entry>
  <entry>
    <title>[Azure] - Update - Create Proxy Server on Azure to survive the internet blackout or the broken cable</title>
    <url>/2015/05/10/azure-create-proxy-server-on-azure-to-survive-the-broken-cable-2/</url>
    <content><![CDATA[<p>Chào các bạn</p>
<p>Hiện tại cáp quang AAG đang bị đứt, nhà mạng bóp băng thông, blah blah blah đủ kiểu.</p>
<p>Update thêm, facebook đang bị chặn các kiểu con đà điểu, ở mọi nơi, trên từng cây số, từ hẻm nhỏ ra tới quốc lộ, từ vùng sâu vùng xa tới hoàng sa trường xa.</p>
<p>Bài hướng dẫn này mình sẽ hướng dẫn các bạn cách tạo Proxy server trên Azure để chuyển hướng truy cập thông qua proxy đó nhé.</p>
<p>WARNING: TẠO PROXY XONG KHÔNG ĐƯỢC ĐEM TEST TỐC ĐỘ VÀ SHARE LUNG TUNG NẾU KHÔNG MUỐN AZURE CỦA BẠN HẾT SẠCH TIỀN</p>
<span id="more"></span>
<h1 id="Test-Toc-do-mang-toi-Azure"><a href="#Test-Toc-do-mang-toi-Azure" class="headerlink" title="Test Tốc độ mạng tới Azure"></a>Test Tốc độ mạng tới Azure</h1><p>Trước tiên, hãy test thử tốc độ kết nối của bạn đến một máy ảo azure gần nhất (Southeast Asia: Singapore) bằng speedtest</p>
<p><img src="https://farm8.staticflickr.com/7717/17457900776_4470d9e230_o.png"></p>
<p>Nếu thấy ổn thì thủ thuật này mới có tác dụng</p>
<h1 id="Tao-may-ao-Ubuntu"><a href="#Tao-may-ao-Ubuntu" class="headerlink" title="Tạo máy ảo Ubuntu"></a>Tạo máy ảo Ubuntu</h1><p>Vô chọn New &gt; Compute &gt; Virtual Machine &gt; From Gallery</p>
<p><img src="https://farm8.staticflickr.com/7689/17481883692_4aa624cb05_o.png"></p>
<p>Chọn Ubuntu 14.04 Long term support nhe</p>
<p><img src="https://farm6.staticflickr.com/5337/17297753749_b5c8d20165_o.png"></p>
<p>Bấm next để tiếp tục nhập các thông số cho máy ảo sắp tạo</p>
<p><img src="https://farm6.staticflickr.com/5452/17458065536_9f8b66a975_o.png"></p>
<p>Lưu ý: Tier chọn Basic, Size chọn cấu hình thấp nhất để đỡ tốn tiền, vì VM này chỉ có nhiệm vụ là làm proxy cho mình</p>
<p>Username nhập gì zô thì nhớ nhe</p>
<p>Tick chọn Provide a password và nhập pass vô cho dễ đăng nhập sau này</p>
<p><img src="https://farm8.staticflickr.com/7758/16861970254_d3723ce4fc_o.png"></p>
<p>Màn hình này sẽ khác nhau tùy theo azure của mỗi người, nhưng chung là chọn region ở chỗ gần nhất, và tạo một endpoint có public port và private port lớn hơn 1024</p>
<p>Port bé hơn 1024 thì trong linux bạn phải gõ “sudo” trước câu lệnh khởi chạy các ứng dụng liên quan tới nó</p>
<p>Sau khi đã tạo xong, bạn vào phần quick glance, mục public IP sẽ là Ip của proxy nhé</p>
<h1 id="Cau-hinh-cho-Proxy"><a href="#Cau-hinh-cho-Proxy" class="headerlink" title="Cấu hình cho Proxy"></a>Cấu hình cho Proxy</h1><h2 id="Dang-nhap-vao-may-ao"><a href="#Dang-nhap-vao-may-ao" class="headerlink" title="Đăng nhập vào máy ảo"></a>Đăng nhập vào máy ảo</h2><p>Để đăng nhập, ta có thể dùng Putty: <a href="http://www.putty.org/">http://www.putty.org/</a></p>
<p><img src="https://farm8.staticflickr.com/7706/17484960575_5d4f494465_o.png"></p>
<p>Putty nhớ để port là 22 để đăng nhập vô nhé</p>
<p>Sau khi đăng nhập xong, lần lượt gõ các dòng lệnh sau</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo apt-get install squid

cd &#x2F;etc&#x2F;squid

sudo cp squid.conf squid.conf.bak

sudo rm squid.conf

sudo touch squid.conf

sudo vim squid.conf</code></pre>

<p>sau đó gõ “a” &gt; Enter để edit file này</p>
<p>gõ</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">http_access allow all

http_port [port bạn đã tạo ở trên]

dns_nameservers 208.67.222.222 208.67.220.220 8.8.8.8 8.8.4.4</code></pre>

<p>sau đó gõ ESC để way zề command line</p>
<p>gõ “:wq” để save và thoát</p>
<p>Xong rồi restart squid service:</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo service squid3 restart</code></pre>

<p>Restart xong, bạn sẽ thấy process của squid</p>
<p>Vậy là xong, Proxy của bạn đã chạy, test bằng cách mở firefox và thiết lập proxy rồi kết nối thử tới google nha</p>
]]></content>
      <categories>
        <category>Azure</category>
      </categories>
      <tags>
        <tag>azure</tag>
        <tag>proxy</tag>
        <tag>đứt cáp</tag>
      </tags>
  </entry>
  <entry>
    <title>[Windows 10] SplitView Control (the sidebar on many apps)</title>
    <url>/2015/06/18/windows-10-splitview-control-the-sidebar-on-many-apps/</url>
    <content><![CDATA[<p>Ngôn ngữ thiết kế của Windows 10 đang được làm mới lại, trong đó có một thanh công cụ nằm bên hông của mỗi app.</p>
<p>Làm thế nào để bắt chước cách thiết kế này?</p>
<span id="more"></span>
<h1 id="SplitView-Control"><a href="#SplitView-Control" class="headerlink" title="SplitView Control"></a>SplitView Control</h1><p>Microsoft đã xây dựng riêng một control cho việc đó và gọi nó là SplitView Control</p>
<p>Cơ bản, nó sẽ có 2 phần: Pane và Content</p>
<p>Phần Pane sẽ là nơi đặt các Menu, danh mục này nọ, phần Content sẽ thể hiện nội dung chính của ứng dụng.</p>
<p><img src="http://lh4.ggpht.com/-UgAGBBcqi6I/VS7jhHAJx_I/AAAAAAAAQTY/N1TzXUut-dE/SplitView.gif?imgmax=800"></p>
<p>Có nhiều kiểu thiết kế cho SplitView này tùy theo bạn chọn. Ở đây mình sẽ hướng dẫn cơ bản</p>
<p>Tạo một Project mới sử dụng Universal Application Platform (UAP) từ Visual Studio</p>
<p>Trong MainPage, paste dòng sau vào</p>
<p><img src="https://farm1.staticflickr.com/529/18912097922_259833232b_o.png"></p>
<p>Trong cấu trúc trên, bạn có thể thấy Pane là một thuộc tính của SplitView. Hãy coi Pane như một control mẹ và thêm các control khác vào bên trong nó</p>
<p>CompactPaneLength là chiều rộng của SplitView khi người dùng thu gọn nó lại</p>
<p>DisplayMode là cách thức hiển thị của SplitView. Có 4 kiểu:</p>
<ul>
<li>  CompactInline: Khi thu gọn sẽ quay về hình dạng 1 thanh dài bên hông màn hình, khi mở bung ra sẽ đẩy phần Content sang một bên</li>
<li>  CompactOvelay: Khi thu gọn sẽ quay về hình dạng 1 thanh dài bên hông màn hình, khi mở bung ra sẽ ĐÈ LÊN phàn Content</li>
<li>  Inline: Giống CompactInline, như khi thu gọn sẽ biết mất khỏi màn hình</li>
<li>  Overlay: Giống Overlay, nhưng khi thu gọn sẽ biết mất khỏi màn hình</li>
</ul>
<h1 id="Cau-truc"><a href="#Cau-truc" class="headerlink" title="Cấu trúc"></a>Cấu trúc</h1><p>Cấu trúc của SplitView bao gồm Pane và Content. Trong Pane sẽ có Hamburger Button và list các tính năng khác. Theo cấu trúc sau đây:</p>
<p><img src="https://farm1.staticflickr.com/551/18295463384_027ca53bd8_o.png"></p>
<p>Code của cái trên rất đơn giản:</p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">&lt;SplitView&gt;
    &lt;SplitView.Pane&gt;
        &lt;Grid&gt;
            &lt;Grid.RowDefinitions&gt;
                &lt;RowDefinition Height&#x3D;&quot;Auto&quot; &#x2F;&gt;
                &lt;RowDefinition Height&#x3D;&quot;\*&quot; &#x2F;&gt;
            &lt;&#x2F;Grid.RowDefinitions&gt;
            &lt;Button Grid.Row&#x3D;&quot;0&quot; &#x2F;&gt;
            &lt;ListView Grid.Row&#x3D;&quot;1&quot; &#x2F;&gt;
        &lt;&#x2F;Grid&gt;
    &lt;&#x2F;SplitView.Pane&gt;
    &lt;Grid &#x2F;&gt;
&lt;&#x2F;SplitView&gt;</code></pre>

<h1 id="Hamburger-Button"><a href="#Hamburger-Button" class="headerlink" title="Hamburger Button"></a>Hamburger Button</h1><p>Hamburger Button thực ra cũng không khó. Windows 10 có hẳn một font dành riêng cho các biểu tượng:</p>
<p>Để tạo một button có hình Hamburger, paste dòng code sau:</p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">&lt;Button x:Name&#x3D;&quot;HamburgerButton&quot; FontFamily&#x3D;&quot;Segoe MDL2 Assets&quot; Content&#x3D;&quot;&quot; &#x2F;&gt;</code></pre>

<p>Mục Content sẽ là đoạn code trong bảng mã sau: <a href="http://modernicons.io/segoe-mdl2/cheatsheet/">http://modernicons.io/segoe-mdl2/cheatsheet/</a></p>
<p>Để đóng mở Pane của cái SplitView, bạn set thuộc tính “IsPaneOpen = true” hoặc “IsPaneOpen = false” trong event click của button nhé.</p>
<p>Thế là xong. Chúc bạn thành công</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows 10</category>
      </categories>
  </entry>
  <entry>
    <title>[Computer Tips] [Part 1] Be an Advanced User of Web Browser</title>
    <url>/2015/07/13/computer-tips-part-1-be-an-advanced-user-of-web-browser/</url>
    <content><![CDATA[<p>Giữa một ma trận mê cung các trình duyệt, nào là edge rồi cờ rôm, cáo lửa với chả đít nhôm, bạn sẽ xài cái gì đây?</p>
<p>Lại nghe, chrome ăn ram như uống nước, firefox chậm như con rùa bò, chỉ hận sao không thể tăng ram, gắn SSD.</p>
<p>Còn nghe, Add-on như thuốc tăng lực, User-script như lá đu đủ, xài thế nào đây?</p>
<p>Bài viết này sẽ hướng dẫn các bạn cách thiết lập cho các trình duyệt phổ biến để chúng chạy trơn tru mượt mà mà không chói lóa.</p>
<span id="more"></span>
<ul>
<li><a href="#1-thi%E1%BA%BFt-l%E1%BA%ADp-cho-m%C3%A1y-t%C3%ADnh">1. Thiết lập cho máy tính</a><ul>
<li>  <a href="#11-quay-v%E1%BB%81-thi%E1%BA%BFt-l%E1%BA%ADp-m%E1%BA%B7c-%C4%91%E1%BB%8Bnh">1.1 Quay về thiết lập mặc định</a></li>
<li>  <a href="#12-g%E1%BB%A1-b%E1%BB%8F-c%C3%A1c-tr%C3%ACnh-duy%E1%BB%87t-kh%C3%B4ng-ch%C3%ADnh-th%E1%BB%91ng">1.2 Gỡ bỏ các trình duyệt không chính thống</a></li>
<li><a href="#13-c%C3%A0i-%C4%91%E1%BA%B7t-m%E1%BB%99t-tr%C3%ACnh-duy%E1%BB%87t-web-ch%C3%ADnh-ch%E1%BB%A7">1.3 Cài đặt một trình duyệt Web chính chủ</a><ul>
<li>  <a href="#131-mozilla-firefox">1.3.1 Mozilla Firefox</a></li>
<li>  <a href="#132-google-chrome">1.3.2 Google Chrome</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#2-t%E1%BB%91i-%C6%B0u-h%C3%B3a-tr%C3%ACnh-duy%E1%BB%87t-web">2. Tối ưu hóa trình duyệt web</a><ul>
<li><a href="#21-mozilla-firefox">2.1 Mozilla Firefox</a><ul>
<li>  <a href="#211-v%E1%BB%81-thi%E1%BA%BFt-l%E1%BA%ADp-m%E1%BA%B7c-%C4%91%E1%BB%8Bnh">2.1.1 Về thiết lập mặc định</a></li>
<li>  <a href="#212-g%E1%BB%A1-b%E1%BB%8F-c%C3%A1c-add-on--plug-in-v%E1%BB%9B-v%E1%BA%A9n">2.1.2 Gỡ bỏ các Add-on – Plug-in vớ vẩn</a></li>
<li><a href="#213-c%C3%A0i-c%C3%A1c-add-on-h%E1%BB%AFu-%C3%ADch">2.1.3 Cài các Add-on hữu ích</a><ul>
<li>  <a href="#2131-color-that-site">2.1.3.1 Color that site</a></li>
<li>  <a href="#2132-grease-monkey">2.1.3.2 Grease Monkey</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#22-google-chrome">2.2 Google Chrome</a><ul>
<li>  <a href="#221-thi%E1%BA%BFt-l%E1%BA%ADp-m%E1%BA%B7c-%C4%91%E1%BB%8Bnh">2.2.1 Thiết lập mặc định</a></li>
<li>  <a href="#222-g%E1%BB%A1-b%E1%BB%8F-c%C3%A1c-add-on-v%C3%A0-plug-in-v%E1%BB%9B-v%E1%BA%A9n">2.2.2 Gỡ bỏ các add-on và plug-in vớ vẩn</a></li>
<li>  <a href="#223-c%C3%A0i-c%C3%A1c-add-on-h%E1%BB%AFu-%C3%ADch">2.2.3 Cài các add-on hữu ích</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="1-Thiet-lap-cho-may-tinh"><a href="#1-Thiet-lap-cho-may-tinh" class="headerlink" title="1. Thiết lập cho máy tính"></a>1. Thiết lập cho máy tính</h1><h2 id="1-1-Quay-ve-thiet-lap-mac-dinh"><a href="#1-1-Quay-ve-thiet-lap-mac-dinh" class="headerlink" title="1.1 Quay về thiết lập mặc định"></a>1.1 Quay về thiết lập mặc định</h2><p>Trong quá trình sử dụng máy tính, có nhiều phần mềm yêu cầu cài đặt, và kèm theo nó là các khuyến mãi như các thanh công cụ, các phần mềm rác, vân vân.</p>
<p>Việc đầu tiên các bạn cần phải làm là gỡ bỏ các thanh công cụ này</p>
<p>Vào Start, gõ Control Panel và mở Control Panel lên</p>
<p><img src="https://farm1.staticflickr.com/371/19468724630_4b7f3c366f_o.png"></p>
<p>Chọn Uninstall a program <img src="https://farm4.staticflickr.com/3675/19649655092_cc74a4cb11_o.png"></p>
<p>Tiếp theo là tìm và gỡ bỏ tất cả các phần mềm có chữ “Toolbar” trong đó. Trust me.</p>
<h2 id="1-2-Go-bo-cac-trinh-duyet-khong-chinh-thong"><a href="#1-2-Go-bo-cac-trinh-duyet-khong-chinh-thong" class="headerlink" title="1.2 Gỡ bỏ các trình duyệt không chính thống"></a>1.2 Gỡ bỏ các trình duyệt không chính thống</h2><p>Một trình duyệt không chính thống là một trình duyệt dựa trên bộ mã nguồn của trình duyệt nào đó, và được quảng cáo là có các tính năng hay hơn, xịn hơn, tốt hơn so với bản gốc.</p>
<p>Tin tui đi, các trình duyệt này hoàn toàn sẽ bị đè bẹp bởi bản gốc nếu bạn tiếp tục đọc tiếp bài blog này</p>
<p>Các trình duyệt không chính thống là (ý kiến chủ quan):</p>
<ul>
<li>  Cờ rôm cộng / Cờ rôm</li>
<li>  Comodo Dragon – Đi kèm khi cài Comodo Internet Security</li>
<li>  Rockmelt</li>
<li>  Waterfox</li>
<li>  Pale Moon</li>
<li>  Vân vân và vân vân</li>
</ul>
<h2 id="1-3-Cai-dat-mot-trinh-duyet-Web-chinh-chu"><a href="#1-3-Cai-dat-mot-trinh-duyet-Web-chinh-chu" class="headerlink" title="1.3 Cài đặt một trình duyệt Web chính chủ"></a>1.3 Cài đặt một trình duyệt Web chính chủ</h2><p>Đối với các bạn đam mê tốc độ cao, ngốn ít ram, mì ăn liền, mình khuyến cáo không nên cài gì cả, mà hãy dùng Edge.</p>
<p>Nếu bạn vẫn đang dùng Windows 7, thì bạn có thể xài Internet Explorer</p>
<p>Tuy nhiên, cần phải Update Internet Explorer lên bản mới tại đây: <a href="http://windows.microsoft.com/en-us/internet-explorer/download-ie">http://windows.microsoft.com/en-us/internet-explorer/download-ie</a></p>
<p>Nhưng hãy tiếp tục đọc tiếp, nhiều thứ hay ho đang chờ các bạn</p>
<h3 id="1-3-1-Mozilla-Firefox"><a href="#1-3-1-Mozilla-Firefox" class="headerlink" title="1.3.1 Mozilla Firefox"></a>1.3.1 Mozilla Firefox</h3><p>Firefox là một trình duyệt mở (open source), do cộng đồng phát triển, và quản lý bởi Mozilla Foundation.</p>
<p>Đây là trình duyệt “trong trắng” nhất hiện nay, nó không chứa các công cụ theo dõi hành vi người dùng, không hỗ trợ và ủng hộ quảng cáo, không tiết lộ thông tin bảo mật và password của người dùng (do nó dùng các thuật toán mã hóa 3DES, được đánh giá là an toàn cho tới năm 2020 (khi đó với các tiến bộ khoa học kỹ thuật, sức mạnh của máy tính tăng lên, thì việc bẻ khóa thuật toán này, hoặc tấn công theo kiểu dò từng mã một sẽ mất ít thời gian hơn)</p>
<p>Firefox có các phiên bản khác nhau dành cho những đối tượng khác nhau, nhìn chung, bạn sẽ cần phiên bản chính của nó, download tại đây: <a href="https://www.mozilla.org/en-US/firefox/new/">https://www.mozilla.org/en-US/firefox/new/</a></p>
<h3 id="1-3-2-Google-Chrome"><a href="#1-3-2-Google-Chrome" class="headerlink" title="1.3.2 Google Chrome"></a>1.3.2 Google Chrome</h3><p>Google Chrome được xây dựng bởi Google, dựa trên Chromium, cũng được phát triển bởi Google (đúng rồi, Google phát triển cả 2 cái).</p>
<p>Điểm khác nhau là Chromium thì mã nguồn mở, bất kỳ ai cũng có thể vào đọc mã nguồn của nó, do đó, Google sẽ không thể “làm điều xằng bậy” trong đấy được, nếu không muốn bị tẩy chay.</p>
<p>Còn Google Chrome thì mã nguồn đóng, và kèm theo rất nhiều tính năng mà Chromium không có, và được quảng cáo là tốt hơn nhiều.</p>
<p>Chromium không có phiên bản chính thức, cũng chả có phiên bản ổn định chạy được lâu dài (Stable Build), vì dụng ý của Google là bạn không nên xài nó =]]. Trên trang chủ của Chromium có đường link dẫn tới Google Chrome =]], cho ta thấy mưu đồ thâm sâu của Google</p>
<p><img src="https://farm1.staticflickr.com/515/19631148726_b21869a385_o.png"></p>
<p>Còn Google Chrome, do được Google phát triển, nên sẽ được cài cắm nhiều khuyến mãi mà bạn sẽ không hề ngờ tới, ví dụ như phân tích hành vi người dùng, theo dõi vị trí, theo dõi âm thanh, vân vân và vân vân. Người yêu của bạn cũng không hiểu bạn bằng Google đâu.</p>
<p>Nếu bạn thấy những điều trên là chấp nhận được, thì đây là link tải Google Chrome: <a href="https://www.google.com/chrome/browser/desktop/index.html">https://www.google.com/chrome/browser/desktop/index.html</a></p>
<p>Và tất nhiên, nếu bạn đã cài sẵn một trong 2 cái trên, thì hãy đọc tiếp</p>
<h1 id="2-Toi-uu-hoa-trinh-duyet-web"><a href="#2-Toi-uu-hoa-trinh-duyet-web" class="headerlink" title="2. Tối ưu hóa trình duyệt web"></a>2. Tối ưu hóa trình duyệt web</h1><h2 id="2-1-Mozilla-Firefox"><a href="#2-1-Mozilla-Firefox" class="headerlink" title="2.1 Mozilla Firefox"></a>2.1 Mozilla Firefox</h2><h3 id="2-1-1-Ve-thiet-lap-mac-dinh"><a href="#2-1-1-Ve-thiet-lap-mac-dinh" class="headerlink" title="2.1.1 Về thiết lập mặc định"></a>2.1.1 Về thiết lập mặc định</h3><p>Mở firefox lên, vào option</p>
<p><img src="https://farm4.staticflickr.com/3687/19470981219_b07b393f3d_o.png"></p>
<p>Nếu như thế nào đó mà bạn bị mất cái nút mở ra menu này, trong trình duyệt firefox, nhấn Alt, sẽ thấy xuất hiện menu bar cũ, vào Tool &gt; Option</p>
<p>Tại đây, bạn sẽ thấy chỗ chỉnh trang web mặc định mở ra khi bạn mới mở Firefox. Chỉnh nó về Default hoặc như trong hình <img src="https://farm1.staticflickr.com/298/19469617048_3c2728ba6f_o.png"></p>
<p>Ở mục content, bạn có thể bật tùy chọn Block Popup <img src="https://farm1.staticflickr.com/396/19662150581_09c85d0245_o.png"></p>
<p>Ở mục Privacy &gt; chọn “Tell site I do not want to be tracked”, cái này sẽ chặn một số website có lương tâm không theo dõi hành vi của bạn trên trang web đó <img src="https://farm1.staticflickr.com/544/19469724790_9a3c03752b_o.png"></p>
<p>Bật cả 3 tùy chọn sau ở mục Security <img src="https://farm4.staticflickr.com/3747/19035161974_03bf7acef3_o.png"></p>
<p>Sau cùng, chọt vô Advanced &gt; Network &gt; Settings để kiểm tra xem Firefox có đang dùng một cái proxy ất ơ nào đấy không <img src="https://farm4.staticflickr.com/3802/19662238941_c9f5dbc798_o.png"></p>
<p>Nếu bạn thấy Use system proxy, hoặc No proxy, vậy là xong, Firefox của bạn đã “sạch” <img src="https://farm1.staticflickr.com/530/19469763078_6a680a8ba1_o.png"></p>
<h3 id="2-1-2-Go-bo-cac-Add-on-–-Plug-in-vo-van"><a href="#2-1-2-Go-bo-cac-Add-on-–-Plug-in-vo-van" class="headerlink" title="2.1.2 Gỡ bỏ các Add-on – Plug-in vớ vẩn"></a>2.1.2 Gỡ bỏ các Add-on – Plug-in vớ vẩn</h3><p>Để gỡ bỏ một Add-on, bạn nhấn vào cái nút bên hông firefox &gt; Addon <img src="https://farm1.staticflickr.com/287/19650862522_2982de93f6_o.png"></p>
<p>Sau đó chọn dòng Extension, và Remove toàn bộ add-on đi, chừa lại những cái mà bạn biết rõ, hoặc nó có trong danh sách này:</p>
<ul>
<li>  IDM CC</li>
<li>  Noscript</li>
<li>  uBlock origin</li>
<li>  Lastpass</li>
</ul>
<p>Đối với plug-in, vì là các phần mềm bên thứ 3 cài cắm vô, nên bạn không thể gỡ nó ra khỏi firefox, tuy nhiên, bạn có lựa chọn không bao giờ kích hoạt các plug-in này</p>
<p>Chuyển sang thẻ plug-in, chọn never active đối với các plug-in khả nghi.</p>
<p>Lưu ý có một số plug-in cần thiết để Firefox chạy <img src="https://farm1.staticflickr.com/324/19658104815_7b2d4573e6_o.png"></p>
<h3 id="2-1-3-Cai-cac-Add-on-huu-ich"><a href="#2-1-3-Cai-cac-Add-on-huu-ich" class="headerlink" title="2.1.3 Cài các Add-on hữu ích"></a>2.1.3 Cài các Add-on hữu ích</h3><p>Danh sách dưới đây là kinh nghiệm của mình, cài hay không là tùy bạn</p>
<h4 id="2-1-3-1-Color-that-site"><a href="#2-1-3-1-Color-that-site" class="headerlink" title="2.1.3.1 Color that site"></a>2.1.3.1 Color that site</h4><p>Link tải: <a href="https://addons.mozilla.org/en-us/firefox/addon/color-that-site/">https://addons.mozilla.org/en-us/firefox/addon/color-that-site/</a></p>
<p>Là một add-on khá hay, cho phép bạn đổi màu hoàn toàn một trang web.</p>
<p>Các web site hiện nay đa phần xài cái nền trắng bóc, rất hai mắt và tốn điện. Nhìn lâu vào nó, bạn sẽ chỉ muốn đập máy, và bạn ước chi có cách nào đó đổi tất cả màu trắng thành màu đen, và màu chữ đen thành trắng.</p>
<p>Color that site ra đời, cho phép bạn thay đổi màu toàn bộ các thành phần trên 1 website, trừ hình ảnh ra.</p>
<p>Cách dùng: Sau khi cài đặt xong, bạn sẽ thấy một nút nho nhỏ màu mè tùm lum nằm bên cạnh nút menu. Mở trang web bạn muốn thay đổi màu và nhấn vô nó.</p>
<p>Mình sẽ lấy tuoitre.vn làm ví dụ <img src="https://farm1.staticflickr.com/395/19471796349_7634f4684e_o.png"></p>
<p>Bên cạnh trái sẽ xuất hiện một thanh nhỏ. Bấm Go! <img src="https://farm4.staticflickr.com/3725/19470911848_582c1be356_o.png"></p>
<p>Bạn sẽ thấy một thanh chạy chạy, chờ nó chạy xong, sẽ hiện ra bảng tùy chỉnh. Bạn mở mục Foreground colors, chọn Invert Colors <img src="https://farm1.staticflickr.com/512/19633625356_5b369ba1c4_o.png"></p>
<p>Sau đó tiếp tục mở Background colors, và chọn tiếp Invert Colors. Rồi chuyển sang thẻ Settings chọn domain để áp dụng thay đổi cho toàn bộ domain của tuổi trẻ rồi nhấn nút Save <img src="https://farm1.staticflickr.com/327/19659877085_498f2d9d47_o.png"></p>
<p>Vậy là xong, bạn có thể chiêm ngưỡng thành quả. Tuoitre.vn giờ đã dễ chịu hơn cho mắt, nhưng chữ vẫn rất rõ ràng dễ đọc. <img src="https://farm1.staticflickr.com/451/19037390234_226c6b0b15_o.png"></p>
<h4 id="2-1-3-2-Grease-Monkey"><a href="#2-1-3-2-Grease-Monkey" class="headerlink" title="2.1.3.2 Grease Monkey"></a>2.1.3.2 Grease Monkey</h4><p>Link: <a href="https://addons.mozilla.org/en-us/firefox/addon/greasemonkey/">https://addons.mozilla.org/en-us/firefox/addon/greasemonkey/</a></p>
<p>Grease Monkey là một add-on cho phép bạn chạy thêm các đoạn JavaScript của riêng mình trên một website nhất định nào đó.</p>
<p>Vậy tại sao mình phải làm vậy?</p>
<p>Một ví dụ đơn giản, khi xem một tấm hình trên flickr, ví dụ như tấm này: <a href="https://flic.kr/p/oABXSB">https://flic.kr/p/oABXSB</a></p>
<p>Bạn muốn Download nó, nhưng để download một tấm hình trên flickr, bạn phải trải qua rất nhiều bước trước khi có link download. Với Grease Monkey, chỉ cần 1 click là đã download được ngay.</p>
<p>Một vấn đề nữa, bạn không phải lập trình viên, làm sao viết được những đoạn script đó cho Grease Monkey? Câu trả lời là đã có người viết những đoạn Script đó cho bạn. Một số trang Script tiu bỉu:</p>
<ul>
<li>  <a href="https://greasyfork.org/en">https://greasyfork.org/en</a></li>
<li>  <a href="https://openuserjs.org/">https://openuserjs.org/</a></li>
</ul>
<p><strong>Một vài đoạn Script tiu bỉu:</strong></p>
<ul>
<li>  <a href="https://greasyfork.org/en/scripts/1190-flickr-original-link">https://greasyfork.org/en/scripts/1190-flickr-original-link</a> - Cho phép bạn download hình trên flickr chỉ với 1 click</li>
<li>  <a href="https://greasyfork.org/en/scripts/568-direct-google">https://greasyfork.org/en/scripts/568-direct-google</a> - Bỏ qua chế độ redirect khi search trên google, giúp bạn mở kết quả tìm kiếm nhanh hơn, đồng thời hiện link “Cached” của kết quả đó</li>
<li>  Còn rất nhìu đoạn script khác chờ bạn khám phá</li>
</ul>
<p>Một số add-on nâng cao hơn sẽ có ở phần 2 của chủ đề này nhé</p>
<h2 id="2-2-Google-Chrome"><a href="#2-2-Google-Chrome" class="headerlink" title="2.2 Google Chrome"></a>2.2 Google Chrome</h2><h3 id="2-2-1-Thiet-lap-mac-dinh"><a href="#2-2-1-Thiet-lap-mac-dinh" class="headerlink" title="2.2.1 Thiết lập mặc định"></a>2.2.1 Thiết lập mặc định</h3><p>Bạn mở GG Chrome, chọt vào nút Menu &gt; Settings <img src="https://farm1.staticflickr.com/460/19472379248_e600d04ab2_o.png"></p>
<p>Ôi thôi, cái setting dài quá dài. Kéo xuống dưới cùng, chọn Show Advanced Settings…, rồi tiếp tục kéo xuống dưới cùng, sẽ có nút Reset settings. Bấm vào đó để reset lại (Lưu ý làm cái này thì GG Chrome của bạn sẽ như mới)</p>
<h3 id="2-2-2-Go-bo-cac-add-on-va-plug-in-vo-van"><a href="#2-2-2-Go-bo-cac-add-on-va-plug-in-vo-van" class="headerlink" title="2.2.2 Gỡ bỏ các add-on và plug-in vớ vẩn"></a>2.2.2 Gỡ bỏ các add-on và plug-in vớ vẩn</h3><p>Cũng trong trang setting, bạn chọn mục Add-on. Ở mỗi đầu add-on sẽ có biểu tượng thùng rác. Bấm vô đó để Remove một add-on tương ứng. Chừa lại các add-on sau:</p>
<ul>
<li>  Google Docs</li>
<li>  Google Sheets</li>
<li>  Google Slides</li>
<li>  IDM Integration Module</li>
</ul>
<h3 id="2-2-3-Cai-cac-add-on-huu-ich"><a href="#2-2-3-Cai-cac-add-on-huu-ich" class="headerlink" title="2.2.3 Cài các add-on hữu ích"></a>2.2.3 Cài các add-on hữu ích</h3><p>Số lượng add-on bên Google Chrome thực sự không nhiều và phong phú như bên Firefox, tuy nhiên cũng có một số Add-on tương đương</p>
<ul>
<li>  Grease Monkey =&gt; TamperMonkey: <a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?utm_source=chrome-app-launcher-info-dialog">https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?utm_source=chrome-app-launcher-info-dialog</a></li>
<li>  Color that site =&gt; Stylish: <a href="https://chrome.google.com/webstore/detail/stylish-custom-themes-for/fjnbnpbmkenffdnngjfgmeleoegfcffe">https://chrome.google.com/webstore/detail/stylish-custom-themes-for/fjnbnpbmkenffdnngjfgmeleoegfcffe</a></li>
</ul>
<p>Phần 2 của bài viết ở đây: <a href="https://huntertran.com/2015/07/17/computer-tips-part-2-be-an-advanced-user-with-web-browser/">Phần 2</a></p>
]]></content>
      <categories>
        <category>Computer Tips</category>
      </categories>
      <tags>
        <tag>chrome</tag>
        <tag>firefox</tag>
        <tag>web browser</tag>
      </tags>
  </entry>
  <entry>
    <title>[Computer Tips] [Part 2] Be an Advanced user with Web Browser</title>
    <url>/2015/07/17/computer-tips-part-2-be-an-advanced-user-with-web-browser/</url>
    <content><![CDATA[<p>Part 1 ở đây: <a href="https://cuoilennaocacban2.wordpress.com/2015/07/13/computer-tips-part-1-be-an-advanced-user-of-web-browser/">Phần 1</a></p>
<p>Sau khi đã có một trình duyệt web sạch sẽ, cùng các addon hữu ích, chắc bạn sẽ tự hỏi: “Còn gì hay ho nữa không”</p>
<p>Cộng đồng phát triển add-on cho Firefox và Chrome là vô cùng bự, và bạn sẽ tìm thấy kha khá những add-on phù hợp với mình.</p>
<p>Bài viết này sẽ hướng dẫn cách sử dụng một số addon kỳ quái khác, giúp trải nghiệm duyệt web của bạn đã hơn nữa</p>
<p>Việc sử dụng không đúng cách các Addon này sẽ khiến trang web không hiển thị được, hoặc thiếu tính năng.</p>
<p>Có một số add-on chỉ có Firefox mới có, và ngược lại</p>
<span id="more"></span>
<ul>
<li><a href="#c%C3%A1c-addon-n%C3%A2ng-cao">Các addon nâng cao</a><ul>
<li><a href="#noscript--firefox-only">NoScript – Firefox only</a><ul>
<li>  <a href="#thi%E1%BA%BFt-l%E1%BA%ADp">Thiết lập</a></li>
<li>  <a href="#s%E1%BB%AD-d%E1%BB%A5ng">Sử dụng</a></li>
<li>  <a href="#blacklist-m%E1%BB%99t-%C4%91o%E1%BA%A1n-script">Blacklist một đoạn Script</a></li>
<li>  <a href="#tips-and-tricks">Tips and Tricks</a></li>
<li>  <a href="#l%E1%BB%A3i-v%C3%A0-h%E1%BA%A1i">Lợi và hại</a></li>
</ul>
</li>
<li>  <a href="#ublock--firefox-v%C3%A0-chrome">uBlock – Firefox và Chrome</a></li>
</ul>
</li>
</ul>
<h1 id="Cac-addon-nang-cao"><a href="#Cac-addon-nang-cao" class="headerlink" title="Các addon nâng cao"></a>Các addon nâng cao</h1><h2 id="NoScript-–-Firefox-only"><a href="#NoScript-–-Firefox-only" class="headerlink" title="NoScript – Firefox only"></a>NoScript – Firefox only</h2><p>Một website được hiển thị trên màn hình của bạn dựa trên 3 yếu tố: HTML, CSS và JavaScript. HTML sẽ chứa nội dung, CSS sẽ định dạng cho nội dung đó (canh chỉnh lề, màu sắc, kích thước) và JavaScript sẽ chịu trách nhiệm tính toán, hiệu ứng, tất tần tật mọi thứ khác. Vấn đề nằm ở chỗ, khi load một website, không phải đoạn Script nào cũng cần thiết để web hoạt động, có các đoạn Script hoàn toàn không liên quan như theo dõi hành vi người dùng, tải quảng cáo, phân tích dữ liệu cho các bộ máy tìm kiếm. Đó là lý do NoScript ra đời Theo mặc định, NoScript sẽ chặn tất cả, và chỉ chừa lại các đoạn Script bạn cho nó chạy mà thôi. Tải tại đây: <a href="https://addons.mozilla.org/en-us/firefox/addon/noscript/">https://addons.mozilla.org/en-us/firefox/addon/noscript/</a> Sau khi cài đặt, đây sẽ là hình ảnh các bạn nhận được khi mở bất kỳ trang web nào, khá khó chịu phải ko? <img src="https://farm1.staticflickr.com/264/19575563008_f13b274796_o.png"></p>
<h3 id="Thiet-lap"><a href="#Thiet-lap" class="headerlink" title="Thiết lập"></a>Thiết lập</h3><p>Để thiết lập cho NoScript, click chuột vào nó và chọn Option <img src="https://farm1.staticflickr.com/436/19763863685_538c579046_o.png"> Chọn thẻ Notification để bỏ dòng thông báo xuất hiện bên dưới trình duyệt Bỏ chọn các dòng được đánh dấu bằng mũi tên <img src="https://farm1.staticflickr.com/481/19768621411_6022b4cf6a_o.png"> Vậy là xong bước thiết lập</p>
<h3 id="Su-dung"><a href="#Su-dung" class="headerlink" title="Sử dụng"></a>Sử dụng</h3><p>Quay trở lại google, khi vào google, bạn sẽ không còn thấy thanh thông báo script đã bị chặn nữa. Thử tìm kiếm một từ khóa nào đó, bạn sẽ thấy có nhiều hiện tượng lạ khác với google bình thường Đầu tiên là google quay trở về cái giao diện cổ xưa cũ rích <img src="https://farm1.staticflickr.com/511/19577369119_a5df6cf9d9_o.png"> Tính năng Instant Search cũng mất luôn. Chuyện gì đang xảy ra? Đơn giản là bạn đang chặn toàn bộ JavaScript của google, và đây là tất cả những gì mà Google có thể làm được khi thiếu JavaScript Để cho phép JavaScript của google hoạt động, rê chuột lên biểu tượng của NoScript <img src="https://farm1.staticflickr.com/527/19141449444_642fd3f5ce_o.png"> Và chọn Allow google.com Thế là google tự động reload, và giao diện quen thuộc đã quay trở lại <img src="https://farm1.staticflickr.com/407/19141472164_c0f391e0fb_o.png"> Biểu tượng NoScript giờ biến thành chữ S, nhưng vẫn có một dấu chặn đỏ nho nhỏ bên dưới. Đó là vì vẫn còn Script bị chặn, bạn nên rê chuột lên để kiểm tra thử <img src="https://farm1.staticflickr.com/539/19577487129_8a934d4edc_o.png"> Vẫn còn 1 Script là gstatic.com đang bị chặn. Bạn có muốn cho phép nó hay ko là tùy bạn. Nên nhớ, một số đoạn Script cần thiết phải cho phép để website hoạt động đúng như những gì nó được sinh ra để làm Một ví dụ khác. Trang <a href="http://news.zing.vn/">http://news.zing.vn/</a> Ở trang này, lúc đầu cũng như google, tuy nhiên, khi rê chuột lên icon noscript, bạn sẽ thấy điều khác biệt <img src="https://farm1.staticflickr.com/357/19764202055_ea391aa0ce_o.png"> Đoạn Script gì đây? Adtimaserver.vn là gì? Đầu tiên hãy cho phép zing.vn Trang news.zing.vn hiện ra đẹp đẽ, nhưng nhìn có vẻ hơi trống trải. Bạn tự hỏi những chỗ trống đó là gì? <img src="https://farm1.staticflickr.com/525/19757017192_23fab3b91b_o.png"> Bây giờ hãy tiếp tục cho phép adtimaserverv.vn và cảm nhận điều khác biệt <img src="https://farm1.staticflickr.com/260/19141748024_f1c4f57d76_o.png"> Bắt đầu lag, quảng cáo tràn ngập khắp mọi nơi. Và đó chính là chức năng của đoạn Script đó. Nếu bạn để ý, sẽ thấy ngoài 2 script ban đầu, còn rất nhiều script khác được chêm vô. Điều đó không có gì ngạc nhiên, một đoạn JavaScript có thể gọi thêm nhiều đoạn JavaScript khác hỗ trợ cho nó. Như vậy, quyết định cho đoạn Script nào chạy, đoạn nào không là ở bạn.</p>
<h3 id="Blacklist-mot-doan-Script"><a href="#Blacklist-mot-doan-Script" class="headerlink" title="Blacklist một đoạn Script"></a>Blacklist một đoạn Script</h3><p>Sau khi biết chắc một đoạn script nào đấy chỉ dành cho quảng cáo, hoặc chỉ dùng để theo dõi người dùng, bạn có thể đưa nó vào blacklist ngay và luôn để từ lần sau, NoScript sẽ chặn nó mà không hỏi ý kiến bạn nữa Đưa chuột vào Icon NoScript, chọn Untrusted &gt; chọn đoạn script muốn blacklist <img src="https://farm1.staticflickr.com/308/19577587378_2f862f7a44_o.png"> Cẩn thận không blacklist nhầm các đoạn script quan trọng nhé Sau cùng, khi toàn bộ script trên một trang web đã được xử lý (cho phép hoặc bị đưa vào blacklist), biểu tượng NoScript sẽ biến thành như này <img src="https://farm1.staticflickr.com/433/19758359822_686a2ecf41_o.png"></p>
<h3 id="Tips-and-Tricks"><a href="#Tips-and-Tricks" class="headerlink" title="Tips and Tricks"></a>Tips and Tricks</h3><ul>
<li>  Để tạm thời cho phép toàn bộ script của một trang, bạn có thể chọn Temporarily allow all on this page</li>
<li>  Trong một số trường hợp, trang web bị redirect (aka: chuyển qua một trang khác) quá nhanh trước khi bạn kịp “Allow” một đoạn script của trang đó, bạn có thể sử dụng tính năng “Recently Blocked Script” để cho phép các đoạn script bị block gần đây.</li>
<li>  Bạn có thể Export / Import toàn bộ thiết lập của NoScript trong option của nó</li>
<li>Một số trang web không cho bạn blacklist các JavaScript của nó bằng một thủ thuật tinh vi là steal focus, làm cho bạn không thể nào click được Untrust. Bấm F12, chọn thẻ Debugging &gt; Bấm vào nút pause (có hình 2 cái vạch giống vầy || ), là bạn có thể untrust các đoạn script của nó</li>
<li>Gõ about:config trên trình duyệt, tìm noscript.untrusted để xem toàn bộ các script đang bị blacklist. Bạn có thể copy danh sách này và paste nó cho bạn bè của mình. Của mình là</li>
</ul>
<pre class="line-numbers language-none"><code class="language-none">
&quot;admicro.vn adtimaserver.vn doubleclick.net google-analytics.com googlesyndication.com googletagmanager.com googletagservices.com microad.net scorecardresearch.com http:&#x2F;&#x2F;admicro.vn http:&#x2F;&#x2F;adtimaserver.vn http:&#x2F;&#x2F;doubleclick.net http:&#x2F;&#x2F;google-analytics.com http:&#x2F;&#x2F;googlesyndication.com http:&#x2F;&#x2F;googletagmanager.com http:&#x2F;&#x2F;googletagservices.com http:&#x2F;&#x2F;microad.net http:&#x2F;&#x2F;scorecardresearch.com https:&#x2F;&#x2F;admicro.vn https:&#x2F;&#x2F;adtimaserver.vn https:&#x2F;&#x2F;doubleclick.net https:&#x2F;&#x2F;google-analytics.com https:&#x2F;&#x2F;googlesyndication.com https:&#x2F;&#x2F;googletagmanager.com https:&#x2F;&#x2F;googletagservices.com https:&#x2F;&#x2F;microad.net https:&#x2F;&#x2F;scorecardresearch.com&quot;</code></pre>

<h3 id="Loi-va-hai"><a href="#Loi-va-hai" class="headerlink" title="Lợi và hại"></a>Lợi và hại</h3><p>Lợi</p>
<p>Hại</p>
<p>Thời gian load trang nhanh hơn</p>
<p>Thiết lập phức tạp</p>
<p>Trang web đỡ rối mắt hơn</p>
<p>Phải thiết lập cho từng trang web một</p>
<p>Đỡ tốn tiền Internet (nếu bạn dùng gói xài nhiu trả nhiu)</p>
<p>Web chạy mượt mà hơn</p>
<p>Loại bỏ theo dõi hành vi người dùng của các website</p>
<p>Ngăn ngừa các nguy cơ bảo mật kiểu “Click vào đây để nhận quà”, click vào thì dính virus</p>
<p>Chặn luôn các thủ thuật câu like của các trang web (nút like ẩn dưới các chức năng bẫy người dùng click vô)</p>
<h2 id="uBlock-–-Firefox-va-Chrome"><a href="#uBlock-–-Firefox-va-Chrome" class="headerlink" title="uBlock – Firefox và Chrome"></a>uBlock – Firefox và Chrome</h2><p>Không khuyến khích sử dụng Add-on này, vì nó sẽ chặn quảng cáo, là cần câu cơm của các trang web Bạn có bao giờ khó chịu khi mở một website lên mà quảng cáo tràn ngập, không thấy nội dung đâu hết? Các pop up hiện ra liên tục với cường độ cao, các bẫy click mà khi click vào thì quảng cáo nhảy xổ ra tràn ngập màn hình? Đã đến lúc chấm dứt cơn ác mộng đấy, bằng một add-on gọi là uBlock Tải tại đây:</p>
<ul>
<li>  Chrome: <a href="https://chrome.google.com/webstore/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm">https://chrome.google.com/webstore/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm</a></li>
<li>  Firefox: <a href="https://addons.mozilla.org/en-US/firefox/addon/ublock-origin/">https://addons.mozilla.org/en-US/firefox/addon/ublock-origin/</a></li>
</ul>
<p>Trước khi sử dụng nó, khuyến cáo bạn nên gỡ tất cả các add-on chặn quảng cáo khác Cách sử dụng rất đơn giản, bấm vào biểu tượng của nó &gt; bật / tắt cái nút xanh to đùng để bật / tắt quảng cáo Trước khi cài / khi bật quảng cáo <img src="https://farm1.staticflickr.com/544/19143668994_c079ef0d7a_o.png"> Sau khi cài / Khi tắt quảng cáo bằng cách kích hoạt uBlock <img src="https://farm1.staticflickr.com/548/19578291190_af7efd9481_o.png"> Bạn có thể đọc thêm về hướng dẫn sử dụng tại đây <a href="https://github.com/gorhill/uBlock#documentation">https://github.com/gorhill/uBlock#documentation</a> Happy surfing the Internet</p>
]]></content>
      <categories>
        <category>Computer Tips</category>
      </categories>
      <tags>
        <tag>add-on</tag>
        <tag>noscript</tag>
        <tag>ublock</tag>
      </tags>
  </entry>
  <entry>
    <title>[Windows] How to add IsVisible Property to all WinRT UIElement</title>
    <url>/2015/07/19/windows-how-to-add-isvisible-property-to-all-winrt-uielement/</url>
    <content><![CDATA[<p>Trong quá trình dev app sử dụng XAML và C#, chắc chắn bạn sẽ gặp trường hợp phải đặt thuộc tính Visibility, và thuộc tính này có 2 giá trị là Visible/Collapsed. Và để binding tới nó sử dụng bool, bạn phải sử dụng một converter. Vậy tại sao Microsoft không thiết kế nó sử dụng bool từ đầu nhỉ. Và có cách nào để khắc phục không?</p>
<p>Bài viết được biên tập lại từ: <a href="http://www.rudyhuyn.com/blog/2015/03/26/how-to-add-isvisible-property-to-all-winrt-ui-elements/">http://www.rudyhuyn.com/blog/2015/03/26/how-to-add-isvisible-property-to-all-winrt-ui-elements/</a></p>
<span id="more"></span>
<h1 id="Lich-su"><a href="#Lich-su" class="headerlink" title="Lịch sử"></a>Lịch sử</h1><p>Thuộc tính Visibility kế thừa các giá trị của nó từ WPF, gồm có 3 giá trị:</p>
<ul>
<li>  Visible: Hiển thị control</li>
<li>  Hidden: Không hiển thị control, nhưng giữ chỗ của control này trên giao diện (Giống như Opacity = 0, Visibility = Visible)</li>
<li>  Collapsed: Không hiển thị control, và cũng không giữ chỗ của nó trên giao diện.</li>
</ul>
<p>Qua đến Silverlight, sau này Windows RT trên Windows 8.1 và Windows Phone 8.1, thuộc tính hidden đã bị bỏ, nhưng do vẫn dùng chung nhân Windows NT nên Microsoft không chỉnh sửa giá trị nó thành bool mà vẫn giữ 2 giá trị cũ</p>
<h1 id="Cach-khac-phuc"><a href="#Cach-khac-phuc" class="headerlink" title="Cách khắc phục"></a>Cách khắc phục</h1><p>Đây là một class nhỏ giúp bạn thêm một thuộc tính gọi là “IsVisible” vào UIElements và truyền cho nó giá trị true hoặc false</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">public class Extension: DependencyObject
&#123;
    public static readonly DependencyProperty IsVisibleProperty &#x3D; DependencyProperty.RegisterAttached(&quot;IsVisible&quot;,
                                                                                                      typeof(bool),
                                                                                                      typeof(Extension),
                                                                                                      new PropertyMetadata(true, IsVisibleCallback));

    private static void IsVisibleCallback(DependencyObject d, DependencyPropertyChangedEventArgs e)
    &#123;
        ((UIElement) d).Visibility &#x3D; (bool) e.NewValue ? Visibility.Visible : Visibility.Collapsed;
    &#125;

    public static void SetIsVisible(UIElement element, bool value)
    &#123;
        element.SetValue(IsVisibleProperty, value);
    &#125;

    public static bool GetIsVisible(UIElement element)
    &#123;
        return (bool) element.GetValue(IsVisibleProperty);
    &#125;
&#125;</code></pre>


<p>Vậy là xong, bạn có thể sử dụng nó ngay</p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">&lt;Page x:Class&#x3D;&quot;IsVisibleSample.MainPage&quot;
      xmlns&#x3D;&quot;http:&#x2F;&#x2F;schemas.microsoft.com&#x2F;winfx&#x2F;2006&#x2F;xaml&#x2F;presentation&quot;
      xmlns:x&#x3D;&quot;http:&#x2F;&#x2F;schemas.microsoft.com&#x2F;winfx&#x2F;2006&#x2F;xaml&quot;
      xmlns:d&#x3D;&quot;http:&#x2F;&#x2F;schemas.microsoft.com&#x2F;expression&#x2F;blend&#x2F;2008&quot;
      xmlns:mc&#x3D;&quot;http:&#x2F;&#x2F;schemas.openxmlformats.org&#x2F;markup-compatibility&#x2F;2006&quot;
      xmlns:ext&#x3D;&quot;using:Huyn&quot;
      mc:Ignorable&#x3D;&quot;d&quot;&gt;
    &lt;Rectangle Height&#x3D;&quot;100&quot;
               Width&#x3D;&quot;100&quot;
               Fill&#x3D;&quot;Red&quot; 
               x:Name&#x3D;&quot;Rectangle&quot; 
               ext:Extension.IsVisible&#x3D;&quot;false&quot;&#x2F;&gt;
&lt;&#x2F;Page&gt;</code></pre>


<p>Hoặc dùng Binding với nó</p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">&lt;CheckBox x:Name&#x3D;&quot;MyCheckBox&quot;
          IsChecked&#x3D;&quot;True&quot;
          Content&#x3D;&quot;show rectangle&quot;&#x2F;&gt;
&lt;Rectangle Height&#x3D;&quot;100&quot;
           Width&#x3D;&quot;100&quot;
           Fill&#x3D;&quot;Red&quot;
           x:Name&#x3D;&quot;Rectangle&quot;
           ext:Extension.IsVisible&#x3D;&quot;&#123;Binding IsChecked,ElementName&#x3D;MyCheckBox&#125;&quot;&#x2F;&gt;</code></pre>


<p>Hoặc dùng nó như một Binding Source</p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">&lt;CheckBox IsChecked&#x3D;&quot;&#123;Binding (ext:Extension.IsVisible),ElementName&#x3D;Rectangle&#125;&quot;
          IsEnabled&#x3D;&quot;False&quot;
          Content&#x3D;&quot;rectangle is visible?&quot;&#x2F;&gt;</code></pre>


<p>Hoặc dùng nó trong code behind</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">var val &#x3D; Extension.GetIsVisible(Rectangle);
Extension.SetIsVisible(Rectangle,true);</code></pre>

<p>Thế là xong</p>
]]></content>
      <categories>
        <category>Others</category>
      </categories>
  </entry>
  <entry>
    <title>[Visual Studio] XAML Element Inspector with Visual Studio 2015 [en-US]</title>
    <url>/2015/08/02/windows-xaml-element-inspector-with-visual-studio-2015/</url>
    <content><![CDATA[<p>Chào các bạn, kể từ bài blog này, mình sẽ viết bằng tiếng Anh nhé. Bạn có thể dùng Google Translate hoặc Bing Translate để dịch sang tiếng Việt nhé :3</p>
<p>Các bài viết trước mình cũng sẽ viết lại bằng tiếng Anh.</p>
<p>Hello guys, from this post forward, I will write in English. You can use “Google Translate” or “Bing Translate” to read it in Vietnamese</p>
<p>In the latest release of Visual Studio (aka Visual Studio 2015), Microsoft has introduce some cutting edge features called “Live Visual Tree” and “Live Property Explorer”. Using this features, you can easily inspect and edit you XAML element on the fly.</p>
<span id="more"></span>
<h1 id="Live-Visual-Tree"><a href="#Live-Visual-Tree" class="headerlink" title="Live Visual Tree"></a>Live Visual Tree</h1><p>For using Live Visual Tree, open any XAML project. It could be Windows 8, 8.1 App, Windows Universal App, or Universal Application Platform (UAP, aka App developed for Windows 10)</p>
<p>Press Build (F5) to compile and deploy the app. Then come back to Visual Studio. You will see a new small toolbar called “Live Visual Tree”. Click on it to expand</p>
<p><img src="https://farm1.staticflickr.com/543/20216853242_f1655e2c2e_o.png"></p>
<p>Now click on the small docking icon to make it stick there, make it easier to use</p>
<p><img src="http://cuoilennaocacban2.files.wordpress.com/2015/08/080215_1141_windowsxaml1.png"></p>
<p>Now in this windows, click on the small icon that have the small triangle pointed to a rectangle. This is the Inspector, just like Google Chrome element inspector. Comeback to running app, you will wherevers the pointer, there will be a dotted box around it, cover the element under the pointer</p>
<p><img src="http://cuoilennaocacban2.files.wordpress.com/2015/08/080215_1141_windowsxaml2.png"></p>
<p>Click once, and the Live Visual Tree will jump to the exact element.</p>
<p><img src="https://farm1.staticflickr.com/528/19602618384_1423c50319_o.png"></p>
<p>You can click on other elements in the Live Visual Tree, and the red dotted box will jump to that element on your running app. In this way, you can see exactly how the element is drawn on your app.</p>
<p>You can also search for an element by its name or by type.</p>
<p><img src="https://farm1.staticflickr.com/438/20038725589_1b8097c624_o.png"></p>
<h1 id="Live-Property-Explorer"><a href="#Live-Property-Explorer" class="headerlink" title="Live Property Explorer"></a>Live Property Explorer</h1><p>With the element selected in Live Visual Tree, look on the right side of Visual Studio, you will see “Live Property Explorer”, click on it to expand and click the dock button to make it stick there</p>
<p><img src="https://farm1.staticflickr.com/425/20037363128_c89bbbe6d5_o.png"></p>
<p>Now it a lot fewer property than normal, right? Expand the “Default” group and you will see the rest.</p>
<p>The good things about this Live Property Explorer is, you can actually change the value, and observe the change in your running app</p>
<p>I will try to change the Height to 100, and see what happened on the app</p>
<p><img src="https://farm1.staticflickr.com/504/20199163156_3fc683e0c9_o.png"></p>
<p>And now the app</p>
<p><img src="https://farm1.staticflickr.com/555/20231217491_5d41f98c4f_o.png"></p>
<p>Wonderful isn’t it? You can change almost everything, except some grey out property in the Live Property Explorer.</p>
<p>That’s it. Now you know how to use the Live Visual Tree to inspect the XAML element on your apps, and Live Property Explorer to change the value of that element, and watch the change happened on the fly.</p>
<p>Stay toon for other cool feature of the new Visual Studio 2015</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows 10</category>
      </categories>
      <tags>
        <tag>Visual Studio</tag>
        <tag>xaml</tag>
      </tags>
  </entry>
  <entry>
    <title>[Azure] [Vietnamese] Đăng ký Azure - Hướng dẫn từng bước</title>
    <url>/2015/08/13/azure-vietnamese-dang-ky-azure-huong-dan-tung-buoc/</url>
    <content><![CDATA[<p>Azure đã tới Việt Nam, và bạn đang phân vân không biết phải đăng ký như thế nào để sử dụng nó, hoàn toàn miễn phí?</p>
<p>Bài viết sau sẽ hướng dẫn bạn cách đăng ký, từ đơn giản nhất cho tới những cách đăng ký khi bạn có tài khoản DreamSpark hoặc MSDN Subscription</p>
<span id="more"></span>
<h1 id="Muc-luc"><a href="#Muc-luc" class="headerlink" title="Mục lục"></a>Mục lục</h1><ul>
<li><a href="#one">Đăng ký</a><ul>
<li>  <a href="#oneontwo">Đăng ký thông qua chương trình DreamSpark dành cho sinh viên</a></li>
<li>  <a href="#oneonone">Đăng ký tự do</a></li>
<li>  <a href="#oneonthree">Đăng ký qua chương trình MSDN Subscription</a></li>
</ul>
</li>
</ul>
<h1 id="Dang-ky"><a href="#Dang-ky" class="headerlink" title="Đăng ký"></a>Đăng ký</h1><h2 id="Dang-ky-qua-chuong-trinh-DreamSpark-Azure-for-Student"><a href="#Dang-ky-qua-chuong-trinh-DreamSpark-Azure-for-Student" class="headerlink" title="Đăng ký qua chương trình DreamSpark (Azure for Student)"></a>Đăng ký qua chương trình DreamSpark (Azure for Student)</h2><p>DreamSpark là một chương trình dành cho tất cả sinh viên trên toàn cầu, (đúng rồi, tất cả sinh viên), cung cấp các sản phẩm và dịch vụ của Microsoft cho sinh viên hoàn toàn miễn phí. Có 2 cách để đăng ký DreamSpark, 1 là trường bạn có đăng ký với Microsoft, 2 là bạn có thẻ sinh viên quốc tế</p>
<h3 id="Lay-code-kich-hoat-DreamSpark"><a href="#Lay-code-kich-hoat-DreamSpark" class="headerlink" title="Lấy code kích hoạt DreamSpark"></a>Lấy code kích hoạt DreamSpark</h3><h4 id="Truong-ban-co-dang-ky-voi-Microsoft"><a href="#Truong-ban-co-dang-ky-voi-Microsoft" class="headerlink" title="Trường bạn có đăng ký với Microsoft"></a>Trường bạn có đăng ký với Microsoft</h4><p>Truy cập vào link DreamSpark của trường bạn (thường bắt đầu bằng e5.onthehub.com)</p>
<p><img src="https://farm1.staticflickr.com/642/20345559318_6d5c17a226_o.png"></p>
<p>Đăng nhập vào đó</p>
<p><img src="https://farm1.staticflickr.com/759/20507379866_b3257e520e_o.png"></p>
<p>Sau khi đăng nhập, bạn sẽ thấy danh sách các phần mềm miễn phí mà Microsoft cung cấp. Bạn chọn mục Other (1) nhé. Trong đó chỉ có 1 sản phẩm duy nhất, click chọn nó</p>
<p><img src="https://farm1.staticflickr.com/782/20347308648_3a4034d5c6_o.png"></p>
<p>Chọn Add to Card, rồi bấm Check out để “Đặt hàng” sản phẩm code kích hoạt</p>
<p><img src="https://farm1.staticflickr.com/630/20535376875_99b75c1006_o.png"></p>
<p>Sau khi có code rồi, bạn vào <a href="http://dreamspark.com/">http://dreamspark.com</a> , click chọn ô Azure như hình dưới</p>
<p><img src="https://farm1.staticflickr.com/753/20347383998_850031fda3_o.png"></p>
<p>Ở trang hiện ra, bạn bấm vào cái nút màu cam để đăng nhập hoặc đăng ký tài khoản DreamSpark</p>
<p><img src="https://farm1.staticflickr.com/734/19912779474_caae638809_o.png"></p>
<h4 id="Tao-tai-khoan-DreamSpark"><a href="#Tao-tai-khoan-DreamSpark" class="headerlink" title="Tạo tài khoản DreamSpark"></a>Tạo tài khoản DreamSpark</h4><p>Đầu tiên, bạn phải đăng nhập vào tài khoản Microsoft của mình</p>
<p><img src="https://farm1.staticflickr.com/645/20541962401_9af94aa6e8_o.png"></p>
<p>Sau khi đăng nhập, bạn điền đầy đủ thông tin và nhấn continue to verify</p>
<p><img src="https://farm1.staticflickr.com/733/20348905989_b11fba908b_o.png"></p>
<p>Có nhiều hình thức verify, nhưng cách đơn giản nhất là verify bằng code mà bạn đã lấy trước đó</p>
<p>Copy từng ô code ở trên DreamSpark của trường và paste nó qua trang verification</p>
<p><img src="https://farm1.staticflickr.com/610/19913021284_e8d7c0e4d3_o.png"></p>
<p><img src="https://farm6.staticflickr.com/5690/19914724863_4e29b8f842_o.png"></p>
<p>Khi bạn nhận được thông báo như hình dưới là đã đăng ký DreamSpark thành công, nhưng nhớ check mail để kích hoạt nó nhé</p>
<p><img src="https://farm1.staticflickr.com/624/20347814118_c9ccc9e281_o.png"></p>
<blockquote>
<p>Nếu trường bạn có đăng tên miền với Microsoft, bạn có thể làm theo cách sau</p>
</blockquote>
<p>Nếu cách này không được, bạn hãy thử verify bằng email mà trường bạn cấp cho bạn. Đây là cách nhanh nhất, nhưng chỉ có một số trường xịn mới có thôi (ví dụ như FPT chả hạn)</p>
<p><img src="https://farm1.staticflickr.com/724/19914979453_e7298be50a_o.png"></p>
<blockquote>
<p>Ngoài ra, bạn còn có thể dùng thẻ sinh viên quốc tế, đăng ký tại đây: <a href="http://www.isic.com.vn/" title="http://www.isic.com.vn/">http://www.isic.com.vn/</a></p>
</blockquote>
<p>Sau khi hoàn tất kích hoạt trong thư, vào lại đường link này để đăng ký Azure: <a href="https://www.dreamspark.com/Product/Product.aspx?productid=99">https://www.dreamspark.com/Product/Product.aspx?productid=99</a></p>
<p><img src="https://farm1.staticflickr.com/657/20349335989_873eb352a3_o.png"></p>
<p>Khi đăng ký bằng DreamSpark, bạn sẽ không bị đòi thẻ tín dụng.</p>
<p>Sau khi điền đầy đủ các thông tin, nhấn Sign up, thế là xong :3</p>
<h2 id="Dang-ky-tu-do-khong-thong-qua-chuong-trinh-DreamSpark-hoac-MSDN-Subscription"><a href="#Dang-ky-tu-do-khong-thong-qua-chuong-trinh-DreamSpark-hoac-MSDN-Subscription" class="headerlink" title="Đăng ký tự do (không thông qua chương trình DreamSpark hoặc MSDN Subscription)"></a>Đăng ký tự do (không thông qua chương trình DreamSpark hoặc MSDN Subscription)</h2><p>Truy cập vào trang <a href="http://www.microsoft.com/vietnam/azure/pricing/free-trial.aspx">http://www.microsoft.com/vietnam/azure/pricing/free-trial.aspx</a> &gt; Thử ngay</p>
<p><img src="https://farm1.staticflickr.com/755/20532339295_51aa69a4b8_o.png"></p>
<p>Bạn sẽ được yêu cầu đăng nhập tài khoản Microsoft của mình. Hãy đăng nhập nhé. Trường hợp bạn chưa có tài khoản Microsoft (email có đuôi là @hotmail, @outlook, @live) thì nên đăng ký một cái để tận hưởng các dịch vụ của Microsoft nhé</p>
<ol>
<li> Kiểm tra tài khoản bạn đã đăng nhập</li>
<li> Chọn Country là Vietnam (RẤT QUAN TRỌNG)</li>
<li> Nhập số điện thoại ở nhà</li>
<li> Nhập số di động của bạn</li>
<li> Nhấn nút Send text message</li>
</ol>
<p><img src="https://farm1.staticflickr.com/694/20532602045_76e593e6a3_o.png"></p>
<p>Việc tiếp theo là ngồi canh điện thoại bạn. Chờ một cái tin nhắn giống như vầy</p>
<p><img src="https://farm1.staticflickr.com/617/20344690778_aa89c3f7fe_o.png"></p>
<p>Nhập cái code này vào ô mới hiện ra trên web</p>
<p><img src="https://farm1.staticflickr.com/608/20539151461_562896ab29_o.png"></p>
<p>Mục thứ 3 xuất hiện, bạn điền thông tin thẻ tín dụng của mình vào rồi click Sign up</p>
<p>Tại sao lại cần thẻ tín dụng? Theo như thông tin mô tả thì thông tin thẻ tín dụng này chỉ thu thập để xác thực danh tính của bạn. Sẽ không có khoản tiền nào bị trừ. Bạn nên điền đầy đủ tất cả các thông tin có thể</p>
<p><img src="https://farm1.staticflickr.com/569/20506593586_4576c88bd0_o.png"></p>
<p>Sau khi đăng ký xong, bạn sẽ thấy một giao diện chào mừng như thế này là thành công nhé.</p>
<p>Con số này là số ngày bạn được dùng Azure miễn phí, được cấp hẳn 200 USD trong 29 ngày này để xài/test tất cả các dịch vụ của Azure :3</p>
<p><img src="https://farm1.staticflickr.com/722/20344909818_078a116683_o.png"></p>
<h2 id="Dang-ky-qua-chuong-trinh-MSDN-Subscription"><a href="#Dang-ky-qua-chuong-trinh-MSDN-Subscription" class="headerlink" title="Đăng ký qua chương trình MSDN Subscription"></a>Đăng ký qua chương trình MSDN Subscription</h2><p>Để đăng ký thông qua MSDN Subscription, tất nhiên bạn phải có tài khoản MSDN Subscription. MSP Việt Nam có gói tài khoản này, và tên nó là MSDN Subscription with Visual Studio Ultimate, trị giá có 13.600 USD cho một năm thôi (đúng rồi, mười ba nghìn sáu trăm obama)</p>
<p>Chẳng hiểu tại sao mà Microsoft lại để MSDN Subcription tại một chỗ rất khó kiếm, đó là <a href="https://msdn.microsoft.com/en-us/subscriptions/aa336858.aspx">https://msdn.microsoft.com/en-us/subscriptions/aa336858.aspx</a>. Truy cập vào link này và đăng nhập vài tài khoản của bạn.</p>
<p><img src="https://farm1.staticflickr.com/619/20965398854_9cf0abcdcd_o.png" alt="Đăng nhập vài tài khoản"></p>
<p>Chọn My Account &gt; Activate Microsoft Azure</p>
<p><img src="https://farm1.staticflickr.com/607/21576877922_a52bee0184_o.png" alt="Activate Microsoft Azure"></p>
<p>Ở ô số điện thoại, chọn Việt Nam, nhập số điện thoại của bạn, bỏ số 0 đầu tiên</p>
<p><img src="https://farm6.staticflickr.com/5690/21400170070_c5394fc2db_o.png" alt="nhập số điện thoại"></p>
<p>Sau đó, chờ tin nhắn :D</p>
<p>Sau khi verify xong, bạn sẽ thấy status completed. Chọt I agree … &gt; Purchase</p>
<p><img src="https://farm1.staticflickr.com/621/21576913432_d60813a283_o.png" alt="Purchase"></p>
<p>Thế là xong</p>
<p><img src="https://farm1.staticflickr.com/580/20967020313_4a5a785bfe_o.png" alt="Đăng ký thành công"></p>
]]></content>
      <categories>
        <category>Azure</category>
      </categories>
      <tags>
        <tag>azure</tag>
        <tag>tutorial</tag>
      </tags>
  </entry>
  <entry>
    <title>[Visual Studio] Visual Studio have Super Power with help of Extensions</title>
    <url>/2015/10/06/visual-studio-visual-studio-have-super-power-with-help-of-extensions/</url>
    <content><![CDATA[<p>Phải rồi, bạn đọc nó đúng rồi đó. Visual Studio có sức mạnh siu nhơn, và sau đây là lý do mà tôi nói nó có.</p>
<p>Bài viết này bao gồm các thủ thuật, tiện ích và hướng dẫn sử dụng những tính năng cực hay ho nhưng khá ít người biết tới của Visual Studio.</p>
<span id="more"></span>
<h1 id="Super-Power-1-JetBrains-ReSharper"><a href="#Super-Power-1-JetBrains-ReSharper" class="headerlink" title="Super Power 1: JetBrains ReSharper"></a>Super Power 1: JetBrains ReSharper</h1><p>ReSharper là một extension cực khủng của JetBrains. Nó sẽ đảm nhiệm vai trò dọn dẹp, trang điểm cho code của bạn đẹp như thơ, tăng hiệu suất làm việc, tăng khả năng maintenance, tăng tính tái sử dụng code vào nhiều project khác nhau. Bạn chưa tin ư, hãy xem phần <a href="#_C%C3%A1c_t%C3%ADnh_n%C4%83ng">1.4. Các tính năng</a></p>
<h2 id="Neu-ban-la-sinh-vien"><a href="#Neu-ban-la-sinh-vien" class="headerlink" title="Nếu bạn là sinh viên"></a>Nếu bạn là sinh viên</h2><p>JetBrains ReSharper miễn phí cho sinh viên (họ còn miễn phí toàn bộ các sản phẩm khác nữa). Tuy nhiên, chương trình miễn phí này được giấu khá kỹ trên trang chủ của nó.</p>
<ul>
<li>  Truy cập vào link sau: <a href="https://www.jetbrains.com/student/">https://www.jetbrains.com/student/</a></li>
<li>  Nhấn Apply Now ở khúc dưới</li>
<li>Bạn có nhiều tùy chọn chứng minh mình là sinh viên. Cách dễ nhất: dùng email đuôi .edu  <img src="https://farm6.staticflickr.com/5692/21937216876_1c6c37ee27_o.png">  Ngoài ra còn có thể dùng thẻ sinh viên quốc tế hoặc giấy tờ chứng minh (lâu hơn một chút)</li>
<li>  Một email gửi tới cho bạn, hướng dẫn cách thực hiện tiếp theo</li>
</ul>
<h2 id="Neu-ban-khong-con-la-sinh-vien"><a href="#Neu-ban-khong-con-la-sinh-vien" class="headerlink" title="Nếu bạn không còn là sinh viên"></a>Nếu bạn không còn là sinh viên</h2><p>Chia buồn với bạn, bạn sẽ phải mua bộ công cụ này nếu muốn sử dụng (có cờ rắc, nhưng ko khuyến khích)</p>
<h2 id="Cai-dat"><a href="#Cai-dat" class="headerlink" title="Cài đặt"></a>Cài đặt</h2><p>Sau khi đã có license, bạn tiến hành cài đặt nó. File cài đặt khoảng hơn 100 MB. Tắt Visual Studio trước khi cài.</p>
<p>Sau khi cài xong, mở Visual Studio lên, và bạn sẽ thấy có nhiều khác biệt</p>
<h2 id="Cac-tinh-nang-tuyet-zoi"><a href="#Cac-tinh-nang-tuyet-zoi" class="headerlink" title="Các tính năng tuyệt zời"></a>Các tính năng tuyệt zời</h2><h3 id="Phan-tich-code"><a href="#Phan-tich-code" class="headerlink" title="Phân tích code"></a>Phân tích code</h3><p>Khi mở một file .cs lên, ReSharper sẽ tự động phân tích code có trong file này và đưa ra các đề xuất hợp lý.</p>
<p>Nhìn bên phải, bạn sẽ thấy thanh cuộn mặc định được “tô điểm” bởi các vạch màu vàng đỏ xanh tùm lum. Đó là các điểm đánh dấu code “có vấn đề”.</p>
<p><img src="https://farm6.staticflickr.com/5822/21974855122_55a238a346_o.png"></p>
<p>Những vạch dọc:</p>
<ul>
<li>  Màu xanh lá cây: Những đoạn code đã được lưu</li>
<li>  Màu vàng: Những đoạn code vừa mới chỉnh sửa hoặc thêm mới, chưa lưu</li>
</ul>
<p>Những vạch ngang:</p>
<ul>
<li>  Màu cam: code bị thừa</li>
<li>  Màu đỏ: code lỗi</li>
<li>  Màu xanh lá cây: code có thể rút gọn</li>
</ul>
<h3 id="Xoa-code-thua"><a href="#Xoa-code-thua" class="headerlink" title="Xóa code thừa"></a>Xóa code thừa</h3><p>Click chuột vào một trong các vạch màu cam</p>
<p><img src="https://farm6.staticflickr.com/5625/21799037180_ed7ddb0910_o.png"></p>
<p>Con trỏ sẽ nhảy tới ngay vị trí code đang có vấn đề</p>
<p>Bấm vào hình cái bóng đèn &gt; Chọn dòng đầu tiên để sửa lỗi (đối với đa số trường hợp, dòng gợi ý đầu tiên là dòng gợi ý hợp lý nhất)</p>
<p><img src="https://farm1.staticflickr.com/756/21975015462_1b21541615_o.png"></p>
<p>Như hình trên, khai báo “this.” bị thừa. ReSharper sẽ giúp bạn loại bỏ chữ “this” bị thừa này.</p>
<blockquote>
<p>Bạn cũng có thể thực hiện việc xóa bỏ này hàng loạt. Nhấn dấu mũi tên nhỏ bên cạnh dòng đầu tiên để thấy nhiều tùy chọn hơn.</p>
</blockquote>
<p><img src="https://farm1.staticflickr.com/568/21799451878_dcd4f58000_o.png"></p>
<blockquote>
<p>Bạn cũng có thể thử dòng gợi ý thứ 2: Xóa bỏ toàn bộ code thừa trong file này. Bạn có thể bấm dấu mũi tên bên cạnh để thấy nhiều tùy chọn hơn</p>
<p>Visual Studio từ phiên bản 2015 cũng có một vài gợi ý tương tự.</p>
</blockquote>
<p>Trỏ chuột vào hình bóng đèn sát bên dưới code &gt; Show potential fixes</p>
<p><img src="https://farm6.staticflickr.com/5759/21987321125_8800ff4578_o.png"></p>
<p>Cá nhân mình thấy cách làm của ReSharper hiện đại hơn, dễ nhìn hơn.</p>
<h3 id="Code-dung-chuan"><a href="#Code-dung-chuan" class="headerlink" title="Code đúng chuẩn"></a>Code đúng chuẩn</h3><p>ReSharper giúp bạn code theo đúng chuẩn, thu gọn code, thay thế bằng các đoạn code dễ hiểu hơn, vân vân và vân</p>
<h3 id="Tu-hoan-thanh-code-khi-dang-go"><a href="#Tu-hoan-thanh-code-khi-dang-go" class="headerlink" title="Tự hoàn thành code khi đang gõ"></a>Tự hoàn thành code khi đang gõ</h3><p>Giả sử bạn muốn khai báo một biến string, kiểu private. Bạn chỉ cần gõ như hình dưới rồi nhấn “;”</p>
<p><img src="https://farm6.staticflickr.com/5835/21997218621_deb4160238_o.png"></p>
<p>Bạn muốn sử dụng một method nào đó mà chưa khai báo namespace. Đối với Visual Studio, bạn sẽ phải gõ đầy đủ tên method. Sau đó phải click chuột vài lần thì Visual mới tự thêm namespace cho bạn. Đối với ReSharper, bạn chỉ cần gõ một phần của tên method. Khi method đó đã được tô sáng lên trong danh sách gợi ý, bạn chỉ cần gõ một trong các ký tự đặc biệt như dấu chấm, khoảng trắng, enter là mọi việc còn lại sẽ được hoàn tất.</p>
<p><img src="https://farm6.staticflickr.com/5617/21961282096_1aeb6374f4_o.png"></p>
<h3 id="Thu-gon-code"><a href="#Thu-gon-code" class="headerlink" title="Thu gọn code"></a>Thu gọn code</h3><p>Nhấn vào một vạch ngang xanh lá cây bất kỳ trên thanh cuộn. Con trỏ sẽ nhảy tới dòng code có thể rút gọn.</p>
<p>Những đoạn code có thể rút gọn được gạch chân màu xanh lá cây. Click chuột vào đó &gt; Click cái bóng đèn &gt; Chọn dòng gợi ý đầu tiên</p>
<p><img src="https://farm1.staticflickr.com/757/21799838418_c2efe59d5b_o.png"></p>
<p><img src="https://farm6.staticflickr.com/5781/21800801089_3c639bb3b0_o.png"></p>
<p>Kết quả</p>
<p><img src="https://farm1.staticflickr.com/652/21975514002_75edfe0026_o.png"></p>
<h3 id="Tu-sinh-code"><a href="#Tu-sinh-code" class="headerlink" title="Tự sinh code"></a>Tự sinh code</h3><p>Tạo một model mới như hình sau</p>
<p><img src="https://farm1.staticflickr.com/677/21799893208_38cf1e1de1_o.png"></p>
<p>Khai báo Interface cho nó là “INotifyPropertyChanged” (chỉ cần gõ “INotiyPr” rồi enter là xong)</p>
<p><img src="https://farm6.staticflickr.com/5702/21364996524_5d4864b173_o.png"></p>
<p>Sau khi nhấn enter, rõ rang model đã bị thiếu nhìu thứ quan trọng của INotifyPropertyChanged.</p>
<p>Nhấn chuột vào cái bóng đèn màu đỏ &gt; Implement INotifyPropertyChanged</p>
<p><img src="https://farm6.staticflickr.com/5806/21365175364_bd9f5fd1ff_o.png"></p>
<p>Và kết quả (trong lần thực hiện đầu tiên, ReSharper sẽ hỏi bạn cho phép nó thêm một số file vào thư mục Properties. Cứ cho phép nó nhé)</p>
<p><img src="https://farm1.staticflickr.com/670/21975835712_8937950fbf_o.png"></p>
<h3 id="Code-Generation"><a href="#Code-Generation" class="headerlink" title="Code Generation"></a>Code Generation</h3><p>Sử dụng TestModel, bạn hãy thêm vào vài biến lấy lệ để test tính năng Code Generation</p>
<p><img src="https://farm1.staticflickr.com/608/21988308215_a65b97951d_o.png"></p>
<p>Bạn vào menu ReSharper &gt; Edit &gt; Generate Code… (Menu này nằm ngang hàng với File – Edit – View - …)</p>
<p>Một ô nhỏ hiện ra, bạn chọn Properties</p>
<p><img src="https://farm6.staticflickr.com/5747/21367253303_a2908587db_o.png"></p>
<p>Bạn chọn tất cả các trường muốn tạo Property &gt; Tick luôn khai báo Notify On Property Changed (để tiện cho mô hình MVVM) rồi nhấn Finish</p>
<p><img src="https://farm6.staticflickr.com/5673/21365647334_beb81dc63a_o.png"></p>
<p>Kết quả:</p>
<p><img src="https://farm1.staticflickr.com/592/21365674894_e92e09147e_o.png"></p>
<p>Thật tuyệt phải ko?</p>
<h3 id="Doi-ten-class-–-method-–-Ham-van-van-va-van-van"><a href="#Doi-ten-class-–-method-–-Ham-van-van-va-van-van" class="headerlink" title="Đổi tên class – method – Hàm, vân vân và vân vân"></a>Đổi tên class – method – Hàm, vân vân và vân vân</h3><p>ReSharper hỗ trợ bạn đổi tên bất kỳ thứ gì, và tên được đổi đó sẽ được thay đổi ở tất cả các file có sử dụng nó. Giả sử class TestModel này được sử dụng ở 3 file, và bạn muốn đổi tên nó thành NotTestModel, thì cả 3 file kia sẽ được cập nhật tên mới.</p>
<p>Đưa con trỏ chuột vào tên class TestModel</p>
<p>Chọn Menu ReSharper &gt; Refactor &gt; Rename…</p>
<p><img src="https://farm1.staticflickr.com/656/21800814760_9f5904c298_o.png"></p>
<p>Một hộp thoại nhỏ hiện ra</p>
<p><img src="https://farm6.staticflickr.com/5774/21367460363_e9ae701a09_o.png"></p>
<p>Sửa tên lại. Nếu bạn muốn có tính năng Undo, tick chọn bên dưới rồi Next</p>
<h3 id="Dua-string-vao-Resource"><a href="#Dua-string-vao-Resource" class="headerlink" title="Đưa string vào Resource"></a>Đưa string vào Resource</h3><p>Bạn này làm app có Localization (aka: dịch các string trong app ra các ngôn ngữ khác nhau cho các thị trường khác nhau), hẳn là sẽ rất khổ sở khi phải đưa từng string từng string một vào Resource để dịch. Có bạn áp dụng phương pháp cuốn chiếu, làm tới đâu thêm string vào Resource tới đó. File Resource lúc nào cũng mở sẵn. Có bạn chọn cách làm xong app rồi mới đưa từng string một vào Resource bằng cách Copy &gt; Paste rất thủ công</p>
<p>Và anh hùng ReSharper xuất hiện.</p>
<p>Để đưa một đoạn string vào Resource, bạn đưa con trỏ chuột vào string đó, chọn menu ReSharper &gt; Refactor &gt; Move…</p>
<p><img src="https://farm6.staticflickr.com/5683/21962745436_65d58e77a8_o.png"></p>
<p>Một hộp thoại nhỏ hiện ra. Tại đây bạn có thể lựa chọn, thay đổi các thông số</p>
<p><img src="https://farm1.staticflickr.com/708/21976791272_ee5c4dda71_o.png"></p>
<p>Nhấn Next và chiêm ngưỡng thành quả</p>
<p><img src="https://farm6.staticflickr.com/5683/21963312926_2d5fb88a26_o.png"></p>
<p>Tuy nhiên, Method GetValue này đã lỗi thời rồi, phải sửa nó một chút như hình sau</p>
<p><img src="https://farm6.staticflickr.com/5750/21801691668_e341198c6a_o.png"></p>
<blockquote>
<p>tính năng này cũng dùng được cho các đoạn string trong code XAML nhé</p>
</blockquote>
<p>ReSharper còn hàng hàng tính năng khác chờ bạn khám phá</p>
<h1 id="Super-Power-2-XAML-Styler"><a href="#Super-Power-2-XAML-Styler" class="headerlink" title="Super Power 2: XAML Styler"></a>Super Power 2: XAML Styler</h1><p>Có khi nào bạn cảm thấy khó chịu khi code giao diện bằng XAML, và các thuộc tính cứ nằm luôn tuồn trên một hàng, kéo wá kéo lại quá vất vả?</p>
<p>Có khi nào bạn nhìn đống code XAML, và chẳng biết phải tìm thuộc tính mình cần ở đâu?</p>
<p>XAML Styler đã đến. Và nó sẽ giúp bạn format code XAML tuyệt đẹp.</p>
<h2 id="Cai-dat-1"><a href="#Cai-dat-1" class="headerlink" title="Cài đặt"></a>Cài đặt</h2><p>Vào Menu Tools &gt; Extension and Updates…</p>
<p><img src="https://farm1.staticflickr.com/759/21801774968_c0b7347871_o.png"></p>
<p>Tiếp tục chọn mục Online &gt; Visual Studio Gallery &gt; Nhập “XAML Styler” vào ô tìm kiếm và cài đặt XAML Styler</p>
<p><img src="https://farm1.staticflickr.com/574/21989659205_849101bec2_o.png"></p>
<h2 id="Thiet-lap-thuoc-tinh"><a href="#Thiet-lap-thuoc-tinh" class="headerlink" title="Thiết lập thuộc tính"></a>Thiết lập thuộc tính</h2><p>Vào menu Tools &gt; Option &gt; kéo xuống dưới cùng chọn XAML Styler</p>
<p>Chỉnh các thuộc tính như hình</p>
<p><img src="https://farm1.staticflickr.com/685/21990196465_9187c0695b_o.png"></p>
<p>Chắc các bạn thắc mắc tại sao lại phải chỉnh như vậy :3. Đó là theo kinh nghiệm cá nhân của mình để tăng hiệu suất và giảm sai sót thôi.</p>
<h2 id="Su-dung"><a href="#Su-dung" class="headerlink" title="Sử dụng"></a>Sử dụng</h2><p>Sử dụng rất đơn giản: bạn mở code XAML lên &gt; click chuột phải &gt; Format XAML</p>
<p>Before</p>
<p><img src="https://farm6.staticflickr.com/5782/21367559744_f92258543e_o.png"></p>
<p>After</p>
<p><img src="https://farm1.staticflickr.com/754/21990346995_70aa6b546e_o.png"></p>
<h1 id="Super-Power-3-Indent-Guide-va-C-Outline"><a href="#Super-Power-3-Indent-Guide-va-C-Outline" class="headerlink" title="Super Power 3: Indent Guide và C# Outline"></a>Super Power 3: Indent Guide và C# Outline</h1><h2 id="Indent-Guide"><a href="#Indent-Guide" class="headerlink" title="Indent Guide"></a>Indent Guide</h2><p>Qua hình chụp screenshot nãy giờ, chắc các bạn cũng thắc mắc các đường kẻ dọc trong screenshot có mà Visual Studio của bạn không có? Đó chính là Indent Guide Extension. Chức năng của nó rất đơn giản, vẽ ra các đường kẻ dọc để code bạn dễ nhìn hơn, canh theo đúng hàng đúng lối.</p>
<p><img src="https://farm1.staticflickr.com/590/21369345023_260fea1079_o.png"></p>
<p>Ngay khi cài xong, khởi động lại Visual Studio, mở một Project bất kỳ và bạn sẽ thấy thành quả</p>
<p><img src="https://farm6.staticflickr.com/5799/21803058558_994e9e1edc_o.png"></p>
<h2 id="C-Outline"><a href="#C-Outline" class="headerlink" title="C# Outline"></a>C# Outline</h2><p>Nhìn hình trên, chắc bạn cũng thấy lạ là tại sao cấu trúc if cũng có một dấu “-“ nho nhỏ để đóng ra mở vô. Đó chính là khả năng của Extension C# Outline.</p>
<p>C# Outline giúp bạn tạo một code block ở mọi dấu ngoặc nhọn. Như vậy bạn có thể đóng mở tất cả các cấu trúc khác nhau như If then else, while do, switch case, vân vân và vân vân</p>
<blockquote>
<p>tên chính thức của nó là C# outline 2015, dành cho Visual Studio 2015 nhé bạn</p>
</blockquote>
<p><img src="https://farm6.staticflickr.com/5724/21804181309_0c316434c3_o.png"></p>
<p>Hết gòi, hẹn gặp lại bạn ở bài sau</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>Visual Studio</tag>
        <tag>app</tag>
        <tag>CSharp</tag>
        <tag>hero</tag>
        <tag>indent</tag>
        <tag>resharper</tag>
      </tags>
  </entry>
  <entry>
    <title>[Visual Studio] XAML Element Inspector with Visual Studio 2015 [vi-vn]</title>
    <url>/2015/10/07/visual-studio-xaml-element-inspector-with-visual-studio-2015-vi-vn/</url>
    <content><![CDATA[<p>Trong phiên bản mới nhất của Visual Studio (aka Visual Studio 2015), Microsoft đã giới thiệu 2 tính năng cực khủng gọi là “Live Visual Tree” và “Live Property Explorer”. Sử dụng 2 tính năng này, bạn có thể dễ dàng xem và sửa code XAML khi app đang chạy [insert hình há mỏ kinh ngạc]</p>
<span id="more"></span>
<h1 id="Live-Visual-Tree"><a href="#Live-Visual-Tree" class="headerlink" title="Live Visual Tree"></a>Live Visual Tree</h1><p>Để sử dụng Live Visual Tree, mở bất kỳ project nào có code XAML. Nó có thể là App Windows 8, 8.1, Windows Universal App, hoặc Universal Windows Platform (UWP, aka App phát triển cho Windows 10)</p>
<p>Build và chạy thử app, sau đó quay lại Visual Studio, bạn sẽ thấy một cục toolbar nhỏ gọi là “Live Visual Tree”. Nhấn zô nó để mở ra</p>
<p><img src="https://farm1.staticflickr.com/543/20216853242_f1655e2c2e_o.png"></p>
<p>Nhấn vô nút hình cái ghim nhỏ nhỏ để dính nó zô đó, dễ xài hơn</p>
<p><img src="http://cuoilennaocacban2.files.wordpress.com/2015/08/080215_1141_windowsxaml1.png"> Trong cửa sổ này, click vào biểu tượng hình tam giác trỏ trỏ vô cái hình chữ nhật nho nhỏ. Đó chính là Inspector, rất giống với Element Inspector của Google Chrome. Quay lại app đang chạy, bạn sẽ thấy con trỏ đi tới đâu, một cái khối hộp chữ nhật viền chấm đỏ bao xung quanh element bên dưới con trỏ.</p>
<p><img src="http://cuoilennaocacban2.files.wordpress.com/2015/08/080215_1141_windowsxaml2.png"></p>
<p>Click một phát, và Live Visual Tree sẽ nhảy tới vị trí chính xác của element đó</p>
<p><img src="https://farm1.staticflickr.com/528/19602618384_1423c50319_o.png"></p>
<p>Bạn cũng có thể click vào các elements khác trong Live Visual Tree, và cái khung chấm đỏ sẽ nhảy tới element trên app đang chạy của bạn. Bằng cách này, bạn có thể hiểu chính xác những element nào được vẽ trên app của bạn.</p>
<p>Bạn cũng có thể search một element bằng tên hoặc loại của nó</p>
<p><img src="https://farm1.staticflickr.com/438/20038725589_1b8097c624_o.png"></p>
<h1 id="Live-Property-Explorer"><a href="#Live-Property-Explorer" class="headerlink" title="Live Property Explorer"></a>Live Property Explorer</h1><p>Với một element bất kỳ được chọn trong Live Visual Tree, nhìn wa bên phải của Visual Studio, bạn sẽ thấy “Live Property Explorer”, click vô nó để mở ra, rùi click cái ghim để đó dính zô đó</p>
<p><img src="https://farm1.staticflickr.com/425/20037363128_c89bbbe6d5_o.png"></p>
<p>Ủa mà sao có ít propery hơn bình thường nhỉ. Đừng lo, mở rộng cái group “Default” ra và bạn sẽ thấy mấy property còn lại”</p>
<p>Một điều hay của Live Property Explorer là bạn có thể thay đổi các giá trị trong các property, và xem sự thay đổi đó ngay lập tức trên app đang chạy của bạn.</p>
<p>Mình sẽ thử đổi Height thành 100, và xem chuyện gì sẽ xảy ra trong app</p>
<p><img src="https://farm1.staticflickr.com/504/20199163156_3fc683e0c9_o.png"></p>
<p>Giờ tới cái app</p>
<p><img src="https://farm1.staticflickr.com/555/20231217491_5d41f98c4f_o.png"></p>
<p>Quá kinh khủng phải ko? Bạn có thể thay đổi hầu như mọi thứ, ngoại trừ một số property bị khóa (màu xám xịt) trong Live Property Explorer</p>
<p>Quá đã. Thế là bây giờ bạn đã biết sử dụng Live Visual Tree để dò code XAML của bạn được render như thế nào trên app, và dùng Live Property Explorer để thay đổi giá trị của các Property, và xem sự thay đổi đó ngay lập tức, ngay trên app đang chạy mà không cần phải build lại.</p>
<p>Hẹn gặp lại bạn trong những bài post tiếp theo về những tính năng cực khủng của Visual Studio 2015 nhé</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>Visual Studio</tag>
        <tag>live visual tree</tag>
        <tag>on the fly</tag>
        <tag>property</tag>
      </tags>
  </entry>
  <entry>
    <title>[Visual Studio] Performance, performance, performance (with the help of Visual Studio “PerfTips”)</title>
    <url>/2015/10/22/visual-studio-performance-performance-performance-with-the-help-of-visual-studio-perftips/</url>
    <content><![CDATA[<p>For Visual Studio 2015</p>
<p>Từ xưa tới nay, khi debug bằng Visual Studio, hầu như ai cũng biết chọt con chuột lên trên một biến nào đó và một cái bảng nho nhỏ hiện ra hiển thị toàn bộ dữ liệu của biến đó. Bài post này sẽ hướng dẫn bạn cách sử dụng những công cụ mới của Visual Studio 2015 để cải thiện hiệu suất cho ứng dụng của bạn.</p>
<span id="more"></span>
<h1 id="Tai-sao-lai-la-hieu-suat"><a href="#Tai-sao-lai-la-hieu-suat" class="headerlink" title="Tại sao lại là hiệu suất?"></a>Tại sao lại là hiệu suất?</h1><p>Trong Visual Studio 2015 có khá nhiều công cụ giúp bạn cải thiện hiệu suất ứng dụng của mình, làm nó chạy nhanh hơn, chiếm ít bộ nhớ hơn, giao diện đẹp hơn, blah blah blah. Tuy nhiên, rất nhìu bạn trẻ dùng phần lớn thời gian để làm cho các tính năng của ứng dụng chạy đúng như bạn mong muốn. Bạn hiểu rằng đoạn code bạn viết có performance không cao, nhưng bạn không có thời gian để nghiên cứu, nghiền ngẫm nó hoặc chạy các công cụ hỗ trợ phân tích hiệu suất cho tới khi hiệu suất là một vấn đề lớn của bạn.</p>
<p>Ngoài ra, khi bạn cần nghiên cứu hiệu suất của một đoạn code nào đó, vì sức mạnh kinh khủng của Visual Studio, bạn lại nhét vào code của mình một cái Stopwatch để đo xem đoạn code đó chạy mất bao lâu. Nói tóm lại, developer thường làm những chuyện sau:</p>
<ul>
<li>  Chèn code vào trong ứng dụng (kiểu như System.Diagnostics.Stopwatch) để đo thời gian chạy. Càng lúc càng nhiều Stopwatch được chèn đi chèn lại trong nhiều khúc của code.</li>
<li>  Debug từng dòng code một để xem thử có dòng nào “chạy lâu” wá không</li>
<li>  Nhấn “Break All” (“Pause”) để coi thử code chạy tới đâu gòi (đặc biệt là trong mấy vòng lặp)</li>
<li>  Rút gọn code quá đà mà không để ý tới performance (giống như không xài Linq cho tất cả mọi thứ)</li>
</ul>
<h1 id="PerfTips-la-gi"><a href="#PerfTips-la-gi" class="headerlink" title="PerfTips là gì?"></a>PerfTips là gì?</h1><p>Khi bạn đặt breakpoint cho một dòng code nào đó, và app chạy tới breakpoint này, Visual Studio sẽ hiện một đoạn chữ nhỏ nhỏ, mờ mờ ngay cuối dòng, và nó chính là PerfTips</p>
<p><img src="https://farm6.staticflickr.com/5643/22190175850_d39fa83775_o.png"></p>
<p>Bấm vào nó (chỗ &lt;= 1ms elapsed), sẽ hiện ra công cụ phân tích</p>
<p><img src="https://farm6.staticflickr.com/5816/22190283100_3900ce5068_o.png"></p>
<h1 id="Dung-PerfTips"><a href="#Dung-PerfTips" class="headerlink" title="Dùng PerfTips"></a>Dùng PerfTips</h1><p>Chúng ta sẽ sử dụng một sample đơn giản, một đoạn code dùng để load hình</p>
<p>Thay vì chèn 2 đoạn code Stopwatch vào đầu và cuối của phương thức này, bạn chỉ cần đặt 2 breakpoint vào chỗ đó</p>
<p><img src="https://farm6.staticflickr.com/5713/22378430175_006386fcd1_o.png"></p>
<p>Nhấn F5 để chạy, và Visual Studio dừng lại ngay chỗ Breakpoint đầu tiên</p>
<p><img src="https://farm1.staticflickr.com/570/22190464430_6f893119e5_o.png"></p>
<p>Nhấn F5 (hoặc continue) để Visual Studio chạy tiếp tới breakpoint thứ 2, và bạn sẽ thấy PerfTips hiện ra</p>
<p><img src="https://farm1.staticflickr.com/683/22190602900_3927a739c8_o.png"></p>
<p>Như vậy ta có thể thấy, method LoadImages chạy mất 2780 milisecond. Bây giờ chạy lại toàn bộ một lần nữa, nhưng dừng lại ở từng dòng code một để xem dòng nào tốn nhiều thời gian nhất.</p>
<p>Nhấn F10 để chạy từng dòng code một. Vài dòng đầu tiên, mỗi dòng không quá 20 ms, quá tốt.</p>
<p><img src="https://farm1.staticflickr.com/688/22352672686_50a793488b_o.png"></p>
<p>Thế như tới dòng GetImageFromCloud tốn tới 1391 ms</p>
<p><img src="https://farm6.staticflickr.com/5791/22352751386_5a52119746_o.png"></p>
<p>Và dòng LoadImagesFromDisk tốn tới 1361 ms</p>
<p><img src="https://farm6.staticflickr.com/5718/22190832080_f489be8d8a_o.png"></p>
<p>Vậy tại sao ta không cho 2 method này chạy song song với nhau nhỉ?</p>
<p>Đổi code thành như sau</p>
<p><img src="https://farm6.staticflickr.com/5624/22378857485_c2d338a7d3_o.png"></p>
<p>Trong hình trên, bạn có thể thấy cả method LoadImages chạy mất 2079 ms, giảm cỡ 700 ms, tương đương 25%. Quá tuyệt phải không?</p>
<p>Bây giờ, khi bạn đã biết cách xài PerfTips, chúng ta sẽ tiếp tục với một vài Best Practices khi dùng nó</p>
<h1 id="Best-Practices"><a href="#Best-Practices" class="headerlink" title="Best Practices"></a>Best Practices</h1><h2 id="Do-nhieu-lan"><a href="#Do-nhieu-lan" class="headerlink" title="Đo nhiều lần"></a>Đo nhiều lần</h2><p>Thời gian chạy, hiệu suất code có thể khác nhau cho mỗi lần chạy. Thông thường một đoạn code chạy lần đầu tiên lúc nào cũng chậm hơn khi chạy lần 2, 3, n. Lý do là ở lần đầu tiên, nó phải load các dll, khởi tạo bộ nhớ đệm. Đo nhiều lần sẽ cho bạn một khoảng thời gian chính xác hơn</p>
<h2 id="Xac-nhan-lai-luc-Release"><a href="#Xac-nhan-lai-luc-Release" class="headerlink" title="Xác nhận lại lúc Release"></a>Xác nhận lại lúc Release</h2><p>Code chạy lúc build ở chế độ Debug lúc nào cũng chậm hơn hẳn so với code build ở chế độ Release. Nếu bạn muốn tối ưu hóa các đoạn code chạy nhanh hơn 50 ms, thì nên chuyển sang chế độ release để tối ưu hóa nó. Lúc này, bạn mới thấy rõ sự khác biệt.</p>
<p>Thế là xong. Hẹn gặp lại ở các bài blog tiếp theo nhóe.</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>Visual Studio</tag>
        <tag>performance</tag>
        <tag>perftips</tag>
        <tag>stopwatch</tag>
      </tags>
  </entry>
  <entry>
    <title>[UWP] Get all the latest sample code at ease</title>
    <url>/2015/10/23/uwp-get-all-the-latest-sample-code-at-ease/</url>
    <content><![CDATA[<p>English version available at: <a href="https://tuanmsp.wordpress.com/2015/10/23/uwp-get-all-the-latest-sample-code-at-ease/">https://tuanmsp.wordpress.com/2015/10/23/uwp-get-all-the-latest-sample-code-at-ease/</a></p>
<p>Hồi xưa, nếu bạn muốn có sample code cho một tính năng nào đó, thì quy trình là Google Search &gt; MSDN Page &gt; Download cái sample code đó zìa &gt; giải nén &gt; mở file solution để xem.</p>
<p>Ngày hôm nay đã khác rồi, Microsoft đã toẹt zời trở lại. Tất cả Sample code bạn cần cho lập trình Windows 10 hiện đã có trên GitHub, và được UPDATE hàng ngày. Vì vậy, bạn sẽ luôn có những đoạn code mới nhất, do chính mấy ông kỹ sư viết ra tính năng đó viết.</p>
<p>Quá chuẩn? Sau đây là cách lấy code.</p>
<span id="more"></span>
<h1 id="A-really-good-Git-Source-Control-software"><a href="#A-really-good-Git-Source-Control-software" class="headerlink" title="A really good Git Source Control software"></a>A really good Git Source Control software</h1><p>Vì tất cả code đều nằm trên GitHub, nên bạn sễ cần một phần mềm Source Control tốt để:</p>
<ul>
<li>  Download tất cả code</li>
<li>  Update code với 1 click</li>
<li>  Xem phiên bản code và tên của từng phiên bản</li>
</ul>
<p>Nếu bạn quyết định ko xài phần mềm Source Control, bạn vẫn có thể download toàn bộ code dưới dạng file .zip, rồi extract nó ra và xài như hồi xưa.</p>
<p>Vậy cái nào tốt?</p>
<p>Of course it’s your choice. Use whatever you’re familiar with. Don’t let me tell you what to do. But if you insisted, here they are</p>
<p>Tất nhiên là lựa chọn của bạn. Xài cái nào thấy wen là được. Nhưng mà vẫn muốn biết một cái tốt (theo ý mình), thì đọc tiếp nhé.</p>
<h2 id="GitHub-Desktop-–-Not-that-good"><a href="#GitHub-Desktop-–-Not-that-good" class="headerlink" title="GitHub Desktop – Not that good"></a>GitHub Desktop – Not that good</h2><p>Link: <a href="https://desktop.github.com/">https://desktop.github.com/</a></p>
<p><img src="https://farm6.staticflickr.com/5663/21778229224_3e5b23876f_o.png"></p>
<p>GitHub Desktop, phát triển bới chính dòng họ nhà mều bạch tuộc GitHub, chả tốt tẹo nào. Vì sao áh? Vì nó quá đơn giản, và thiếu nhiều nút cơ bản như Pull, Push, Fetch, Sync, blah blah blah.</p>
<p>GitHub Desktop mong muốn mọi thứ đơn giản nhất có thể. Nhưng họ lại bỏ hết mấy từ quen thuộc trong Git rồi.</p>
<h2 id="SourceTree-–-More-complex-have-all-the-functions"><a href="#SourceTree-–-More-complex-have-all-the-functions" class="headerlink" title="SourceTree – More complex, have all the functions"></a>SourceTree – More complex, have all the functions</h2><p>My favorite: <a href="https://www.sourcetreeapp.com/">https://www.sourcetreeapp.com/</a></p>
<p><img src="https://farm1.staticflickr.com/685/22214151369_9ae2265273_o.png"></p>
<p>SourceTree, phát triển bởi Atlassian, là một phần mềm git source control khá tốt (theo ý cá nhân). Bạn có thể làm mọi thứ bạn muốn với nó. Thậm chí nó còn có cả Command Lind cho ai thích gõ lệnh như hacker nhé.</p>
<h1 id="Setting-up"><a href="#Setting-up" class="headerlink" title="Setting up"></a>Setting up</h1><blockquote>
<p>Giờ, có thể bạn đã nghe thiên hạ đồn là Microsoft mở mã nguồn bộ .NET. Thực ra thì thiên hạ đồn quả nhiên ko sai, mà còn thiếu. Không chỉ .NET không, mà còn khá nhiều thứ khác cũng được “mở”. Nói bạn rồi, Microsoft đã chịu chơi trở lại.</p>
<p>Bạn có thể tìm thấy kha khá thứ hay ho ở link sau: <a href="https://github.com/Microsoft">https://github.com/Microsoft</a></p>
</blockquote>
<p>Để thiếp lập, bạn sẽ cần tới “clone link”, là 1 trong 3 cái bên dưới. Chọn HTTPS cho nó đơn giản</p>
<p>HTTPS: <a href="https://github.com/Microsoft/Windows-universal-samples.git">https://github.com/Microsoft/Windows-universal-samples.git</a></p>
<p>SSH: <a href="mailto:git@github.com:Microsoft/Windows-universal-samples.git">git@github.com:Microsoft/Windows-universal-samples.git</a></p>
<p>Subversion: <a href="https://github.com/Microsoft/Windows-universal-samples">https://github.com/Microsoft/Windows-universal-samples</a></p>
<p>Mở SourceTree (hoặc phần mềm mà bạn thích) &gt; Clone/New</p>
<p><img src="https://farm1.staticflickr.com/747/22214019219_1e3d2d0867_o.png"></p>
<p>Copy / Paste cái link HTTPS vô “Source Path / URL”, và SourceTree sẽ tự động điền mấy chỗ khác. Nếu bạn muốn customize cái gì thì cứ thoải mái chọt zô mà sửa đổi.</p>
<p><img src="https://farm1.staticflickr.com/761/22374909436_1a8188ffc0_o.png"></p>
<p>Cuối cùng, click Clone. Thế là xong, tất cả code Sample đã nằm trên máy tính.</p>
<h1 id="Keep-the-code-up-to-date"><a href="#Keep-the-code-up-to-date" class="headerlink" title="Keep the code up-to-date"></a>Keep the code up-to-date</h1><p>Giờ bạn đã có code rồi, làm gì nữa?</p>
<p>Để update code, đơn giản là mở SourceTree lên, rồi nhấn Fetch &gt; Pull hoặc nhấn Sync luôn từ đầu.</p>
<p>Trong SourceTree, click Fetch</p>
<p><img src="https://farm1.staticflickr.com/604/21779962253_cb809d0635_o.png"></p>
<p>Bạn có thấy con số đỏ lấp ló trên đầu nút Pull không? Đó chính là số lượng phiên bản mới (commit) đã có trên server của GitHub, nhưng chưa có trên máy của bạn. Nhấn Pull để lôi cổ tụi nó về máy.</p>
<p>và bạn lại tiếp tục có code mới</p>
<blockquote>
<p>Tips: Bạn có thể nhấn Pull để Fetch và Pull luôn.</p>
</blockquote>
<p>Chúc đọc code vui vẻ :3</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows 10</category>
      </categories>
      <tags>
        <tag>code</tag>
        <tag>git</tag>
        <tag>github</tag>
        <tag>sample</tag>
        <tag>sourcetree</tag>
        <tag>uwa</tag>
        <tag>uwp</tag>
        <tag>windows 10</tag>
      </tags>
  </entry>
  <entry>
    <title>[UWP] Create image assets for your apps</title>
    <url>/2015/10/26/uwp-create-image-assets-for-your-apps/</url>
    <content><![CDATA[<p>Windows 10 apps (aka Universal Windows App) yêu cầu rất nhiều kích thước hình ảnh khác nhau trong project của nó (hiện tại là 39 kích thước khác nhau). Làm thế nào để tạo ra các hình ảnh này? Mở Photoshop hay GIMP lên để crop, resize, save, rồi lập lại 39 lần hẻ? Hôm nay, bạn đã có thể làm nó dễ dàng chỉ với 1 (vài) click. Thậm chí tạo ra kích thước custom được luôn.</p>
<span id="more"></span>
<h1 id="The-App"><a href="#The-App" class="headerlink" title="The App"></a>The App</h1><p>Có một ứng dụng mang tên “Universal Logo Maker for Windows” trên Windows Store. Nó có thể tạo ra tất cả hình ảnh bạn cần, đặc biệt là cho Windows 10 package.</p>
<p>Link: <a href="https://www.microsoft.com/store/apps/9nblggh5zchk">https://www.microsoft.com/store/apps/9nblggh5zchk</a></p>
<p>Nhìn vô biết xài liền, nhưng mà dù sao cũng hướng dẫn bạn một tí nhóe.</p>
<h1 id="Using-it"><a href="#Using-it" class="headerlink" title="Using it"></a>Using it</h1><p><img src="https://farm2.staticflickr.com/1528/25014426576_2bb0afed82_o.png"></p>
<p>Nhìn hình trên là biết xài ngay phải hem. Bạn cũng có thể nghịch với các slider, nút này nọ để hiểu rõ hơn về app nhóe</p>
<h1 id="Add-custom-size-and-scale"><a href="#Add-custom-size-and-scale" class="headerlink" title="Add custom size and scale"></a>Add custom size and scale</h1><p>Nhấn cái nút dấu + nhỏ nhỏ</p>
<p><img src="https://farm6.staticflickr.com/5627/22493108391_1a6c030571_o.png"></p>
<p>Trong trang này, bạn có thể thêm các size mới của riêng mình</p>
<p><img src="https://farm2.staticflickr.com/1536/25014463126_d77238d3c3_o.png"></p>
<p>Platform name is the name of your custom collection. By this way, you can create many platforms that match your need, and choose to generate images for these custom platform or not.</p>
<p>Platform name là tên của danh sách những cái kích thước khác nhau của bạn. Bằng cách này, bạn có thể tạo bao nhiêu platforms cũng được. Nên đặt tên khác nhau cho dễ nhớ.</p>
<p>Cái text box bự bự bên dưới là chỗ bạn nhập các thông số kích thước.</p>
<p>Giải thích cú pháp:</p>
<p>Mỗi thông số cách nhau bởi dấu “:”. Đầu tiên là tên, rồi rộng, rồi cao. Dễ ẹt mà.</p>
<p>Khi bạn đang gõ, nếu đúng, nó sẽ preview trước cho bạn xem cái kích thước sẽ được add vào platform đó</p>
<p>Làm xong rồi thì nhấn Add, cái kích thước đó sẽ nằm trong platform, và platform mới sẽ được thêm vào danh sách các platform.</p>
<p>Cái hay ho nhứt là, dần dần, danh sách các platform do bạn tạo ra sẽ được đồng bộ hóa giữa tất cả thiết bị mà bạn login bằng cùng tài khoản Microsoft Account. Kiểu như trên công ty tạo ra xài xong, về nhà mở máy lên là đã có sẵn để xài tiếp.</p>
<h1 id="Settings"><a href="#Settings" class="headerlink" title="Settings"></a>Settings</h1><p>Trong setting, có cũng nhìu tùy chọn. Chọn chỗ lưu, về app này, feedback, blah blah blah. Cái hay nhất là “Update Database”</p>
<p><img src="https://farm2.staticflickr.com/1590/24922870222_cf003efd5f_o.png"></p>
<p>Bình thường, app sẽ update database tự động. Nhưng vì lý do nào đó (kiểu như bạn đang xài dữ liệu 3g, hay PC đang connect tới mạng chập chờn chả hạn), bạn có thể check update bằng tay. Cái này chỉ update cái danh sách platform default, không phải cái custom do bạn tự tạo, nên hok sao âu.</p>
<h1 id="Rate-for-me-please-and-feedback"><a href="#Rate-for-me-please-and-feedback" class="headerlink" title="Rate for me, please, and feedback"></a>Rate for me, please, and feedback</h1><p>Cuối cùng, nếu bạn thấy app này hữu ích, rate cho nó nhá. Nếu bạn gặp lỗi hay vấn đề gì, có thể gửi email cho mềnh tại <a href="mailto:cuoilennaocacban@hotmail.com">cuoilennaocacban@hotmail.com</a></p>
<p>Hẹn gặp lại các bạn ở những bài blog khác.</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows 10</category>
      </categories>
      <tags>
        <tag>store</tag>
        <tag>app</tag>
        <tag>uwp</tag>
        <tag>windows 10</tag>
        <tag>assets</tag>
        <tag>automatically</tag>
        <tag>generate</tag>
        <tag>images</tag>
        <tag>logo</tag>
        <tag>maker</tag>
      </tags>
  </entry>
  <entry>
    <title>[Visual Studio] Fighting with Bugs and Exceptions</title>
    <url>/2015/11/05/visual-studio-fighting-with-bugs-and-exception/</url>
    <content><![CDATA[<p>Lập trình bằng Visual Studio, tới một thời điểm nào đó ai cũng sẽ gặp bug và Exception. Đối với một số exception, Visual Studio sẽ bôi vàng đoạn code gây ra exception, nhưng đối với một số exception khác, Visual Studio lại nhảy hẳn ra ngoài. Vì sao vậy? Tại sao không cho tôi biết code chỗ nào bị lỗi.</p>
<p>Visual Studio 2015 có một cải tiến đáng giá giúp lập trình viên biết chính xác chỗ code nào bị exception, và một số cải tiến vô cùng đáng giá khác khi debug một đoạn code</p>
<span id="more"></span>
<h1 id="Advanced-Debugging"><a href="#Advanced-Debugging" class="headerlink" title="Advanced Debugging"></a>Advanced Debugging</h1><p>Tất cả mọi người đều biết, để debug một đoạn code, bạn thường đặt một break point. Khi code chạy tới đó, nó sẽ dừng ngay tại Breakpoint đó. The end. Hết phim. Tuy nhiên, nếu bạn đọc bài blog này: <a href="https://cuoilennaocacban2.wordpress.com/2015/10/22/visual-studio-performance-performance-performance-with-the-help-of-visual-studio-perftips/">[Visual Studio] Performance, performance, performance (with the help of Visual Studio “PerfTips”)</a>, bạn sẽ thấy một công dụng nữa của Breakpoint dành cho việc đo đạc thời gian chạy một đoạn code. Ngoài ra, Breakpoint còn có một số công dụng khác nữa</p>
<h2 id="Output-Log-with-Breakpoint"><a href="#Output-Log-with-Breakpoint" class="headerlink" title="Output Log with Breakpoint"></a>Output Log with Breakpoint</h2><p><img src="https://farm6.staticflickr.com/5628/22152610574_b5e8c867c4_o.png"></p>
<p>Trong vòng lặp trên, bạn sẽ thấy có dòng “Debug.WriteLine” dùng để xuất một thông tin gì đó ra màn hình Output. Thông tin này sẽ giúp bạn biết code đã chạy tới dòng này, và xuất ra các giá trị mà bạn mong muốn.</p>
<p><img src="https://farm1.staticflickr.com/618/22152668514_87a33835e7_o.png"></p>
<p>Từ giờ, bạn không cần phải làm thủ công như vậy nữa.</p>
<p>Đưa chuột lại gần Breakpoint, một menu nhỏ xíu hiện ra, nhấn vào dấu răng cưa</p>
<p><img src="https://farm1.staticflickr.com/706/22775443405_64dfbcf543_o.png"></p>
<p>Một cái cửa sổ hiện ra, chèn vào giữa đoạn code đặt breakpoint của bạn. Tick chọn ô Action. Bạn sẽ thấy tính năng “Log a message to output Windows”</p>
<p><img src="https://farm6.staticflickr.com/5649/22761956172_d042077119_o.png"></p>
<p>Gõ vào trong ô đó những thứ bạn muốn xuất ra cửa sổ output. Biến thì để trong dấu ngoặc nhọn. Thế là xong</p>
<p><img src="https://farm6.staticflickr.com/5813/22154779113_ab9acf18e1_o.png"></p>
<p>Khi chạy lại app, cửa sổ output sẽ là</p>
<p><img src="https://farm6.staticflickr.com/5803/22762522502_765d5041fe_o.png"></p>
<p>Bạn thấy con số nằm trong ngoặc kép là vì nó là kiểu string, không phải int. Nên khi hiển thị, Visual Studio sẽ đưa nó vào trong ngoặc kép</p>
<p>Bây giờ, hãy so sánh một chút</p>
<p><strong>Breakpoint “Action”</strong></p>
<p><strong>Debug.WriteLine()</strong></p>
<p><strong>Lợi</strong></p>
<p>Nhanh chóng, đơn giản</p>
<p>Không thay đổi code</p>
<p>Có thể chỉnh sửa khi ứng dụng đang chạy</p>
<p>Có thể kết hợp với Condition của Breakpoint</p>
<p>Có thể quản lý tập trung trong cửa sổ Debug</p>
<p>Sử dụng linh hoạt</p>
<p>Trực quan, dễ hiểu</p>
<p>Có thể chèn nhiều dòng</p>
<p><strong>Bất lợi</strong></p>
<p>Chỉ xuất ra được 1 dòng (mình chưa tìm được cách xuống dòng)</p>
<p>Phải thay đổi code</p>
<p>Không thể chỉnh sửa khi app đang chạy</p>
<p>Dùng Debug.WriteLineIf() để thêm điều kiện</p>
<p>Muốn tìm phải dùng Ctrl + F để tìm kiếm phrase như thông thường</p>
<p>Giảm hiệu suất (không đáng kể, và không ảnh hưởng khi Release)</p>
<p>Như vậy sử dụng cái nào hoàn toàn là quyền của bạn</p>
<h2 id="Condition-Breakpoint"><a href="#Condition-Breakpoint" class="headerlink" title="Condition Breakpoint"></a>Condition Breakpoint</h2><p>Tiếp tục tick chọn ô Condition, cửa sổ được mở rộng ra để lộ nhiều tùy chọn hơn cho bạn</p>
<p><img src="https://farm1.staticflickr.com/757/22588283440_b481c716fc_o.png"></p>
<p>Bạn có nhiều tùy chọn để quyết định xem là Visual Studio có dừng lại ở Breakpoint này hay không. Trong số đó có</p>
<ul>
<li><p>  Conditional Expression: Biểu thức điều kiện: Sẽ dừng ở breakpoint khi điều kiện đúng</p>
</li>
<li><p>  Hit Count: Số lần chạy qua: Cứ mỗi lần chạy qua breakpint này, Visual Studio sẽ tính là một hit. Khi đạt tới số lượng hit nhất định do bạn đặt thì sẽ dừng.</p>
</li>
<li><p>  Filter: Sẽ dừng ở Breakpoint khi một số điều kiện đặc biệt được thỏa mãn (ví dụ như MachineName, ProcessId, vân vân)</p>
</li>
</ul>
<p>Đối với App Windows, bạn sẽ cần dùng 2 cái đầu tiên nhiều nhất</p>
<p>Giả sử mình muốn dừng lại ở lần chạy thứ 9, và xuất ra màn hình biến ở lần chạy này, thì thiết lập như sau:</p>
<p><img src="https://farm6.staticflickr.com/5675/22787742791_38aeba8663_o.png"></p>
<h1 id="The-new-Exception-Settings"><a href="#The-new-Exception-Settings" class="headerlink" title="The new Exception Settings"></a>The new Exception Settings</h1><p>Đã bao giờ bạn gặp phải cái lỗi ở cái dòng lạ hoắc như vầy chưa?</p>
<p><img src="https://farm1.staticflickr.com/778/22155676943_b38eeef94c_o.png"></p>
<p>DISABLE_XAML_BREAK_ON_UNHANDLED_EXCEPTION</p>
<p>Global::System.Diagnostics.Debugger.Break();</p>
<p>Cái này là gì</p>
<p>Hoặc lỗi như vầy</p>
<p><img src="https://farm6.staticflickr.com/5810/22776832185_80b555ab2f_o.png"></p>
<p>“An exception of type “Blah blah blah” occurred in Yourappname.exe but was not handled in user code”, và kèm theo đó là Visual Studio dừng ở một dòng lạ hoắc, và bạn biết chắc chắn là lỗi xảy ra ở chỗ khác, không phải dòng này.</p>
<p>Đó là lý do ta sẽ dùng Exception Setting để nhảy tới đúng chỗ code sinh ra lỗi</p>
<p>Bạn vào Debug &gt; Windows &gt; Exception Settings…</p>
<p><img src="https://farm1.staticflickr.com/750/22788116721_a7e75bc800_o.png"></p>
<p>Copy tên của Exception, trong trường hợp trên là “System.Exception” và paste nó vào ô tìm kiếm. Tíck chọn kết quả hiện ra</p>
<p><img src="https://farm1.staticflickr.com/592/22588970370_394a956f21_o.png"></p>
<p>Chạy lại app. Và bây giờ, Visual Studio sẽ nhảy tới đúng dòng bị lỗi</p>
<p><img src="https://farm6.staticflickr.com/5829/22763429822_fe3f21d523_o.png"></p>
<p>Quá tuyệt, phải không</p>
<p>Đón xem các bài blog tiếp theo về các tính năng cực kute của Visual Studio nhé.</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>Visual Studio</tag>
        <tag>advanced</tag>
        <tag>bugs</tag>
        <tag>exception</tag>
      </tags>
  </entry>
  <entry>
    <title>Nguyễn Ngọc Tiến - 2015-11-13 15:03:02</title>
    <url>/2015/11/13/3b32afebb58ae7f1f05a25abbe5a3552/</url>
    <content><![CDATA[<p>Mình là sinh viên đã tốt nghiệp trường Hutech, hiện tại đang làm việc bên FIS-Erp oracle nhưng vẩn đam mê với ngôn ngữ .net, không muốn quên mất hoặc phung phí kiến thức .net, nếu bạn có project hay dự án nào cần cộng tác viên thì có thể liên hệ mình, mình ko phải master cũng ko thể gọi là rành rọt tất cả nhưng mình chắc chắn sẽ cố gắng hết mình vì đam mê. Mình đã làm việc với C#,PHP,ASP.net, Java có nhưng chưa sau…. Hi vọng nhận được reply từ bạn. Thân. AUTHOR: Nguyễn Ngọc Tiến AUTHOR EMAIL: <a href="mailto:&#115;&#116;&#117;&#100;&#121;&#x2e;&#110;&#103;&#111;&#x63;&#x74;&#x69;&#101;&#x6e;&#64;&#x67;&#109;&#x61;&#105;&#108;&#x2e;&#x63;&#111;&#x6d;">&#115;&#116;&#117;&#100;&#121;&#x2e;&#110;&#103;&#111;&#x63;&#x74;&#x69;&#101;&#x6e;&#64;&#x67;&#109;&#x61;&#105;&#108;&#x2e;&#x63;&#111;&#x6d;</a> SUBJECT: [Tuan Tran’s Blog] About me IP: 118.69.125.122 Array ( [1_Name] =&gt; Nguyễn Ngọc Tiến [2_Email] =&gt; <a href="mailto:&#x73;&#116;&#x75;&#x64;&#x79;&#46;&#x6e;&#x67;&#111;&#x63;&#x74;&#x69;&#101;&#x6e;&#x40;&#x67;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;">&#x73;&#116;&#x75;&#x64;&#x79;&#46;&#x6e;&#x67;&#111;&#x63;&#x74;&#x69;&#101;&#x6e;&#x40;&#x67;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a> [3_Website] =&gt; ko có [4_Comment] =&gt; Mình là sinh viên đã tốt nghiệp trường Hutech, hiện tại đang làm việc bên FIS-Erp oracle nhưng vẩn đam mê với ngôn ngữ .net, không muốn quên mất hoặc phung phí kiến thức .net, nếu bạn có project hay dự án nào cần cộng tác viên thì có thể liên hệ mình, mình ko phải master cũng ko thể gọi là rành rọt tất cả nhưng mình chắc chắn sẽ cố gắng hết mình vì đam mê. Mình đã làm việc với C#,PHP,ASP.net, Java có nhưng chưa sau…. Hi vọng nhận được reply từ bạn. Thân. )</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>Khoa - 2015-12-09 20:06:09</title>
    <url>/2015/12/09/3bb3067b6f31fc538f0af35214931b05/</url>
    <content><![CDATA[<p>Như mình tìm hiểu thi ứng dụng Windows 10/Windows 8.1 chạy trên PC sẽ nằm ở thư mục C:\Program Files\WindowsApps. Bất kì ai cũng có thể truy cập vào thư mục này để lấy các file assets của projects, thậm chi là Decompile code. Bạn có cách nào có thể ngăn chặn điều này không. Cảm ơn bạn rất nhiều AUTHOR: Khoa AUTHOR EMAIL: <a href="mailto:&#x6b;&#x68;&#111;&#x61;&#116;&#x72;&#x75;&#111;&#110;&#103;&#x62;&#x61;&#99;&#104;&#x40;&#x6c;&#105;&#x76;&#101;&#46;&#99;&#111;&#x6d;">&#x6b;&#x68;&#111;&#x61;&#116;&#x72;&#x75;&#111;&#110;&#103;&#x62;&#x61;&#99;&#104;&#x40;&#x6c;&#105;&#x76;&#101;&#46;&#99;&#111;&#x6d;</a> AUTHOR URL: SUBJECT: [Tuan Tran’s Blog] About me IP: 42.115.184.142 Array ( [1_Name] =&gt; Khoa [2_Email] =&gt; <a href="mailto:&#x6b;&#x68;&#x6f;&#97;&#116;&#114;&#x75;&#111;&#x6e;&#103;&#x62;&#97;&#99;&#x68;&#x40;&#x6c;&#x69;&#118;&#x65;&#x2e;&#x63;&#111;&#109;">&#x6b;&#x68;&#x6f;&#97;&#116;&#114;&#x75;&#111;&#x6e;&#103;&#x62;&#97;&#99;&#x68;&#x40;&#x6c;&#x69;&#118;&#x65;&#x2e;&#x63;&#111;&#109;</a> [3_Website] =&gt; [4_Comment] =&gt; Như mình tìm hiểu thi ứng dụng Windows 10/Windows 8.1 chạy trên PC sẽ nằm ở thư mục C:\Program Files\WindowsApps. Bất kì ai cũng có thể truy cập vào thư mục này để lấy các file assets của projects, thậm chi là Decompile code. Bạn có cách nào có thể ngăn chặn điều này không. Cảm ơn bạn rất nhiều )</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>[Notice] Tách blog</title>
    <url>/2015/12/19/notice-tach-blog/</url>
    <content><![CDATA[<p>Hồi trước mình có thông báo trong một bài blog là kể từ bài post đó, mình sẽ viết bằng tiếng anh.</p>
<p>Tuy nhiên, sau đó vẫn xuất hiện khá nhiều bài viết tiếng Việt là do có một cuộc thi viết blog, ngôn ngữ bắt buộc phải là tiếng Việt :P</p>
<p>Sau đó, có nhiều bạn feedback lại, và cuối cùng mình quyết định sẽ tách blog này ra làm 2 phần giống hệt nhau, chỉ khác nhau về mặt ngôn ngữ.</p>
<span id="more"></span>
<p>Blog này sẽ vẫn giữ nguyên tên miền free của Wordpress :3, bài viết sẽ là tiếng Việt hoàn toàn.</p>
<p>Blog mới sẽ viết hoàn toàn bằng tiếng anh, nội dung thì cũng y hệt blog này, địa chỉ ở: <a href="https://tuanmsp.wordpress.com/">https://tuanmsp.wordpress.com/</a></p>
<p>Nói túm lại, mình có nhiều blog tại các địa chỉ sau:</p>
<ul>
<li>Blog về Microsoft Office, từ 97-2016<ul>
<li>  <a href="https://cuoilennaocacban.wordpress.com/">https://cuoilennaocacban.wordpress.com/</a></li>
</ul>
</li>
<li>Blog về lập trình, đặc biệt là lập trình ứng dụng Windows<ul>
<li>  <a href="https://cuoilennaocacban2.wordpress.com/">https://cuoilennaocacban2.wordpress.com/</a></li>
</ul>
</li>
<li>Cũng là blog đó, nhưng tiếng anh<ul>
<li>  <a href="https://tuanmsp.wordpress.com/">https://tuanmsp.wordpress.com/</a></li>
</ul>
</li>
</ul>
<p>Đón đọc nhóe các bạn</p>
]]></content>
      <categories>
        <category>Others</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>tách</tag>
      </tags>
  </entry>
  <entry>
    <title>2015 in review</title>
    <url>/2015/12/30/2015-in-review/</url>
    <content><![CDATA[<p>The WordPress.com stats helper monkeys prepared a 2015 annual report for this blog.</p>
<p><a href="http://cuoilennaocacban2.wordpress.com/2015/annual-report/"><img src="//s0.wp.com/wp-content/mu-plugins/annual-reports/img/2014-emailteaser.png"></a></p>
<p>Here’s an excerpt:</p>
<blockquote>
<p>The concert hall at the Sydney Opera House holds 2,700 people. This blog was viewed about <strong>13,000</strong> times in 2015. If it were a concert at Sydney Opera House, it would take about 5 sold-out performances for that many people to see it.</p>
</blockquote>
<p><a href="http://cuoilennaocacban2.wordpress.com/2015/annual-report/">Click here to see the complete report.</a></p>
]]></content>
      <categories>
        <category>Others</category>
      </categories>
  </entry>
  <entry>
    <title>[Visual Studio Online] TFS love Slack, and vice versa</title>
    <url>/2016/01/17/visual-studio-online-tfs-love-slack-and-vice-versa/</url>
    <content><![CDATA[<p>Bài viết này sẽ hướng dẫn bạn tích hợp TFS vào slack. Mỗi khi có hoạt động gì đó xảy ra trên TFS, sẽ có message gửi trong slack cho các thành viên cùng biết</p>
<p>Nghe cũng hay nhỉ?</p>
<p>Sau đây sẽ là các bước tích hợp</p>
<span id="more"></span>
<h1 id="Kich-hoat-trong-TFS"><a href="#Kich-hoat-trong-TFS" class="headerlink" title="Kích hoạt trong TFS"></a>Kích hoạt trong TFS</h1><p>Mở project của bạn trong TFS ra. Thông thường sẽ có địa chỉ là “blahblahblah.visualstudio.com”. Bạn sẽ phải đăng nhập, và chỉ có admin có quyền này</p>
<p>Chọn 1 Project mà bạn muốn tích hợp</p>
<p><img src="https://farm2.staticflickr.com/1547/23806986773_398ba374e6_o.png"></p>
<p>Ở trong Project đó, click Settings để vào phần thiết lập</p>
<p><img src="https://farm2.staticflickr.com/1693/24351380141_2d15dd5529_o.png"></p>
<p>Trong Settings &gt; Service Hooks &gt; Create the first subscription for this project</p>
<p><img src="https://farm2.staticflickr.com/1679/23807096673_7118fe4dcd_o.png"></p>
<p>Kéo xuống chọn Slack rồi Next</p>
<p><img src="https://farm2.staticflickr.com/1454/23805672984_a6c39c2d54_o.png"></p>
<p>Ở mục Trigger, bạn có thể chọn các sự kiện muốn thông báo. Ở đây mình sẽ chọn là code checked in. Sau khi chọn xong, nhớ kiểm tra lại đường dẫn tới project của bạn nhé</p>
<p><img src="https://farm2.staticflickr.com/1443/24325627642_f43b136bc1_o.png"></p>
<p>Ở bước tiếp theo, bạn sẽ cần một thông số là Slack Webhook URL. Cái này phải vô slack mới có nhóe.</p>
<p><img src="https://farm2.staticflickr.com/1467/24066128509_c91f25dd35_o.png"></p>
<h1 id="Lay-Slack-Webhook-URL"><a href="#Lay-Slack-Webhook-URL" class="headerlink" title="Lấy Slack Webhook URL"></a>Lấy Slack Webhook URL</h1><p>Mở slack lên, nhấn chuột vô cái dấu mũi tên đằng sau tên team &gt; Apps and Custom Integrations</p>
<p><img src="https://farm2.staticflickr.com/1558/23811662364_c3b2482408_o.png"></p>
<p>Trong trang web vừa xuất hiện, tìm app Incoming Webhook</p>
<p><img src="https://farm2.staticflickr.com/1458/24439861585_ac197f5bc0_o.png"></p>
<p>Bạn có thể đăng nhập nhiều team slack và install cho những team đó luôn một lúc.</p>
<p><img src="https://farm2.staticflickr.com/1639/24357442781_27f266d7fe_o.png"></p>
<p>Sau đó, chọn channel sẽ post các thông báo, rồi nhấn nút thôi</p>
<p><img src="https://farm2.staticflickr.com/1505/24439921085_f4480688db_o.png"></p>
<p>Ở trang tiếp theo, bạn sẽ thấy Webhook URL. Copy nó và paste vào trong mục điền ở bước 1 nhóe</p>
<p><img src="https://farm2.staticflickr.com/1636/24413747666_afd642068f_o.png"></p>
<p>Nhấn Test để test thử</p>
<p><img src="https://farm2.staticflickr.com/1570/24144370770_a32341cdef_o.png"></p>
<p>Sau cùng, nhấn nút Finish, và thế là bạn đã tích hợp được TFS vào Slack nhóe</p>
<p><img src="https://farm2.staticflickr.com/1545/24440021705_020a7008bf_o.png"></p>
<blockquote>
<p>Tips: Bạn có thể add thêm nhiều loại Trigger khác</p>
</blockquote>
<p>Thế là xong :3</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
      <tags>
        <tag>Visual Studio</tag>
        <tag>online</tag>
        <tag>slack</tag>
        <tag>TFS</tag>
      </tags>
  </entry>
  <entry>
    <title>[Windows] Implement In-App Purchase for Windows 10</title>
    <url>/2016/01/18/windows-implement-in-app-purchase-for-windows-10/</url>
    <content><![CDATA[<p>Bạn có một app thặc là tuyệt zời ông mặt trời, tính năng độc đáo, hấp dẫn. Người dùng không thể nào rời mắt khỏi app của bạn. Và bạn quyết định kiếm tiền từ nó. Thế là bạn tìm hiểu cách implement tính năng In-App Purchase của Windows 10 và nhận ra…nó quá phức tạp. Cùng nhau bơi zô nhé.</p>
<span id="more"></span>

<!-- TOC -->

<ul>
<li><a href="#1-official-documents">1. Official Documents</a></li>
<li><a href="#2-keywords">2. Keywords</a></li>
<li><a href="#3-the-un-official-yet-worked-ways">3. The Un-official yet worked ways</a><ul>
<li><a href="#31-step-1-publish-your-app-to-the-store">3.1. Step 1: Publish your app to the Store</a></li>
<li><a href="#32-step-2-create-iap-aka-in-app-purchase">3.2. Step 2: Create IAP aka In-App Purchase</a></li>
<li><a href="#33-step-3-the-tricky">3.3. Step 3: The tricky</a><ul>
<li><a href="#331-s%E1%BB%AD-d%E1%BB%A5ng-currentappsimulator">3.3.1. Sử dụng CurrentAppSimulator</a></li>
<li><a href="#332-hi%E1%BB%87n-gi%C3%A1-v%C3%A0-c%C3%A1c-th%C3%B4ng-tin-kh%C3%A1c-c%E1%BB%A7a-s%E1%BA%A3n-ph%E1%BA%A9m">3.3.2. Hiện giá và các thông tin khác của sản phẩm</a></li>
<li><a href="#333-mua-in-app-purchase">3.3.3. Mua In-App Purchase</a></li>
</ul>
</li>
<li><a href="#34-step-4-change-the-test-code-to-actual-code">3.4. Step 4: Change the test code to actual code</a></li>
</ul>
</li>
</ul>
<!-- /TOC -->

<h1 id="1-Official-Documents"><a href="#1-Official-Documents" class="headerlink" title="1. Official Documents"></a>1. Official Documents</h1><p><a id="markdown-official-documents" name="official-documents"></a></p>
<p>Microsoft có tài liệu cho vụ này, thậm chí có cả sample code, nhưng nó sẽ không giúp ích được gì cho bạn. Tất cả đều khá chung chung, khơi khơi, mù mờ</p>
<ul>
<li>  Enable In-App Purchase: <a href="https://msdn.microsoft.com/en-us/library/windows/apps/mt219684.aspx">https://msdn.microsoft.com/en-us/library/windows/apps/mt219684.aspx</a></li>
<li>  Enable consumable in-app product purchases: <a href="https://msdn.microsoft.com/en-us/library/windows/apps/mt219683.aspx">https://msdn.microsoft.com/en-us/library/windows/apps/mt219683.aspx</a></li>
<li>  Manage a large catalog of in-app products (Not really): <a href="https://msdn.microsoft.com/en-us/library/windows/apps/mt219686.aspx">https://msdn.microsoft.com/en-us/library/windows/apps/mt219686.aspx</a></li>
</ul>
<p>Đọc từng câu từng chữ trong 3 cái tài liệu trên, tất cả những gì bạn có thể viết trong code là ít vô cùng. Hy vọng rằng trong tương lai điều này sẽ thay đổi. Giờ hãy thử theo cách khác nhóe</p>
<h1 id="2-Keywords"><a href="#2-Keywords" class="headerlink" title="2. Keywords"></a>2. Keywords</h1><p><a id="markdown-keywords" name="keywords"></a></p>
<p>Phần này chứa các keywords mà bạn hay nhầm lẫn khi implement tính năng này</p>
<ul>
<li>Consumables: User có thể mua loại này bao nhiu tùy thích (tiu bỉu cho thể loại này là tiền trong game, quyền truy cập vào kho sách – nhạc – blah blah blah trong 6 tháng) <img src="https://farm2.staticflickr.com/1479/24372150901_025d567d60_o.png"></li>
<li>Durables: User mua thể loại này một lần rồi là sẽ sở hữu nó mãi mãi. Ví dụ như level mới, màn chơi mới, vật phẩm</li>
<li>  ProductID: chính là ID của product của bạn. Đây sẽ là thông số đầu tiên khi tạo một In-App Purchase mới trên Dev Center</li>
</ul>
<h1 id="3-The-Un-official-yet-worked-ways"><a href="#3-The-Un-official-yet-worked-ways" class="headerlink" title="3. The Un-official (yet worked) ways"></a>3. The Un-official (yet worked) ways</h1><p><a id="markdown-the-un-official-yet-worked-ways" name="the-un-official-yet-worked-ways"></a></p>
<h2 id="3-1-Step-1-Publish-your-app-to-the-Store"><a href="#3-1-Step-1-Publish-your-app-to-the-Store" class="headerlink" title="3.1. Step 1: Publish your app to the Store"></a>3.1. Step 1: Publish your app to the Store</h2><p><a id="markdown-step-1%3A-publish-your-app-to-the-store" name="step-1%3A-publish-your-app-to-the-store"></a></p>
<p>Việc đầu tiên bạn muốn làm sẽ là publish app của bạn lên Store.</p>
<p>“Nhưng app vẫn đang trong giai đoạn dev, chưa publish được” – “App chưa có gì cả” – “App vẫn chưa hoàn thiện hết các tính năng”</p>
<p>Không sao cả. Store cho phép bạn publish app của bạn, và ẩn khỏi ô tìm kiếm. Chỉ những ai có deep link (link dẫn trực tiếp tới app của bạn) mới có thể tải về và sử dụng. Như vậy bạn đã có thể ngăn chặn người dùng tìm ra app của bạn và tải nó về, tận hưởng những thứ đáng lẽ ra phải mua bằng Obama.</p>
<p><img src="https://farm2.staticflickr.com/1563/24454812865_46046851ea_o.png"> Hide this app in the Store</p>
<h2 id="3-2-Step-2-Create-IAP-aka-In-App-Purchase"><a href="#3-2-Step-2-Create-IAP-aka-In-App-Purchase" class="headerlink" title="3.2. Step 2: Create IAP (aka In-App Purchase)"></a>3.2. Step 2: Create IAP (aka In-App Purchase)</h2><p><a id="markdown-step-2%3A-create-iap-aka-in-app-purchase" name="step-2%3A-create-iap-aka-in-app-purchase"></a></p>
<p>In-App Purchase hoàn toàn riêng biệt với app của bạn. Và cũng sẽ được xét duyệt như 1 app, nhưng thường chỉ mất khoảng 1 tiếng đồng hồ cho quá trình đó (quá chậm) Các bước tạo In-App Purchase, cũng như publish app, thì mỗi thời mỗi khác. Tóm lại là cứ làm theo hướng dẫn trên màn hình là được</p>
<p><img src="https://farm2.staticflickr.com/1538/24087084229_5b67cc60ea_o.png"> Tạo một In-App Purchase</p>
<h2 id="3-3-Step-3-The-tricky"><a href="#3-3-Step-3-The-tricky" class="headerlink" title="3.3. Step 3: The tricky"></a>3.3. Step 3: The tricky</h2><p><a id="markdown-step-3%3A-the-tricky" name="step-3%3A-the-tricky"></a></p>
<p>In-App Purchase sẽ ko chạy khi bạn có 1 trong các điều kiện sau</p>
<ul>
<li>In-App Purchase vừa mới tạo xong, chưa kịp lên đã lật đật đòi test</li>
<li>Chưa có sản phẩm trên In-App Purchase trong Dev Center</li>
</ul>
<p>Bạn sẽ nghĩ: quá đơn giản, chỉ cần tạo sản phẩm trên In-App Purchase, chờ 1 tiếng đồng hồ để nó lên, sau đó vào lại app, chuyển sang chế độ Release là xong. Tuy nhiên</p>
<ul>
<li>Đặt Break-point ở các dòng code liên quan tới In-App Purchase sẽ không xem được data</li>
<li>Dù đã có sản phẩm, nhưng vẫn ko liệt kê ra khi hiển thị lên màn hình (count == 0)</li>
</ul>
<p>Và đây sẽ là cách. Lưu ý làm theo đúng thứ tự được trình bày trong blog này</p>
<h3 id="3-3-1-Su-dung-CurrentAppSimulator"><a href="#3-3-1-Su-dung-CurrentAppSimulator" class="headerlink" title="3.3.1. Sử dụng CurrentAppSimulator"></a>3.3.1. Sử dụng CurrentAppSimulator</h3><p><a id="markdown-s%E1%BB%AD-d%E1%BB%A5ng-currentappsimulator" name="s%E1%BB%AD-d%E1%BB%A5ng-currentappsimulator"></a></p>
<p>Trong method khởi tạo hoặc load data cho app của bạn, đặt các dòng code sau</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">StaticData.license &#x3D; CurrentAppSimulator.LicenseInformation; StaticData.listings &#x3D; await CurrentAppSimulator.LoadListingInformationAsync();</code></pre>

<p>StaticData là một class chứa các biến Static, có thể truy cập ở mọi class khác Ngay sau khi chạy đoạn code này, Visual Studio sẽ tạo ra 1 file XML giả ở C:UsersAppDataLocalPackagesLocalStateMicrosoftWindows StoreApiDataWindowsStoreProxy.xml</p>
<p>Bạn mở nó lên, và sửa các giá trị sau</p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">&lt;App&gt;
 &lt;IsActive&gt;true&lt;&#x2F;IsActive&gt;
 &lt;IsTrial&gt;false&lt;&#x2F;IsTrial&gt;
&lt;&#x2F;App&gt;</code></pre>

<p>Mục Product ID, sửa lại cho trùng với Product ID bạn đã đặt trên Dev Center</p>
<h3 id="3-3-2-Hien-gia-va-cac-thong-tin-khac-cua-san-pham"><a href="#3-3-2-Hien-gia-va-cac-thong-tin-khac-cua-san-pham" class="headerlink" title="3.3.2. Hiện giá (và các thông tin khác) của sản phẩm"></a>3.3.2. Hiện giá (và các thông tin khác) của sản phẩm</h3><p><a id="markdown-hi%E1%BB%87n-gi%C3%A1-v%C3%A0-c%C3%A1c-th%C3%B4ng-tin-kh%C3%A1c-c%E1%BB%A7a-s%E1%BA%A3n-ph%E1%BA%A9m" name="hi%E1%BB%87n-gi%C3%A1-v%C3%A0-c%C3%A1c-th%C3%B4ng-tin-kh%C3%A1c-c%E1%BB%A7a-s%E1%BA%A3n-ph%E1%BA%A9m"></a></p>
<p>Như bạn đã thấy rõ, StaticData.listings chứa toàn bộ In-App Purchase của bạn. Mọi sản phẩm đều có mặt trong này. Như vậy, để gắn giá lên một sản phẩm nào đó, ngoài việc có template, model ra, bạn sẽ cần phải chạy một vòng lặp</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">foreach(KeyValuePair&lt;string, ProductListing&gt; productListing in StaticData.listings.ProductListings)
&#123;
  if (productListing.Key.TrimStart(&#39;0&#39;) &#x3D;&#x3D; issue.id)
  &#123;
    issue.billing.price &#x3D; productListing.Value.FormattedPrice;
  &#125;
&#125;</code></pre>

<p>Trong đoạn code trên, Product ID của mình là 0154, và issue.id là “154” FormattedPrice sẽ bao gồm cả đơn vị tiền tệ mà hệ thống đang sử dụng. Bạn cũng có thể đọc các thông tin khác như Description, Tag, vân vân và vân vân</p>
<h3 id="3-3-3-Mua-In-App-Purchase"><a href="#3-3-3-Mua-In-App-Purchase" class="headerlink" title="3.3.3. Mua In-App Purchase"></a>3.3.3. Mua In-App Purchase</h3><p><a id="markdown-mua-in-app-purchase" name="mua-in-app-purchase"></a></p>
<p>Nhờ sự giúp đỡ của CurrentAppSimulator, bạn có thể test mua thoải mái. Chỉ cần chỉnh sửa các giá trị trong file WindowsStoreProxy.xml để test đi test lại Về cơ bản, đoạn code mua một vật phẩm bằng In-App Purchase sẽ như sau</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">if (!StaticData.license.ProductLicenses[_selectedIssue.billing.iapKey].IsActive)
&#123;
  try
  &#123;
    &#x2F;&#x2F; Người dùng chưa từng mua cái này 
    &#x2F;&#x2F; Hiện hộp thoại mua
    await CurrentAppSimulator.RequestProductPurchaseAsync(_selectedIssue.billing.iapKey);

    &#x2F;&#x2F;Kiểm tra lại xem đã mua thành công chưa 
    if (StaticData.license.ProductLicenses[_selectedIssue.billing.iapKey].IsActive)
    &#123;
      &#x2F;&#x2F; Nếu mua thành công thì làm trò mèo gì đó 
    &#125;
  &#125;
  catch(Exception)
  &#123;
    &#x2F;&#x2F; Mua bị lỗi 
    &#x2F;&#x2F; an error occurred. 
  &#125;
&#125;
else
&#123;
  &#x2F;&#x2F; Đã mua cái này rồi, tiếp tục trò mèo 
&#125;</code></pre>

<p>Và khi test thử, lúc gọi đoạn code này, một hộp thoại nhỏ hiện ra, cho phép bạn giả lập các trường hợp có thể xảy ra khi dùng thật <img src="https://farm2.staticflickr.com/1616/23825747414_ddb694db19_o.png"> Có vẻ tốt rồi. Tới bước cuối cùng nhé</p>
<h2 id="3-4-Step-4-Change-the-test-code-to-actual-code"><a href="#3-4-Step-4-Change-the-test-code-to-actual-code" class="headerlink" title="3.4. Step 4: Change the test code to actual code"></a>3.4. Step 4: Change the test code to actual code</h2><p><a id="markdown-step-4%3A-change-the-test-code-to-actual-code" name="step-4%3A-change-the-test-code-to-actual-code"></a></p>
<p>Step này khá đơn giản, chỉ cẩn thay tất cả những chỗ dùng CurrentAppSimulator thành CurrentApp là được. Và chạy lại app một lần nữa, lần này, khi bấm mua, sẽ có một hộp thoại thật hiện ra đòi bạn nhập mã PIN để tiến hành mua app. Tới bước này coi như là thành công <img src="https://farm2.staticflickr.com/1461/23829331723_6f852496b8_o.png"></p>
<blockquote>
<p>Tips: Bạn nên submit In-App Purchase trên Dev Center trước 1-2 ngày để đảm bảo code thực sẽ chạy tốt (mình đã từng submit xong chờ 1 tiếng để nó lên, rồi chạy code thực thì lại báo là không có in-app purchase nào trên dev center =.=)</p>
</blockquote>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows 10</category>
        <category>Windows Store App</category>
      </categories>
      <tags>
        <tag>windows 10</tag>
        <tag>iap</tag>
        <tag>in-app purchase</tag>
        <tag>monetization</tag>
      </tags>
  </entry>
  <entry>
    <title>[Windows 10] Prevent your app from being hidden on Windows Store</title>
    <url>/2016/02/23/windows-10-prevent-your-app-from-being-hidden-on-windows-store/</url>
    <content><![CDATA[<p>Trong những tháng vừa rồi, Window Store đang tiến hành thanh lọc Store, bỏ các app rác, đẩy các app tốt lên feature. Tuy nhiên, theo phản ánh của khá nhiều developer tại Việt Nam, Store đang tiến hành xử trảm khá nhiều app tốt của dev VN và các nước khác. Vậy phải làm thế nào?</p>
<p>Bài viết này cung cấp cho bạn những thông tin và các gợi ý để app của bạn mãi mãi nằm trên store, hiện trong search và leo lên tóp.</p>
<span id="more"></span>
<h1 id="App-cua-ban-noi-dung-cua-ban-hinh-anh-cua-ban-y-tuong-cua-ban-luon"><a href="#App-cua-ban-noi-dung-cua-ban-hinh-anh-cua-ban-y-tuong-cua-ban-luon" class="headerlink" title="App của bạn, nội dung của bạn, hình ảnh của bạn, ý tưởng của bạn luôn"></a>App của bạn, nội dung của bạn, hình ảnh của bạn, ý tưởng của bạn luôn</h1><p>App này do bạn tạo ra, và bạn sở hữu tất cả các nội dung có trong app đó, ví dụ như hình ảnh, nhạc, video, vân vân và vân vân. Việc trùng ý tưởng với một app khác cũng không quan trọng lắm trong vấn đề này, nhưng phải chắc chắn rằng app của bạn hay hơn app “con nhà người ta”, và con nhà người ta chưa đăng ký bản quyền cho cái ý tưởng đó.</p>
<p>Ví dụ như bạn làm một app có tính năng quản lý Page trên facebook. Rồi bạn lấy cái logo facebook gắn vô. Có thể trước kia người xét duyệt app lên Store họ ko thèm để ý vấn đề này, nhưng ngày hôm nay đã khác rồi, app của bạn sẽ fail ngay và luôn. Và các app khác trên Store có trường hợp tương tự cũng sẽ bị gỡ bỏ.</p>
<p>Một trường hợp khác, App của bạn bình thường, hình ảnh Free, nội dung hoàn toàn do bạn sáng tạo ra, nhưng cái tên lại có các từ dễ gây hiểu lầm. Đây là trường hợp mình gặp đối với 1 app của mình luôn. Đây là link tới App: <a href="https://www.microsoft.com/store/apps/9nblggh5zchk">https://www.microsoft.com/store/apps/9nblggh5zchk</a>. Lúc đầu mình đặt tên app này là “Windows Universal Logo Maker”. Fail, fail và fail. Sau cùng, mình gửi message tới tester hỏi, và họ trả lời là chữ “Windows Universal” sẽ gây cho người dùng nhầm lẫn rằng app này là một app chính thức của Windows 10, do Microsoft phát hành, và họ cũng suggest mình đổi lại thành “Universal Logo Maker for Windows” -&gt; Pass ngay tắp lự.</p>
<p>Một ghi chú nhỏ khác là không những tên app, mà tất cả các thông tin khác trong App description cũng phải mô tả tính năng của app đó, và không có các từ ngữ thuộc về các app nổi tiếng khác nhằm mục đích câu view, câu like, câu search cho app bạn.</p>
<p>Có qua cũng phải có lại. Nếu app của bạn thực sự tốt, nội dung độc đáo, tạo ra giá trị hữu ích cho người dùng, dần dần app của bạn sẽ được xếp lên đầu các kết quả tìm kiếm, thậm chí chỉ cần gõ từ khóa là app sẽ hiện ra ngay dưới khung suggestion luôn.</p>
<p><img src="https://farm2.staticflickr.com/1572/24579499753_e6d445c1db_o.png"></p>
<p>Khuyến cáo: Sử dụng app Universal Logo Maker for Windows để tạo ra bộ Icon cho App của bạn trong 5 nốt nhạc.</p>
<h1 id="App-hay-va-doc-dao"><a href="#App-hay-va-doc-dao" class="headerlink" title="App hay và độc đáo"></a>App hay và độc đáo</h1><p>Có hàng trăm ngàn app trên Store. Khi các chiêu trò câu view, câu like, câu search không còn tác dụng, thì bạn phải làm gì để người dùng tìm ra và download app của bạn?</p>
<p>Câu trả lời đến từ logo, screenshot, và tính năng của app bạn. App đó càng đẹp, càng độc đáo, càng hữu ích cho người dùng, thì khả năng họ tìm ra nó cũng càng cao. Có một từ ngữ vui để gọi hiện tượng này, là “hiệu ứng trái banh tuyết”. App hay -&gt; người dùng xài nhiều -&gt; họ giới thiệu cho người khác -&gt; Review tích cực nhiều -&gt; lại càng dễ tìm trên Store -&gt; càng nhiều người dùng hơn</p>
<p>Ví dụ, bạn làm một app Calculator chỉ với các tính năng cơ bản mà mấy cái app Calculator khác cũng có, thì 99% là sẽ chả có ai thèm để ý tới cái Calculator của bạn, bởi vì những cái app Calculator khác đang đứng đầu trên store và họ sẽ chọn những cái app đó.</p>
<h1 id="Build-1-app-hay-thay-vi-build-mot-chuc-app-nho-tuong-tu"><a href="#Build-1-app-hay-thay-vi-build-mot-chuc-app-nho-tuong-tu" class="headerlink" title="Build 1 app hay thay vì build một chục app nhỏ tương tự"></a>Build 1 app hay thay vì build một chục app nhỏ tương tự</h1><p>Ví dụ như bạn làm một game đua xe cho một chục thị trường khác nhau. Mỗi thị trường sẽ là một ngôn ngữ khác nhau. Điều này sẽ dễ dàng dẫn tới toàn bộ app giống giống nhau như thế fail một lượt. Thay vào đó, nếu bạn làm 1 app, với ngôn ngữ thay đổi tùy thuộc vào thị trường, thì app của bạn vẫn sẽ an toàn ở lại trên store, trong search, vân vân và vân vân.</p>
<p>App nhỏ:</p>
<p><img src="http://az648995.vo.msecnd.net/win/2016/01/2_fr.png"> <img src="http://az648995.vo.msecnd.net/win/2016/01/3_es.png"></p>
<p>Kết hợp lại thành app bự với tính năng chọn ngôn ngữ, hoặc lấy theo ngôn ngữ hiện tại của hệ điều hành</p>
<p><img src="http://az648995.vo.msecnd.net/win/2016/01/4_generic.png"></p>
<h1 id="Giu-profile-Windows-Dev-Center-cua-ban-luon-luon-tot"><a href="#Giu-profile-Windows-Dev-Center-cua-ban-luon-luon-tot" class="headerlink" title="Giữ profile Windows Dev Center của bạn luôn luôn tốt"></a>Giữ profile Windows Dev Center của bạn luôn luôn tốt</h1><p>Điều cuối cùng mình muốn nhắn nhủ với các bạn Dev ngoài kia là hãy luôn cố gắng submit các app chất lượng cao lên Store. Trước khi làm một app gì, hãy search thử Store xem đã có app tương tự chưa để né tránh các trường hợp kể trên. Điều này giống như profile vay vốn ngân hàng vậy. Bạn càng “trong sạch” bao nhiêu, thì khả năng app của bạn lên top càng cao bấy nhiu.</p>
<h1 id="Neu-app-khong-len-Store-sau-khi-submit-thanh-cong"><a href="#Neu-app-khong-len-Store-sau-khi-submit-thanh-cong" class="headerlink" title="Nếu app không lên Store sau khi submit thành công"></a>Nếu app không lên Store sau khi submit thành công</h1><p>Cố gắng chờ thêm 24 tiếng nữa. App thường sẽ xuất hiện trên Store bằng cách nhấn vào direct link sau khi submit thành công khoảng 24 tiếng. Và mất khoảng 8-24 tiếng để có thể hiện lên trên kết quả search.</p>
<p>Nếu chờ wài ko thấy lên, bạn có thể yêu cầu support tại: <a href="https://support.microsoft.com/en-us/getsupport?locale=EN-US&supportregion=EN-US&ccfcode=US&pesid=14654&oaspworkflow=start_1.0.0.0&tenant=store&supporttopic_L1=31762156&supporttopic_L2=31762179&ccsid=635888242224279047">support ticket</a></p>
<h1 id="Neu-app-bi-an-chi-co-direct-link-khong-search-duoc-tren-Store"><a href="#Neu-app-bi-an-chi-co-direct-link-khong-search-duoc-tren-Store" class="headerlink" title="Nếu app bị ẩn, chỉ có direct link, không search được trên Store"></a>Nếu app bị ẩn, chỉ có direct link, không search được trên Store</h1><p>Kiểm tra kỹ lại các gợi ý phía trên, đảm bảo rằng app của bạn không vi phạm bất kỳ điều gì, rùi gửi support ticket tại đây: <a href="https://support.microsoft.com/en-us/getsupport?locale=EN-US&supportregion=EN-US&ccfcode=US&pesid=14654&oaspworkflow=start_1.0.0.0&tenant=store&supporttopic_L1=31762156&supporttopic_L2=31762179&ccsid=635888242224279047">support ticket</a>. Bạn có thể yêu cầu họ giải thích chi tiết lý do tại sao (sử dụng ngôn từ lịch sự, nhã nhặn)</p>
<h1 id="Promote-app"><a href="#Promote-app" class="headerlink" title="Promote app"></a>Promote app</h1><p>Một khi app đã lên, promote nó nhìu lên cho mọi người biết, download và đánh giá tốt cho nó. App của bạn sẽ càng nặng ký hơn khi có nhiều user từ các nước khác nhau ngoài Việt Nam</p>
<p>Chúc app bạn lên Store suôn sẻ :D</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Windows 10</category>
      </categories>
      <tags>
        <tag>store</tag>
        <tag>hidden</tag>
        <tag>search</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Alexandre Carvalho - 2016-03-24 08:34:27</title>
    <url>/2016/03/24/896ee3ee6c6ca8ca682b74cc17b88126/</url>
    <content><![CDATA[<p>Hi,good work please can provide me the project “30-WP8.1-Glance-Battery” I found very interesting, but when I try to open the project gives error to be associated with your online account Visual studio AUTHOR: Alexandre Carvalho AUTHOR EMAIL: <a href="mailto:&#x61;&#120;&#x63;&#x73;&#57;&#x30;&#64;&#x67;&#109;&#x61;&#105;&#108;&#46;&#x63;&#x6f;&#109;">&#x61;&#120;&#x63;&#x73;&#57;&#x30;&#64;&#x67;&#109;&#x61;&#105;&#108;&#46;&#x63;&#x6f;&#109;</a> AUTHOR URL: SUBJECT: [Tuan Tran’s Blog] About me IP: 188.80.201.175 Array ( [1_Name] =&gt; Alexandre Carvalho [2_Email] =&gt; <a href="mailto:&#97;&#120;&#99;&#115;&#x39;&#x30;&#x40;&#x67;&#109;&#97;&#x69;&#108;&#46;&#x63;&#x6f;&#109;">&#97;&#120;&#99;&#115;&#x39;&#x30;&#x40;&#x67;&#109;&#97;&#x69;&#108;&#46;&#x63;&#x6f;&#109;</a> [3_Website] =&gt; [4_Comment] =&gt; Hi,good work please can provide me the project “30-WP8.1-Glance-Battery” I found very interesting, but when I try to open the project gives error to be associated with your online account Visual studio )</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>[ASP.NET CORE] – My road trip to ASP.NET core – Getting Started</title>
    <url>/2016/07/06/asp-net-core-my-road-trip-to-asp-net-core-getting-started/</url>
    <content><![CDATA[<p>Bài viết theo quan điểm cá nhân, các bạn vui lòng đừng ném đá u đầu chết.</p>
<p>Microsoft is cool again</p>
<p>Ngày 27 tháng 6 năm 2016, MS ra mắt một loạt 3 sản phẩm cực khủng, hứa hẹn sẽ thay đổi cán cân quyền lực, lập lại bản đồ Server, và nó là .NET core, ASP.NET core, và Entity Framework Core. Tất cả đều mang số hiệu 1.0</p>
<p>Vậy bạn tự hỏi, chúng nó là gì?</p>
<span id="more"></span>
<h1 id="Gioi-thieu"><a href="#Gioi-thieu" class="headerlink" title="Giới thiệu"></a>Giới thiệu</h1><p>Xưa kia, khi muốn làm web, bạn có vô vàn lựa chọn:</p>
<ul>
<li>  Nhanh, đơn giản, miễn phí: PHP, cài thêm PHP my assmin vô, cùng Apache Tomcat hay XAMPP gì gì đấy</li>
<li>  Bảo mật thì Java Server Page, bao chậm luôn</li>
<li>  Một số lựa chọn mới nổi như Node.js, vân vân</li>
<li>Lựa chọn cuối cùng, vẫn là ASP.NET, vì nó đòi:<ul>
<li>  Chạy trên Windows Server</li>
<li>  Code bằng .NET (C#)</li>
<li>  Ít host nào hỗ trợ (vì server tốn phí bản quyền)</li>
<li>  Hỗ trợ ít cơ sơ dữ liệu (SQL Server chả hạn)</li>
</ul>
</li>
</ul>
<p>Với ASP.NET Core, bạn vẫn có các ưu điểm như code bằng C#, debug dễ dàng, IDE khủng, và các nhược điểm bị loại bỏ (chạy được trên Mac, Win, Linux, Docker, free to use, open source, blah blah blah)</p>
<h1 id="Tai-lieu"><a href="#Tai-lieu" class="headerlink" title="Tài liệu"></a>Tài liệu</h1><p>Xưa kia, muốn học ASP.NET, bạn có khá nhiều lựa chọn, mỗi cái đều có nhược điểm. Cái thì quá ít thông tin, cái thì tốn phí, cái thì sơ sài, và đa phần tản mát trong dân gian.</p>
<p>Giờ đây, mọi tài liệu điều quy về 1 chỗ:</p>
<ul>
<li>  Tài liệu chung cho tất cả sản phẩm: <a href="https://docs.microsoft.com/en-us/">https://docs.microsoft.com/en-us/</a></li>
<li>  Tài liệu cho ASP.NET: <a href="https://docs.asp.net/en/latest/">https://docs.asp.net/en/latest/</a></li>
</ul>
<h1 id="Cho-dev-ko-xai-Windows"><a href="#Cho-dev-ko-xai-Windows" class="headerlink" title="Cho dev ko xài Windows"></a>Cho dev ko xài Windows</h1><p>ASP.NET core có thể code được bằng nhiều thứ khác nhau như Sublime, Visual Studio Code hoặc trình soạn thảo khoái trá của bạn.</p>
<h1 id="Hello-world"><a href="#Hello-world" class="headerlink" title="Hello world"></a>Hello world</h1><p>Bật visual studio &gt; New Project &gt; Chọn ASP.NET Core Web Application (.NET Core)</p>
<p><img src="https://farm8.staticflickr.com/7352/28088746726_3720e218f0_o.png"></p>
<p>Sau khi nhấn OK, chọn Empty &gt; Bỏ chọn Host in the cloud (hiện giờ thì cứ test local các kiểu đi đã) &gt; OK</p>
<p><img src="https://farm8.staticflickr.com/7379/28122930625_bc23f52a5b_o.png"></p>
<p>Sau khi nhấn OK, Visual Studio sẽ bắt đầu tạo project. Project tạo xong, nó sẽ bắt đầu restore các NuGet Package.</p>
<p>Điểm hay ở ASP.NET Core là nó ko còn dựa trên 1 library nhất định như các phiên bản ASP.NET cũ nữa, mà hoàn toàn dựa trên Nuget Package.</p>
<p><img src="https://farm8.staticflickr.com/7431/28088835376_acf5813b9c_o.png"></p>
<p>Sau cùng, nhấn nút để chạy thử và xem thành quả</p>
<p><img src="https://farm8.staticflickr.com/7336/27843235500_3a0cfbc3af_o.png"></p>
<p><img src="https://farm8.staticflickr.com/7574/28045741121_29641faf2f_o.png"></p>
<h1 id="Publish-len-Azure"><a href="#Publish-len-Azure" class="headerlink" title="Publish lên Azure"></a>Publish lên Azure</h1><p>Nhấn chuột phải vô Web Application &gt; Publish</p>
<p><img src="https://farm8.staticflickr.com/7442/27508633903_a7451490d9_o.png"></p>
<p>Chọn Publish target là Azure</p>
<p><img src="https://farm8.staticflickr.com/7328/28123967115_9334fb7a48_o.png"></p>
<p>Nếu bạn muốn có riêng một Resource Group nào đó, thì tạo mới 1 cái</p>
<p><img src="https://farm8.staticflickr.com/7389/28089848636_3a27dcdc72_o.png"></p>
<p>Nhớ chọn các thông số cần thiết</p>
<p><img src="https://farm8.staticflickr.com/7350/27509151714_dcde6a8641_o.png"></p>
<p>App Service Plan thì free được rồi</p>
<p><img src="https://farm8.staticflickr.com/7342/28021061142_26fe033b23_o.png"></p>
<p>Ra được cái màn hình này thì cứ nhấn publish thôi</p>
<p><img src="https://farm8.staticflickr.com/7379/28021077182_9ced5d2930_o.png"></p>
<p>Chiêm ngưỡng thành quả</p>
<p><img src="https://farm8.staticflickr.com/7321/27509194014_95f55d6dbd_o.png"></p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>ASP.NET</category>
      </categories>
      <tags>
        <tag>core</tag>
      </tags>
  </entry>
  <entry>
    <title>C# string performance – Tips and Tricks</title>
    <url>/2016/07/11/c-string-performance-tips-and-tricks/</url>
    <content><![CDATA[<p>Sau nhiều năm phát triển, C# trở thành một managed code vô cùng phổ biến và dễ sử dụng. Ai ai cũng có thể học C#, và điều này làm nảy sinh ra nhiều thói quen tai hại ảnh hưởng tới hiệu suất của chương trình viết bằng C#. Chỉ cần search một phát, sẽ ra hàng tá kết quả khác nhau, với các lời khuyên khác nhau, đi kèm với các đoạn code bench mark khác nhau, vô cùng rối ren khiến ta bối rối.</p>
<span id="more"></span>

<ul>
<li>  <a href="#t%E1%BA%A1i-sao-v%E1%BA%ADy">Tại sao vậy?</a></li>
<li><a href="#c%C3%A1c-v%E1%BA%A5n-%C4%91%E1%BB%81">Các vấn đề</a><ul>
<li>  <a href="#sai-l%E1%BA%A7m-1-c%E1%BB%99ng-chu%E1%BB%97i">Sai lầm 1: Cộng chuỗi</a></li>
<li>  <a href="#sai-l%E1%BA%A7m-2-check-null--so-s%C3%A1nh-chu%E1%BB%97i-r%E1%BB%97ng">Sai lầm 2: check null – so sánh chuỗi rỗng</a></li>
</ul>
</li>
<li>  <a href="#k%E1%BA%BFt-lu%E1%BA%ADn">Kết luận</a></li>
</ul>
<h1 id="Tai-sao-vay"><a href="#Tai-sao-vay" class="headerlink" title="Tại sao vậy?"></a>Tại sao vậy?</h1><p>Rất đơn giản, là do các đoạn code bench mark này, mặc dù sử dụng cùng ngôn ngữ là C#, nhưng lại chạy trên các phiên bản .NET Framework khác nhau. Không cần đoán cũng biết rằng phiên bản càng về sau, compiler hoạt động càng hiệu quả, code bạn viết ra có hiệu suất càng cao. Thậm chí nó còn thông minh tới mức phát hiện ra các thói quen code xấu xí mà tự compile ra đoạn code hiệu quả nhất dùm bạn.</p>
<p>Tuy nhiên, nói chung lại thì có một số vấn đề “trường tồn cùng thời gian” mà bạn có thể sẽ bắt gặp khi code một ứng dụng C#</p>
<p>Bài viết này tập trung chủ yếu vào C# 6.0 đang được sử dụng cho các ứng dụng UWP của Windows 10</p>
<p>Project tham khảo có trong bài viết: <a href="https://github.com/huntertran/00-Multi-Utilities/tree/master/09%20-%20Test%20Peformance/TestPerformance">https://github.com/huntertran/00-Multi-Utilities/tree/master/09%20-%20Test%20Peformance/TestPerformance</a></p>
<h1 id="Cac-van-de"><a href="#Cac-van-de" class="headerlink" title="Các vấn đề"></a>Các vấn đề</h1><p>String là một biến phức tạp của C#. Nếu như trong SQL, bạn khai báo varchar, nvarchar kèm theo một độ dài nhất định, thì trong C#, string có thể có độ dài cực lớn. Do đó, compiler sẽ rất là vất vả khi xử lý các biến string này.</p>
<h2 id="Sai-lam-1-Cong-chuoi"><a href="#Sai-lam-1-Cong-chuoi" class="headerlink" title="Sai lầm 1: Cộng chuỗi"></a>Sai lầm 1: Cộng chuỗi</h2><pre class="line-numbers language-none"><code class="language-none">string msg &#x3D; &quot;Hello, &quot;;
msg +&#x3D; &quot;Tuan Tran&quot;;
msg +&#x3D; &quot;. Today is &quot;;
msg +&#x3D; System.DateTime.Now.ToString();</code></pre>

<p>Đoạn code trên quá bình thường, bình thường như cân đường hộp sữa. Tuy nhiên, đây sẽ là những gì mà compiler nhìn thấy</p>
<pre class="line-numbers language-none"><code class="language-none">string msg &#x3D; &quot;Hello, &quot;;

string tmp1 &#x3D; new String( msg + &quot;Tuan Tran&quot; );

string msg &#x3D; tmp1; &#x2F;&#x2F; &quot;Hello &quot; is garbage.

string tmp2 &#x3D; new String( msg + &quot;. Today is &quot; );

msg &#x3D; tmp2; &#x2F;&#x2F; &quot;Hello Tuan Tran&quot; is garbage.

string tmp3 &#x3D; new String( msg + DateTime.Now.ToString( ) );

msg &#x3D; tmp3; &#x2F;&#x2F; &quot;Hello Tuan Tran. Today is &quot; is garbage.</code></pre>

<h3 id="Giai-quyet-string-Concat-StringBuilder-va-string-Format"><a href="#Giai-quyet-string-Concat-StringBuilder-va-string-Format" class="headerlink" title="Giải quyết: string.Concat, StringBuilder và string.Format"></a>Giải quyết: string.Concat, StringBuilder và string.Format</h3><p>Về tổng quan, <code>StringBuilder</code> luôn là cái chạy nhay nhất.</p>
<pre class="line-numbers language-none"><code class="language-none">StringBuilder s &#x3D; new StringBuilder();
s.Append(&quot;Tuan Tran&quot;); s.Append(&quot; Today is &quot;);
blah blah blah</code></pre>

<p>Tuy nhiên, đối với C# 6.0 như đã đề cập bên trên, compiler của nó đủ thông minh để compile ra một đoạn native code hiệu quả nhất.</p>
<p>Như vậy, nói tóm lại, bạn có thể sử dụng <code>string.Concat</code> để cộng các chuỗi đơn giản, <code>StringBuilder</code> để xây dựng các chuỗi bự hơn, và <code>string.Format</code> khi bạn muốn cộng các chuỗi từ các kiểu dữ liệu khác, hoặc muốn format nó theo một kiểu nào đó.</p>
<h2 id="Sai-lam-2-check-null-–-so-sanh-chuoi-rong"><a href="#Sai-lam-2-check-null-–-so-sanh-chuoi-rong" class="headerlink" title="Sai lầm 2: check null – so sánh chuỗi rỗng"></a>Sai lầm 2: check null – so sánh chuỗi rỗng</h2><p>Quá đơn giản phải Không?</p>
<pre class="line-numbers language-none"><code class="language-none">string s &#x3D; &quot;&quot;;

if(s &#x3D;&#x3D; null || s &#x3D;&#x3D; &quot;&quot;)
&#123;
    &#x2F;&#x2F;do something here; 
&#125;</code></pre>

<p>Có một cách khác hiện đại hơn</p>
<pre class="line-numbers language-none"><code class="language-none">string s &#x3D; &quot;&quot;;

if(string.IsNullOrEmpty(s))
&#123;
    &#x2F;&#x2F;do something here;
&#125;</code></pre>

<p>Và nếu bạn muốn so sánh 2 chuỗi với nhau, hãy sử dụng string.Equal</p>
<h2 id="Ket-luan"><a href="#Ket-luan" class="headerlink" title="Kết luận"></a>Kết luận</h2><p>Hãy bỏ thời gian tìm hiểu các method được viết sẵn cho <code>string</code>, và sử dụng chúng trong các tình huống phù hợp. Microsof đã viết sẵn cho bạn, và họ cũng đã tối ưu hiệu suất cho các method đó, tại sao lại Không xài chúng chứ.</p>
<p>Sau đây mà tài liệu MSDN về string:</p>
<p><a href="https://docs.microsoft.com/en-us/dotnet/api/system.string?view=netcore-2.2">https://docs.microsoft.com/en-us/dotnet/api/system.string?view=netcore-2.2</a></p>
]]></content>
      <categories>
        <category>CSharp</category>
      </categories>
      <tags>
        <tag>performance</tag>
      </tags>
  </entry>
  <entry>
    <title>[ASP.NET CORE] – My Road trip to ASP.NET Core – Building first API</title>
    <url>/2016/07/12/asp-net-core-my-road-trip-to-asp-net-core-building-first-api/</url>
    <content><![CDATA[<p>Như vậy là các bạn đã bắt tay vào một project Asp.net core thật sự. Bài blog này sẽ hướng dẫn các bạn cách tự build một To-do list API đơn giản nhóe</p>
<span id="more"></span>

<!-- TOC -->

<ul>
<li><a href="#1-overview">1. Overview</a></li>
<li><a href="#2-tools">2. Tools</a><ul>
<li><a href="#21-fiddler">2.1. Fiddler</a></li>
<li><a href="#22-google-chrome">2.2. Google Chrome</a></li>
</ul>
</li>
<li><a href="#3-start">3. Start</a><ul>
<li><a href="#31-kh%E1%BB%9Fi-t%E1%BA%A1o-project">3.1. Khởi tạo Project</a></li>
<li><a href="#32-th%C3%AAm-model">3.2. Thêm model</a></li>
<li><a href="#33-th%C3%AAm-repository">3.3. Thêm Repository</a></li>
<li><a href="#34-register-c%C3%A1i-repository">3.4. Register cái Repository</a></li>
<li><a href="#35-th%C3%AAm-controller">3.5. Thêm controller</a></li>
<li><a href="#36-getting-to-do-items">3.6. Getting to-do items</a></li>
</ul>
</li>
<li><a href="#4-routing-v%C3%A0-url-paths">4. Routing và URL Paths</a></li>
<li><a href="#5-return-values">5. Return values</a></li>
<li><a href="#6-tri%E1%BB%83n-th%C3%AAm-c%C3%A1c-ph%C6%B0%C6%A1ng-th%E1%BB%A9c-crud-kh%C3%A1c">6. Triển thêm các phương thức CRUD khác</a><ul>
<li><a href="#61-create">6.1. Create</a></li>
<li><a href="#62-update">6.2. Update</a></li>
<li><a href="#63-delete">6.3. Delete</a></li>
</ul>
</li>
</ul>
<!-- /TOC -->

<h1 id="1-Overview"><a href="#1-Overview" class="headerlink" title="1. Overview"></a>1. Overview</h1><p><a id="markdown-overview" name="overview"></a></p>
<p>Nếu bạn chưa biết API là gì</p>
<p>API là viết tắt của cụm từ Application Programming Interface, là một dạng giao diện cho phép bạn tương tác với một dữ liệu nào đó.</p>
<p>Ví dụ như Uber chả hạn, bật app Uber lên, bạn sẽ thấy có vài xe Uber đang đậu quanh bạn. Làm sao Uber biết chuyện này? Bằng cách gửi tọa độ GPS của bạn lên server, và server sẽ trả về vị trí các xe đang rảnh xung quanh bạn. App Uber sẽ gắn nó lên trên bản đồ.</p>
<p>Đây sẽ là các API mà chúng ta sẽ build</p>
<table>
<thead>
<tr>
<th>API</th>
<th>Description</th>
<th>Request body</th>
<th>Response body</th>
</tr>
</thead>
<tbody><tr>
<td>GET /api/todo</td>
<td>Get all to-do items</td>
<td>None</td>
<td>Array of to-do items</td>
</tr>
<tr>
<td>GET /api/todo/{id}</td>
<td>Get an item by ID</td>
<td>None</td>
<td>To-do item</td>
</tr>
<tr>
<td>POST /api/todo</td>
<td>Add a new item</td>
<td>To-do item</td>
<td>To-do item</td>
</tr>
<tr>
<td>PUT /api/todo/{id}</td>
<td>Update an existing item</td>
<td>To-do item</td>
<td>None</td>
</tr>
<tr>
<td>DELETE /api/todo/{id}</td>
<td>Delete an item.</td>
<td>None</td>
<td>None</td>
</tr>
</tbody></table>
<p>Sơ đồ</p>
<p><img src="https://docs.microsoft.com/en-us/aspnet/core/mvc/overview/_static/mvc.png?view=aspnetcore-3.1"></p>
<p>Chú thích</p>
<p>View: app / web sẽ sử dụng API. Tạm thời chúng ta chưa quan tâm tới nó</p>
<p>Model: là kiểu dữ liệu của bạn. Trong ví dụ này, Model là To-do item</p>
<p>Controller: là thứ sẽ nhận HTTP Request, và tạo ra HTTP Responses. Ví dụ này sẽ chỉ có 1 controller duy nhất</p>
<p>Ví dụ này cũng không sử dụng Database, mà sẽ lưu trực tiếp trên bộ nhớ. Một API hoàn chỉnh sẽ có Database đi kèm nó</p>
<h1 id="2-Tools"><a href="#2-Tools" class="headerlink" title="2. Tools"></a>2. Tools</h1><p><a id="markdown-tools" name="tools"></a></p>
<p>Đễ dễ dàng debug, test API do mình tạo ra, bạn có thể sử dụng một số phần mềm</p>
<h2 id="2-1-Fiddler"><a href="#2-1-Fiddler" class="headerlink" title="2.1. Fiddler"></a>2.1. Fiddler</h2><p><a id="markdown-fiddler" name="fiddler"></a></p>
<p>Tải và cài đặt tại đây: <a href="https://www.telerik.com/download/fiddler">https://www.telerik.com/download/fiddler</a></p>
<h2 id="2-2-Google-Chrome"><a href="#2-2-Google-Chrome" class="headerlink" title="2.2. Google Chrome"></a>2.2. Google Chrome</h2><p><a id="markdown-google-chrome" name="google-chrome"></a></p>
<p>Google Chrome thì khá tốt trong chuyện test tiếc các kiểu</p>
<h1 id="3-Start"><a href="#3-Start" class="headerlink" title="3. Start"></a>3. Start</h1><p><a id="markdown-start" name="start"></a></p>
<h2 id="3-1-Khoi-tao-Project"><a href="#3-1-Khoi-tao-Project" class="headerlink" title="3.1. Khởi tạo Project"></a>3.1. Khởi tạo Project</h2><p><a id="markdown-kh%E1%BB%9Fi-t%E1%BA%A1o-project" name="kh%E1%BB%9Fi-t%E1%BA%A1o-project"></a></p>
<p>Tạo mới 1 project, chọn template là ASP.NET Core Web Application (.NET Core), đặt tên là todoapi &gt; OK</p>
<p><img src="https://farm8.staticflickr.com/7671/27642365454_2fb370b186_o.png"></p>
<p>Chọn template là Web API &gt; OK</p>
<p><img src="https://farm8.staticflickr.com/7699/27976818140_4bfdcc1961_o.png"></p>
<h2 id="3-2-Them-model"><a href="#3-2-Them-model" class="headerlink" title="3.2. Thêm model"></a>3.2. Thêm model</h2><p><a id="markdown-th%C3%AAm-model" name="th%C3%AAm-model"></a></p>
<p>Model là một object đại diện cho dữ liệu của bạn trong ứng dụng. Trong ví dụ này thì model duy nhất chỉ là một to-do item thôi.</p>
<p>Tips: bạn nên đặt toàn bộ model trong một folder riêng, tương tự với view và controller (đã có sẵn folder cho controller)</p>
<p>Chuột phải vào Project &gt; Add &gt; New Folder</p>
<p><img src="https://farm8.staticflickr.com/7302/28153979252_5efe49a850_o.png"></p>
<p>Tiếp tục chuột phải vào Folder Models &gt; Add &gt; Class, đặt tên class là TodoItem &gt; Ok</p>
<p><img src="https://farm8.staticflickr.com/7451/27976883070_1c07f475c2_o.png"></p>
<p>Thêm 3 Property vô</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">public string Key &#123; get; set; &#125;
public string Name &#123; get; set; &#125;
public bool IsComplete &#123; get; set; &#125;</code></pre>

<h2 id="3-3-Them-Repository"><a href="#3-3-Them-Repository" class="headerlink" title="3.3. Thêm Repository"></a>3.3. Thêm Repository</h2><p><a id="markdown-th%C3%AAm-repository" name="th%C3%AAm-repository"></a></p>
<p>Repository, tiếng Việt là một chỗ lưu trữ cái gì đó, là một kỹ thuật mới tinh beng của ASP.NET core. Theo như tài liệu của họ, thì Repository dùng để đóng gói data, và chứa logic cho việc truy cập dữ liệu và chuyển nó qua cho Entity Model.</p>
<p>Mặc dù app của chúng ta ko có database, nhưng mà cũng hay nếu như bạn hiểu cái đám code này hoạt động dư lào</p>
<p>Để bắt đầu, chúng ta sẽ tạo một repository interface có tên ITodoRepository, dùng cách thêm class như trên, nhưng chọn template là Interface nhóe</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">namespace todoapi.Models
&#123;
    public interface ITodoRepository
    &#123;
        void Add(TodoItem item);
        IEnumerable&lt;TodoItem&gt; GetAll();
        TodoItem Find(string key);
        TodoItem Remove(string key);
        void Update(TodoItem item);
    &#125;
&#125;</code></pre>

<p>Cái interface này định nghĩa các phương thức CRUD (Create - Read – Update – Delete)</p>
<p>Tiếp theo, ta thêm class TodoRepository, triển khai các phương thức trong Interface mới tạo bên trên</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">public class TodoRepository : ITodoRepository
&#123;
    private static ConcurrentDictionary&lt;string, TodoItem&gt; _todos &#x3D; new ConcurrentDictionary&lt;string, TodoItem&gt;();
    public TodoRepository()
    &#123;
        Add(new TodoItem &#123; Name &#x3D; &quot;Item1&quot; &#125;);
    &#125;
 
    public void Add(TodoItem item)
    &#123;
        item.Key &#x3D; Guid.NewGuid().ToString();
        _todos[item.Key] &#x3D; item;
    &#125;
 
    public IEnumerable&lt;TodoItem&gt; GetAll()
    &#123;
        return _todos.Values;
    &#125;
 
    public TodoItem Find(string key)
    &#123;
        TodoItem item;
        _todos.TryGetValue(key, out item);
        return item;
    &#125;
 
    public TodoItem Remove(string key)
    &#123;
        TodoItem item;
        _todos.TryGetValue(key, out item);
        _todos.TryRemove(key, out item);
        return item;
    &#125;
 
    public void Update(TodoItem item)
    &#123;
        _todos[item.Key] &#x3D; item;
    &#125;
&#125;</code></pre>

<p>Xong xuôi thì build nó phát để coi có lỗi gì hok</p>
<p><img src="https://farm8.staticflickr.com/7704/28154355492_f4120179dd_o.png"></p>
<p>Build xong nó lên dư lày là okie</p>
<p><img src="https://farm8.staticflickr.com/7654/27977529060_f3fe9e74aa_o.png"></p>
<h2 id="3-4-Register-cai-Repository"><a href="#3-4-Register-cai-Repository" class="headerlink" title="3.4. Register cái Repository"></a>3.4. Register cái Repository</h2><p><a id="markdown-register-c%C3%A1i-repository" name="register-c%C3%A1i-repository"></a></p>
<p>Bằng cách khai báo Interface repository, ta có thể tách biệt class repository ra khỏi controller xài nó. Thay vì tạo ra một instance của TodoRepository trong controller, ta có thể chọt cái ITodoRepository vào thẳng ASP.NET để sau này xài Depenency Injection (chưa biết nó là gì, tài liệu ở đây: <a href="https://docs.asp.net/en/latest/fundamentals/dependency-injection.html">https://docs.asp.net/en/latest/fundamentals/dependency-injection.html</a>)</p>
<p>Cách này giúp bạn dễ dàng viết Unit Test hơn. Test sẽ thu hẹp lại xuống logic của controller, chứ không test cái truy xuất dữ liệu.</p>
<p>Để chọt (inject) nó vô controller, ta cần đăng ký nó. Mở file Startup.cs, thêm dòng sau vô đầu</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">using todoapi.Models;</code></pre>

<p>Trong phương thức configureServices, thêm đoạn code sau vô cuối</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">&#x2F;&#x2F;Add our repository type
services.AddSingleton&lt;ITodoRepository, TodoRepository&gt;();</code></pre>

<h2 id="3-5-Them-controller"><a href="#3-5-Them-controller" class="headerlink" title="3.5. Thêm controller"></a>3.5. Thêm controller</h2><p><a id="markdown-th%C3%AAm-controller" name="th%C3%AAm-controller"></a></p>
<p>Chuột phải lên thư mục Controller &gt; Add &gt; New Item</p>
<p>Chọn Web API Controller Class, đặt tên TodoController</p>
<p><img src="https://farm8.staticflickr.com/7416/27643155223_70a57c877b_o.png"></p>
<p>Xóa hết code trong class đi, thay bằng cái lày</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">public class TodoController : Controller
&#123;
    public ITodoRepository TodoItems &#123; get; set; &#125;
 
    public TodoController(ITodoRepository todoItems)
    &#123;
        TodoItems &#x3D; todoItems;
    &#125;
&#125;</code></pre>

<p>Như vậy là bạn đã khai báo một cái controller chả có gì bên trong cả. Trong các phần tiếp theo, chúng ta sẽ thêm các method để triển khai API nhóe.</p>
<h2 id="3-6-Getting-to-do-items"><a href="#3-6-Getting-to-do-items" class="headerlink" title="3.6. Getting to-do items"></a>3.6. Getting to-do items</h2><p><a id="markdown-getting-to-do-items" name="getting-to-do-items"></a></p>
<p>Thêm method sau vào TodoController</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">public IEnumerable&lt;TodoItem&gt; GetAll()
&#123;
    return TodoItems.GetAll();
&#125;
 
[HttpGet(&quot;&#123;id&#125;&quot;, Name &#x3D; &quot;GetToDo&quot;)]
public IActionResult GetById(string id)
&#123;
    var item &#x3D; TodoItems.Find(id);
    if (item &#x3D;&#x3D; null)
    &#123;
        return NotFound();
    &#125;
    return new ObjectResult(item);
&#125;</code></pre>

<p>Phương thức này có 2 cái get</p>
<ul>
<li>GET /api/todo</li>
<li>GET /api/todo/{id}</li>
</ul>
<p>Sau đây là một ví dụ cho HTTP Response khi gọi phương thức GetAll</p>
<blockquote>
<p>HTTP/1.1 200 OK Content-Type: application/json; charset=utf-8 Server: Microsoft-IIS/10.0 Date: Thu, 18 Jun 2015 20:51:10 GMT Content-Length: 82</p>
<p>[{“Key”:”4f67d7c5-a2a9-4aae-b030-16003dd829ae”,”Name”:”Item1”,”IsComplete”:false}]</p>
</blockquote>
<p>Sau này chúng ta sẽ dùng Fiddler để test các phương thức này nhóe</p>
<h1 id="4-Routing-va-URL-Paths"><a href="#4-Routing-va-URL-Paths" class="headerlink" title="4. Routing và URL Paths"></a>4. Routing và URL Paths</h1><p><a id="markdown-routing-v%C3%A0-url-paths" name="routing-v%C3%A0-url-paths"></a></p>
<p>Trong cái phương thức trên, bạn sẽ thấy có [HttpGet]. Cái này gọi là Attribute, và Attribute này dùng để chỉ định phương thức cho method bên dưới là Get. Đường dẫn Url thì được xây dựng như sau</p>
<ul>
<li>Lấy cái string trong Controller’s Route: [Route(“api/[controller]”)]</li>
<li>Bỏ cái [controller] ra, thay bằng tên của cái controller (tất nhiên là trừ đi chữ “Controller” nhóe). Ví dụ TodoController thì sẽ thay cái chữ Todo vô thôi</li>
<li>Nếu mà HttpGet có template string, thì thêm cái string đó vô path. Cái ví dụ trên thì ko có</li>
</ul>
<p>Trong cái phương thức GetId bên trên, “{id}” là một giá trị giữ chỗ. Khi request lên, client sẽ xài cái Id của TodoItem thế vô đó.</p>
<h1 id="5-Return-values"><a href="#5-Return-values" class="headerlink" title="5. Return values"></a>5. Return values</h1><p><a id="markdown-return-values" name="return-values"></a></p>
<p>Phương thức GetAll trả về một kiểu dữ liệu là CLR Object. MVC tự động đổi nó thành JSON và viết JSON ra cái body của cái Reponse message. Reponse code sẽ là 200. Nếu có unhandled exception, reponse code sẽ là 5xx</p>
<ul>
<li>Nếu không có item nào có Id như răng, trả về reponse code 404. Cái này được định nghĩa bằng phương thức NotFound()</li>
</ul>
<h1 id="6-Trien-them-cac-phuong-thuc-CRUD-khac"><a href="#6-Trien-them-cac-phuong-thuc-CRUD-khac" class="headerlink" title="6. Triển thêm các phương thức CRUD khác"></a>6. Triển thêm các phương thức CRUD khác</h1><p><a id="markdown-tri%E1%BB%83n-th%C3%AAm-c%C3%A1c-ph%C6%B0%C6%A1ng-th%E1%BB%A9c-crud-kh%C3%A1c" name="tri%E1%BB%83n-th%C3%AAm-c%C3%A1c-ph%C6%B0%C6%A1ng-th%E1%BB%A9c-crud-kh%C3%A1c"></a></p>
<h2 id="6-1-Create"><a href="#6-1-Create" class="headerlink" title="6.1. Create"></a>6.1. Create</h2><p><a id="markdown-create" name="create"></a></p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">[HttpPost]
public IActionResult Create([FromBody] TodoItem item)
&#123;
    if (item &#x3D;&#x3D; null)
    &#123;
        return BadRequest();
    &#125;
    TodoItems.Add(item);
    return CreatedAtRoute(&quot;GetTodo&quot;, new &#123;id &#x3D; item.Key&#125;, item);
&#125;</code></pre>

<p>Phương thức Post</p>
<p>[FromBody] cho phép MVC biết là cái TodoItem đó lấy từ body của request message</p>
<p>Return CreatedAtRoute: sẽ trả về địa chỉ của cái item đấy luôn</p>
<h2 id="6-2-Update"><a href="#6-2-Update" class="headerlink" title="6.2. Update"></a>6.2. Update</h2><p><a id="markdown-update" name="update"></a></p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">[HttpPut(&quot;&#123;id&#125;&quot;)]
public IActionResult Update(string id, [FromBody] TodoItem item) 
&#123;
    if (item &#x3D;&#x3D; null || item.Key !&#x3D; id) 
    &#123;
        return BadRequest();
    &#125;
 
    var todo &#x3D; TodoItems.Find(id);
    if (todo &#x3D;&#x3D; null) 
    &#123;
        return NotFound();
    &#125;
    TodoItems.Update(item);
    return new NoContentResult();
&#125;</code></pre>

<p>Update cũng giống giống Create, nhưng mà xài HttpPut. Response chuẩn là 204 (No Content)</p>
<p>Theo như tài liệu của HTTP, thì Put request đòi hỏi client phải gửi toàn bộ nội dung của item cần update, chứ không phải vài thông tin rời rạc. Để update chỉ 1 thông tin nào đó, dùng HttpPatch</p>
<h2 id="6-3-Delete"><a href="#6-3-Delete" class="headerlink" title="6.3. Delete"></a>6.3. Delete</h2><p><a id="markdown-delete" name="delete"></a></p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">[HttpDelete(&quot;&#123;id&#125;&quot;)]
public void Delete(string id)
&#123;
    TodoItems.Remove(id);
&#125;</code></pre>

<p>Void trả về response là 204 (No Content). Tức là client sẽ nhận được 204 kể cả khi Item đã bị delete hay item ko tồn tại</p>
<p>Vậy là xong rồi, chờ bài post tiếp theo nhóe bạn</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>ASP.NET</category>
      </categories>
  </entry>
  <entry>
    <title>[ASP.NET Tips and Tricks] Using Prompt Attribute as Placeholder for MVC5</title>
    <url>/2017/01/04/asp-net-tips-and-tricks-using-prompt-attribute-as-placeholder-for-mvc5/</url>
    <content><![CDATA[<p>Khi bạn làm một cái form trong ASP.NET MVC5, chắc bạn sẽ dùng HtmlHelpers chứ nhỉ.</p>
<p>Vậy làm thế nào để hiển thị placeholder, sử dụng thuộc tính prompt?</p>
<p><img src="https://cuoilennaocacban2.files.wordpress.com/2017/01/31716564800_af2c594490_o.png" alt="31716564800_af2c594490_o"></p>
<span id="more"></span>

<h1 id="Chuan-bi-trong-ViewModel-hoac-Model"><a href="#Chuan-bi-trong-ViewModel-hoac-Model" class="headerlink" title="Chuẩn bị trong ViewModel (hoặc Model)"></a>Chuẩn bị trong ViewModel (hoặc Model)</h1><p>Các properties trong ViewModel sẽ có default get set như sau</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">public int DistrictId &#123; get; set; &#125;</code></pre>

<p>Bạn sẽ phải thêm các DisplayAttribute cho Property này như sau</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">[Display(Name &#x3D; &quot;Quận huyện&quot;, Prompt &#x3D; &quot;Gõ để chọn từ danh sách&quot;)]
public int DistrictId &#123; get; set; &#125;</code></pre>

<p>DisplayAttribute có chức năng dựng ra các thuộc tính HTML cần thiết để hiển thị ra web khi bạn dùng HtmlHelpers để tạo các tag input</p>
<p>Thuộc tính Name sẽ được dùng cho label của input, thuộc tính Prompt sẽ được dùng cho placeholder của input</p>
<h1 id="Code-cho-C"><a href="#Code-cho-C" class="headerlink" title="Code cho C#"></a>Code cho C#</h1><p>Placeholder không phải là một HtmlHelper có sẵn, nên bạn phải tự tạo ra nó</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">public static class Extensions
&#123;
    public static MvcHtmlString DisplayPlaceHolderFor&lt;TModel, TValue&gt;(
                                                                      this HtmlHelper html,
                                                                      Expression&lt;Func&lt;TModel, TValue&gt;&gt; expression)
    &#123;
        var result &#x3D; ModelMetadata.FromLambdaExpression(expression, html.ViewData).Watermark;
        return new MvcHtmlString(result);
    &#125;
&#125;</code></pre>

<p>Expression sẽ là câu truy vấn bạn truyền vô cho cái extension này</p>
<h1 id="Code-cho-Razor"><a href="#Code-cho-Razor" class="headerlink" title="Code cho Razor"></a>Code cho Razor</h1><pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">&#x2F;&#x2F;Hiển thị label
@Html.LabelFor(x &#x3D;&gt; x.DistrictId)
&#x2F;&#x2F;Hiển thị Textbox và Placeholder
@Html.TextBoxFor(x &#x3D;&gt; x. DistrictId,
                 new &#123;@class &#x3D; &quot;form-control&quot;,
                 placeholder &#x3D; Html.DisplayPlaceHolderFor(x &#x3D;&gt; x.DistrictId)&#125;)
</code></pre>

<p>Thế là xong :D</p>
]]></content>
      <categories>
        <category>Others</category>
        <category>CSharp</category>
        <category>ASP.NET</category>
      </categories>
      <tags>
        <tag>htmlhelper</tag>
        <tag>placeholder</tag>
        <tag>prompt</tag>
      </tags>
  </entry>
  <entry>
    <title>[ASP.NET MVC] Code first vs Database First</title>
    <url>/2017/01/06/asp-net-mvc-code-first-vs-database-first/</url>
    <content><![CDATA[<p>Lúc mới làm ASP.NET, chắc bạn nào cũng sẽ hỏi câu hỏi này. Như kiểu nên làm quả trứng trước, sau đó để nó nở ra con gà, hay làm con gà trước, rồi để nó đẻ ra quả trứng?</p>
<p>Chọn cách nào đi chăng nữa, vẫn sẽ có một số sự khác biệt mà bạn cần biết để chọn cho đúng, xong rồi phóng lao để đâm theo</p>
<p><img src="https://cuoilennaocacban2.files.wordpress.com/2017/01/original.jpg" alt="original"></p>
<span id="more"></span>
<h1 id="Giai-thich"><a href="#Giai-thich" class="headerlink" title="Giải thích"></a>Giải thích</h1><p><strong>Code First</strong></p>
<p><strong>Database First</strong></p>
<p>Viết các class Model bằng code C# Generate Database từ class Model</p>
<p>Generate Model từ Database Các class Model sẽ ko được phép chỉnh sửa</p>
<h1 id="Uu-diem-va-nhuoc-diem"><a href="#Uu-diem-va-nhuoc-diem" class="headerlink" title="Ưu điểm và nhược điểm"></a>Ưu điểm và nhược điểm</h1><p><strong>Code First</strong></p>
<p><strong>Database First</strong></p>
<p>Ưu điểm</p>
<p>Rất phổ biến (vì các lập trình viên thường không thích thiết kế DB, nhưng thích thiết kế class)</p>
<p>Kiểm soát hoàn toàn code model, thêm xóa sửa thuộc tính vô cùng dễ dàng</p>
<p>Không phải nặng đầu suy nghĩ về DB. Đối với cách tiếp cận này, DB chỉ là cái “cục” data, lôi ra xài thôi</p>
<p>Có thể version control Database</p>
<p>Ít phổ biến hơn</p>
<p>DB có thể được develop riêng</p>
<p>Dùng được DB có sẵn</p>
<p>Entity Framework sẽ tạo ra các Entity class cho bạn</p>
<p>Nhược điểm</p>
<p>Các thay đổi cấu trúc trực tiếp trên DB sẽ mất</p>
<p>Khó kiểm soát những column sẽ tạo trên Db</p>
<p>Hơi khó khi kết hợp với Db có sẵn</p>
<p>Không thể thay đổi code đã được Generate (nó sẽ mất trong lần chỉnh sửa cấu trúc DB tiếp theo)</p>
<p>Khó khăn khi muốn thêm các DataAttribute và DisplayAttribute cho các class model</p>
<p>Bạn phải nhức đầu suy nghĩ khi muốn biểu diễn các kiểu quan hệ cha con của class Mỗi lần thay đổi cấu trúc DB, bạn sẽ phải update lại EDMX và tạo lại các class Model để phản ánh sự thay đổi đó</p>
<h1 id="Tuong-lai-nao-cho-ASP-NET-Core"><a href="#Tuong-lai-nao-cho-ASP-NET-Core" class="headerlink" title="Tương lai nào cho ASP.NET Core?"></a>Tương lai nào cho ASP.NET Core?</h1><p>Tại thời điểm viết bài viết này, ASP.NET Core vẫn sẽ support Database First lâu dài, nhưng gặp một số lỗi rất khó chịu khiến bạn hơi khó khăn khi tạo Entities Class từ Database có sẵn</p>
<p>Có thể tạm kết luận là: Code first là tương lai, nhưng nếu thích, bạn vẫn có thể dùng Database First nhóe</p>
<p>Hết rồi :D</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>ASP.NET</category>
      </categories>
      <tags>
        <tag>code first</tag>
        <tag>database first</tag>
      </tags>
  </entry>
  <entry>
    <title>Luong Anh - 2017-01-17 22:19:01</title>
    <url>/2017/01/17/159ed254b7a4692a166335dc1f20f50b/</url>
    <content><![CDATA[<p>Chào Tuấn, mình đang vướng mắc phải 1 vấn đề mà hiện tại mình ko tìm ra cách giải quyết, khá bế tắc (về lập trình web asp.net mvc), hy vọng Tuấn có thể giúp mình. MÌnh thật sự đang rất cần 1 sự trợ giúp. Mong hồi âm… AUTHOR: Luong Anh AUTHOR EMAIL: <a href="mailto:&#x6c;&#x75;&#111;&#110;&#x67;&#x61;&#x6e;&#x68;&#x40;&#x67;&#x6d;&#97;&#105;&#x6c;&#x2e;&#x63;&#111;&#x6d;">&#x6c;&#x75;&#111;&#110;&#x67;&#x61;&#x6e;&#x68;&#x40;&#x67;&#x6d;&#97;&#105;&#x6c;&#x2e;&#x63;&#111;&#x6d;</a> AUTHOR URL: <a href="http://remductrung.com/">http://remductrung.com</a> SUBJECT: [Tuan Tran’s Blog] About me IP: 183.81.94.111 Array ( [1_Name] =&gt; Luong Anh [2_Email] =&gt; <a href="mailto:&#108;&#117;&#111;&#110;&#x67;&#x61;&#110;&#104;&#x40;&#x67;&#109;&#97;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;">&#108;&#117;&#111;&#110;&#x67;&#x61;&#110;&#104;&#x40;&#x67;&#109;&#97;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a> [3_Website] =&gt; <a href="http://remductrung.com/">http://remductrung.com</a> [4_Comment] =&gt; Chào Tuấn, mình đang vướng mắc phải 1 vấn đề mà hiện tại mình ko tìm ra cách giải quyết, khá bế tắc (về lập trình web asp.net mvc), hy vọng Tuấn có thể giúp mình. MÌnh thật sự đang rất cần 1 sự trợ giúp. Mong hồi âm… )</p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>[ASP.NET MVC] Khắc phục lỗi chữ tiếng việt Unicode bị encode trong View</title>
    <url>/2017/01/17/asp-net-mvc-khac-phuc-loi-chu-tieng-viet-unicode-bi-encode-trong-view/</url>
    <content><![CDATA[<p><img src="https://farm1.staticflickr.com/420/31984906310_6b01d5c873_o.png"></p>
<p>Làm web mà có tiếng Việt thì khổ nhất là chữ tiếng Việt nó cứ bị encode thành mấy ký tự vô nghĩa</p>
<p>Điều này ảnh hưởng đến nhìu thứ, đặc biệt là SEO, lưu trữ data lên DB, vân vân và vân vân.</p>
<p>Vậy khắc phục làm sao?</p>
<span id="more"></span>
<h1 id="Nguon-goc-sau-xa"><a href="#Nguon-goc-sau-xa" class="headerlink" title="Nguồn gốc sâu xa"></a>Nguồn gốc sâu xa</h1><p>Lý do rất là củ chuối của nó là do trong tiếng Việt có một số ký tự trùng với các ký tự latin (trong cái bảng này nè: <a href="http://www.akadia.com/services/iso8859.html">http://www.akadia.com/services/iso8859.html</a>)</p>
<p>Để tránh bị nhầm lẫn giữa các ký tự latin này, rất nhìu ngôn ngữ lập trình tự động encode các ký tự này thành chuỗi mà máy có thể hiểu được</p>
<h2 id="Chuoi-do-la-gi"><a href="#Chuoi-do-la-gi" class="headerlink" title="Chuỗi đó là gì?"></a>Chuỗi đó là gì?</h2><p>Dùng trang này để convert qua lại online, bạn sẽ thấy: <a href="https://r12a.github.io/apps/conversion/">https://r12a.github.io/apps/conversion/</a></p>
<p>ASP.NET convert chuỗi đó sang một dạng code gọi là “Unicode Decimal Code”. Ví dụ: <a href="http://www.codetable.net/decimal/224">http://www.codetable.net/decimal/224</a></p>
<h1 id="Cach-khac-phuc"><a href="#Cach-khac-phuc" class="headerlink" title="Cách khắc phục"></a>Cách khắc phục</h1><ol>
<li> Mở file Web.config ra</li>
<li> Tìm tag <code>&lt;system.web&gt;</code></li>
<li> Thêm vào: <code>&lt;globalization fileEncoding=&quot;utf-8&quot; /&gt;</code></li>
</ol>
<p>Thành quả:</p>
<p><img src="https://farm1.staticflickr.com/436/32241635761_2b342942b1_o.png"></p>
<p>Thế là xong :D</p>
<p>Bạn nào có cách khắc phục khác hay hơn thì nói cho mình biết với nhóe</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>ASP.NET</category>
      </categories>
      <tags>
        <tag>encode</tag>
        <tag>lỗi</tag>
        <tag>unicode</tag>
      </tags>
  </entry>
  <entry>
    <title>[ASP.NET MVC] Debug Route Config</title>
    <url>/2017/02/07/asp-net-mvc-debug-route-config/</url>
    <content><![CDATA[<p>Route Map là một cái bảng. Khi bạn chạy một ứng dụng ASP.NET, cái bảng này sẽ được đem ra để so sánh với URL mà bạn gõ trên địa chỉ trình duyệt</p>
<p>Vì nó duyệt theo kiểu bảng như vậy nên rất khó để debug nó. Vỏ dừa dày có con dao nhọn. Vẫn có cách để trị nó nhóe</p>
<span id="more"></span>
<h1 id="Cai-nuget-package"><a href="#Cai-nuget-package" class="headerlink" title="Cài nuget package"></a>Cài nuget package</h1><p>Trước tiên bạn phải cài một package có tên là routedebugger</p>
<p><img src="https://farm1.staticflickr.com/469/31947372973_69489bcb72_o.png"></p>
<p>Sau đó, thêm một dòng config trong Web.config</p>
<add key="RouteDebugger:Enabled" value="true" />

<p><img src="https://farm1.staticflickr.com/595/31947453593_6bbc0ddf77_o.png"></p>
<h1 id="Debug-cai-route"><a href="#Debug-cai-route" class="headerlink" title="Debug cái route"></a>Debug cái route</h1><p>Sau khi hoàn tất 2 bước trên, nhấn Debug, kéo xuống dưới cùng của website và bạn sẽ thấy bảng phân tích route</p>
<p><img src="https://farm1.staticflickr.com/586/31947500953_e3538ee6b5_o.png"></p>
<p>Bảng này sẽ cho bạn thấy route của bạn gõ trên thanh địa chỉ nó bị dinh vô cái config nào</p>
<p>Vậy là bạn đã debug được rồi nhóe</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>ASP.NET</category>
      </categories>
      <tags>
        <tag>route</tag>
      </tags>
  </entry>
  <entry>
    <title>[Front-end] Tự động reload browser khi đang code</title>
    <url>/2017/04/12/front-end-tu-dong-reload-browser-khi-dang-code/</url>
    <content><![CDATA[<p>Mỗi lần nói tới CSS, là các front-end developer lại thấy chán nản mệt mỏi các kiểu</p>
<p>Thử nghĩ xem, mỗi lần sửa CSS (hoặc SCSS), bạn sẽ phải quay lại web browser, nhấn reload / F5 / Ctrl + F5</p>
<p>Nếu có cách để browser tự động reload mỗi khi có thay đổi code thì sao nhỉ</p>
<p>Bài viết này sẽ hướng dẫn các bạn dùng Visual Studio Code kèm với NodeJs để có tự động reload web khi có code thay đổi</p>
<span id="more"></span>
<p><strong>Mục lục</strong></p>
<ul>
<li>  <a href="#b%C6%B0%E1%BB%9Bc-1-c%C3%A0i-%C4%91%E1%BA%B7t-m%C3%B4i-tr%C6%B0%E1%BB%9Dng">Bước 1: Cài đặt môi trường</a></li>
<li>  <a href="#b%C6%B0%E1%BB%9Bc-2-c%C3%A0i-%C4%91%E1%BA%B7t-c%C3%A1c-nodejs-package">Bước 2: Cài đặt các nodejs package</a></li>
<li>  <a href="#b%C6%B0%E1%BB%9Bc-3-c%C3%A0i-%C4%91%E1%BA%B7t-%E1%BB%9F-local-folder">Bước 3: Cài đặt ở local folder</a></li>
<li>  <a href="#b%C6%B0%E1%BB%9Bc-4-c%C3%A0i-%C4%91%E1%BA%B7t-browsersync">Bước 4: Cài đặt BrowserSync</a></li>
<li>  <a href="#b%C6%B0%E1%BB%9Bc-5-t%E1%BA%A1o-gulp-task">Bước 5: Tạo gulp task</a></li>
<li>  <a href="#ch%E1%BA%A1y-tasks">Chạy tasks</a></li>
</ul>
<h1 id="Buoc-1-Cai-dat-moi-truong"><a href="#Buoc-1-Cai-dat-moi-truong" class="headerlink" title="Bước 1: Cài đặt môi trường"></a>Bước 1: Cài đặt môi trường</h1><p>Sẽ có một số phần mềm cần bạn cài đặt. Những phần mềm này khá phổ biến</p>
<ul>
<li>  <a href="https://nodejs.org/">https://nodejs.org</a></li>
<li>  <a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a></li>
</ul>
<p><em>Bạn có thể chọn bản LTS, viết tắt cho chữ Long term support. Đây thường là phiên bản ổn định, ít lỗi lặt vặt</em> <img src="https://farm3.staticflickr.com/2894/33833478232_a59cce160b_o.png" alt="Chọn LTS cho ít lỗi lặt vặt"></p>
<h1 id="Buoc-2-Cai-dat-cac-nodejs-package"><a href="#Buoc-2-Cai-dat-cac-nodejs-package" class="headerlink" title="Bước 2: Cài đặt các nodejs package"></a>Bước 2: Cài đặt các nodejs package</h1><p><strong>Mở Visual Studio Code</strong></p>
<p><strong>Mở Terminal Windows</strong></p>
<p>Bật Terminal Windows trong Visual Studio Code bằng cách nhấn Ctrl + ` hoặc View &gt; Integrated Terminal</p>
<p><img src="https://farm3.staticflickr.com/2814/33234696593_9fcee9f965_o.png"></p>
<p><strong>Cài đặt trình biên dịch SASS/LESS</strong></p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">npm install -g node-sass less</code></pre>

<p>Tham số -g là để cài đặt trên môi trường global</p>
<p><img src="https://farm3.staticflickr.com/2873/33889703622_3cbc71f1cc_o.png"></p>
<p><em>Sau khi cài đặt SASS/LESS compiler</em></p>
<p><strong>Cài đặt gulp toolkit</strong></p>
<p>Cài đặt gulp toolkit để tự động hóa quá trình biên dịch</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">npm install -g gulp</code></pre>

<p><img src="https://farm3.staticflickr.com/2885/33234839763_71ffba8cfd_o.png"></p>
<p><em>Bạn có thể bỏ qua các warning khi cài đặt gulp</em></p>
<p><strong>Initialize Node.Js</strong></p>
<p>Nếu trước đó, bạn chưa bao giờ cài đặt NodeJs package manager, bạn sẽ gặp lỗi như sau</p>
<p><img src="https://farm3.staticflickr.com/2829/33662078970_a1aaf77d2c_o.png"></p>
<p>Gõ lệnh</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">npm init</code></pre>

<p>để init các tham số cần thiết cho npm và làm theo hướng dẫn trên màn hình.</p>
<p>Nếu bạn không nhập gì cả và nhấn enter, npm sẽ dùng tham số default</p>
<p><img src="https://farm3.staticflickr.com/2902/33235009203_a69320020e_o.png"></p>
<h1 id="Buoc-3-Cai-dat-o-local-folder"><a href="#Buoc-3-Cai-dat-o-local-folder" class="headerlink" title="Bước 3: Cài đặt ở local folder"></a>Bước 3: Cài đặt ở local folder</h1><p>Mặc dù bạn đã cài gulp ở global, nhưng bạn vẫn sẽ cần gulp được “copy” vào folder có chứa project của bạn. Lý do là khi gulp global được upgrade, hoặc bị xóa mất, gulp local của bạn vẫn chạy bình thường với một bản sao ổn định trong project folder của bạn Cài đặt gulp local</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">npm install gulp --save-dev</code></pre>

<p>Cài đặt gulp plugin</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">npm install gulp gulp-sass gulp-less</code></pre>

<h1 id="Buoc-4-Cai-dat-BrowserSync"><a href="#Buoc-4-Cai-dat-BrowserSync" class="headerlink" title="Bước 4: Cài đặt BrowserSync"></a>Bước 4: Cài đặt BrowserSync</h1><p>BrowserSync chính là thứ sẽ giúp chúng ta tự động reload trình duyệt Cũng trong Terminal Windows của Visual Studio, gõ lệnh</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">npm install browser-sync gulp --save-dev</code></pre>

<p>Tương tự, bạn cũng có thể bỏ qua các đoạn warning, thông báo</p>
<p><img src="https://farm4.staticflickr.com/3703/33662203760_71636d02d3_o.png"></p>
<h1 id="Buoc-5-Tao-gulp-task"><a href="#Buoc-5-Tao-gulp-task" class="headerlink" title="Bước 5: Tạo gulp task"></a>Bước 5: Tạo gulp task</h1><p>Gulp task là một file .json có chứa các lệnh, tham số cần thiết để thiết lập cho gulp</p>
<ul>
<li>  Trong Visual Studio Code, mở folder có chứa project HTML/CSS/JavaScript của bạn</li>
</ul>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">File &gt; Open Folder &gt; \[Chọn folder\]</code></pre>

<ul>
<li>  Tạo một file tên “gulpfile.js” trong root folder của project</li>
<li>  Gõ nội dung sau:</li>
</ul>
<pre class="line-numbers language-js" data-language="js"><code class="language-js">var gulp &#x3D; require(&#39;gulp&#39;);
 
var sass &#x3D; require(&#39;gulp-sass&#39;);
 
var browserSync &#x3D; require(&#39;browser-sync&#39;);
 
&#x2F;&#x2F; compile task
var gulp &#x3D; require(&#39;gulp&#39;);
var sass &#x3D; require(&#39;gulp-sass&#39;);
var browserSync &#x3D; require(&#39;browser-sync&#39;);
 
&#x2F;&#x2F; compile task
gulp.task(&#39;sass&#39;, function () &#123;
    gulp.src(&#39;css&#x2F;*.scss&#39;)
        .pipe(sass())
        .on(&#39;error&#39;, swallowError)
        .pipe(gulp.dest(function (f) &#123;
            return f.base;
        &#125;))
        .pipe(browserSync.stream());
&#125;);
 
&#x2F;&#x2F; browser sync init
gulp.task(&#39;browser-sync&#39;, [&#39;sass&#39;], function () &#123;
    browserSync.init(&#123;
        server: &#123;
            baseDir: &quot;.&#x2F;&quot;
        &#125;
    &#125;);
&#125;);
 
&#x2F;&#x2F; watch for changes in html, css, scss
gulp.task(&#39;default&#39;, [&#39;browser-sync&#39;], function () &#123;
    gulp.watch(&#39;css&#x2F;*.scss&#39;, [&#39;sass&#39;]);
    gulp.watch(&#39;*.html&#39;)
        .on(&#39;change&#39;, browserSync.reload);
&#125;)
 
&#x2F;&#x2F; skip if error occured
function swallowError(error) &#123;
    console.log(error.toString())
    this.emit(&#39;end&#39;)
&#125;</code></pre>

<ul>
<li>Tạo tasks.json tasks.json giúp cho Visual Studio code biết cách chạy task gulp khi được ra lệnh<ul>
<li>  Nhấn Ctrl + Shift + P và gõ “Configure Task Runner” rồi nhấn enter</li>
<li>  Chọn Others trong danh sách</li>
<li>  Gõ vào đoạn code sau</li>
</ul>
</li>
</ul>
<pre class="line-numbers language-json" data-language="json"><code class="language-json">&#123;
  &quot;version&quot;: &quot;0.1.0&quot;,
  &quot;command&quot;: &quot;gulp&quot;,
  &quot;isShellCommand&quot;: true,
  &quot;tasks&quot;: [
      &#123;
          &quot;taskName&quot;: &quot;default&quot;,
          &quot;isBuildCommand&quot;: true,
          &quot;showOutput&quot;: &quot;always&quot;,
          &quot;isBackground&quot;: true
      &#125;
  ]
&#125;</code></pre>

<h1 id="Chay-tasks"><a href="#Chay-tasks" class="headerlink" title="Chạy tasks"></a>Chạy tasks</h1><ul>
<li>  Tạo file “index.html” trong thư mục gốc. Mặc định BrowserSync sẽ theo dõi file này</li>
<li>  Trong Visual Studio Code, nhấn <strong>Ctrl + Shift + B</strong> để bắt đầu chạy tasks</li>
<li>  Bật tính năng Autosave cho Visual Studio Code</li>
</ul>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">File &gt; Autosave</code></pre>]]></content>
      <categories>
        <category>CSharp</category>
        <category>ASP.NET</category>
      </categories>
      <tags>
        <tag>browsersync</tag>
        <tag>css</tag>
        <tag>html</tag>
        <tag>live reload</tag>
        <tag>visual studio code</tag>
      </tags>
  </entry>
  <entry>
    <title>[ASP.NET] Mở rộng EditorFor</title>
    <url>/2017/04/20/asp-net-mo-rong-editorfor/</url>
    <content><![CDATA[<p>Chắc là bạn đã quá quen với <strong><em>EditorFor</em></strong> control, nhưng nó chỉ render khi gặp những kiểu dữ liệu được hỗ trợ thôi. Bạn sẽ làm gì nếu muốn mở rộng EditorFor để render những kiểu dữ liệu của riêng bạn?</p>
<span id="more"></span>
<p>Mục lục</p>
<ul>
<li><a href="#1-s%E1%BB%AD-d%E1%BB%A5ng-editorfor-v%C3%A0-editorformodel">1. Sử dụng EditorFor và EditorForModel</a><ul>
<li>  <a href="#model-ho%E1%BA%B7c-viewmodel">Model (hoặc ViewModel)</a></li>
<li>  <a href="#view">View</a></li>
</ul>
</li>
<li><a href="#2-m%E1%BB%9F-r%E1%BB%99ng-editorfor">2. Mở rộng EditorFor</a><ul>
<li>  <a href="#21-t%E1%BA%A1o-editortemplates">2.1 Tạo EditorTemplates</a></li>
</ul>
</li>
</ul>
<p>Có thể nói EditorFor và EditorForModel là những control hữu ích nhất khi mà nó có thể render cái bụp toàn bộ thẻ input cần thiết dựa trên một model của bạn.</p>
<h1 id="1-Su-dung-EditorFor-va-EditorForModel"><a href="#1-Su-dung-EditorFor-va-EditorForModel" class="headerlink" title="1. Sử dụng EditorFor và EditorForModel"></a>1. Sử dụng EditorFor và EditorForModel</h1><p>Tại sao chả thấy ai nói gì về Editor: Từ hồi MVC2, Editor control đi kèm với phiên bản đầu tiên của MVC có thể được thay thế bởi EditorFor. Từ “For” ám chỉ đây là một <em>strongly typed html helper</em>, tức là bạn có thể chọn tên property từ model mà không sợ sai</p>
<h2 id="Model-hoac-ViewModel"><a href="#Model-hoac-ViewModel" class="headerlink" title="Model (hoặc ViewModel)"></a>Model (hoặc ViewModel)</h2><p>Để render 1 cái form, bạn cần phải biết data nó nhận vô là gì. Để hiển thị những data này, bạn cần phải tạo một class với các Properties</p>
<p>Model</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">public class Lesson
&#123;
    &#x2F;&#x2F; ScaffoldColumn mark that EditorFor should render it or not
    [ScaffoldColumn(false)]
    public int Id &#123; get; set; &#125;
 
    &#x2F;&#x2F; To display as label
    [Display(Name &#x3D; &quot;Lesson Name&quot;)]
    public string Name &#123; get; set; &#125;
 
    [Display(Name &#x3D; &quot;CD Number&quot;)]
    public int CDNumber &#123; get; set; &#125;
 
    [Display(Name &#x3D; &quot;CD Track&quot;)]
    public int CDTrack &#123; get; set; &#125;
&#125;</code></pre>

<p>ViewModel</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">public class LessonViewModel
&#123;
    public Lesson LessonItem &#123; get; set; &#125;
&#125;</code></pre>

<h2 id="View"><a href="#View" class="headerlink" title="View"></a>View</h2><ul>
<li>EditorFor control phải nằm bên trong form tag</li>
<li>Razor support bạn render cái form tag đó tự động luôn</li>
</ul>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">@model LessonViewModel
 
@using(Html.BeginForm(&quot;ActionName&quot;,&quot;ControllerName&quot;, FormMethod.Post,new &#123;@class &#x3D; &quot;myformclass&quot;&#125;))
&#123;
    @Html.EditorFor(x &#x3D;&gt; x.LessonItem)
&#125;</code></pre>

<p>Nếu bạn không có ViewModel, nhưng muốn render trực tiếp từ Lesson model</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">@model Lesson
 
@using(Html.BeginForm(&quot;ActionName&quot;,&quot;ControllerName&quot;, FormMethod.Post,new &#123;@class &#x3D; &quot;myformclass&quot;&#125;))
&#123;
    @Html.EditorForModel()
&#125;</code></pre>

<h1 id="2-Mo-rong-EditorFor"><a href="#2-Mo-rong-EditorFor" class="headerlink" title="2. Mở rộng EditorFor"></a>2. Mở rộng EditorFor</h1><p>Tạo một class mới để giữ data</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">public class TextBoxWithCheck
&#123;
    [Display(Name &#x3D; &quot;Fancy Text&quot;)]
    public string MyText &#123; get; set;&#125;
 
    public bool IsTrue &#123; get; set; &#125;
&#125;</code></pre>

<p>Thêm cái class mới này vô Lesson model</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">public TextBoxWithCheck FancyBox &#123; get; set; &#125;</code></pre>

<p>Rồi giờ nếu bạn muốn một cái textbox có kèm checkbox giống vầy</p>
<p><img src="https://farm3.staticflickr.com/2897/33308184454_8240d60dd1_o.png" alt="textbox with checkbox"></p>
<p>Rõ ràng là chả có cái default control nào có thể làm được trò này, mà EditorFor cũng không biết chọn cái gì để render cái property “FancyBox” của kiểu “TextBoxWithCheck”.</p>
<p>Vì thế, bạn sẽ <strong><em>dạy</em></strong> nó cách render nhóe.</p>
<h2 id="2-1-Tao-EditorTemplates"><a href="#2-1-Tao-EditorTemplates" class="headerlink" title="2.1 Tạo EditorTemplates"></a>2.1 Tạo EditorTemplates</h2><ul>
<li>  Tạo folder “EditorTemplates” trong Views &gt; Shared</li>
</ul>
<p><img src="https://farm3.staticflickr.com/2855/34151179025_3e849d7d2c_o.png" alt="folder structure"></p>
<ul>
<li>  Thêm View mới vào folder đó, đặt tên là “TextBoxWithCheck.cshtml” (phải trùng tên với cái custom class)</li>
</ul>
<pre class="line-numbers language-html" data-language="html"><code class="language-html">@model TextBoxWithCheck
 
@Html.LabelFor(x &#x3D;&gt; x.MyText)
&lt;div class&#x3D;&quot;input-group&quot;&gt;
    @Html.TextAreaFor(x &#x3D;&gt; x.Answer, new &#123;@class&#x3D;&quot;form-control&quot;&#125;)
    &lt;span class&#x3D;&quot;input-group-addon&quot;&gt;
        @Html.CheckBoxFor(x &#x3D;&gt; x.IsTrue)
    &lt;&#x2F;span&gt;
&lt;&#x2F;div&gt;</code></pre>

<p>Thế là xong. Giờ EditorFor đã biết render tất cả instance của TextBoxWithCheck.</p>
<p>Cũng dễ mà phải không?</p>
]]></content>
      <categories>
        <category>Others</category>
        <category>CSharp</category>
        <category>ASP.NET</category>
      </categories>
      <tags>
        <tag>custom</tag>
        <tag>editorfor</tag>
        <tag>extend</tag>
        <tag>mở rộng</tag>
      </tags>
  </entry>
  <entry>
    <title>[ASPNET] Editor for với List và thêm mới item dùng AJAX</title>
    <url>/2017/04/25/aspnet-editor-for-voi-list-va-them-moi-item-dung-ajax/</url>
    <content><![CDATA[<p>Tưởng tượng bạn có list các item trong ViewModel</p>
<p>Nếu bạn muốn cho phép user thêm mới 1 item, hoặc edit bất kỳ item nào trong list thì làm sao?</p>
<p>Đọc xong bài này, bạn sẽ biết cách làm nhóe</p>
<span id="more"></span>

<!-- TOC -->

<ul>
<li><a href="#1-editorfor-control">1. EditorFor Control</a></li>
<li><a href="#2-class">2. Class</a><ul>
<li><a href="#21-c-code">2.1. C# code</a></li>
<li><a href="#22-javascript-code">2.2. JavaScript Code</a></li>
</ul>
</li>
<li><a href="#3-c%C3%A1ch-x%C3%A0i">3. Cách xài</a><ul>
<li><a href="#31-chu%E1%BA%A9n-b%E1%BB%8B-model">3.1. Chuẩn bị model</a></li>
<li><a href="#32-razor-code">3.2. Razor code</a></li>
</ul>
</li>
<li><a href="#4-k%E1%BA%BFt-qu%E1%BA%A3">4. Kết quả</a></li>
<li><a href="#5-c%C3%A1ch-ho%E1%BA%A1t-%C4%91%E1%BB%99ng">5. Cách hoạt động</a><ul>
<li><a href="#51-c%C3%A1c-b%C6%B0%E1%BB%9Bc">5.1. Các bước</a></li>
<li><a href="#52-t%E1%BA%A1i-sao-l%E1%BA%A1i-c%E1%BA%A7n-index">5.2. Tại sao lại cần Index</a></li>
</ul>
</li>
</ul>
<!-- /TOC -->

<h1 id="1-EditorFor-Control"><a href="#1-EditorFor-Control" class="headerlink" title="1. EditorFor Control"></a>1. EditorFor Control</h1><p><a id="markdown-editorfor-control" name="editorfor-control"></a></p>
<p>Trong <a href="https://huntertran.com/2017/04/20/asp-net-mo-rong-editorfor/">bài kỳ trước</a>, bạn đã biết cách xài EditorFor và EditorForModel control.</p>
<p>Một điểm hạn chế của 2 thằng này là chúng không tạo ra input cho các class tùy biến của bạn</p>
<p>Còn 1 list các item thì lại càng không có.</p>
<p>Hiển thị một list thì dễ, một vòng lặp for (hoặc foreach) là xong</p>
<p>Nhưng một “Editor” cho cả một list thì ko được support, nên bạn phải tự tạo thôi</p>
<p>Từ một bài viết thú vị từ Matt Lunn <a href="https://www.mattlunn.me.uk/blog/2014/08/how-to-dynamically-via-ajax-add-new-items-to-a-bound-list-model-in-asp-mvc-net/">ở đây</a>, chúng ta sẽ thay đổi một tí cho dễ xài và phù hợp với yêu cầu hơn nhóe</p>
<h1 id="2-Class"><a href="#2-Class" class="headerlink" title="2. Class"></a>2. Class</h1><p><a id="markdown-class" name="class"></a></p>
<h2 id="2-1-C-code"><a href="#2-1-C-code" class="headerlink" title="2.1. C# code"></a>2.1. C# code</h2><p><a id="markdown-c%23-code" name="c%23-code"></a></p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">namespace Yournamespace.Utilities
&#123;
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Linq.Expressions;
    using System.Text;
    using System.Web.Mvc;
    using System.Web.Mvc.Html;
 
    public static class HtmlHelperExtensions
    &#123;
        &#x2F;&#x2F;&#x2F; &lt;summary&gt;
        &#x2F;&#x2F;&#x2F; Generate appropriate control for a list of data
        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;
        &#x2F;&#x2F;&#x2F; &lt;typeparam name&#x3D;&quot;TModel&quot;&gt;The Model contain the list&lt;&#x2F;typeparam&gt;
        &#x2F;&#x2F;&#x2F; &lt;typeparam name&#x3D;&quot;TValue&quot;&gt;The Model of list of items&lt;&#x2F;typeparam&gt;
        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;html&quot;&gt;&lt;&#x2F;param&gt;
        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;propertyExpression&quot;&gt;Which property&lt;&#x2F;param&gt;
        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;indexResolverExpression&quot;&gt;Select the property to be the index&lt;&#x2F;param&gt;
        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;isIncludeNewItem&quot;&gt;Set to true to include a default new item&lt;&#x2F;param&gt;
        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;includeIndexField&quot;&gt;Set to true to include Index in values sent to server&lt;&#x2F;param&gt;
        &#x2F;&#x2F;&#x2F; &lt;returns&gt;HTML codes of editorfor a list of items&lt;&#x2F;returns&gt;
        public static MvcHtmlString EditorForMany&lt;TModel, TValue&gt;(
            this HtmlHelper&lt;TModel&gt; html,
            Expression&lt;Func&lt;TModel, IEnumerable&lt;TValue&gt;&gt;&gt; propertyExpression,
            Expression&lt;Func&lt;TValue, string&gt;&gt; indexResolverExpression &#x3D; null,
            bool isIncludeNewItem &#x3D; false,
            bool includeIndexField &#x3D; true)
            where TModel 
                : class where TValue 
                : new()
        &#123;
            var items &#x3D; propertyExpression.Compile()(html.ViewData.Model);
            var htmlBuilder &#x3D; new StringBuilder();
            var htmlFieldName &#x3D; ExpressionHelper.GetExpressionText(propertyExpression);
            var htmlFieldNameWithPrefix &#x3D; html.ViewData.TemplateInfo.GetFullHtmlFieldName(htmlFieldName);
            var indexResolver &#x3D; GetIndexResolver(indexResolverExpression);
            items &#x3D; AddDefaultNewItem(isIncludeNewItem, items);
 
            foreach (var item in items)
            &#123;
                var dummy &#x3D; new
                &#123;
                    Item &#x3D; item
                &#125;;
 
                var guid &#x3D; indexResolver(item);
 
                var memberExp &#x3D; Expression.MakeMemberAccess(
                    Expression.Constant(dummy),
                    dummy.GetType().GetProperty(&quot;Item&quot;));
 
                var singleItemExp &#x3D; Expression.Lambda&lt;Func&lt;TModel, TValue&gt;&gt;(memberExp, propertyExpression.Parameters);
 
                guid &#x3D; string.IsNullOrEmpty(guid) ? Guid.NewGuid().ToString() : html.AttributeEncode(guid);
                BuildHtmlString(html, indexResolverExpression, includeIndexField, htmlBuilder, htmlFieldName, htmlFieldNameWithPrefix, guid, singleItemExp);
            &#125;
 
            return new MvcHtmlString(htmlBuilder.ToString());
        &#125;
 
        private static void BuildHtmlString&lt;TModel, TValue&gt;(
            HtmlHelper&lt;TModel&gt; html,
            Expression&lt;Func&lt;TValue, string&gt;&gt; indexResolverExpression,
            bool includeIndexField,
            StringBuilder htmlBuilder,
            string htmlFieldName,
            string htmlFieldNameWithPrefix,
            string guid,
            Expression&lt;Func&lt;TModel, TValue&gt;&gt; singleItemExp)
            where TModel : class
            where TValue : new()
        &#123;
            htmlBuilder.Append(@&quot;&lt;div&gt;&quot;);
 
            if (includeIndexField)
            &#123;
                htmlBuilder.Append(_EditorForManyIndexField(htmlFieldNameWithPrefix, guid, indexResolverExpression));
            &#125;
 
            htmlBuilder.Append(html.EditorFor(singleItemExp, null, $&quot;&#123;htmlFieldName&#125;[&#123;guid&#125;]&quot;));
 
            htmlBuilder.Append(@&quot;&lt;&#x2F;div&gt;&quot;);
        &#125;
 
        private static IEnumerable&lt;TValue&gt; AddDefaultNewItem&lt;TValue&gt;(bool isIncludeNewItem, IEnumerable&lt;TValue&gt; items) where TValue : new()
        &#123;
            if (isIncludeNewItem)
            &#123;
                items &#x3D; items.Concat(new[]
                &#123;
                    new TValue()
                &#125;);
            &#125;
 
            return items;
        &#125;
 
        private static Func&lt;TValue, string&gt; GetIndexResolver&lt;TValue&gt;(Expression&lt;Func&lt;TValue, string&gt;&gt; indexResolverExpression) where TValue : new()
        &#123;
            Func&lt;TValue, string&gt; indexResolver;
            if (indexResolverExpression &#x3D;&#x3D; null)
            &#123;
                indexResolver &#x3D; x &#x3D;&gt; null;
            &#125;
            else
            &#123;
                indexResolver &#x3D; indexResolverExpression.Compile();
            &#125;
 
            return indexResolver;
        &#125;
 
        public static MvcHtmlString EditorForManyIndexField&lt;TModel&gt;(
            this HtmlHelper&lt;TModel&gt; html,
            Expression&lt;Func&lt;TModel, string&gt;&gt; indexResolverExpression &#x3D; null)
        &#123;
            var htmlPrefix &#x3D; html.ViewData.TemplateInfo.HtmlFieldPrefix;
            var first &#x3D; htmlPrefix.LastIndexOf(&#39;[&#39;);
            var last &#x3D; htmlPrefix.IndexOf(&#39;]&#39;, first + 1);
 
            if (first &#x3D;&#x3D; -1 || last &#x3D;&#x3D; -1)
            &#123;
                throw new InvalidOperationException(&quot;EditorForManyIndexField called when not in a EditorForMany context&quot;);
            &#125;
 
            var htmlFieldNameWithPrefix &#x3D; htmlPrefix.Substring(0, first);
            var guid &#x3D; htmlPrefix.Substring(first + 1, last - first - 1);
 
            return _EditorForManyIndexField(htmlFieldNameWithPrefix, guid, indexResolverExpression);
        &#125;
 
        private static MvcHtmlString _EditorForManyIndexField&lt;TModel&gt;(
            string htmlFieldNameWithPrefix,
            string guid,
            Expression&lt;Func&lt;TModel, string&gt;&gt; indexResolverExpression)
        &#123;
            var htmlBuilder &#x3D; new StringBuilder();
            htmlBuilder.AppendFormat(
                @&quot;&lt;input type&#x3D;&quot;&quot;hidden&quot;&quot; name&#x3D;&quot;&quot;&#123;0&#125;.Index&quot;&quot; value&#x3D;&quot;&quot;&#123;1&#125;&quot;&quot; &#x2F;&gt;&quot;,
                htmlFieldNameWithPrefix,
                guid);
 
            if (indexResolverExpression !&#x3D; null)
            &#123;
                htmlBuilder.AppendFormat(
                    @&quot;&lt;input type&#x3D;&quot;&quot;hidden&quot;&quot; name&#x3D;&quot;&quot;&#123;0&#125;[&#123;1&#125;].&#123;2&#125;&quot;&quot; value&#x3D;&quot;&quot;&#123;1&#125;&quot;&quot; &#x2F;&gt;&quot;,
                    htmlFieldNameWithPrefix,
                    guid,
                    ExpressionHelper.GetExpressionText(indexResolverExpression));
            &#125;
 
            return new MvcHtmlString(htmlBuilder.ToString());
        &#125;
    &#125;
&#125;</code></pre>

<h2 id="2-2-JavaScript-Code"><a href="#2-2-JavaScript-Code" class="headerlink" title="2.2. JavaScript Code"></a>2.2. JavaScript Code</h2><p><a id="markdown-javascript-code" name="javascript-code"></a></p>
<p>Đoạn code dưới dây dùng JQuery, nhưng bạn có thể convert nó sang JavaScript thuần cũng vẫn được nhóe</p>
<pre class="line-numbers language-js" data-language="js"><code class="language-js">function GenerateGuid() &#123;
    function s4() &#123;
        return Math.floor((1 + Math.random()) * 0x10000)
            .toString(16)
            .substring(1);
    &#125;
 
    return s4() + s4() + &quot;-&quot; + s4() + &quot;-&quot; + s4() + &quot;-&quot; + s4() + &quot;-&quot; + s4() + s4() + s4();
&#125;
 
function AssignAddMoreButton() &#123;
    $(&quot;.add-more-button&quot;).click(function (event) &#123;
        event.preventDefault();
        debugger;
        var id &#x3D; &quot;#&quot; + $(this).data(&quot;class&quot;);
        var clone &#x3D; $(id).children().last().clone();
        var guid &#x3D; clone.children().first().val();
        var regex &#x3D; new RegExp(guid, &quot;g&quot;);
        var newHtml &#x3D; clone.html(function (i, oldHtml) &#123;
            return oldHtml.replace(regex, GenerateGuid());
        &#125;);
        $(id).append(newHtml);
    &#125;);
&#125;</code></pre>

<h1 id="3-Cach-xai"><a href="#3-Cach-xai" class="headerlink" title="3. Cách xài"></a>3. Cách xài</h1><p><a id="markdown-c%C3%A1ch-x%C3%A0i" name="c%C3%A1ch-x%C3%A0i"></a></p>
<h2 id="3-1-Chuan-bi-model"><a href="#3-1-Chuan-bi-model" class="headerlink" title="3.1. Chuẩn bị model"></a>3.1. Chuẩn bị model</h2><p><a id="markdown-chu%E1%BA%A9n-b%E1%BB%8B-model" name="chu%E1%BA%A9n-b%E1%BB%8B-model"></a></p>
<p>Cái model mà bạn muốn dùng với cái control EditorForMany này, bạn phải thêm một property là Index vô nữa</p>
<p>Ví dụ, nếu tui có một cái class tên là Model luôn</p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">public class Model
&#123;
    &#x2F;&#x2F; Your normal, already existed properties
 
    &#x2F;&#x2F; set to false if you don&#39;t want to generate a HTML input tag
    &#x2F;&#x2F; for it when using with editorfor control
    [ScaffoldColumn(false)]
    public string Index &#123; get; set; &#125;
&#125;</code></pre>

<h2 id="3-2-Razor-code"><a href="#3-2-Razor-code" class="headerlink" title="3.2. Razor code"></a>3.2. Razor code</h2><p><a id="markdown-razor-code" name="razor-code"></a></p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">@using(Html.BeginForm(&quot;ActionName&quot;,&quot;ControllerName&quot;,FormMethod.Post, new &#123;@class&#x3D;&quot;CssClassName&quot;&#125;))
&#123;
    &#x2F;&#x2F; the last parameter &quot;true&quot; is to generate a default item
    @Html.EditorForMany(x &#x3D;&gt; x.Model, x &#x3D;&gt; x.Index, true)
&#125;
 
 
    &#x2F;&#x2F; include the javascript code file above
    AssignAddMoreButton();</code></pre>

<p>Nếu bạn muốn đặt toàn bộ code javascript vào một file .js, nhớ gọi function AssignAddMoreButton sau khi “document ready” nhóe</p>
<h1 id="4-Ket-qua"><a href="#4-Ket-qua" class="headerlink" title="4. Kết quả"></a>4. Kết quả</h1><p><a id="markdown-k%E1%BA%BFt-qu%E1%BA%A3" name="k%E1%BA%BFt-qu%E1%BA%A3"></a></p>
<p>Kết quả nó sẽ giống vầy (có thêm style của bootstrap nữa nha) <img src="https://farm5.staticflickr.com/4169/34124808091_f4c2130fd2_o.png" alt="demo image"></p>
<h1 id="5-Cach-hoat-dong"><a href="#5-Cach-hoat-dong" class="headerlink" title="5. Cách hoạt động"></a>5. Cách hoạt động</h1><p><a id="markdown-c%C3%A1ch-ho%E1%BA%A1t-%C4%91%E1%BB%99ng" name="c%C3%A1ch-ho%E1%BA%A1t-%C4%91%E1%BB%99ng"></a></p>
<p>HtmlHelperExtensions chính là chỗ mà điều kỳ diệu xảy ra. Keyword Extensions sẽ “đăng ký” nó thành một extension của HtmlHelper</p>
<h2 id="5-1-Cac-buoc"><a href="#5-1-Cac-buoc" class="headerlink" title="5.1. Các bước"></a>5.1. Các bước</h2><p><a id="markdown-c%C3%A1c-b%C6%B0%E1%BB%9Bc" name="c%C3%A1c-b%C6%B0%E1%BB%9Bc"></a></p>
<p>Về cơ bản, nó sẽ làm những bước sau</p>
<ol>
<li> Lấy danh sách Items</li>
<li> Lấy Index property (nếu bạn có khai báo index)</li>
<li> Generate một item default mới (nếu bạn kêu nó làm thế)</li>
<li> Dựng code HTML</li>
</ol>
<pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;div class&#x3D;&quot;form-group&quot;&gt;
    &lt;!-- List of your html input tag generated by editorfor and extended templates --&gt;
&lt;&#x2F;div&gt;</code></pre>

<h2 id="5-2-Tai-sao-lai-can-Index"><a href="#5-2-Tai-sao-lai-can-Index" class="headerlink" title="5.2. Tại sao lại cần Index"></a>5.2. Tại sao lại cần Index</h2><p><a id="markdown-t%E1%BA%A1i-sao-l%E1%BA%A1i-c%E1%BA%A7n-index" name="t%E1%BA%A1i-sao-l%E1%BA%A1i-c%E1%BA%A7n-index"></a></p>
<p>Có 2 cách để send một list data tới controller</p>
<ul>
<li>dùng một mảng có đánh số<ul>
<li>  xóa 1 item sẽ làm lộn xộn cả list, controller chỉ nhận mảng liên tục</li>
<li>  thêm mới 1 item thì cần phải biết index cuối cùng là bao nhiêu</li>
</ul>
</li>
</ul>
<pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;YourList[0].Data&quot;&#x2F;&gt;
&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;YourList[1].Data&quot;&#x2F;&gt;</code></pre>

<ul>
<li>dùng mảng có index dạng string<ul>
<li>yêu cầu thêm một tag input ẩn để chứa index</li>
<li>dễ thêm, xóa, sửa item</li>
</ul>
</li>
</ul>
<pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;YourList.Index&quot; value&#x3D;&quot;radomGuid1&quot;&#x2F;&gt;
&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;YourList[randomGuid1].Data&quot;&#x2F;&gt;
 
&lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;YourList.Index&quot; value&#x3D;&quot;anotherGuid2&quot;&#x2F;&gt;
&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;YourList[anotherGuid2].Data&quot;&#x2F;&gt;</code></pre>

<p>Như bạn cũng thấy, giá trị của hidden input tag có thể là bất cứ gì, miễn là giá trị trong ngoặc vuông giống với nó.</p>
<p>Bước 1 bước xa hơn, đoạn code javascript bên trên sẽ tạo ra index dạng GUID, cho nên bạn sẽ không phải lo về vấn đề trùng lặp index. Tuy nhiên, nó ko phải là GUID thiệt, vì để generate GUID thiệt sẽ hơi phức tạp, và làm cho app nặng lên, giống như xài tên lửa đi giết ruồi, cho nên để cho đơn giản, đoạn code đó chỉ sinh ra “fake” GUID, nhưng theo cách code thì khó mà trùng được</p>
<p>Theo bạn, bạn có cách nào cải tiến đoạn code bên trên không?</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>ASP.NET</category>
      </categories>
      <tags>
        <tag>editorfor</tag>
        <tag>ajax</tag>
        <tag>editorformany</tag>
        <tag>list</tag>
      </tags>
  </entry>
  <entry>
    <title>Wordpress - Install Wordpress to Docker containers from Windows</title>
    <url>/2017/08/02/wordpress-install-wordpress-to-docker-containers-from-windows/</url>
    <content><![CDATA[<p>In this tutorial, I will guide your through on how to install wordpress on a container of docker. The same step can be use to install wordpress on an acture Ubuntu machine, with some small changes</p>
<span id="more"></span>

<!-- TOC -->

<ul>
<li><a href="#1-install-apache">1. Install Apache</a></li>
<li><a href="#2-install-mysql">2. Install MySQL</a><ul>
<li><a href="#21-install-mysql-server">2.1. Install mysql-server</a></li>
</ul>
</li>
<li><a href="#3-install-php">3. Install PHP</a></li>
<li><a href="#4-setup-wordpress">4. Setup Wordpress</a><ul>
<li><a href="#41-create-mysql-database-and-user">4.1. Create MySQL database and user</a></li>
<li><a href="#42-install-wordpress">4.2. Install wordpress</a></li>
<li><a href="#43-config">4.3. Config</a></li>
</ul>
</li>
</ul>
<!-- /TOC -->

<h1 id="1-Install-Apache"><a href="#1-Install-Apache" class="headerlink" title="1. Install Apache"></a>1. Install Apache</h1><p><a id="markdown-install-apache" name="install-apache"></a></p>
<p>Login to Docker container with SuperPutty / Putty</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">apt-get update
apt-get install apache2</code></pre>

<p>(type y to confirm installation)</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">apache2ctl configtest</code></pre>

<p>If output is</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">AH00558: apache2: Could not reliably determine the server&#39;s fully qualified domain name, using 127.0.1.1. Set the &#39;ServerName&#39; directive globally to suppress this message Syntax OK</code></pre>

<p>Meaning: apache cannot get the reliably server domain name</p>
<p><em><strong>IT JUST A WARNING</strong></em></p>
<p>To fix: edit <code>apache2.conf</code></p>
<blockquote>
<p>Recommended: Map network drive to easily config or copy file to container <a href="https://github.com/dokan-dev/dokany/releases">Download</a> </p>
<ul>
<li>install Dolkan <a href="https://github.com/Foreveryone-cz/win-sshfs/releases">Download</a></li>
<li>install win-sshfs follow the step to map<br><img src="http://farm5.staticflickr.com/4344/36326087365_4a8b8a7418_o.png" alt="mapping instruction"></li>
</ul>
</blockquote>
<p>open <code>/etc/apache2/apache2.conf</code> in your favorite editor</p>
<p>add this line at the end of the file</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">ServerName localhost</code></pre>

<p>type <code>apache2ctl configtest</code> again to see warning is disappeared</p>
<h1 id="2-Install-MySQL"><a href="#2-Install-MySQL" class="headerlink" title="2. Install MySQL"></a>2. Install MySQL</h1><p><a id="markdown-install-mysql" name="install-mysql"></a></p>
<h2 id="2-1-Install-mysql-server"><a href="#2-1-Install-mysql-server" class="headerlink" title="2.1. Install mysql-server"></a>2.1. Install mysql-server</h2><p><a id="markdown-install-mysql-server" name="install-mysql-server"></a></p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">apt-get install mysql-server</code></pre>

<p>In the installation process, type password for root user</p>
<h1 id="3-Install-PHP"><a href="#3-Install-PHP" class="headerlink" title="3. Install PHP"></a>3. Install PHP</h1><p><a id="markdown-install-php" name="install-php"></a></p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">apt-get install php libapache2-mod-php php-mcrypt php-mysql</code></pre>

<p>Config apache priority for index.php instead of index.html</p>
<p>Because dir.conf presented as folder, so we have to edit with linux nano</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">nano &#x2F;etc&#x2F;apache2&#x2F;mods-enabled&#x2F;dir.conf</code></pre>

<p>It should look like this</p>
<p><img src="http://farm5.staticflickr.com/4403/36326087315_f9a2a593a3_o.png" alt="dir.conf"></p>
<p>Type <code>Ctrl + X</code> to exit nano, type y to save</p>
<p>Restart Apache2 server</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">service apache2 restart</code></pre>

<p>To test PHP server (REMOVE the file after test because it will show your server info)</p>
<p>Create new file <code>info.php</code> in <code>/var/www/html/</code></p>
<p>Insert some PHP code</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php">&lt;?php phpinfo(); ?&gt;</code></pre>

<p>Then you can access <a href="http://your_domain_name/info">http://your_domain_name/info</a></p>
<p><img src="http://farm5.staticflickr.com/4426/36326087275_5e74efdb8a_o.png" alt="phpinfo"></p>
<h1 id="4-Setup-Wordpress"><a href="#4-Setup-Wordpress" class="headerlink" title="4. Setup Wordpress"></a>4. Setup Wordpress</h1><p><a id="markdown-setup-wordpress" name="setup-wordpress"></a></p>
<h2 id="4-1-Create-MySQL-database-and-user"><a href="#4-1-Create-MySQL-database-and-user" class="headerlink" title="4.1. Create MySQL database and user"></a>4.1. Create MySQL database and user</h2><p><a id="markdown-create-mysql-database-and-user" name="create-mysql-database-and-user"></a></p>
<p>Start MySQL server</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">&#x2F;etc&#x2F;init.d&#x2F;mysql start</code></pre>

<p>Login into mysql</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">mysql -u root -p</code></pre>

<p>Enter your password</p>
<p>Your console windows will now start with <code>mysql&amp;gt;</code></p>
<p>Type in to create database for wordpress (database name can be customize)</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">CREATE DATABASE wordpress DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci;</code></pre>

<p>SQL query must end with semicolon(;)</p>
<p>Create a separate account to manage wordpress database</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">GRANT ALL ON wordpress.* TO &#39;admin&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;admin&#39;;</code></pre>

<p>Flush the current Privileges, so MySQL will know about the recent changes</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">FLUSH PRIVILEGES;</code></pre>

<p>Exit MySQL</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">EXIT;</code></pre>

<p>Adjust Apache configuration to allow for <code>.htaccess</code> override and rewrites</p>
<p>Open apache configuration file to edit</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">&#x2F;etc&#x2F;apache2&#x2F;apache2.conf</code></pre>

<p>You can use Ubuntu nano editor, or if you’ve mapped the network drive before (step 4), open the file like any other file on windows</p>
<p>Nano</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">nano &#x2F;etc&#x2F;apache2&#x2F;apache2.conf</code></pre>

<p>Network Drive</p>
<p><img src="http://farm5.staticflickr.com/4323/36326087335_f70a215f0f_o.png" alt="network drive edit file"></p>
<p>Search for this part and change</p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">. . .
 
&lt;Directory &#x2F;var&#x2F;www&#x2F;html&#x2F;&gt;
    AllowOverride All
&lt;&#x2F;Directory&gt;
 
. . .</code></pre>

<p>Save and close the file</p>
<p>Enable rewrite module</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">a2enmod rewrite</code></pre>

<p>Enable changes</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">apache2ctl configtest</code></pre>

<p>Restart apache2 service</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">service apache2 restart</code></pre>

<h2 id="4-2-Install-wordpress"><a href="#4-2-Install-wordpress" class="headerlink" title="4.2. Install wordpress"></a>4.2. Install wordpress</h2><p><a id="markdown-install-wordpress" name="install-wordpress"></a></p>
<p>Download wordpress at: <a href="https://wordpress.org/">https://wordpress.org/</a></p>
<p>Extract to a folder</p>
<p>Copy the content of folder “wordpress” to folder “/var/www/html” on container</p>
<p>Permission and .htaccess Show hidden files and folder on WinSCP</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">Open WinSCP &gt; Option &gt; References…</code></pre>

<p><img src="http://farm5.staticflickr.com/4300/36326087085_a8c29ef11e_o.png" alt="show hidden file"></p>
<p>Create <code>.htaccess</code> file</p>
<p>Right click on an empty space &gt; New File &gt; enter <code>.htaccess</code></p>
<p><img src="http://farm5.staticflickr.com/4441/36326087035_022f35bffa_o.png" alt="create .htaccess"></p>
<p>Set Read / Write permission for .htaccess</p>
<p>Right click on .htaccess &gt; Properties</p>
<p><img src="http://farm5.staticflickr.com/4325/35517228003_73383a8bcc_o.png" alt="permissions for .htaccess"></p>
<p>Set permission recursively for all 3 folders</p>
<p><img src="http://farm5.staticflickr.com/4409/35490057164_0d1ff22807_o.png" alt="permissions for all 3 folders"></p>
<h2 id="4-3-Config"><a href="#4-3-Config" class="headerlink" title="4.3. Config"></a>4.3. Config</h2><p><a id="markdown-config" name="config"></a></p>
<p>Open <code>wp-config.php</code> and fill in these info</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php">&#x2F;&#x2F; ** MySQL settings - You can get this info from your web host ** &#x2F;&#x2F;
&#x2F;** The name of the database for WordPress *&#x2F;
define(&#39;DB_NAME&#39;, &#39;wordpress&#39;);
 
&#x2F;** MySQL database username *&#x2F;
define(&#39;DB_USER&#39;, &#39;admin&#39;);
 
&#x2F;** MySQL database password *&#x2F;
define(&#39;DB_PASSWORD&#39;, &#39;admin&#39;);
 
&#x2F;** MySQL hostname *&#x2F;
define(&#39;DB_HOST&#39;, &#39;localhost&#39;);
 
&#x2F;** Database Charset to use in creating database tables. *&#x2F;
define(&#39;DB_CHARSET&#39;, &#39;utf8&#39;);
 
&#x2F;** The Database Collate type. Don&#39;t change this if in doubt. *&#x2F;
define(&#39;DB_COLLATE&#39;, &#39;&#39;);</code></pre>

<p>Open link and copy the code show up then replace them</p>
<p><img src="http://farm5.staticflickr.com/4388/36326086765_8627dd85cc_o.png" alt="salt"></p>
<p>Add this line (to enable wordpress can modify files and folder directly</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php">define(&#39;FS_METHOD&#39;, &#39;direct&#39;);</code></pre>

<p>It’s done, open your <code>domain:port</code> to config wordpress using web interface</p>
]]></content>
      <categories>
        <category>Others</category>
      </categories>
      <tags>
        <tag>apache</tag>
        <tag>container</tag>
        <tag>docker</tag>
        <tag>php</tag>
        <tag>ubuntu</tag>
        <tag>wordpress</tag>
      </tags>
  </entry>
  <entry>
    <title>[ASP.NET Identity] - 1 - Introduction</title>
    <url>/2017/08/30/aspnet-identity-1-introduction/</url>
    <content><![CDATA[<p>Một trong những thứ bí ẩn nhất khi làm web bằng ASP.NET là hệ thống ASP.NET Identity cũng do Microsoft phát triển. Với khá nhiều hardcode, kèm với nhiều yêu cầu phức tạp về users và roles, Identity phình to tới mức khó tin, và là một cục xương khó nhằn cho bất kỳ ai mới học ASP.NET</p>
<span id="more"></span>

<!-- TOC -->

<ul>
<li><a href="#1-qu%C3%A1-tr%C3%ACnh-ph%C3%A1t-tri%E1%BB%83n">1. Quá trình phát triển</a><ul>
<li><a href="#11-aspnet-membership">1.1. Asp.net Membership</a></li>
<li><a href="#12-aspnet-simple-membership">1.2. Asp.net Simple Membership</a></li>
<li><a href="#13-aspnet-universal-providers">1.3. ASP.NET Universal Providers</a></li>
<li><a href="#14-aspnet-identity">1.4. Asp.net Identity</a></li>
</ul>
</li>
<li><a href="#2-b%E1%BA%AFt-%C4%91%E1%BA%A7u-v%E1%BB%9Bi-aspnet-identity">2. Bắt đầu với ASP.NET Identity</a></li>
<li><a href="#3-break-down">3. Break-down</a><ul>
<li><a href="#31-database">3.1. Database</a><ul>
<li><a href="#311-k%E1%BA%BFt-n%E1%BB%91i-t%E1%BB%9Bi-database">3.1.1. Kết nối tới database</a></li>
<li><a href="#312-code-first">3.1.2. Code first</a></li>
<li><a href="#313-c%E1%BA%A5u-tr%C3%BAc">3.1.3. Cấu trúc</a></li>
</ul>
</li>
<li><a href="#32-ki%E1%BA%BFn-tr%C3%BAc-v%C3%A0-c%C3%A1c-kh%C3%A1i-ni%E1%BB%87m">3.2. Kiến trúc và các khái niệm</a><ul>
<li><a href="#321-aspnetusers">3.2.1. AspNetUsers</a></li>
<li><a href="#322-aspnetuserlogins">3.2.2. AspNetUserLogins</a></li>
<li><a href="#323-aspnetuserclaims">3.2.3. AspNetUserClaims</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<!-- /TOC -->

<h1 id="1-Qua-trinh-phat-trien"><a href="#1-Qua-trinh-phat-trien" class="headerlink" title="1. Quá trình phát triển"></a>1. Quá trình phát triển</h1><p><a id="markdown-qu%C3%A1-tr%C3%ACnh-ph%C3%A1t-tri%E1%BB%83n" name="qu%C3%A1-tr%C3%ACnh-ph%C3%A1t-tri%E1%BB%83n"></a></p>
<h2 id="1-1-Asp-net-Membership"><a href="#1-1-Asp-net-Membership" class="headerlink" title="1.1. Asp.net Membership"></a>1.1. Asp.net Membership</h2><p><a id="markdown-asp.net-membership" name="asp.net-membership"></a></p>
<p>Hồi năm 2k hồi đó, có nhu cầu rõ rệt về websites phải có đăng nhập, đăng ký thành viên đồ các kiểu. MS thấy vậy nhảy vào và ASP.NET Membership ra đời</p>
<p>Version này cực kỳ hạn chế + DB được thiết kế cho SQL Server, và ko thể thay đổi + Tuy các provider được thiết kể để có thể thay đổi, nhưng mà hàng loạt hardcode + tư duy chắc chắn phải dùng SQL server của dev khiến việc thay đổi này vô cùng cực khổ + Ko xài được OWIN</p>
<h2 id="1-2-Asp-net-Simple-Membership"><a href="#1-2-Asp-net-Simple-Membership" class="headerlink" title="1.2. Asp.net Simple Membership"></a>1.2. Asp.net Simple Membership</h2><p><a id="markdown-asp.net-simple-membership" name="asp.net-simple-membership"></a></p>
<p>Sang tới 2k10, lúc này WebMatrix đang thịnh, MS cũng cho ra liền một bản rút gọn / nâng cấp của Membership, nhưng tóm lại vẫn quá nhiều vấn đề</p>
<h2 id="1-3-ASP-NET-Universal-Providers"><a href="#1-3-ASP-NET-Universal-Providers" class="headerlink" title="1.3. ASP.NET Universal Providers"></a>1.3. ASP.NET Universal Providers</h2><p><a id="markdown-asp.net-universal-providers" name="asp.net-universal-providers"></a></p>
<p>Tới hồi Azure ra đời, MS vẫn chưa chịu từ bỏ nền tảng Membership, cho ra mắt phiên bản Universal Providers (đặt tên sang choảnh)</p>
<p>Vì xài chung nền tảng kiến trúc, nên các lỗi lầm từ trước đó vẫn còn y nguyên</p>
<h2 id="1-4-Asp-net-Identity"><a href="#1-4-Asp-net-Identity" class="headerlink" title="1.4. Asp.net Identity"></a>1.4. Asp.net Identity</h2><p><a id="markdown-asp.net-identity" name="asp.net-identity"></a></p>
<p>Sau quá nhiều feedback, asp.net team cho ra đời version này, khắc phục mấy cái hạn chế trên kia.</p>
<ul>
<li>  Có thể xài chung cho nhiều Framework (MVC, Forms, Web Pages, Web API, SingalR)</li>
<li>  Dễ gắn thêm field vào user profile</li>
<li>  Có thể gắn các Storage khác vô ngoài SQL Server (bớt đau khổ hơn tí)</li>
<li>  Unit test được</li>
<li>  Dùng claims (sẽ giải thích sau)</li>
<li>  OWIN tốt</li>
<li>  Support Azure Active Directory</li>
<li>  Cài được bằng Nuget</li>
</ul>
<p>Bắt đầu nhảy vô nhé</p>
<h1 id="2-Bat-dau-voi-ASP-NET-Identity"><a href="#2-Bat-dau-voi-ASP-NET-Identity" class="headerlink" title="2. Bắt đầu với ASP.NET Identity"></a>2. Bắt đầu với ASP.NET Identity</h1><p><a id="markdown-b%E1%BA%AFt-%C4%91%E1%BA%A7u-v%E1%BB%9Bi-asp.net-identity" name="b%E1%BA%AFt-%C4%91%E1%BA%A7u-v%E1%BB%9Bi-asp.net-identity"></a></p>
<blockquote>
<p>Xem code ở đây: <a href="https://github.com/cuoilennaocacban/ASP.NETIdentty2">ASP.NET Identity 2 clone on GitHub</a></p>
</blockquote>
<p>Để hiểu rõ hơn, bạn có thể tạo một Sample Project bằng ASP.NET, chọn Identity là Individual nhé File &gt; New &gt; Project…</p>
<p><img src="https://farm5.staticflickr.com/4408/36631193821_b2fea13a5c_o.png" alt="New Project"></p>
<p>Ngay khi tạo xong, bạn có thể nhấn chạy luôn</p>
<p><img src="https://farm5.staticflickr.com/4402/35961354023_95481c7d6a_o.png" alt="Run Project"></p>
<h1 id="3-Break-down"><a href="#3-Break-down" class="headerlink" title="3. Break-down"></a>3. Break-down</h1><p><a id="markdown-break-down" name="break-down"></a></p>
<p>Bây giờ mình sẽ tìm hiểu từng phần một của Identity nhé</p>
<h2 id="3-1-Database"><a href="#3-1-Database" class="headerlink" title="3.1. Database"></a>3.1. Database</h2><p><a id="markdown-database" name="database"></a></p>
<h3 id="3-1-1-Ket-noi-toi-database"><a href="#3-1-1-Ket-noi-toi-database" class="headerlink" title="3.1.1. Kết nối tới database"></a>3.1.1. Kết nối tới database</h3><p><a id="markdown-k%E1%BA%BFt-n%E1%BB%91i-t%E1%BB%9Bi-database" name="k%E1%BA%BFt-n%E1%BB%91i-t%E1%BB%9Bi-database"></a></p>
<p>Mặc định, Identity dùng connection string có tên “DefaultConnection” Mở <code>Models/IdentityModels</code></p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">public class ApplicationDbContext : IdentityDbContext&lt;ApplicationUser&gt;
&#123; 
    public ApplicationDbContext() : base(&quot;DefaultConnection&quot;, throwIfV1Schema: false)
    &#123;
    &#125;

    public static ApplicationDbContext Create()
    &#123;
        return new ApplicationDbContext();
    &#125;
&#125;</code></pre>

<p>Mở Web.config, kiếm <code>DefaultConnection</code>, bạn sẽ thấy connection string của nó nối tới Database</p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">&lt;connectionStrings&gt;
  &lt;add name&#x3D;&quot;DefaultConnection&quot;
       connectionString&#x3D;&quot;Data Source&#x3D;(LocalDb)\\MSSQLLocalDB;AttachDbFilename&#x3D;|DataDirectory|\\aspnet-LearnIdentity2-20170824112720.mdf;Initial Catalog&#x3D;aspnet-LearnIdentity2-20170824112720;Integrated Security&#x3D;True&quot;
       providerName&#x3D;&quot;System.Data.SqlClient&quot; &#x2F;&gt;
&lt;&#x2F;connectionStrings&gt;</code></pre>

<p>Như vậy, Identity, tùy theo framework bạn sử dụng, sẽ dùng LocalDb hoặc SQL Server Dùng SQL Server Management Studio connect tới db này, bạn sẽ thấy nó đang nằm chình ình trong đó</p>
<p><img src="https://farm5.staticflickr.com/4337/36631439311_5da8d15c1a_o.png" alt="Database trong LocalDb"></p>
<p>Vậy bạn có tự hỏi làm sao mà mới chỉ chạy project thôi mà Identity đã tạo được database?</p>
<h3 id="3-1-2-Code-first"><a href="#3-1-2-Code-first" class="headerlink" title="3.1.2. Code first"></a>3.1.2. Code first</h3><p><a id="markdown-code-first" name="code-first"></a></p>
<p>Để trả lời cho câu hỏi đó, từ EF4, MS đã giới thiệu một hướng tiếp cận hoàn toàn mới gọi là Code first, bên cạnh hướng tiếp cận truyền thống là Database First như xưa nay. Với hướng tiếp cận này, Dev chỉ cần tập trung vào code của mình, db sẽ do EF tạo ra ứng với code của dev</p>
<p>Một flow cơ bản là Dev viết các model và class -&gt; Nhấn F5 -&gt; EF tạo / map database -&gt; Ứng dụng khởi chạy với datbase được tạo / map</p>
<h3 id="3-1-3-Cau-truc"><a href="#3-1-3-Cau-truc" class="headerlink" title="3.1.3. Cấu trúc"></a>3.1.3. Cấu trúc</h3><p><a id="markdown-c%E1%BA%A5u-tr%C3%BAc" name="c%E1%BA%A5u-tr%C3%BAc"></a></p>
<p>Identity tạo ra 5 bảng trong DB, và mỗi bảng đều liên hệ với nhau</p>
<p><img src="https://farm5.staticflickr.com/4381/35961946823_1e233cd9ef_o.png" alt="Db Structure"></p>
<p>Tất cả các trường Id đều dùng nvarchar(128), giá trị lưu trữ là code GUID</p>
<h2 id="3-2-Kien-truc-va-cac-khai-niem"><a href="#3-2-Kien-truc-va-cac-khai-niem" class="headerlink" title="3.2. Kiến trúc và các khái niệm"></a>3.2. Kiến trúc và các khái niệm</h2><p><a id="markdown-ki%E1%BA%BFn-tr%C3%BAc-v%C3%A0-c%C3%A1c-kh%C3%A1i-ni%E1%BB%87m" name="ki%E1%BA%BFn-tr%C3%BAc-v%C3%A0-c%C3%A1c-kh%C3%A1i-ni%E1%BB%87m"></a></p>
<h3 id="3-2-1-AspNetUsers"><a href="#3-2-1-AspNetUsers" class="headerlink" title="3.2.1. AspNetUsers"></a>3.2.1. AspNetUsers</h3><p><a id="markdown-aspnetusers" name="aspnetusers"></a></p>
<p><strong>PasswordHash</strong></p>
<p>Identity ko lưu trữ trực tiếp password theo dạng plain text (đề phòng trường hợp Db của bạn bị hack, hacker cũng ko biết password) <code>ASP.NETIdentty2/src/Microsoft.AspNet.Identity.Core/Crypto.cs</code></p>
<p>Identity Hash password của bạn dựa trên 1 chuỗi salt 128 bit. Nói chung về thuật toán mã hóa bạn cũng ko cần phải quan tâm :D</p>
<p>Trong Identity Core, thuật toán này có thay đổi, nên việc convert từ Identity 2 lên 3 sẽ cần configure lại đôi chút</p>
<p><strong>SecurityStamp</strong></p>
<p>Về cơ bản, SecurityStamp được dùng để xác thực một request nào đó. Giả sử như bạn đổi pass ở máy này, nhưng trên máy khác vẫn lưu cookie, thì ngay khi đổi pass xong, SecurityStamp thay đổi, cookie trên tất cả các máy khác sẽ mất hiệu lực</p>
<h3 id="3-2-2-AspNetUserLogins"><a href="#3-2-2-AspNetUserLogins" class="headerlink" title="3.2.2. AspNetUserLogins"></a>3.2.2. AspNetUserLogins</h3><p><a id="markdown-aspnetuserlogins" name="aspnetuserlogins"></a></p>
<p>Bảng này chịu trách nhiệm cho việc login bằng account của các dịch vụ thứ 3 như Google, Facebook, Twitter,…</p>
<p><strong>LoginProvider</strong></p>
<p>Là tên của Service được dùng để login (ví dụ “Facebook”, “Google”)</p>
<p><strong>ProviderKey</strong></p>
<p>Là một key ko trùng lặp do service cung cấp cho bạn, key này gắn liền với tài khoản của bạn tại service đó</p>
<p>Cả 3 field này kết hợp tạo thành khóa chính. Tức là 1 user có thể đăng nhập bằng nhiều dịch vụ khác nhau</p>
<p>Bảng này cho phép Identity dùng OWIN</p>
<h3 id="3-2-3-AspNetUserClaims"><a href="#3-2-3-AspNetUserClaims" class="headerlink" title="3.2.3. AspNetUserClaims"></a>3.2.3. AspNetUserClaims</h3><p><a id="markdown-aspnetuserclaims" name="aspnetuserclaims"></a></p>
<p><code>claim</code> là một hành vi mô mà một chủ thể nào đó tuyên bố điều gì đó về chính nó hoặc về các chủ thể khác.</p>
<blockquote>
<p>Ví dụ: User A claim rằng A có quyền xem hình</p>
</blockquote>
<p><strong><code>Claim-base Security</code></strong> Identity hỗ trợ 2 kiểu Security là Role-base Security và Claim-base Security. Về role-base security sẽ nói trong đoạn tiếp theo của bài blog này</p>
<p><strong>Một ví dụ thực tiễn</strong></p>
<p>Claim-base Security có mặt xung quanh chúng ta. Một ví dụ thực tiễn là khi bạn đi máy bay. Khi đi, bạn phải mang theo CMND/Passport + vé máy bay:</p>
<ol>
<li> <code>Authentication</code>: Nhân viên kiểm soát sẽ kiểm tra khuôn mặt của bạn với CMND/Passport</li>
<li> <code>Authorization</code>: Nhân viên kiểm tra vé của bạn xem có đúng là vé thiệt ko, ngồi ở hàng nào, ghế nào, sau cùng xuất ra cho bạn một tấm boarding passNhư vậy, tấm boarding pass này chứa khá nhiều thông tin: số chuyến bay, ghế ngồi, tên hành khách, và nhiều khi còn có thêm một dải băng từ màu đen ở mặt sau chứa mã số đã được mã hóa của tấm boarding pass đó nhằm chứng tỏ nó là một tấm boarding pass thiệt, ko phải đồ giả. Tấm boarding pass này chính là 1 tập hợp các <code>claim</code>, được xuất ra bởi một <code>issuer</code>. Khi bạn tới sân bay, trình các <code>claim</code> này ra, nhân viên sẽ đơn giản đối chiếu các claim này với database và cho bạn lên máy bay. Cũng cần lưu ý là tấm boarding pass này có thể được xuất bởi nhiều nguồn: trực tiếp tại quầy làm thủ tục, hay đại lý vé máy bay. Những nguồn này gọi là <code>issuer</code> Trong phần mềm, tập hợp các claim này gọi là <code>security token</code>. Mỗi security token được ký bởi một <code>issuer</code> đã tạo ra nó. Một ứng dụng có <code>claim-base security</code> yêu cầu user phải xác thực tài khoản của mình, và tùy vào các claim mà họ có để cấp các quyền cần thiết.</li>
</ol>
<p><strong>Role-base Security</strong></p>
<p>Ngoài claim, Identity còn cung cấp cho bạn một Role-base Security nữa</p>
<p>Role thì dễ hiểu rồi. Một user có thể được thêm vào nhiều role, và mỗi role sẽ cho user đó một số quyền hạn nhất định</p>
<p>Trong bài viết tiếp theo, chúng ta sẽ cùng đi vào tìm hiểu về code của ASP.NET Identity nhé</p>
<blockquote>
<p>Xem code ở đây: <a href="https://github.com/cuoilennaocacban/ASP.NETIdentty2">ASP.NET Identity 2 clone on GitHub</a></p>
</blockquote>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>ASP.NET</category>
      </categories>
      <tags>
        <tag>identity</tag>
      </tags>
  </entry>
  <entry>
    <title>[ASP.NET Core 2.0] - dùng VSCode và target .NET Framework</title>
    <url>/2017/12/10/asp-net-core-2-0-dung-vscode-va-target-net-framework/</url>
    <content><![CDATA[<p>Nếu cảm thấy Visual Studio Community quá nặng nề, nhưng bạn vẫn muốn dev website bằng asp.net, và target .net framework, vậy tại sao bạn không sử dụng VSCode nhỉ?</p>
<p>Trớ trêu thay, OmniSharp chưa hỗ trợ .net core 2 trên vscode, nhưng bài viết này sẽ hướng dẫn bạn cách để vượt qua giới hạn đó</p>
<p>Lưu ý là cách này chỉ hoạt động trên windows nhé</p>
<span id="more"></span>
<ul>
<li>  <a href="#1-chu%E1%BA%A9n-b%E1%BB%8B">1. Chuẩn bị</a></li>
<li><a href="#2-c%C3%A1c-b%C6%B0%E1%BB%9Bc-c%C3%A0i-%C4%91%E1%BA%B7t">2. Các bước cài đặt</a><ul>
<li>  <a href="#21-create-project">2.1. Create project</a></li>
<li>  <a href="#22-ch%E1%BB%89nh-s%E1%BB%ADa-project-%C4%91%E1%BB%83-target-net-framework-471-or-461">2.2. chỉnh sửa project để target .NET Framework 4.7.1 (or 4.6.1)</a></li>
<li>  <a href="#23-compile-run-v%C3%A0-debug">2.3. Compile, Run và Debug</a></li>
<li>  <a href="#24-run-and-debug">2.4. Run and Debug</a></li>
</ul>
</li>
</ul>
<h1 id="1-Chuan-bi"><a href="#1-Chuan-bi" class="headerlink" title="1. Chuẩn bị"></a>1. Chuẩn bị</h1><ul>
<li>  VSCode :v : <a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a></li>
<li>C# for Visual Studio Code (powered by OmniSharp) extension<ul>
<li>  Một vài Extension khác như <strong>Debugger for Chrome</strong>, <strong>Beautify</strong>, <strong>html css support</strong>, <strong>indent-rainbow</strong>, <strong>indenticator</strong>, <strong>material icon theme</strong>, <strong>sass lint</strong>, <strong>sort lines</strong></li>
</ul>
</li>
<li>  .NET Framework 4.7.1 developer pack: <a href="https://www.microsoft.com/net/download/thank-you/net471-developer-pack">https://www.microsoft.com/net/download/thank-you/net471-developer-pack</a></li>
<li>  Build Tools for Visual Studio 2017 (MSBuild is licensed under the MIT license): <a href="https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=BuildTools&rel=15">https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=BuildTools&amp;rel=15</a></li>
</ul>
<blockquote>
<p><img src="https://farm5.staticflickr.com/4531/24089620797_59f8abe75b_o.png"></p>
</blockquote>
<p>NẾU BẠN SỬ DỤNG .NET FRAMEWORK 4.6.1 Cài thêm nuget package sau vào project để bỏ các lỗi liên quan tới intellisense</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">dotnet add package NETStandard.Library.NETFramework --version 2.0.0-preview2-25405-01</code></pre>

<h1 id="2-Cac-buoc-cai-dat"><a href="#2-Cac-buoc-cai-dat" class="headerlink" title="2. Các bước cài đặt"></a>2. Các bước cài đặt</h1><h2 id="2-1-Create-project"><a href="#2-1-Create-project" class="headerlink" title="2.1. Create project"></a>2.1. Create project</h2><p>Open VSCode -&gt; Open Folder -&gt; trỏ tới folder sẽ chứa tất cả code của bạn Views &gt; Integrated Terminal rồi gõ </p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">dotnet new mvc</code></pre>

<p>SDK sẽ tạo ra toàn bộ folders và files cần thiết cho bạn Các lựa chọn khác khi tạo một project: <a href="https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-new?tabs=netcore2x">‘dotnet new’ command at docs.microsoft.com</a></p>
<h2 id="2-2-chinh-sua-project-de-target-NET-Framework-4-7-1-or-4-6-1"><a href="#2-2-chinh-sua-project-de-target-NET-Framework-4-7-1-or-4-6-1" class="headerlink" title="2.2. chỉnh sửa project để target .NET Framework 4.7.1 (or 4.6.1)"></a>2.2. chỉnh sửa project để target .NET Framework 4.7.1 (or 4.6.1)</h2><p>Trong thư mục gốc của project mới tạo, mở file <code>YourProjectName.csproj</code> và sửa như sau</p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">&lt;Project Sdk&#x3D;&quot;Microsoft.NET.Sdk.Web&quot;&gt;
 
  &lt;PropertyGroup&gt;
    &lt;TargetFramework&gt;net471&lt;&#x2F;TargetFramework&gt;
    &lt;!--RuntimeIdentifier is based on your local machine. A list of all available values here--&gt;
    &lt;RuntimeIdentifier&gt;win10-x64&lt;&#x2F;RuntimeIdentifier&gt;
  &lt;&#x2F;PropertyGroup&gt;
 
  &lt;ItemGroup&gt;
    &lt;!--These are nuget package targeting .net framework, dependency is .NET Standard 2.0, which is supported by .net framework 4.7.1--&gt;
    &lt;PackageReference Include&#x3D;&quot;Microsoft.AspNetCore&quot; Version&#x3D;&quot;2.0.1&quot; &#x2F;&gt;
    &lt;PackageReference Include&#x3D;&quot;Microsoft.AspNetCore.Mvc&quot; Version&#x3D;&quot;2.0.1&quot; &#x2F;&gt;
    &lt;PackageReference Include&#x3D;&quot;Microsoft.AspNetCore.Mvc.Razor.ViewCompilation&quot; Version&#x3D;&quot;2.0.1&quot; PrivateAssets&#x3D;&quot;All&quot; &#x2F;&gt;
    &lt;PackageReference Include&#x3D;&quot;Microsoft.AspNetCore.StaticFiles&quot; Version&#x3D;&quot;2.0.1&quot; &#x2F;&gt;
    &lt;PackageReference Include&#x3D;&quot;Microsoft.VisualStudio.Web.BrowserLink&quot; Version&#x3D;&quot;2.0.1&quot; &#x2F;&gt;
  &lt;&#x2F;ItemGroup&gt;
 
  &lt;ItemGroup&gt;
    &lt;DotNetCliToolReference Include&#x3D;&quot;Microsoft.VisualStudio.Web.CodeGeneration.Tools&quot; Version&#x3D;&quot;2.0.1&quot; &#x2F;&gt;
  &lt;&#x2F;ItemGroup&gt;
 
&lt;&#x2F;Project&gt;</code></pre>

<h2 id="2-3-Compile-Run-va-Debug"><a href="#2-3-Compile-Run-va-Debug" class="headerlink" title="2.3. Compile, Run và Debug"></a>2.3. Compile, Run và Debug</h2><ol>
<li> Debug &gt; Settings</li>
</ol>
<p><img src="https://farm5.staticflickr.com/4563/38068269685_37649c8f9e_o.png"></p>
<ol>
<li>Chọn <code>.NET Core</code> trong danh sách</li>
<li>Sửa file <code>launch.json</code> trong thư mục <code>.vscode</code> thành như sau</li>
</ol>
<p><img src="https://farm5.staticflickr.com/4683/27177480069_ee651b8559_o.png"></p>
<ol start="3">
<li> Tạo một file mới cũng trong thư mục đó, với tên là <code>tasks.json</code> với đoạn code sau</li>
</ol>
<pre class="line-numbers language-json" data-language="json"><code class="language-json">&#123;
    &quot;version&quot;: &quot;2.0.0&quot;,
    &quot;tasks&quot;: [
        &#123;
            &quot;taskName&quot;: &quot;build&quot;,
            &quot;command&quot;: &quot;dotnet&quot;,
            &quot;type&quot;: &quot;process&quot;,
            &quot;args&quot;: [
                &quot;build&quot;,
                &quot;$&#123;workspaceFolder&#125;&#x2F;StudyAspCore.csproj&quot;
            ],
            &quot;problemMatcher&quot;: &quot;$msCompile&quot;
        &#125;
    ]
&#125;</code></pre>

<h2 id="2-4-Run-and-Debug"><a href="#2-4-Run-and-Debug" class="headerlink" title="2.4. Run and Debug"></a>2.4. Run and Debug</h2><p>To run the application</p>
<p><img src="https://farm5.staticflickr.com/4583/38918103882_b12ebfb671_o.png"></p>
<p>Bạn cũng có thể chạy project bằng nút Run trên status bar</p>
<p><img src="https://farm5.staticflickr.com/4594/38068348135_e554c5e5ca_o.png"></p>
<p>Để debug thì chỉ cần đặt break point ngay tại nơi cần debug</p>
<p><img src="https://farm5.staticflickr.com/4599/38238463834_bf8bc671b6_o.png"></p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>ASP.NET</category>
        <category>VSCode</category>
      </categories>
      <tags>
        <tag>.net core</tag>
        <tag>.net framework</tag>
      </tags>
  </entry>
  <entry>
    <title>[ASP.NET Core 2.0] Custom Tag Helper</title>
    <url>/2018/01/12/asp-net-core-2-0-custom-tag-helper/</url>
    <content><![CDATA[<p>ASP.NET Core giới thiệu một cách vô cùng tự nhiên để xây dựng các thẻ <code>input</code>, <code>label</code> và một số thẻ khác với từ khóa <code>asp-for</code>, chúng được gọi là <em><code>tag helper</code></em></p>
<p>Bạn cũng có thể tạo ra các <code>tag helper</code> của riêng mình để render ra các tag mong muốn</p>
<span id="more"></span>

<!-- TOC -->

<ul>
<li><a href="#1-m%E1%BB%99t-s%E1%BB%91-tag-helper">1. Một số tag helper</a></li>
<li><a href="#2-v%E1%BA%A5n-%C4%91%E1%BB%81-v%E1%BB%9Bi-label-tag-helper">2. Vấn đề với label tag helper</a></li>
<li><a href="#3-customize-label-tag-helper">3. Customize Label tag helper</a><ul>
<li><a href="#31-code">3.1. Code</a></li>
<li><a href="#32-khai-b%C3%A1o">3.2. Khai báo</a></li>
</ul>
</li>
<li><a href="#4-s%E1%BB%AD-d%E1%BB%A5ng">4. Sử dụng</a></li>
</ul>
<!-- /TOC -->

<h1 id="1-Mot-so-tag-helper"><a href="#1-Mot-so-tag-helper" class="headerlink" title="1. Một số tag helper"></a>1. Một số tag helper</h1><p><a id="markdown-m%E1%BB%99t-s%E1%BB%91-tag-helper" name="m%E1%BB%99t-s%E1%BB%91-tag-helper"></a></p>
<p>ASP.NET MVC5</p>
<p>ASP.NET Core</p>
<table>
<thead>
<tr>
<th>ASP.NET MVC5</th>
<th>ASP.NET Core</th>
</tr>
</thead>
<tbody><tr>
<td><code>@Html.TextBoxFor()</code></td>
<td><code>&lt;input asp-for=&quot;&quot;/&gt;</code></td>
</tr>
<tr>
<td><code>@Html.DropDownListFor()</code></td>
<td><code>&lt;select asp-for=&quot;&quot; asp-items=&quot;&quot;/&gt;</code></td>
</tr>
<tr>
<td><code>@Html.LabelFor()</code></td>
<td><code>&lt;label asp-for=&quot;&quot;&gt;&lt;/label&gt;</code></td>
</tr>
<tr>
<td><code>@Html.ValidationMessageFor()</code></td>
<td><code>&lt;anytag asp-validation-for=&quot;&quot;&gt;&lt;/anytag&gt;</code></td>
</tr>
</tbody></table>
<h1 id="2-Van-de-voi-label-tag-helper"><a href="#2-Van-de-voi-label-tag-helper" class="headerlink" title="2. Vấn đề với label tag helper"></a>2. Vấn đề với label tag helper</h1><p><a id="markdown-v%E1%BA%A5n-%C4%91%E1%BB%81-v%E1%BB%9Bi-label-tag-helper" name="v%E1%BA%A5n-%C4%91%E1%BB%81-v%E1%BB%9Bi-label-tag-helper"></a></p>
<p><code>label</code> là cái tag mà bạn sẽ customize hơi nhiều trong ứng dụng asp.net core của mình. Lý do là vì bạn muốn nó có thêm một dấu <code>*</code> màu đỏ đối với các input yêu cầu bắt buộc, bạn cũng muốn nó có thêm <code>(500 ký tự)</code> khi ô input chỉ cho phép nhập 500 ký tự.</p>
<p>Tất nhiên, tất cả những cái đó đều có thể thêm vào dễ dàng bằng cách … add tay</p>
<p>ASP.NET MVC, và sau này là ASP.NET CORE, cho phép bạn xây dựng <code>model</code> với các <code>DataAnnotation</code> nhằm khai báo cho cơ sở dữ liệu biết các giới hạn hoặc định nghĩa của một column trên database, đồng thời giúp bạn validate input field của nó ở client-side code</p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">[Required]
[Display(Name &#x3D; &quot;User name&quot;)]
[StringLenght(15)]
public string Username &#123; get; set; &#125;</code></pre>

<p>Tuy nhiên, khi tạo input field cho property <code>username</code> này, bạn vẫn phải tự tạo tay các dấu <code>*</code> và dòng chữ <code>tối đa 15 ký tự</code> kia</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;label asp-for&#x3D;&quot;Username&quot;&gt;&lt;&#x2F;label&gt;
&lt;input asp-for&#x3D;&quot;Username&quot;&#x2F;&gt;
&lt;span asp-validation-for&#x3D;&quot;Username&quot;&gt;&lt;&#x2F;span&gt;</code></pre>

<p>đoạn code trên sẽ generate ra các dòng html sau</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;label for&#x3D;&quot;Username&quot;&gt;User name&lt;&#x2F;label&gt;
....các dòng khác...</code></pre>

<h1 id="3-Customize-Label-tag-helper"><a href="#3-Customize-Label-tag-helper" class="headerlink" title="3. Customize Label tag helper"></a>3. Customize Label tag helper</h1><p><a id="markdown-customize-label-tag-helper" name="customize-label-tag-helper"></a></p>
<p>Chúng ta sẽ tạo ra một custom tag helper với tên là <code>requiredlabel</code></p>
<h2 id="3-1-Code"><a href="#3-1-Code" class="headerlink" title="3.1. Code"></a>3.1. Code</h2><p><a id="markdown-code" name="code"></a></p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">namespace YourNamespace.Extensions.TagHelpers
&#123;
    using System;
    using System.IO;
    using System.Text.Encodings.Web;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.TagHelpers;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    using Microsoft.AspNetCore.Razor.TagHelpers;
 
    &#x2F;&#x2F; Source code for label tag helper: Mvc&#x2F;src&#x2F;Microsoft.AspNetCore.Mvc.TagHelpers&#x2F;LabelTagHelper.cs
    &#x2F;&#x2F; https:&#x2F;&#x2F;github.com&#x2F;aspnet&#x2F;Mvc&#x2F;blob&#x2F;dev&#x2F;src&#x2F;Microsoft.AspNetCore.Mvc.TagHelpers&#x2F;LabelTagHelper.cs
 
    [HtmlTargetElement(&quot;requiredlabel&quot;, Attributes &#x3D; ForAttributeName)]
    public class RequiredLabelTagHelper : TagHelper
    &#123;
        private const string ForAttributeName &#x3D; &quot;asp-for&quot;;
 
        &#x2F;&#x2F; Will be used as highlight-class in html
        public string HighlightClass &#123; get; set; &#125;
 
        &#x2F;&#x2F;&#x2F; &lt;summary&gt;
        &#x2F;&#x2F;&#x2F; Creates a new &lt;see cref&#x3D;&quot;LabelTagHelper&quot;&#x2F;&gt;.
        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;
        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;generator&quot;&gt;The &lt;see cref&#x3D;&quot;IHtmlGenerator&quot;&#x2F;&gt;.&lt;&#x2F;param&gt;
        public RequiredLabelTagHelper(IHtmlGenerator generator)
        &#123;
            Generator &#x3D; generator;
        &#125;
 
        &#x2F;&#x2F;&#x2F; &lt;inheritdoc &#x2F;&gt;
        public override int Order &#x3D;&gt; -1000;
 
        [HtmlAttributeNotBound]
        [ViewContext]
        public ViewContext ViewContext &#123; get; set; &#125;
 
        protected IHtmlGenerator Generator &#123; get; &#125;
 
        &#x2F;&#x2F;&#x2F; &lt;summary&gt;
        &#x2F;&#x2F;&#x2F; An expression to be evaluated against the current model.
        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;
        [HtmlAttributeName(ForAttributeName)]
        public ModelExpression For &#123; get; set; &#125;
 
        &#x2F;&#x2F;&#x2F; &lt;inheritdoc &#x2F;&gt;
        &#x2F;&#x2F;&#x2F; &lt;remarks&gt;Does nothing if &lt;see cref&#x3D;&quot;For&quot;&#x2F;&gt; is &lt;c&gt;null&lt;&#x2F;c&gt;.&lt;&#x2F;remarks&gt;
        public override void Process(TagHelperContext context, TagHelperOutput output)
        &#123;
            if (context &#x3D;&#x3D; null)
            &#123;
                throw new ArgumentNullException(nameof(context));
            &#125;
 
            if (output &#x3D;&#x3D; null)
            &#123;
                throw new ArgumentNullException(nameof(output));
            &#125;
 
            var requiredMarkTagBuilder &#x3D; new TagBuilder(&quot;span&quot;);
            requiredMarkTagBuilder.AddCssClass(HighlightClass);
            requiredMarkTagBuilder.InnerHtml.Append(&quot; *&quot;);
 
            var tagBuilder &#x3D; Generator.GenerateLabel(
                ViewContext,
                For.ModelExplorer,
                For.Name,
                labelText: null,
                htmlAttributes: null);
 
            if (For.ModelExplorer.Metadata.IsRequired)
            &#123;
                using (var writer &#x3D; new StringWriter())
                &#123;
                    requiredMarkTagBuilder.WriteTo(writer, HtmlEncoder.Default);
                    tagBuilder.InnerHtml.AppendHtml(writer.ToString());
                &#125;
            &#125;
 
            output.TagName &#x3D; tagBuilder.TagName;
            output.MergeAttributes(tagBuilder);
            output.Content.SetHtmlContent(tagBuilder.InnerHtml);
        &#125;
    &#125;
&#125;</code></pre>

<h2 id="3-2-Khai-bao"><a href="#3-2-Khai-bao" class="headerlink" title="3.2. Khai báo"></a>3.2. Khai báo</h2><p><a id="markdown-khai-b%C3%A1o" name="khai-b%C3%A1o"></a></p>
<p>Mở <code>View/_ViewImports.cshtml</code></p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
 
@* Thêm dòng sau *@
@addTagHelper *, YourNamespace.Extensions</code></pre>

<blockquote>
<p>Đoạn code này giúp tag helper của bạn có thể hoạt động trong các view razor. Với tên namespace khác, bạn cần phải thay đổi đoạn code đó tương ứng</p>
<p>Xem thêm tại: <a href="https://docs.microsoft.com/en-us/aspnet/core/mvc/views/tag-helpers/intro">https://docs.microsoft.com/en-us/aspnet/core/mvc/views/tag-helpers/intro</a> mục <em>Managing Tag Helper scope</em></p>
</blockquote>
<h1 id="4-Su-dung"><a href="#4-Su-dung" class="headerlink" title="4. Sử dụng"></a>4. Sử dụng</h1><p><a id="markdown-s%E1%BB%AD-d%E1%BB%A5ng" name="s%E1%BB%AD-d%E1%BB%A5ng"></a></p>
<p>Vô cùng đơn giản</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;requiredlabel asp-for&#x3D;&quot;Username&quot; highlight-class&#x3D;&quot;red bold&quot;&gt;&lt;&#x2F;requiredlabel&gt;</code></pre>

<p>sẽ render ra đoạn code html sau</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;label for&#x3D;&quot;Username&quot;&gt;User name&lt;span class&#x3D;&quot;red bold&quot;&gt; *&lt;&#x2F;span&gt;&lt;&#x2F;label&gt;</code></pre>]]></content>
      <categories>
        <category>CSharp</category>
        <category>ASP.NET</category>
      </categories>
      <tags>
        <tag>input</tag>
        <tag>.net core</tag>
        <tag>label</tag>
        <tag>tag helper</tag>
      </tags>
  </entry>
  <entry>
    <title>[asp.net mvc] Error Message - chung mà riêng</title>
    <url>/2018/01/14/asp-net-mvc-error-message-chung-ma-rieng/</url>
    <content><![CDATA[<p>Bạn có đang dùng Entity Framework với ASP.NET MVC, cùng với đó là client-validation?</p>
<p>Đối với mỗi ```DataAnnotation`` attribute, bạn lại có 1 câu thông báo lỗi khác nhau, và bạn nhét tất cả chúng vào Resource?</p>
<p>Có một số cách giúp bạn khắc phục một vài nhược điểm trên ;)</p>
<span id="more"></span>

<!-- TOC -->

<ul>
<li><a href="#1-generic-customized-error-message">1. Generic Customized Error Message</a></li>
<li><a href="#2-error-message-localization">2. Error Message Localization</a><ul>
<li><a href="#21-n%E1%BA%BFu-b%E1%BA%A1n-c%C3%B3-resharper">2.1. Nếu bạn có Resharper</a></li>
<li><a href="#22-n%E1%BA%BFu-b%E1%BA%A1n-mu%E1%BB%91n-d%C3%B9ng-h%C3%A0ng-mi%E1%BB%85n-ph%C3%AD">2.2. Nếu bạn muốn dùng hàng miễn phí</a></li>
</ul>
</li>
</ul>
<!-- /TOC -->

<h1 id="1-Generic-Customized-Error-Message"><a href="#1-Generic-Customized-Error-Message" class="headerlink" title="1. Generic Customized Error Message"></a>1. Generic Customized Error Message</h1><p><a id="markdown-generic-customized-error-message" name="generic-customized-error-message"></a></p>
<p>Generic tức là chung chung. Dùng chung 1 câu thông báo cho nhiều property cùng loại, chỉ thay đổi các yếu tố cần thiết</p>
<p>Ví dụ:</p>
<pre class="line-numbers language-none"><code class="language-none">Tên phải chứa ít hơn 15 ký tự 
Địa chỉ phải chứa ít hơn 150 ký tự</code></pre>

<p>Trong ví dụ trên, phần <code>tên</code>, <code>địa chỉ</code>, <code>15</code>, <code>150</code> là những tham số ta phải thay đổi cho câu thông báo. Vậy làm bằng cách nào?</p>
<p>Mò vào source code của từng loại DataAnnotation, chúng ta sẽ thấy 1 số điều thú vị</p>
<blockquote>
<p>Source code cho DataAnnotation <a href="https://github.com/Microsoft/referencesource/tree/master/System.ComponentModel.DataAnnotations/DataAnnotations">https://github.com/Microsoft/referencesource/tree/master/System.ComponentModel.DataAnnotations/DataAnnotations</a></p>
</blockquote>
<p>Tất cả các Attribute đều override lại method FormatErrorMessage. Mò vào từng implementation của các attribute, ta sẽ biết thứ tự các biến tham số của error message.</p>
<table>
<thead>
<tr>
<th>Attribute</th>
<th>Source code</th>
<th>Giải thích</th>
</tr>
</thead>
<tbody><tr>
<td>StringLength</td>
<td>String.Format(CultureInfo.CurrentCulture,<br>              errorMessage,<br>              name,<br>              this.MaximumLength,<br>              this.MinimumLength);<br>return;</td>
<td>{0} = name,<br>{1} = MaximumLength,<br>{2} = MinimumLength</td>
</tr>
<tr>
<td>Compare</td>
<td>String.Format(CultureInfo.CurrentCulture,<br>              ErrorMessageString,<br>              name,<br>              OtherPropertyDisplayName ?? OtherProperty);<br>return;</td>
<td>{0} = name,<br>{1} = OtherPropertyDisplayName / OtherProperty</td>
</tr>
<tr>
<td>MinLength</td>
<td>string.Format(CultureInfo.CurrentCulture,<br>              ErrorMessageString,<br>              name,<br>              Length);<br>return;</td>
<td>{0} = name,<br>{1} = Length</td>
</tr>
</tbody></table>
<p>Như vậy, thay vì ta phải viết thẳng từng câu error message, ta chỉ cần dùng string.Format với thứ tự chính xác của các tham số</p>
<p>Ví dụ với trường hợp StringLength</p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">[StringLength(70, ErrorMessage &#x3D; &quot;&#123;0&#125; phải chứa ít hơn &#123;1&#125; ký tự&quot;)]
public string Name &#123; get; set; &#125;</code></pre>

<h1 id="2-Error-Message-Localization"><a href="#2-Error-Message-Localization" class="headerlink" title="2. Error Message Localization"></a>2. Error Message Localization</h1><p><a id="markdown-error-message-localization" name="error-message-localization"></a></p>
<p>Thực ra thì chiêu sau đây không những giúp bạn localize string của Error Message, mà bất kỳ đoạn string nào bạn muốn</p>
<blockquote>
<p>Bạn phải tạo một file Resource trong project (.resx) để sử dụng</p>
<p>Thông tin thêm ở đây: <a href="https://docs.microsoft.com/en-us/aspnet/core/fundamentals/localization">https://docs.microsoft.com/en-us/aspnet/core/fundamentals/localization</a></p>
</blockquote>
<h2 id="2-1-Neu-ban-co-Resharper"><a href="#2-1-Neu-ban-co-Resharper" class="headerlink" title="2.1. Nếu bạn có Resharper"></a>2.1. Nếu bạn có Resharper</h2><p><a id="markdown-n%E1%BA%BFu-b%E1%BA%A1n-c%C3%B3-resharper" name="n%E1%BA%BFu-b%E1%BA%A1n-c%C3%B3-resharper"></a></p>
<p>Resharper là một sản phẩm hỗ trợ dev kha khá của JetBrains</p>
<p>Đặt con trỏ tại một string bất kỳ -&gt; Resharper -&gt; Refactor -&gt; Move…</p>
<p><img src="https://farm5.staticflickr.com/4750/39647359142_98791bd35d_o.png" alt="resharper move to resource"></p>
<p>Resharper tính phí bản quyền</p>
<h2 id="2-2-Neu-ban-muon-dung-hang-mien-phi"><a href="#2-2-Neu-ban-muon-dung-hang-mien-phi" class="headerlink" title="2.2. Nếu bạn muốn dùng hàng miễn phí"></a>2.2. Nếu bạn muốn dùng hàng miễn phí</h2><p><a id="markdown-n%E1%BA%BFu-b%E1%BA%A1n-mu%E1%BB%91n-d%C3%B9ng-h%C3%A0ng-mi%E1%BB%85n-ph%C3%AD" name="n%E1%BA%BFu-b%E1%BA%A1n-mu%E1%BB%91n-d%C3%B9ng-h%C3%A0ng-mi%E1%BB%85n-ph%C3%AD"></a></p>
<p>Visual Studio có một extension rất hay là <a href="https://github.com/tom-englert/ResXResourceManager">RestXManager</a>. Chức năng của nó thì tương tự như Resharper, thậm chí còn nhỉnh hơn một tí</p>
<ul>
<li>Open source</li>
<li>Active Development</li>
<li>Hỗ trợ dịch text</li>
</ul>
<p>Bạn có thể tìm và tải trực tiếp trong Visual Studio: <code>Tools &amp;gt; Extensions and Updates &amp;gt; Online &amp;gt; search &quot;ResXManager&quot;</code></p>
<p><img src="https://farm5.staticflickr.com/4616/38972346614_45410a6157_o.png" alt="ResXManager"></p>
<p>hoặc</p>
<p>tại link sau: <a href="https://marketplace.visualstudio.com/items?itemName=TomEnglert.ResXManager">https://marketplace.visualstudio.com/items?itemName=TomEnglert.ResXManager</a></p>
<p>Sau đó, tương tự như Resharper, đặt con trỏ tại một string bất kỳ &gt; Chuột phải &gt; Move to Resource</p>
<p><img src="https://farm5.staticflickr.com/4704/38783776745_f94606e40c_o.png" alt="Move to Resource"></p>
<p>Còn một số chiêu khác với những loại DataAnnotation khác nữa bạn nhé</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>ASP.NET</category>
      </categories>
      <tags>
        <tag>resource</tag>
        <tag>error message</tag>
      </tags>
  </entry>
  <entry>
    <title>[asp.net] - Query trên các computed property không hỗ trợ LINQ</title>
    <url>/2018/01/14/asp-net-query-tren-cac-computed-property-khong-ho-tro-linq/</url>
    <content><![CDATA[<p>Trong một project gần đây ở công ty, tôi bàng hoàng nhận ra rằng:</p>
<blockquote>
<p>LINQ và Entity Framework không hỗ trợ query trên các property được tính toán dựa trên các field khác</p>
</blockquote>
<p>Vậy giờ ta phải làm sao? May mắn là vẫn có cách</p>
<span id="more"></span>

<!-- TOC -->

<ul>
<li><a href="#1-computed-property">1. Computed Property</a></li>
<li><a href="#2-simple-linq">2. Simple LINQ</a></li>
<li><a href="#3-solution">3. Solution</a><ul>
<li><a href="#31-slow-performance-g%E1%BB%8Di-tolist">3.1. [Slow performance] Gọi ToList</a></li>
<li><a href="#32-dry-principle-violated-vi%E1%BA%BFt-bi%E1%BB%83u-th%E1%BB%A9c">3.2. [DRY Principle violated] Viết biểu thức</a></li>
</ul>
</li>
<li><a href="#4-the-best-solution">4. The best solution</a></li>
<li><a href="#5-make-life-easier">5. Make life easier</a></li>
</ul>
<!-- /TOC -->

<h1 id="1-Computed-Property"><a href="#1-Computed-Property" class="headerlink" title="1. Computed Property"></a>1. Computed Property</h1><p><a id="markdown-computed-property" name="computed-property"></a></p>
<p>Là một property chỉ có hàm get, và trong get đó, giá trị trả về được tính toán dựa trên các property khác</p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">public class TestViewModel
&#123;
    [Required]
    [MaxLength(10, ErrorMessage &#x3D; &quot;Length must fewer than &#123;1&#125;&quot;)]
    public string FirstName &#123; get; set; &#125;
 
    [Required]
    [StringLength(10)]
    public string LastName &#123; get; set; &#125;
 
    &#x2F;&#x2F; Computed Property
    [NotMapped]
    public string FullName &#x3D;&gt; FirstName + LastName;
&#125;</code></pre>

<p>Theo các chuẩn thiết kế database, một column phải chứa dữ liệu mà không thể được suy ra từ các dữ liệu khác. Đoạn Attribute <code>[NotMapped]</code> phục vụ cho việc đó. EF sẽ không sinh ra code generate column <code>FullName</code> nếu bạn dùng code first, không cố gắng tìm column <code>FullName</code> trong table nếu bạn dùng database first</p>
<h1 id="2-Simple-LINQ"><a href="#2-Simple-LINQ" class="headerlink" title="2. Simple LINQ"></a>2. Simple LINQ</h1><p><a id="markdown-simple-linq" name="simple-linq"></a></p>
<p>Để query một giá trị nào đó trong Database dùng Entity Framework, bạn có thể dùng LINQ rất đơn giản như sau</p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">&#x2F;&#x2F; TableNameWithS is your table name in plural
 
var names &#x3D; dbContext.TableNameWithS.Where(x &#x3D;&gt; x.FirstName.Contains(&quot;test&quot;));</code></pre>

<p>Nhưng cũng đoạn code đó sẽ gây lỗi nếu bạn cố gắn dùng nó với Property <code>FullName</code></p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">&#x2F;&#x2F; BUG BUG BUG

var names &#x3D; dbContext.TableNameWithS.Where(x &#x3D;&gt; x.FullName.Contains(&quot;test&quot;));</code></pre>

<h1 id="3-Solution"><a href="#3-Solution" class="headerlink" title="3. Solution"></a>3. Solution</h1><p><a id="markdown-solution" name="solution"></a></p>
<blockquote>
<p>TL;DR: <a href="#4-the-best-solution">The best solution</a></p>
</blockquote>
<h2 id="3-1-Slow-performance-Goi-ToList"><a href="#3-1-Slow-performance-Goi-ToList" class="headerlink" title="3.1. [Slow performance] Gọi ToList"></a>3.1. [Slow performance] Gọi ToList</h2><p><a id="markdown-%5Bslow-performance%5D-g%E1%BB%8Di-tolist" name="%5Bslow-performance%5D-g%E1%BB%8Di-tolist"></a></p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">var names &#x3D; dbContext.TableNameWithS.ToList().Where(x &#x3D;&gt; x.FullName.Contains(&quot;test&quot;));</code></pre>

<p>Gọi ToList sẽ làm Entity Framework gọi tới database, thực thi bất kỳ đoạn query nào trước đó, rồi mới thực thi tới đoạn LINQ có computed property của bạn</p>
<p>Nhược điểm của nó là EF sẽ query ra kết quả nhiều hơn so với cần thiết, làm giảm performance của ứng dụng</p>
<h2 id="3-2-DRY-Principle-violated-Viet-bieu-thuc"><a href="#3-2-DRY-Principle-violated-Viet-bieu-thuc" class="headerlink" title="3.2. [DRY Principle violated] Viết biểu thức"></a>3.2. [DRY Principle violated] Viết biểu thức</h2><p><a id="markdown-%5Bdry-principle-violated%5D-vi%E1%BA%BFt-bi%E1%BB%83u-th%E1%BB%A9c" name="%5Bdry-principle-violated%5D-vi%E1%BA%BFt-bi%E1%BB%83u-th%E1%BB%A9c"></a></p>
<p>Một cách khác là thay vì sử dụng computed property, ta có thể viết thẳng biểu thức của property đó vào câu query</p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">var names &#x3D; dbContext.TableNameWithS.Where(x &#x3D;&gt; (x.FirstName + x.LastName).Contains(&quot;test&quot;));</code></pre>

<p>Nhược điểm của cách này là bạn đã vi phạm nguyên tắc “DRY” - Don’t repeat yourself. Một biểu thức mà phải code tới 2 lần. Nếu sau này bạn thay đổi biểu thức đó ở 1 chỗ, thì ở chỗ còn lại bạn cũng sẽ phải đổi theo. Nếu bạn quên -&gt; BUG ngay và luôn</p>
<blockquote>
<p>The DRY principle is stated as “Every piece of knowledge must have a single, unambiguous, authoritative representation within a system”</p>
<p><em>Source: <a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself">https://en.wikipedia.org/wiki/Don%27t_repeat_yourself</a></em></p>
</blockquote>
<h1 id="4-The-best-solution"><a href="#4-The-best-solution" class="headerlink" title="4. The best solution"></a>4. The best solution</h1><p><a id="markdown-the-best-solution" name="the-best-solution"></a></p>
<p><a href="https://github.com/hazzik/DelegateDecompiler">DelegateDecompiler</a> - Một bộ thư viện cực khủng giúp bạn decompile biểu thức của computed property, và translate chúng thành LINQ, EF sau đó sẽ translate nó thành câu lệnh SQL.</p>
<p>Nhược điểm của nó là nó không thể dịch được khi bạn sử dụng các method, class mà bạn tự định nghĩa, không nằm trong .NET Framework</p>
<p>Sử dụng nó thì không còn gì dễ hơn</p>
<p>Bước 1: Cài đặt nuget DelegateDecompiler</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">Install-Package DelegateDecompiler</code></pre>

<p>Bước 2: Trang trí property với attribute <code>[Computed]</code></p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">public class TestViewModel
&#123;
    [Required]
    [MaxLength(10, ErrorMessage &#x3D; &quot;Length must fewer than &#123;1&#125;&quot;)]
    public string FirstName &#123; get; set; &#125;
 
    [Required]
    [StringLength(10)]
    public string LastName &#123; get; set; &#125;
 
    &#x2F;&#x2F; Computed Property
    [NotMapped]
    [Computed]
    public string FullName &#x3D;&gt; FirstName + LastName;
&#125;</code></pre>

<p>Bước 3: Gọi method Decompile</p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">var names &#x3D; dbContext.TableNameWithS
                     .ToList()
                     .Where(x &#x3D;&gt; x.FullName.Contains(&quot;test&quot;)).Decompile();
</code></pre>

<blockquote>
<p>Thư viện này thậm chí còn hỗ trợ async, các advanced functions của EF như <code>Include</code>, <code>AsNoTracking</code> với phần mở rộng <a href="https://nuget.org/packages/DelegateDecompiler.EntityFramework">DelegateDecompiler.EntityFramework</a></p>
</blockquote>
<h1 id="5-Make-life-easier"><a href="#5-Make-life-easier" class="headerlink" title="5. Make life easier"></a>5. Make life easier</h1><p><a id="markdown-make-life-easier" name="make-life-easier"></a></p>
<p>Bạn cũng có thể cấu hình cho asp tự xử lý các property có [NotMapped]</p>
<p>Tạo một class <code>Configuration</code></p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">public class DelegateDecompilerConfiguration : DefaultConfiguration
&#123;
    public override bool ShouldDecompile(MemberInfo memberInfo)
    &#123;
        &#x2F;&#x2F; Automatically decompile all NotMapped members
        return base.ShouldDecompile(memberInfo) || memberInfo.GetCustomAttributes(typeof(NotMappedAttribute), true).Length &gt; 0;
    &#125;
&#125;</code></pre>

<p>Rồi đăng ký nó trong method Startup như sau</p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">DelegateDecompiler.Configuration
                  .Configure(new DelegateDecompilerConfiguration());</code></pre>]]></content>
      <categories>
        <category>CSharp</category>
        <category>ASP.NET</category>
      </categories>
      <tags>
        <tag>Computed Property</tag>
        <tag>LINQ</tag>
        <tag>Query</tag>
      </tags>
  </entry>
  <entry>
    <title>Moving to open source softwares</title>
    <url>/2018/02/17/moving-to-open-source-softwares/</url>
    <content><![CDATA[<p>Trong suốt quãng đời làm quen với máy tính, mình cũng đồng thời làm quen luôn với khái niệm cờ rắc. Xung quanh, ai cũng crack, tội gì mình lại không crack?</p>
<p>Cho tới nay, mình tự hào đã dùng toàn bộ sản phẩm có bản quyền đàng hoàng, và thay thế hầu hết các phần mềm có bản quyền bằng các phần mềm miễn phí tương đương. Tuy còn nhiều điều chưa tiện, chưa thông minh, chưa đẹp như những phần mềm tính phí, nhưng nó là công sức của cả một cộng đồng lập trình viên, và điểm đặc biệt là nó update cực nhanh</p>
<span id="more"></span>
<p>Cũng phải nói luôn là có một số phần mềm, mặc dù vẫn có thể dùng đồ free, nhưng tính năng nó mang lại không đủ, nên mình cũng đã quyết định bỏ tiền ra mua (một số) sản phẩm tính phí đó.</p>
<ul>
<li><a href="#1-ph%E1%BA%A7n-m%E1%BB%81m-%C4%91%C3%A3-mua">1. Phần mềm đã mua</a><ul>
<li>  <a href="#11-microsoft-office">1.1. Microsoft Office</a></li>
</ul>
</li>
<li><a href="#2-ph%E1%BA%A7n-m%E1%BB%81m-c%C3%B3-%C4%91%C6%B0%E1%BB%A3c-do-c%C3%A1c-ch%C6%B0%C6%A1ng-tr%C3%ACnh-h%E1%BB%97-tr%E1%BB%A3--h%E1%BB%A3p-t%C3%A1c">2. Phần mềm có được do các chương trình hỗ trợ / hợp tác</a><ul>
<li>  <a href="#21-microsoft-windows">2.1. Microsoft Windows</a></li>
<li>  <a href="#22-visual-studio-enterprise">2.2. Visual Studio Enterprise</a></li>
</ul>
</li>
<li><a href="#3-ph%E1%BA%A7n-m%E1%BB%81m-%C4%91%C3%A3-b%E1%BB%8F">3. Phần mềm đã bỏ</a><ul>
<li>  <a href="#31-internet-download-manager">3.1. Internet Download Manager</a></li>
<li>  <a href="#32-adobe-photoshop">3.2. Adobe Photoshop</a></li>
<li>  <a href="#33-sublime-text">3.3. Sublime Text</a></li>
<li>  <a href="#34-sourcetree-hay-git-client-n%C3%B3i-chung">3.4. SourceTree, hay Git Client nói chung</a></li>
</ul>
</li>
<li>  <a href="#4-c%C3%A1c-ph%E1%BA%A7n-m%E1%BB%81m-kh%C3%A1c">4. Các phần mềm khác</a></li>
</ul>
<h1 id="1-Phan-mem-da-mua"><a href="#1-Phan-mem-da-mua" class="headerlink" title="1. Phần mềm đã mua"></a>1. Phần mềm đã mua</h1><h2 id="1-1-Microsoft-Office"><a href="#1-1-Microsoft-Office" class="headerlink" title="1.1. Microsoft Office"></a>1.1. Microsoft Office</h2><blockquote>
<p>Alternative: * <a href="https://www.libreoffice.org/">Libre Office</a> * <a href="https://www.openoffice.org/">Open Office</a></p>
</blockquote>
<p><img src="https://ncmedia.azureedge.net/ncmedia/2014/10/Ofc_rgb_Orng166_D-1024x473.png" alt="Office 365 logo"></p>
<p>Bộ này thì khỏi nói, dù có một số giải pháp thay thế như <a href="https://www.libreoffice.org/">Libre Office</a> hay <a href="https://www.openoffice.org/">Open Office</a>, nhưng về cơ bản, các tính năng quá mạnh mẽ của MS Office đã thuyết phục được mình bỏ tiền ra mua nó hàng năm (dạng thuê bao Home Subscription có thể chia sẻ cho 5 user)</p>
<h1 id="2-Phan-mem-co-duoc-do-cac-chuong-trinh-ho-tro-hop-tac"><a href="#2-Phan-mem-co-duoc-do-cac-chuong-trinh-ho-tro-hop-tac" class="headerlink" title="2. Phần mềm có được do các chương trình hỗ trợ / hợp tác"></a>2. Phần mềm có được do các chương trình hỗ trợ / hợp tác</h1><p>Các chương trình này đa phần nhắm tới sinh viên. Nếu trường của bạn cung cấp địa chỉ có đuôi edu thì bạn sẽ được tham gia các chương trình này và sử dụng các bộ phần mềm bản quyền hoàn toàn miễn phí</p>
<h2 id="2-1-Microsoft-Windows"><a href="#2-1-Microsoft-Windows" class="headerlink" title="2.1. Microsoft Windows"></a>2.1. Microsoft Windows</h2><blockquote>
<p>Alternative: <a href="https://www.ubuntu.com/">Ubuntu</a> - và các hệ điều hành linux nói chung</p>
</blockquote>
<p><img src="https://icdn2.digitaltrends.com/image/ninjacat-720x720.jpg?ver=1.jpg" alt="ninja cat"></p>
<p>Thông qua chương trình DreamSpark (trước là MSDN AA). Bản quyền Windows vẫn tính trên licence cụ thể. Đối với Windows 10, MS có bổ sung thêm dạng license điện tử đi kèm với tài khoản Windows của bạn. Mình không có nhiều máy để thử cái này, nhưng mình nghĩ tương lai Windows tiến tới miễn phí hoàn toàn bản quyền là không còn xa (MS sẽ đè doanh nghiệp ra mà hút máu với các bản Ultimate và Windows Server)</p>
<h2 id="2-2-Visual-Studio-Enterprise"><a href="#2-2-Visual-Studio-Enterprise" class="headerlink" title="2.2. Visual Studio Enterprise"></a>2.2. Visual Studio Enterprise</h2><blockquote>
<p>Alternative: Visual Studio có bản miễn phí là <a href="https://www.visualstudio.com/vs/community/">Visual Studio Community</a></p>
</blockquote>
<p><img src="https://www.visualstudio.com/wp-content/uploads/2017/03/AttachFileHandler.png" alt="vs logo"></p>
<p>Visual Studio là một bộ IDE siêu siêu mạnh. Bạn có thể dùng nó để phát triển hầu như tất cả các sản phẩm phần mềm.</p>
<p>Hồi đó mình còn học tin học đại cương (học lập trình C++ các kiểu) ở trường, thì thiếu 1 cái IDE như này. Lên mạng mày mò thì cũng ra kha khá các phần mềm như <a href="http://www.codeblocks.org/">Code Blocks</a>, hay Borland Turbo C++ (cái này không miễn phí, nhưng mà nó cổ quá rồi). Sau này cũng ráng cài <a href="http://eclipse.org/">Eclipse</a>, rồi <a href="https://netbeans.org/">NetBeans</a></p>
<p>Khi ‘phát hiện’ ra Visual Studio 2010 Express (là phiên bản miễn phí hồi đó), mình…bỏ luôn mấy cái khác, và xài nó từ đó tới giờ</p>
<blockquote>
<p>Funfact: MS cũng tham gia phát triển tools cho eclipse -&gt; <a href="https://blogs.msdn.microsoft.com/visualstudio/2016/03/08/microsoft-joins-the-eclipse-foundation/">source</a></p>
</blockquote>
<h1 id="3-Phan-mem-da-bo"><a href="#3-Phan-mem-da-bo" class="headerlink" title="3. Phần mềm đã bỏ"></a>3. Phần mềm đã bỏ</h1><h2 id="3-1-Internet-Download-Manager"><a href="#3-1-Internet-Download-Manager" class="headerlink" title="3.1. Internet Download Manager"></a>3.1. Internet Download Manager</h2><blockquote>
<p>Alternative: <a href="https://www.freedownloadmanager.org/">Free Download Manager</a></p>
</blockquote>
<p><img src="https://www.freedownloadmanager.org/public/img/screen_win.png" alt="fdm"></p>
<p>IDM giống như một phần mềm phải-có của bất kỳ cái máy tính nào. Khi mạng mẽo thì bị cá mập cắn liên tục, băng thông thì cứ tới giờ là bóp, đường truyền như quay số ò e í e tới ADSL. IDM giúp bạn vượt qua các khó khăn đó. Và mỗi khi IDM ra mắt version, thì cư dân mạng lại thay phiên nhau update crack.</p>
<p>Đã qua rồi cái thời cứ lâu lâu lại phải tìm crack cho IDM một lần, lướt youtube có cái popup nho nhỏ show ra đòi download, vân vân và vân vân.</p>
<p>Toàn bộ các tính năng mà IDM có, FDM cũng có, và có phần tốt hơn</p>
<ul>
<li>  Download youtube video: Copy link youtube rồi dán vào khung Add download</li>
<li>  Download toàn bộ site: Dùng FDM version 3.9, tính năng Site Explorer</li>
<li>  Bắt link nhạc nhẽo, video: Click chuột phải vào khung play &gt; Download this Video with Free Download Manager</li>
</ul>
<p>FDM khắc phục một số nhược điểm mà IDM gặp phải: * Không phải nối file sau khi download xong: Nó tạo sẵn khoảng trống trên ổ cứng, vào download từng phần rồi ghi vào các khoảng trống đó * Download được torrent</p>
<h2 id="3-2-Adobe-Photoshop"><a href="#3-2-Adobe-Photoshop" class="headerlink" title="3.2. Adobe Photoshop"></a>3.2. Adobe Photoshop</h2><blockquote>
<p>Alternative: <a href="https://www.gimp.org/">GIMP</a> + <a href="http://www.virtualdub.org/">VirtualDub</a> + <a href="https://www.phaseone.com/en/Products/Software/Capture-One-for-Sony/Sony-Pro.aspx">Capture One for Sony</a></p>
</blockquote>
<p><img src="https://farm5.staticflickr.com/4672/39605316274_a9efbb2b0e_o.png" alt="capture one"></p>
<p>Adobe Photoshop thì không cần phải nói nhiều. Để tìm được tool thay thế cho nó, mình đã phải tốn kha khá thời gian và công sức, nhưng vẫn chưa thật sự hài lòng.</p>
<p>Xưa kia mình dùng chủ yếu Camera Raw của Adobe Photoshop để chỉnh ảnh Raw từ cái máy Sony của mình. Sony cũng cung cấp một bộ phần mềm giúp chỉnh ảnh raw luôn là Capture One Express, nhưng thiết kế của nó không tiện như Camera Raw, và tốc độ của nó cũng có vẻ không bằng.</p>
<p>Máy Sony của mình có thể chụp 11 tấm / 1 giây, ghép lại thành một cái ảnh động. Photoshop hỗ trợ cái này rất tự nhiên luôn. Thay thế cho nó là Virtual Dub, xuất ra file AVI nhưng với một bộ codec khá lạ lùng và khá khó xài</p>
<p>GIMP là bộ phần mềm chính thay thế cho Photoshop, điểm mạnh của nó là open source, điểm yếu của nó là update rất chậm.</p>
<h2 id="3-3-Sublime-Text"><a href="#3-3-Sublime-Text" class="headerlink" title="3.3. Sublime Text"></a>3.3. Sublime Text</h2><blockquote>
<p>Alternative: <a href="https://code.visualstudio.com/">Visual Studio Code</a></p>
</blockquote>
<p><img src="https://farm5.staticflickr.com/4648/25445632457_8ef1831933_o.png" alt="vscode"></p>
<p>Sublime Text là một dạng phần mềm như kiểu WinRar, bạn có thể ‘evaluate’ nó mãi mãi, nhưng nhìn chung, nó vẫn là một phần mềm có tính phí bản quyền</p>
<p>Về cơ bản, nó là một Text Editor mạnh mẽ với các tính năng như multi cursor, hỗ trợ extension, tốc độ cực nhanh, có Command Pallete giúp bạn kha khá các tác vụ thủ công lặp đi lặp lại. Tuy nhiên, tất cả những cái đó đều đã và đang bị VS Code dần dần lấn lướt (trừ cái tốc độ ra)</p>
<h2 id="3-4-SourceTree-hay-Git-Client-noi-chung"><a href="#3-4-SourceTree-hay-Git-Client-noi-chung" class="headerlink" title="3.4. SourceTree, hay Git Client nói chung"></a>3.4. SourceTree, hay Git Client nói chung</h2><blockquote>
<p>Alternative: <a href="https://github.com/gitextensions/gitextensions">GitExtension</a></p>
</blockquote>
<p><img src="http://gitextensions.github.io/images/commitlog205.png" alt="gitextensions"></p>
<p>Một số bạn dev sẽ cực lực phản đổi cái git extension này, vì giao diện nó…quá xấu so với quy định.</p>
<p>Đã từng có một thời gian, mình cũng đã như vậy. Mình cũng ‘cự tuyệt’ với GitExtension vì giao diện của nó. Nhưng mặt trời chân lý đã chói qua tim mình, khi mà SourceTree bug tè le hột me, các phần mềm khác thì quá đơn giản so với nhu cầu sử dụng (<a href="https://www.gitkraken.com/">GitKraken</a>, <a href="https://desktop.github.com/">GitHub Desktop</a>)</p>
<p>Tất cả đều không thể vượt qua nổi sự đơn giản (tuy xấu) và ổn định mà GitExtension cung cấp.</p>
<h1 id="4-Cac-phan-mem-khac"><a href="#4-Cac-phan-mem-khac" class="headerlink" title="4. Các phần mềm khác"></a>4. Các phần mềm khác</h1><p>Mục tiêu của mình là open source, chứ không phải freeware, hay freemium.</p>
<ul>
<li>  <a href="http://www.7-zip.org/download.html">7-zip</a>: Giải nén</li>
<li>  <a href="https://sourceforge.net/projects/unikey/">Unikey</a>: Gõ tiếng Việt</li>
<li>  <a href="http://getgreenshot.org/">Greenshot</a>: Chụp ảnh màn hình</li>
</ul>
<p>Các phần mềm miễn phí có thể thay thế bằng web</p>
<ul>
<li>  Zalo: <a href="https://chat.zalo.me/">https://chat.zalo.me/</a></li>
<li>  Slack</li>
<li>  Trello</li>
<li>  Skype: <a href="https://web.skype.com/">https://web.skype.com/</a> -&gt; Tuy nhiên, vào buổi chiều nó hay bị quá tải, nên phải chuyển sang dùng skype thường</li>
</ul>
<p>Còn bạn thì sao? Bạn đang dùng phần mềm miễn phí nào?</p>
]]></content>
      <categories>
        <category>Computer Tips</category>
      </categories>
      <tags>
        <tag>free</tag>
        <tag>open source</tag>
        <tag>software</tag>
      </tags>
  </entry>
  <entry>
    <title>[ASP.NET Core] Auto Anti-forgery Token</title>
    <url>/2018/03/03/asp-net-core-auto-anti-forgery-token/</url>
    <content><![CDATA[<p>Có một cách giúp bạn tự động áp dụng <code>ValidateAntiForgeryToken</code> vào tất cả các Post Action trong controller của mình</p>
<span id="more"></span>

<!-- TOC -->

<ul>
<li><a href="#1-default-protection-with-aspnet-core-2">1. Default protection with ASP.NET Core 2</a></li>
<li><a href="#2-auto-protection-with-aspnet-core-2">2. Auto protection with ASP.NET Core 2</a><ul>
<li><a href="#21-n%E1%BA%BFu-b%E1%BA%A1n-mu%E1%BB%91n-t%E1%BB%B1-%C4%91%E1%BB%99ng-cho-t%E1%BB%ABng-controller">2.1. Nếu bạn muốn tự động cho từng Controller</a></li>
<li><a href="#22-n%E1%BA%BFu-b%E1%BA%A1n-mu%E1%BB%91n-%C3%A1p-d%E1%BB%A5ng-cho-to%C3%A0n-b%E1%BB%99-app">2.2. Nếu bạn muốn áp dụng cho toàn bộ app</a></li>
</ul>
</li>
</ul>
<!-- /TOC -->

<p>Chắc bạn đã từng nghe qua <a href="https://en.wikipedia.org/wiki/Cross-site_request_forgery">Cross-site Request Forgery (CSRF) attacks</a>. Hiểu một cách đơn giản là Server thực thi một request giả mạo xuất phát từ hacker, nhưng với chứng thực xịn của 1 user nào đó. Điều này rất dễ thực hiện. Giả sử bạn truy cập 1 forum nào đó, trong đó có chứa đoạn javascript giả mạo 1 request tới ngân hàng của bạn, yêu cầu chuyển tiền. Nếu bạn vẫn đang đăng nhập vào tài khoản ebanking của mình, và ngân hàng ko áp dụng bất kỳ phương pháp bảo vệ nào, thì như một cái búng tay, tiền của bạn đã chuyển vào túi hacker.</p>
<p>ASP.NET đã implement sẵn cho bạn cách để chống lại phương thức tấn công này, và họ gọi nó là <em><code>Anti-forgery Token</code></em></p>
<h1 id="Default-protection-with-ASP-NET-Core-2"><a href="#Default-protection-with-ASP-NET-Core-2" class="headerlink" title="Default protection with ASP.NET Core 2"></a>Default protection with ASP.NET Core 2</h1><p><a id="markdown-default-protection-with-asp.net-core-2" name="default-protection-with-asp.net-core-2"></a></p>
<p>Với ASP.NET Core 2, mỗi khi bạn dùng <code>form</code> tag, asp.net sẽ tự động chèn anti-forgery token cho bạn</p>
<blockquote>
<p>Với điều kiện: <code>form</code> tag có attribute <code>method=&quot;post&quot;</code></p>
<p>VÀ</p>
<ul>
<li>attribute <code>action</code> không có data: <code>action=&quot;&quot;</code><br>HOẶC</li>
<li>attribute <code>action</code> không có</li>
</ul>
</blockquote>
<p>Tiếp tục, bạn phải thêm attribute <code>[ValidateAntiForgeryToken]</code> và action nhận data post lên</p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">[HttpPost]
[ValidateAntiForgeryToken]
public async Task&lt;IActionResult&gt; RemoveLogin(RemoveLoginViewModel account)
&#123;
    &#x2F;&#x2F; Do something here
&#125;</code></pre>

<h1 id="Auto-protection-with-ASP-NET-Core-2"><a href="#Auto-protection-with-ASP-NET-Core-2" class="headerlink" title="Auto protection with ASP.NET Core 2"></a>Auto protection with ASP.NET Core 2</h1><p><a id="markdown-auto-protection-with-asp.net-core-2" name="auto-protection-with-asp.net-core-2"></a></p>
<p>Ở cách trên, với mỗi Action nhận Post request, bạn đều phải thêm <code>[ValidationAntiForgeryToken]</code> thủ công</p>
<p>Asp.net Core giới thiệu 1 class mới, giúp bạn tự động hóa quá trình này</p>
<h2 id="Neu-ban-muon-tu-dong-cho-tung-Controller"><a href="#Neu-ban-muon-tu-dong-cho-tung-Controller" class="headerlink" title="Nếu bạn muốn tự động cho từng Controller"></a>Nếu bạn muốn tự động cho từng Controller</h2><p><a id="markdown-n%E1%BA%BFu-b%E1%BA%A1n-mu%E1%BB%91n-t%E1%BB%B1-%C4%91%E1%BB%99ng-cho-t%E1%BB%ABng-controller" name="n%E1%BA%BFu-b%E1%BA%A1n-mu%E1%BB%91n-t%E1%BB%B1-%C4%91%E1%BB%99ng-cho-t%E1%BB%ABng-controller"></a></p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">[Authorize]
[AutoValidateAntiforgeryToken]
public class ManageController : Controller
&#123;
    &#x2F;&#x2F; Your code here
&#125;</code></pre>

<h2 id="Neu-ban-muon-ap-dung-cho-toan-bo-app"><a href="#Neu-ban-muon-ap-dung-cho-toan-bo-app" class="headerlink" title="Nếu bạn muốn áp dụng cho toàn bộ app"></a>Nếu bạn muốn áp dụng cho toàn bộ app</h2><p><a id="markdown-n%E1%BA%BFu-b%E1%BA%A1n-mu%E1%BB%91n-%C3%A1p-d%E1%BB%A5ng-cho-to%C3%A0n-b%E1%BB%99-app" name="n%E1%BA%BFu-b%E1%BA%A1n-mu%E1%BB%91n-%C3%A1p-d%E1%BB%A5ng-cho-to%C3%A0n-b%E1%BB%99-app"></a></p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">public class Startup  
&#123;
    public void ConfigureServices(IServiceCollection services)
    &#123;
        services.AddMvc(options &#x3D;&gt;
        &#123;
            options.Filters.Add(new AutoValidateAntiforgeryTokenAttribute());
        &#125;);
    &#125;
&#125;</code></pre>

<p>Vậy là xong</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>ASP.NET</category>
      </categories>
      <tags>
        <tag>attack</tag>
        <tag>cross-site</tag>
        <tag>forgery</tag>
        <tag>forgery token</tag>
        <tag>request</tag>
      </tags>
  </entry>
  <entry>
    <title>[ASP.NET Core] - Razor Page - Let&#39;s think straight</title>
    <url>/2018/03/03/asp-net-core-razor-page-lets-think-straight/</url>
    <content><![CDATA[<p>Khi bạn cần tạo thật nhanh một cái website có các page cần thiết mà không cần phải quan tâm tới các vấn đề phức tạp như mô hình, bảo mật, mở rộng, thì Razor Page chính là câu trả lời</p>
<span id="more"></span>
<ul>
<li>  <a href="#1-y%C3%AAu-c%E1%BA%A7u">1. Yêu cầu</a></li>
<li>  <a href="#2-m%C3%B4-h%C3%ACnh-ph%C3%A1t-tri%E1%BB%83n">2. Mô hình phát triển</a></li>
<li><a href="#3-c%C3%A1c-v%E1%BA%A5n-%C4%91%E1%BB%81-c%E1%BB%A7a-mvc">3. Các vấn đề của MVC</a><ul>
<li>  <a href="#31-fat-controller">3.1. Fat Controller</a></li>
<li>  <a href="#32-chia-c%E1%BA%A5p">3.2. Chia cấp</a></li>
<li>  <a href="#33-duplicate">3.3. Duplicate</a></li>
</ul>
</li>
<li>  <a href="#4-razor-page-coding-conventions">4. Razor Page Coding conventions</a></li>
<li>  <a href="#5-the-future-is-now">5. The future is now?</a></li>
</ul>
<h1 id="1-Yeu-cau"><a href="#1-Yeu-cau" class="headerlink" title="1. Yêu cầu"></a>1. Yêu cầu</h1><ul>
<li>  <a href="https://www.microsoft.com/net/download">.NET Core 2.0 trở lên</a></li>
<li>  <a href="https://code.visualstudio.com/">Visual Studio Code</a></li>
<li>  Đọc sơ qua về <a href="https://docs.microsoft.com/en-us/aspnet/core/mvc/razor-pages/?tabs=visual-studio">Razor Page</a></li>
</ul>
<h1 id="2-Mo-hinh-phat-trien"><a href="#2-Mo-hinh-phat-trien" class="headerlink" title="2. Mô hình phát triển"></a>2. Mô hình phát triển</h1><p>Nếu bạn đã là một chiến binh ASP.NET lâu năm, thì chắc hẳn bạn sẽ quen thuộc với mô hình MVC, viết tắt cho Model-View-Controller. Ở Razor Page, bạn sẽ làm quen với một mô hình hoàn toàn mới và vô cùng đơn giản (đơn giản tới mức ko có gì để học luôn)</p>
<p><strong>Mô hình MVC</strong></p>
<p><img src="https://farm1.staticflickr.com/794/39482986360_fe3ba6ff76_o.png" alt="mvc pattern"></p>
<blockquote>
<p>Nếu bạn muốn làm quen với mô hình MVC, có thể đọc bài viết <a href="https://huntertran.com/2018/03/04/asp-net-for-beginner-part-1-mvc/">[ASP.NET for Beginner] – Part 1 – MVC</a></p>
</blockquote>
<p><strong>‘Mô hình’ Razor Page</strong></p>
<p><img src="https://farm1.staticflickr.com/822/40395935845_bdb4073f2f_o.png" alt="razor page pattern"></p>
<h1 id="3-Cac-van-de-cua-MVC"><a href="#3-Cac-van-de-cua-MVC" class="headerlink" title="3. Các vấn đề của MVC"></a>3. Các vấn đề của MVC</h1><h2 id="3-1-Fat-Controller"><a href="#3-1-Fat-Controller" class="headerlink" title="3.1. Fat Controller"></a>3.1. Fat Controller</h2><p>Giả sử bạn có một controller xử lý các tác vụ liên quan tới giao dịch chuyển tiền giữa các tài khoản, tạm gọi là <code>TransactionController</code></p>
<p>Có 4 thao tác cơ bản đối với 1 dòng dữ liệu: Create-Read-Update-Delete, tới đây thì ok không vấn đề gì</p>
<p>Pặc, bạn muốn xử lý thêm việc nạp thẻ điện thoại, chi trả hóa đơn điện, nước, internet =&gt; thêm các phương thức như <code>NapTheCao</code>, <code>TraTienDien</code>, <code>TraTienNuoc</code>, <code>TraTienInternet</code>. 2 tuần sau, bạn lại muốn thêm vài tính năng khác, tất cả đều liên quan tới transaction.</p>
<p>Càng về sau, <code>TransactionController</code> càng dài, và nó đã chính thức được gọi tên là Fat Controller.</p>
<h2 id="3-2-Chia-cap"><a href="#3-2-Chia-cap" class="headerlink" title="3.2. Chia cấp"></a>3.2. Chia cấp</h2><p>Mô hình MVC cho bạn một folder tên <code>Controllers</code> để chứa tất cả các controller của bạn. Điều này sd4 tương ứng với 1 cấp địa chỉ trên URL</p>
<p>Với ví dụ transaction phía trên, URL của bạn sẽ có dạng: <code>domain/transaction/create</code></p>
<p>Nếu bạn muốn 1 cấp sâu hơn, ví dụ như <code>domain/transaction/phones/create</code> thì sao? Bạn phải hoặc customize lại route, hoặc tạo một <code>Area</code> tên <code>Transaction</code>, và tách các function liên quan với nhau thành từng controller khác nhau.</p>
<h2 id="3-3-Duplicate"><a href="#3-3-Duplicate" class="headerlink" title="3.3. Duplicate"></a>3.3. Duplicate</h2><p>Đối với một form bất kỳ, trong mô hình mvc luôn phải có 2 action tương ứng với 2 hành động là Get và post, và người ta thường đặt tên 2 action này giống nhau cho dễ phân biệt với các tính năng khác trong cùng một controller. Điều này đôi khi gây ra những bất tiện nhất định, và bạn bắt buộc phải khai báo attribute <code>[HttpGet]</code> và <code>[HttpPost]</code></p>
<h1 id="4-Razor-Page-Coding-conventions"><a href="#4-Razor-Page-Coding-conventions" class="headerlink" title="4. Razor Page Coding conventions"></a>4. Razor Page Coding conventions</h1><p>Tương tự như MVC, Razor Page cũng có một số coding conventions</p>
<p>Conventions</p>
<p>MVC</p>
<p>RAZOR PAGES</p>
<p>Default View</p>
<p>Index.cshtml</p>
<p>Index.cshtml</p>
<p>return default view</p>
<p>return View();</p>
<p>return Page();</p>
<p>Http Verbs</p>
<p>[HttpGet]<br>[HttpPost]</p>
<p>OnGet();<br>OnPost();</p>
<p>Bind dữ liệu</p>
<p>ViewModel</p>
<p>[BindProperty]</p>
<p>Generate Link</p>
<p>Url.Action(…)</p>
<p>Url.Page(…)</p>
<p>multiple action for form submit</p>
<p>Not built-in</p>
<p>asp-page-handler=“TestHandler”<br>OnTestHandler()</p>
<h1 id="5-The-future-is-now"><a href="#5-The-future-is-now" class="headerlink" title="5. The future is now?"></a>5. The future is now?</h1><p>Razor Page, theo đánh giá của mình, chỉ phù hợp với các project vừa và nhỏ, với các view đơn giản về mật logic.</p>
<p>Tại phiên bản .NET CORE 2.0, Razor Page vẫn chưa hỗ trợ một số tính năng mà MVC đang có như sau</p>
<ul>
<li>  IActionFilter</li>
<li>  Output Cache</li>
<li>  IgnoreAntiforgeryToken attribute (bạn có thể tham khảo thêm tại <a href="https://github.com/aspnet/Mvc/issues/7012">github issue này</a> để biết cách tắt <strong>toàn bộ</strong>)</li>
</ul>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>ASP.NET</category>
      </categories>
      <tags>
        <tag>page</tag>
        <tag>razor</tag>
      </tags>
  </entry>
  <entry>
    <title>[ASP.NET for Beginner] - Part 1 - MVC</title>
    <url>/2018/03/04/asp-net-for-beginner-part-1-mvc/</url>
    <content><![CDATA[<p>MVC, mờ vờ cờ, model-view-controller, ai ai cũng đã nghe qua, nhưng bạn mới bắt đầu học nó, thì làm sao cho đúng?</p>
<p>Bài viết này đưa ra một số khái niệm cơ bản, và cách áp dụng chúng trong code thực tế.</p>
<span id="more"></span>

<blockquote>
<p>Xem các bài viết trong series</p>
<ul>
<li><a href="https://huntertran.com/2018/03/04/asp-net-for-beginner-part-1-mvc/">Phần 1: Mô hình MVC</a></li>
<li><a href="https://huntertran.com/2018/03/11/asp-net-for-beginner-part-2-connect-database-and-model-binding/">Phần 2: Connect Database và Model Binding</a></li>
<li><a href="https://huntertran.com/2018/03/18/asp-net-for-beginner-part-3-front-end-framework-nao/">Phần 3: Front end framework nào</a></li>
<li><a href="https://huntertran.com/2018/03/25/aspnet-for-beginner-part-4-crud-va-data-validation/">Phần 4: CRUD và Data Validation</a></li>
</ul>
</blockquote>
<!-- TOC -->

<ul>
<li><a href="#1-mvc-l%C3%A0-g%C3%AC">1. MVC là gì?</a><ul>
<li><a href="#11-model">1.1. Model</a></li>
<li><a href="#12-view">1.2. View</a></li>
<li><a href="#13-controller">1.3. Controller</a></li>
</ul>
</li>
<li><a href="#2-m%E1%BB%99t-v%C3%AD-d%E1%BB%A5-%C4%91%C6%A1n-gi%E1%BA%A3n">2. Một ví dụ đơn giản</a><ul>
<li><a href="#21-b%C3%A0i-to%C3%A1n">2.1. Bài toán</a></li>
<li><a href="#22-ph%C3%A2n-t%C3%ADch">2.2. Phân tích</a></li>
<li><a href="#23-tri%E1%BB%83n-khai">2.3. Triển khai</a><ul>
<li><a href="#231-t%C3%ADnh-n%C4%83ng-xem-danh-s%C3%A1ch">2.3.1. Tính năng xem danh sách</a></li>
<li><a href="#232-t%C3%ADnh-n%C4%83ng-th%C3%AAm">2.3.2. Tính năng thêm</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#3-t%E1%BB%B1-t%E1%BA%A1o-project">3. Tự tạo project</a><ul>
<li><a href="#31-ph%E1%BA%A7n-m%E1%BB%81m-c%E1%BA%A7n-thi%E1%BA%BFt">3.1. Phần mềm cần thiết</a></li>
<li><a href="#32-tri%E1%BB%83n">3.2. Triển</a></li>
<li><a href="#33-aspnet-convention">3.3. ASP.NET Convention</a></li>
</ul>
</li>
</ul>
<!-- /TOC -->

<h1 id="1-MVC-la-gi"><a href="#1-MVC-la-gi" class="headerlink" title="1. MVC là gì?"></a>1. MVC là gì?</h1><p><a id="markdown-mvc-l%C3%A0-g%C3%AC%3F" name="mvc-l%C3%A0-g%C3%AC%3F"></a></p>
<p>MVC là một kiến trúc phần mềm dùng để phát triển kha khá ứng dụng bạn đang dùng trên thị trường. Mô hình MVC bóc tách 3 tầng của ứng dụng thành 3 thành phần khác nhau, giúp việc phát triển dễ dàng hơn.</p>
<p>MVC là viết tắt của Model-View-Controller</p>
<blockquote>
<p>3 thành phần này phải đi kèm với nhau, nhưng đối với người mới học, sẽ rất khó để hình dung ra chúng liên kết như thế nào. Học bất kỳ thành phần nào trước đều khó khăn khi không hiểu 2 thành phần kia. Vì vậy mình khuyên các bạn chỉ cần hình dung mỗi thành phần ra trong đầu, chứ đừng bắt tay ngay vào việc tìm hiểu liên kết giữa chúng.</p>
</blockquote>
<h2 id="1-1-Model"><a href="#1-1-Model" class="headerlink" title="1.1. Model"></a>1.1. Model</h2><p><a id="markdown-model" name="model"></a></p>
<p>Model là cách mà bạn thể hiện data trong code của mình. Giả sử trong cơ sở dữ liệu của bạn có table Users, mỗi user đều có tên tuổi địa chỉ, thì model của bạn sẽ là</p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">&#x2F;&#x2F; A basic model
public class User
&#123;
    public string Name &#123; get; set; &#125;
    public int Age &#123; get; set; &#125;
    public string Address &#123; get; set; &#125;
&#125;</code></pre>

<h2 id="1-2-View"><a href="#1-2-View" class="headerlink" title="1.2. View"></a>1.2. View</h2><p><a id="markdown-view" name="view"></a></p>
<p>View chỉ đóng 1 vai trò duy nhất: Render ra giao diện cho người dùng. Textbox (ô để điền text), dropdown list (chọn giá trị từ 1 danh sách), checkbox (ô chọn có/không) là những thứ thường thấy trên View.</p>
<p>Ví dụ, để hiển thị 1 user ra màn hình, thì code asp.net như sau</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html">@model User
&lt;div&gt;
    @Model.Name
    @Model.Age
    @Model.Address
&lt;&#x2F;div&gt;</code></pre>

<h2 id="1-3-Controller"><a href="#1-3-Controller" class="headerlink" title="1.3. Controller"></a>1.3. Controller</h2><p><a id="markdown-controller" name="controller"></a></p>
<p>Controller là thứ quyết định View nào sẽ được hiển thị khi user nhập một URL. Nó cũng sẽ là thứ nhận data từ user khi họ điền một form, click một nút, vân vân và vân vân</p>
<h1 id="2-Mot-vi-du-don-gian"><a href="#2-Mot-vi-du-don-gian" class="headerlink" title="2. Một ví dụ đơn giản"></a>2. Một ví dụ đơn giản</h1><p><a id="markdown-m%E1%BB%99t-v%C3%AD-d%E1%BB%A5-%C4%91%C6%A1n-gi%E1%BA%A3n" name="m%E1%BB%99t-v%C3%AD-d%E1%BB%A5-%C4%91%C6%A1n-gi%E1%BA%A3n"></a></p>
<p>Vì ví dụ này được đưa ra để bạn hiểu mô hình MVC, nên bạn ko cần phải làm theo. Chỉ cần đọc tiếp thôi</p>
<h2 id="2-1-Bai-toan"><a href="#2-1-Bai-toan" class="headerlink" title="2.1. Bài toán"></a>2.1. Bài toán</h2><p><a id="markdown-b%C3%A0i-to%C3%A1n" name="b%C3%A0i-to%C3%A1n"></a></p>
<p>Thế giới di động cần 1 cái website có thể hiện thị danh sách các điện thoại, thêm/xóa/sửa một điện thoại nào đó (bỏ qua tất cả các yêu cầu về bảo mật, đăng nhập, giao diện)</p>
<h2 id="2-2-Phan-tich"><a href="#2-2-Phan-tich" class="headerlink" title="2.2. Phân tích"></a>2.2. Phân tích</h2><p><a id="markdown-ph%C3%A2n-t%C3%ADch" name="ph%C3%A2n-t%C3%ADch"></a></p>
<p>Đọc vào thấy ngay, ta cần một model cho điện thoại, 4 view cho 4 cái tính năng là <code>xem danh sách</code>, <code>thêm</code>, <code>xóa</code>, <code>sửa</code>. Vì cả 4 view này đều thao tác trên cái model <code>điện thoại</code>, nên ta chỉ cần 1 controller mà thôi</p>
<h2 id="2-3-Trien-khai"><a href="#2-3-Trien-khai" class="headerlink" title="2.3. Triển khai"></a>2.3. Triển khai</h2><p><a id="markdown-tri%E1%BB%83n-khai" name="tri%E1%BB%83n-khai"></a></p>
<h3 id="2-3-1-Tinh-nang-xem-danh-sach"><a href="#2-3-1-Tinh-nang-xem-danh-sach" class="headerlink" title="2.3.1. Tính năng xem danh sách"></a>2.3.1. Tính năng xem danh sách</h3><p><a id="markdown-t%C3%ADnh-n%C4%83ng-xem-danh-s%C3%A1ch" name="t%C3%ADnh-n%C4%83ng-xem-danh-s%C3%A1ch"></a></p>
<p><strong>Model</strong></p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">public class MobilePhone
&#123;
    &#x2F;&#x2F; To identify which phones
    &#x2F;&#x2F; Dùng để xác định cái điện thoại nào
    public int Id &#123; get; set; &#125;
 
    public string Name &#123; get; set; &#125;
&#125;</code></pre>

<p><strong>Controller</strong></p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">public class MobilePhoneController
&#123;
    public void List()
    &#123;
        &#x2F;&#x2F; Get all phones from database
        var allPhones &#x3D; database.MobilePhones;
 
        &#x2F;&#x2F; Return the View that render a list of phones
        return View(allPhones)
    &#125;
&#125;</code></pre>

<p><strong>View</strong></p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html">@model List&lt;MobilePhone&gt;
&lt;div&gt;
    &lt;table&gt;
        &lt;!--Table headers--&gt;
        &lt;th&gt;
            &lt;td&gt;Id&lt;&#x2F;td&gt;
            &lt;td&gt;Name&lt;&#x2F;td&gt;
        &lt;&#x2F;th&gt;
        &lt;!--Table body--&gt;
        &lt;tbody&gt;
            @foreach(var phone in Model)
            &#123;
                &lt;tr&gt;
                    &lt;td&gt;@phone.Id&lt;&#x2F;td&gt;
                    &lt;td&gt;@phone.Name&lt;&#x2F;td&gt;
                &lt;&#x2F;tr&gt;
            &#125;
        &lt;&#x2F;tbody&gt;
    &lt;&#x2F;table&gt;
&lt;&#x2F;div&gt;</code></pre>

<p>ASP.NET tự động hiểu class <code>MobilePhoneController</code> sẽ có đường dẫn là <code>/MobilePhone</code></p>
<p>Khi người dùng trỏ tới URL sau:</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">yourdomain&#x2F;MobilePhone&#x2F;List</code></pre>

<p>thì bằng một cách thần kỳ nào đó, asp.net đã gọi method <code>List</code> trong controller này, và chạy những đoạn code trong đó, trả về một cái bảng danh sách các điện thoại hiển thị lên cho người dùng</p>
<h3 id="2-3-2-Tinh-nang-them"><a href="#2-3-2-Tinh-nang-them" class="headerlink" title="2.3.2. Tính năng thêm"></a>2.3.2. Tính năng thêm</h3><p><a id="markdown-t%C3%ADnh-n%C4%83ng-th%C3%AAm" name="t%C3%ADnh-n%C4%83ng-th%C3%AAm"></a></p>
<p>Dùng lại model cũ, ta chỉ cần thêm code cho View và Controller</p>
<p><strong>Controller</strong></p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">public class MobilePhoneController
&#123;
    public void List()
    &#123;
        &#x2F;&#x2F; Get all phones from database
        &#x2F;&#x2F; Lấy tất cả điện thoại từ database
        var allPhones &#x3D; database.MobilePhones;
 
        &#x2F;&#x2F; Return the View that render a list of phones
        &#x2F;&#x2F; Trả về view chứa thông tin tất cả điện thoại
        return View(allPhones)
    &#125;
 
    &#x2F;&#x2F; Render the Add form
    &#x2F;&#x2F; Hiển thị cái form Add
    public void Add()
    &#123;
        return View();
    &#125;
 
    &#x2F;&#x2F; Recieved the new phone input by user
    &#x2F;&#x2F; Nhận data được nhập vào từ người dùng
    [HttpPost]
    public void Add(MobilePhone newPhone)
    &#123;
        var existedPhone &#x3D; database.MobilePhones.Find(newPhone.Id)
 
        if(existedPhone !&#x3D; null)
        &#123;
            &#x2F;&#x2F; Phone is existed, return the Add View
            &#x2F;&#x2F; Điện thoại với Id này đã tồn tại, trả về cái view Add
            return View(newPhone);
        &#125;
 
        &#x2F;&#x2F; Add new data to database
        database.MobilePhones.Add(newPhone);
 
        &#x2F;&#x2F; Save the changes
        database.SaveChanges();
    &#125;
&#125;</code></pre>

<blockquote>
<p>Tại sao lại có 2 method Add? Ở method đầu tiên, ASP.NET sẽ trả về cái form rỗng cho người dùng tự nhập vào giá trị. Method thứ 2 có chứa parameter là newPhone. Method có trách nhiệm nhận thông tin được post lên từ phía người dùng. ASP.NET đủ thông minh để có thể tự hiểu nó là object kiểu MobilePhone, và nó gọi là <code>Model Binding</code>. Ta sẽ tìm hiểu về chủ đề này sau.</p>
</blockquote>
<p><strong>View</strong></p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html">thêm file Add.cshtml</code></pre>

<p>Đối với ASP.NET Core</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html">@model MobilePhone
 
&lt;form asp-action&#x3D;&quot;Add&quot; asp-controller&#x3D;&quot;MobilePhone&quot;&gt;
    &lt;label&gt;Id&lt;&#x2F;label&gt;
    &lt;input asp-for&#x3D;&quot;Id&quot;&#x2F;&gt;
    &lt;label&gt;Name&lt;&#x2F;label&gt;
    &lt;input asp-for&#x3D;&quot;Name&quot;&#x2F;&gt;
&lt;&#x2F;form&gt;</code></pre>

<p>Đối với ASP.NET MVC cũ</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html">@model MobilePhone
 
@using(Html.BeginForm(&quot;Add&quot;,&quot;MobilePhone&quot;,Method.Post))
&#123;
    &lt;label&gt;Id&lt;&#x2F;label&gt;
    @Html.TextBoxFor(x &#x3D;&gt; x.Id)
    &lt;label&gt;Name&lt;&#x2F;label&gt;
    @Html.TextBoxFor(x &#x3D;&gt; x.Name)
&#125;</code></pre>

<h1 id="3-Tu-tao-project"><a href="#3-Tu-tao-project" class="headerlink" title="3. Tự tạo project"></a>3. Tự tạo project</h1><p><a id="markdown-t%E1%BB%B1-t%E1%BA%A1o-project" name="t%E1%BB%B1-t%E1%BA%A1o-project"></a></p>
<p>Từ khúc này trở đi, bạn sẽ cần phải làm theo từng bước một</p>
<p>ASP.NET có kha khá phiên bản, <code>MVC1</code>, <code>MVC2</code>, <code>MVC3</code>, <code>MVC4</code>, và gần đây nhất là <code>MVC5</code> và <code>MVC Core</code>. Từ version 5 trở xuống là cách phát triển cũ, chỉ chạy được trên môi trường Windows, từ phiên bản <code>MVC Core</code> trở lên là cách phát triển mới, có thể chạy được trên <code>Linux</code>, <code>Windows</code> hoặc <code>MacOS</code>. Nếu đang học, thì mình khuyến khích nên học luôn từ <code>MVC Core</code> trở lên luôn cho nó hot</p>
<h2 id="3-1-Phan-mem-can-thiet"><a href="#3-1-Phan-mem-can-thiet" class="headerlink" title="3.1. Phần mềm cần thiết"></a>3.1. Phần mềm cần thiết</h2><p><a id="markdown-ph%E1%BA%A7n-m%E1%BB%81m-c%E1%BA%A7n-thi%E1%BA%BFt" name="ph%E1%BA%A7n-m%E1%BB%81m-c%E1%BA%A7n-thi%E1%BA%BFt"></a></p>
<ul>
<li><a href="https://www.microsoft.com/net/core">.NET Core SDK 2.0</a> trở lên</li>
<li><a href="https://code.visualstudio.com/">Visual Studio Code</a></li>
<li>VS Code <a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.csharp">C# extension</a></li>
</ul>
<h2 id="3-2-Trien"><a href="#3-2-Trien" class="headerlink" title="3.2. Triển"></a>3.2. Triển</h2><p><a id="markdown-tri%E1%BB%83n" name="tri%E1%BB%83n"></a></p>
<p>Mở VSCode lên, nhấn Ctrl + ` để hiện Terminal, hoặc làm như hình</p>
<p><img src="https://farm5.staticflickr.com/4710/39714628535_591c6163e7_o.png" alt="show termial"></p>
<p>dùng các lệnh <code>cd</code> để trỏ tới thư mục mong muốn tạo project của bạn</p>
<p>hoặc</p>
<p><img src="https://farm5.staticflickr.com/4712/39898696364_c24a372543_o.png" alt="open in vscode"></p>
<p>gõ</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">dotnet new mvc</code></pre>

<p>Bấm F5 &gt; Chọn .NET Core</p>
<p>Nếu bạn được hỏi “Required assets to build and debug are missing from blah blah blah”, thì bấm Yes nhé</p>
<p><img src="https://farm5.staticflickr.com/4800/38800136200_57afdcf698_o.png" alt="yes to build"></p>
<p>Vậy là bạn đã tạo project MVC đầu tiên của mình, dùng ASP.NET Core rồi nhé. Bạn có thể mở class HomeController để hiểu rõ hơn về mô hình MVC mình vừa nói ở trên.</p>
<h2 id="3-3-ASP-NET-Convention"><a href="#3-3-ASP-NET-Convention" class="headerlink" title="3.3. ASP.NET Convention"></a>3.3. ASP.NET Convention</h2><p><a id="markdown-asp.net-convention" name="asp.net-convention"></a></p>
<p>ở trên mình có nhắc tới MobilePhoneController, thì đường dẫn của nó sẽ là /MobilePhone, hay ở project bạn mới tạo, HomeController sẽ có đường dẫn là /Home .ASP.NET tự hiểu controller của bạn, và sẽ có đường dẫn tương ứng.</p>
<p>Mặc định, các method <code>Index</code> trong controller của bạn sẽ là method được gọi khi URL ko có bất kỳ cái gì đằng sau. Ví dụ như HomeController ở trên, nếu bạn chỉ nhập <a href="https://localhost:5000/Home/">https://localhost:5000/Home/</a> thì method <code>Index</code> sẽ được gọi, View <code>Index.cshtml</code> sẽ được hiển thị.</p>
<p>Như vậy, bạn đã hiểu khá đủ về mô hình MVC, ở <a href="https://huntertran.com/2018/03/11/asp-net-for-beginer-part-2-connect-database-and-model-binding/">phần tiếp theo</a> mình sẽ tiếp tục nói về kết nối database và những thứ bạn có thể làm với Model cho đúng <em>chuẩn</em> nhé</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>ASP.NET</category>
      </categories>
      <tags>
        <tag>beginner</tag>
        <tag>mvc</tag>
      </tags>
  </entry>
  <entry>
    <title>[ASP.NET for Beginner] - Part 3 - Front end framework nào?</title>
    <url>/2018/03/18/asp-net-for-beginner-part-3-front-end-framework-nao/</url>
    <content><![CDATA[<p>Trong phần 3 này chúng ta sẽ tìm hiểu về các framework front end phổ biến hiện tại</p>
<span id="more"></span>

<blockquote>
<p>Xem các bài viết trong series</p>
<ul>
<li>  <a href="https://huntertran.com/2018/03/04/asp-net-for-beginner-part-1-mvc/">Phần 1: Mô hình MVC</a></li>
<li>  <a href="https://huntertran.com/2018/03/11/asp-net-for-beginner-part-2-connect-database-and-model-binding/">Phần 2: Connect Database và Model Binding</a></li>
<li>  <a href="https://huntertran.com/2018/03/18/asp-net-for-beginner-part-3-front-end-framework-nao/">Phần 3: Front end framework nào</a></li>
<li>  <a href="https://huntertran.com/2018/03/25/aspnet-for-beginner-part-4-crud-va-data-validation/">Phần 4: CRUD và Data Validation</a></li>
</ul>
</blockquote>
<!-- TOC -->

<ul>
<li><a href="#1-css">1. CSS</a><ul>
<li><a href="#11-css-framework">1.1. CSS Framework</a><ul>
<li><a href="#111-bootstrap">1.1.1. Bootstrap</a></li>
<li><a href="#112-materializecss">1.1.2. MaterializeCSS</a></li>
<li><a href="#113-c%C3%A1c-grid-system">1.1.3. Các Grid System</a></li>
</ul>
</li>
<li><a href="#12-css-language-preprocessor">1.2. CSS Language Preprocessor</a><ul>
<li><a href="#121-scss">1.2.1. SCSS</a></li>
<li><a href="#122-less">1.2.2. LESS</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#2-javascript">2. Javascript</a><ul>
<li><a href="#21-jquery">2.1. jQuery</a></li>
<li><a href="#22-xu-h%C6%B0%E1%BB%9Bng">2.2. Xu hướng</a></li>
</ul>
</li>
<li><a href="#3-html">3. HTML</a></li>
<li><a href="#4-c%C3%A1i-n%C3%A0o-l%C3%A0-t%E1%BB%91t-nh%E1%BA%A5t">4. Cái nào là tốt nhất?</a></li>
</ul>
<!-- /TOC -->

<p>Một ứng dụng web được chia thành 2 thành phần chính là Front-end và Back-end. Về phía back end, có hàng ty tỷ ngôn ngữ và công nghệ có thể làm nên chúng. ASP.NET là một trong các công nghệ đó. Và tất cả các công nghệ / ngôn ngữ này đều phục vụ một mục đích tối thượng: Tạo ra front end</p>
<p>Trong một diễn biến khác, Front end chỉ có 1, được cấu thành từ 3 ngôn ngữ là <code>HTML</code>, <code>CSS</code> và <code>Javascript</code></p>
<blockquote>
<p>Nếu bạn chưa biết cơ bản về HTML, Javascript và CSS, thì hãy học ngay</p>
<ul>
<li><a href="https://www.w3schools.com/html/default.asp">Học HTML</a></li>
<li><a href="https://www.w3schools.com/css/">Học CSS</a></li>
<li><a href="https://www.w3schools.com/js/">Học Javascript</a></li>
</ul>
</blockquote>
<p>3 ngôn ngữ này, theo ý kiến chủ quan của mình, như mì ăn liền. Cách tổ chức khá lộn xộn, và quy chuẩn thì được áp dụng khác nhau đối với các trình duyệt khác nhau</p>
<blockquote>
<p><strong>Quy chuẩn của HTML</strong></p>
<p>HTML có 1 bộ quy chuẩn giúp cho các nhà phát triển trình duyệt biết được chính xác phải làm gì khi hiển thị các thẻ của HTML trên trình duyệt</p>
</blockquote>
<p>Để làm cho cuộc đời bớt đau khổ, các developer trên khắp thế giới đã cùng nhau phát triển thêm những framework, những ngôn ngữ hỗ trợ thêm cho bộ 3 này</p>
<h1 id="1-CSS"><a href="#1-CSS" class="headerlink" title="1. CSS"></a>1. CSS</h1><p><a id="markdown-css" name="css"></a></p>
<h2 id="1-1-CSS-Framework"><a href="#1-1-CSS-Framework" class="headerlink" title="1.1. CSS Framework"></a>1.1. CSS Framework</h2><p><a id="markdown-css-framework" name="css-framework"></a></p>
<p>Làm sao để chia web thành các cột linh hoạt? Làm sao để khi kích thước trình duyệt thay đổi, trang web sẽ hiển thị các thành phần phù hợp? Làm sao để trang web có thể đọc được trên điện thoại di động?</p>
<p>Hàng tá các câu hỏi như vậy sẽ nảy ra trong đầu bạn khi bạn đang phát triển một website nào đó. Để giải quyết vấn đề đó, ta có các CSS Frameworks làm sẵn giúp bạn các công việc này, bạn chỉ cần áp dụng.</p>
<h3 id="1-1-1-Bootstrap"><a href="#1-1-1-Bootstrap" class="headerlink" title="1.1.1. Bootstrap"></a>1.1.1. <a href="http://getbootstrap.com/">Bootstrap</a></h3><p><a id="markdown-bootstrap" name="bootstrap"></a></p>
<p>Bootstrap có lẽ là css framework được sử dụng nhiều nhất hiện nay với bộ plugin đồ sộ + kho tàng theme thủng cực khủng của mình</p>
<p>Bootstrap sử dụng 1 khái niệm gọi là responsive breakdown, tức là khi bề ngang trình duyệt đạt tới 1 số lượng pixels nào đó, thì một số thành phần HTML sẽ bị ẩn đi hoặc hiện ra.</p>
<p><strong>Nhược điểm</strong></p>
<ul>
<li>Quá phổ biến: Điều này tuy giúp ích trong quá trình phát triển, nhưng sẽ làm cho website của bạn nó…na ná với cả triệu website khác</li>
<li>Grid system dùng concrete class: Đối với mỗi size khác nhau, bạn sẽ phải thêm các class khác nhau của mỗi column vào thẻ html</li>
<li>Nặng: Bootstrap cần 1 file css, 1 file javascript, và cả cái thư viện jQuery + poper.js. Nếu website của bạn ko dùng jQuery? Thôi nghỉ chơi với boostrap nhé</li>
</ul>
<h3 id="1-1-2-MaterializeCSS"><a href="#1-1-2-MaterializeCSS" class="headerlink" title="1.1.2. MaterializeCSS"></a>1.1.2. <a href="http://materializecss.com/">MaterializeCSS</a></h3><p><a id="markdown-materializecss" name="materializecss"></a></p>
<p>Nếu bạn có đang dùng các sản phẩm của google, thì bạn sẽ thấy họ có 1 style khá đẹp, nhất là khi nhấn vào 1 cái nút nào đó, sẽ có 1 vòng tròn tỏa ra. Cái này được gọi là Material Design</p>
<p>Materializecss làm theo cái design này, và open source nó cho mọi người sử dụng. Nhanh, nhẹ, đẹp, hỗ trợ tốt, cộng đồng lớn là những ưu điểm của framework này</p>
<p><strong>Nhược điểm</strong></p>
<ul>
<li>Quá Google: website của bạn khi dùng framework này, nó sẽ cho người dùng 1 cảm giác hơi…google. Từ cái nút bấm cho tới cái ô grid</li>
<li>Chưa release: Tin hay ko thì tùy bạn, dù có hằng hà sa số website đang dùng, với gần 32k stars trên Github, nhưng framework này vẫn chưa được release version 1.0. Các nhà phát triển nó đang rất gấp rút fix bug và hoàn thiện để ra mắt phiên bản release đầu tiên của nó ;)</li>
</ul>
<h3 id="1-1-3-Cac-Grid-System"><a href="#1-1-3-Cac-Grid-System" class="headerlink" title="1.1.3. Các Grid System"></a>1.1.3. Các Grid System</h3><p><a id="markdown-c%C3%A1c-grid-system" name="c%C3%A1c-grid-system"></a></p>
<p>Cái quan trọng nhất của một framework là grid system, tức là cách chia website thành các column khác nhau. Nắm bắt được điều này, kha khá framework ra đời, và chỉ chứa độc nhất 1 tính năng: chia column.</p>
<p><strong>Nhược điểm</strong></p>
<p>Nhìn chung, khi sử dụng các framework dạng này, bạn sẽ phải khá chuyên nghiệp rồi. Khi đó bạn sẽ phải tự code các thành phần css khác ko liên quan tới grid, hoặc tìm các thư viện hỗ trợ cho những thành phần mong muốn</p>
<h2 id="1-2-CSS-Language-Preprocessor"><a href="#1-2-CSS-Language-Preprocessor" class="headerlink" title="1.2. CSS Language Preprocessor"></a>1.2. CSS Language Preprocessor</h2><p><a id="markdown-css-language-preprocessor" name="css-language-preprocessor"></a></p>
<p>Ngôn ngữ css, với một cách tổ chức tè le, là một thử thách khá khó khăn cho developer mới học. May mắn thay, đã có những ngôn ngữ thay thế cho nó</p>
<p>Thay thế cũng không hẳn là đúng. Các ngôn ngữ này chỉ giúp bạn viết code css dễ hiểu hơn, khoa học hơn, tổ chức tốt hơn. Sau cùng, nó vẫn generate ra file .css cho bạn sử dụng.</p>
<h3 id="1-2-1-SCSS"><a href="#1-2-1-SCSS" class="headerlink" title="1.2.1. SCSS"></a>1.2.1. <a href="https://sass-lang.com/">SCSS</a></h3><p><a id="markdown-scss" name="scss"></a></p>
<p>SCSS kế thừa và cải tiến CSS selector bằng các cấu trúc <code>&#123;&#125;</code>, <code>:</code>và <code>&amp;gt;</code>. Khi bạn bắt tay vào học nó, bạn sẽ thấy cách select một element vô cùng tự nhiên của nó</p>
<h3 id="1-2-2-LESS"><a href="#1-2-2-LESS" class="headerlink" title="1.2.2. LESS"></a>1.2.2. <a href="http://lesscss.org/">LESS</a></h3><p><a id="markdown-less" name="less"></a></p>
<p>Less giống như một phiên bản khác của Scss vậy, với cú pháp cũng khá giống nhau, các khái niệm cũng giống luôn.</p>
<blockquote>
<p>Bạn chỉ nên chọn 1, hoặc SCSS, hoặc LESS</p>
</blockquote>
<h1 id="2-Javascript"><a href="#2-Javascript" class="headerlink" title="2. Javascript"></a>2. Javascript</h1><p><a id="markdown-javascript" name="javascript"></a></p>
<p>Ngôn ngữ HTML, vốn dĩ chỉ là các đoạn text có thêm markup và link, chỉ có thể cho phép bạn đọc text và nhấn link để nhảy sang 1 trang khác mà thôi.</p>
<p>Mọi chuyện thay đổi khi javascript được gắn thêm vào. Giờ đây bạn có thể thay đổi 1 khúc text mà ko cần reload, làm cho biểu tượng này xoay xoay, làm cho nút kia chuyển động, hiển thị popup, vân vân và vân vân.</p>
<blockquote>
<p><code>Javascript</code> không hề dính dáng gì tới <code>Java</code> cả</p>
</blockquote>
<h2 id="2-1-jQuery"><a href="#2-1-jQuery" class="headerlink" title="2.1. jQuery"></a>2.1. jQuery</h2><p><a id="markdown-jquery" name="jquery"></a></p>
<p>jQuery giống như 1 thư viện “phải có” vậy. Nó giúp cho việc sử dụng cả tá css framework khác trở nên đơn giản và hiệu quả.</p>
<p>Ví dụ: Để đổi đoạn value của thẻ input có id là “test” thành chữ khác</p>
<pre class="line-numbers language-js" data-language="js"><code class="language-js">&#x2F;&#x2F; Before jquery
document.getElementById(&quot;test&quot;).value &#x3D; &quot;Test Value&quot;;

&#x2F;&#x2F; After jquery
$(&quot;#test&quot;).val(&quot;Test Value&quot;);</code></pre>

<p>Vì sử dụng các khái niệm của CSS Selector, bạn có thể chọn các html element bằng jQuery y như khi bạn code css cho nó vậy.</p>
<h2 id="2-2-Xu-huong"><a href="#2-2-Xu-huong" class="headerlink" title="2.2. Xu hướng"></a>2.2. Xu hướng</h2><p><a id="markdown-xu-h%C6%B0%E1%BB%9Bng" name="xu-h%C6%B0%E1%BB%9Bng"></a></p>
<p>vì jQuery khá nặng, việc xử lý jQuery cũng đòi hỏi một phần tài nguyên của trình duyện, nên hiện đang có 1 xu hướng là bỏ hẳn jQuery ko xài nó nữa.</p>
<p>Nhưng từ giờ tới lúc jQuery biến mất vẫn còn xa lắm. Máy tính và điện thoại thì ngày càng mạnh mẽ hơn. jQuery hầu như đã được tải sẵn trên bất cứ trình duyệt nào bạn tìm thấy</p>
<h1 id="3-HTML"><a href="#3-HTML" class="headerlink" title="3. HTML"></a>3. HTML</h1><p><a id="markdown-html" name="html"></a></p>
<p>HTML5, như đã nói ở trên, là version mới nhất của HTML, và tất cả các trình duyệt phổ biến hỗ trợ.</p>
<p>Nếu bạn code bằng Visual Studio, thì HTML đã được hỗ trợ khá tốt rồi. Còn nếu bạn code bằng Visual Studio Code, thì sau đây là 1 số extension mình sử dụng để việc code HTML được dễ thở hơn</p>
<ul>
<li>  Auto Close Tag: tự đóng các thẻ HTML. Không cần phải gõ tay nữa</li>
<li>  HTML Snippets: tự nhắc các property của 1 thẻ HTML</li>
</ul>
<h1 id="Cai-nao-la-tot-nhat"><a href="#Cai-nao-la-tot-nhat" class="headerlink" title="Cái nào là tốt nhất?"></a>Cái nào là tốt nhất?</h1><p><a id="markdown-c%C3%A1i-n%C3%A0o-l%C3%A0-t%E1%BB%91t-nh%E1%BA%A5t%3F" name="c%C3%A1i-n%C3%A0o-l%C3%A0-t%E1%BB%91t-nh%E1%BA%A5t%3F"></a></p>
<p>Không có câu trả lời cụ thể cho câu hỏi này, nên mình sẽ đưa ý kiến của mình, và cái mình đang sử dụng để bạn tham khảo</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">CSS: SCSS
CSS Framework: Materializecss
Javascript: jQuery
HTML: HTML5</code></pre>

<p>Còn bạn, bạn chọn ngôn ngữ nào?</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>ASP.NET</category>
      </categories>
      <tags>
        <tag>css</tag>
        <tag>framework</tag>
        <tag>frontend</tag>
        <tag>jquery</tag>
        <tag>scss</tag>
      </tags>
  </entry>
  <entry>
    <title>[ASP.NET for Beginner] - Part 4 - CRUD và Data Validation</title>
    <url>/2018/03/25/aspnet-for-beginner-part-4-crud-va-data-validation/</url>
    <content><![CDATA[<p>Vậy là bạn đã có một khái niệm cơ bản về MVC, cách kết nối tới database, lựa chọn cho mình một front end phù hợp, đã tới lúc bắt tay vào thực hiện 4 thao tác cơ bản nhất của bất kỳ ứng dụng web nào: CRUD</p>
<span id="more"></span>

<blockquote>
<p>Xem các bài viết trong series</p>
<ul>
<li><a href="https://huntertran.com/2018/03/04/asp-net-for-beginner-part-1-mvc/">Phần 1: Mô hình MVC</a></li>
<li><a href="https://huntertran.com/2018/03/11/asp-net-for-beginner-part-2-connect-database-and-model-binding/">Phần 2: Connect Database và Model Binding</a></li>
<li><a href="https://huntertran.com/2018/03/18/asp-net-for-beginner-part-3-front-end-framework-nao/">Phần 3: Front end framework nào</a></li>
<li><a href="https://huntertran.com/2018/03/25/aspnet-for-beginner-part-4-crud-va-data-validation/">Phần 4: CRUD và Data Validation</a></li>
</ul>
</blockquote>
<!-- TOC -->

<ul>
<li><a href="#1-crud">1. CRUD</a><ul>
<li><a href="#11-dbcontext">1.1. DbContext</a></li>
<li><a href="#12-create">1.2. Create</a></li>
<li><a href="#13-read">1.3. Read</a></li>
<li><a href="#14-update">1.4. Update</a><ul>
<li><a href="#141-the-simplest---2-trip-to-database">1.4.1. The Simplest - 2 trip to database</a></li>
<li><a href="#142-a-more-complicated">1.4.2. A more complicated</a></li>
<li><a href="#143-track">1.4.3. Track???</a></li>
</ul>
</li>
<li><a href="#15-delete">1.5. Delete</a></li>
</ul>
</li>
<li><a href="#2-dbcontext---m%E1%BB%99t-c%C3%A1ch-code-t%E1%BB%91t-h%C6%A1n">2. DbContext - Một cách code tốt hơn</a><ul>
<li><a href="#21-n%E1%BA%BFu-crud-failed">2.1. Nếu CRUD failed?</a></li>
<li><a href="#22-await-hay-kh%C3%B4ng">2.2. await hay không?</a></li>
</ul>
</li>
<li><a href="#3-model-validation">3. Model Validation</a><ul>
<li><a href="#31-dataannotation">3.1. DataAnnotation</a></li>
<li><a href="#32-client-side-validation">3.2. Client side validation</a></li>
</ul>
</li>
</ul>
<!-- /TOC -->

<h1 id="1-CRUD"><a href="#1-CRUD" class="headerlink" title="1. CRUD"></a>1. CRUD</h1><p><a id="markdown-crud" name="crud"></a></p>
<p>CRUD viết tắt cho 4 hành động liên quan tới database là <code>Create</code>, <code>Read</code>, <code>Update</code> và <code>Delete</code></p>
<blockquote>
<p>Bài viết này giả định rằng bạn sử dụng Entity Framework, như đã nói ở <a href="https://huntertran.com/2018/03/11/asp-net-for-beginner-part-2-connect-database-and-model-binding/">phần 2</a>, và đã có sẵn code trong ví dụ Bạn có thể clone code tại Github ở <a href="https://github.com/huntertran/mvcbasic/releases/tag/0.2">đây</a></p>
</blockquote>
<h2 id="1-1-DbContext"><a href="#1-1-DbContext" class="headerlink" title="1.1. DbContext"></a>1.1. DbContext</h2><p><a id="markdown-dbcontext" name="dbcontext"></a></p>
<p>Trong ví dụ <code>mvcbasic</code>, <code>MvcBasicDbContext</code> đã được tạo sẵn cho bạn, và được khai báo ở mỗi Controller cần thiết. Ta sẽ sử dụng class này</p>
<p>Trong class PhoneController đã được tạo sẵn trong ví dụ, bạn có thể thấy cả 4 phương thức này được viết sẵn.</p>
<h2 id="1-2-Create"><a href="#1-2-Create" class="headerlink" title="1.2. Create"></a>1.2. Create</h2><p><a id="markdown-create" name="create"></a></p>
<p>Để tạo 1 record trong database, đối với Entity Framework, chuyện rất đơn giản</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">var phone &#x3D; new Phone
&#123;
    Name &#x3D; &quot;Samsung Galaxy A5 (2017)&quot;
&#125;;
 
_context.Phones.Add(phone);
_context.SaveChanges();</code></pre>

<p>Trong trường hợp bạn muốn thêm nhiều dòng cùng một lúc, thì Entity Framework hỗ trợ một phương thức khác</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">var phones &#x3D; new List&lt;Phone&gt;();
 
var phone &#x3D; new Phone
&#123;
    Name &#x3D; &quot;Phone 1&quot;
&#125;;

phones.Add(phone);
 
phone &#x3D; new Phone
&#123;
    Name &#x3D; &quot;Phone 2&quot;
&#125;;

phones.Add(phone);
 
_context.Phones.AddRange(phones);
_context.SaveChanges();</code></pre>

<h2 id="1-3-Read"><a href="#1-3-Read" class="headerlink" title="1.3. Read"></a>1.3. Read</h2><p><a id="markdown-read" name="read"></a></p>
<p>Để lấy 1 dòng dữ liệu từ 1 bảng, bạn có thể dùng method <code>Find</code></p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">var id &#x3D; 1;
var phone &#x3D; _context.Phones.Find(id);</code></pre>

<p>Method <code>Find</code> sẽ tìm trong bảng Phone có khóa chính = id của bạn. Kết quả trả về null nếu khóa đó không tồn tại</p>
<p>Để lấy nhiều dòng dữ liệu thỏa một điều kiện nào đó, bạn có thể dùng <code>LINQ</code> để query</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">var searchKey &#x3D; &quot;samsung&quot;;
var phones &#x3D; _context.Phones.Where(x &#x3D;&gt; x.Name.Contains(searchKey));</code></pre>

<p><code>x</code> đại diện cho 1 object Phone trong database</p>
<p><code>x.Name.Contains(searchKey)</code> nghĩa là Name có chứa string <code>searchKey</code></p>
<blockquote>
<p>Hầu như tất cả các query bạn quen thuộc khi viết câu truy vấn bằng SQL đều có thể viết được dưới dạng LINQ. Đây gọi là LINQ to Entities (Dùng Linq để query thông qua các entities trong Entity Framework)</p>
<p>Bạn có thể tìm các câu lệnh tương ứng trong Linq bằng từ khóa: “How to <em><strong>hành động bạn muốn làm</strong></em> using linq”</p>
</blockquote>
<p>Kết quả trả về của một truy vấn là kiểu dữ liệu <code>IQueryable</code>. Bạn có thể tiếp tục lọc, gom nhóm, filter lại, hoặc chuyển đổi thành một kiểu dữ liệu khác như List, Array, etc</p>
<p>Bạn có thể xem thêm về các câu lệnh Linq được support ở đây: <a href="https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/ef/language-reference/supported-and-unsupported-linq-methods-linq-to-entities#type-methods">Supported and Unsupported LINQ Methods (LINQ to Entities) on docs.microsoft.com</a></p>
<h2 id="1-4-Update"><a href="#1-4-Update" class="headerlink" title="1.4. Update"></a>1.4. Update</h2><p><a id="markdown-update" name="update"></a></p>
<p>Không đơn giản như các lệnh khác, update dùng Entity Framework hơi phức tạp (hơi thôi)</p>
<h3 id="1-4-1-The-Simplest-2-trip-to-database"><a href="#1-4-1-The-Simplest-2-trip-to-database" class="headerlink" title="1.4.1. The Simplest - 2 trip to database"></a>1.4.1. The Simplest - 2 trip to database</h3><p><a id="markdown-the-simplest---2-trip-to-database" name="the-simplest---2-trip-to-database"></a></p>
<p>Cách đơn giản nhất để update 1 record gồm 3 bước 1. Lấy record đó lên từ database - Truy cập database lần 1 2. Thay đổi 1 thông tin nào đó trong record 3. Update lại record đó trong database - Truy cập database lần 2</p>
<p>code của nó như sau</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">&#x2F;&#x2F; get the phone object from database
var phone &#x3D; _context.Phones.Find(phoneId);
 
&#x2F;&#x2F; change some info
phone.Name &#x3D; &quot;Test&quot;
 
&#x2F;&#x2F; update the change to database
_context.SaveChanges();</code></pre>

<p>Như bạn thấy, cách này bắt buộc bạn phải lấy 1 dữ liệu từ database lên trước khi bạn có thể edit nó</p>
<h3 id="1-4-2-A-more-complicated"><a href="#1-4-2-A-more-complicated" class="headerlink" title="1.4.2. A more complicated"></a>1.4.2. A more complicated</h3><p><a id="markdown-a-more-complicated" name="a-more-complicated"></a></p>
<p>Vậy nếu bạn biết trước tất cả các dữ liệu của object thì sao? Trong trường hợp này, query record đó từ database là không cần thiết</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">&#x2F;&#x2F; Create the object from your brain
var phone &#x3D; new Phone
&#123;
    Id &#x3D; 1
&#125;;
 
&#x2F;&#x2F; Attach it to DbContext, so the DbContext can &quot;track&quot; the object
&#x2F;&#x2F; Gắn nó vào DbContext, để DbContext có thể &quot;theo dõi&quot; object của bạn
_context.Phones.Attach(phone);
 
&#x2F;&#x2F; Do some change
phone.Name &#x3D; &quot;Test&quot;;
 
&#x2F;&#x2F; Save the change
_context.SaveChanges();</code></pre>

<h3 id="1-4-3-Track"><a href="#1-4-3-Track" class="headerlink" title="1.4.3. Track???"></a>1.4.3. Track???</h3><p><a id="markdown-track%3F%3F%3F" name="track%3F%3F%3F"></a></p>
<p>Entity Framework có 1 cách rất hay (và hơi phức tạp) để có thể tối ưu hóa các phương thức truy xuất/cập nhật dữ liệu: Nó sẽ theo dõi các thay đổi của 1 object</p>
<p>Giả sử, object của bạn có 50 field. Bạn chỉ thay đổi 1 field trong đó, rồi gọi <code>_context.SaveChanges()</code>, EF sẽ biết được rằng chỉ có 1 field bị thay đổi, và nó sẽ cập nhật đúng 1 field duy nhất, tăng hiệu suất của ứng dụng.</p>
<p>Để làm được điều này, nó sẽ query object đó trước bằng khóa chính, và khi bạn gọi Attach, nó sẽ bắt đầu theo dõi object của bạn.</p>
<p>Khi bạn thay đổi 1 field, thì trạng thái của field đó từ <code>Unmodified</code> sẽ chuyển thành <code>Modified</code></p>
<h2 id="1-5-Delete"><a href="#1-5-Delete" class="headerlink" title="1.5. Delete"></a>1.5. Delete</h2><p><a id="markdown-delete" name="delete"></a></p>
<p>Tương tự như edit, khi muốn delete 1 object, bạn cũng cần “2 chuyến” tới database</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">var phone &#x3D; _context.Phones.Find(id);
 
_context.Phones.Remove(phone);
_context.SaveChanges();</code></pre>

<h1 id="2-DbContext-Mot-cach-code-tot-hon"><a href="#2-DbContext-Mot-cach-code-tot-hon" class="headerlink" title="2. DbContext - Một cách code tốt hơn"></a>2. DbContext - Một cách code tốt hơn</h1><p><a id="markdown-dbcontext---m%E1%BB%99t-c%C3%A1ch-code-t%E1%BB%91t-h%C6%A1n" name="dbcontext---m%E1%BB%99t-c%C3%A1ch-code-t%E1%BB%91t-h%C6%A1n"></a></p>
<h2 id="2-1-Neu-CRUD-failed"><a href="#2-1-Neu-CRUD-failed" class="headerlink" title="2.1. Nếu CRUD failed?"></a>2.1. Nếu CRUD failed?</h2><p><a id="markdown-n%E1%BA%BFu-crud-failed%3F" name="n%E1%BA%BFu-crud-failed%3F"></a></p>
<p>Sẽ có nhiều trường hợp, khi gọi các câu lệnh crud bằng entity framework, ko có dòng data nào được thêm vào hoặc sửa đổi. Vậy làm sao bạn biết khi nào thành công khi nào không?</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">_context.SaveChanges();</code></pre>

<p>May mắn là method trên trả về <em><strong>số lượng record có thay đổi</strong></em></p>
<p>Vì vậy, bạn có thể kiểm tra rất dễ bằng cách</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">&#x2F;&#x2F; your code here to CRUD
var result &#x3D; _context.SaveChanges();</code></pre>

<p>bằng cách kiểm tra “result &gt; 0”, bạn có thể biết được câu lệnh save changes của mình có thành công hay ko</p>
<h2 id="2-2-await-hay-khong"><a href="#2-2-await-hay-khong" class="headerlink" title="2.2. await hay không?"></a>2.2. await hay không?</h2><p><a id="markdown-await-hay-kh%C3%B4ng%3F" name="await-hay-kh%C3%B4ng%3F"></a></p>
<p>Trong code controller được sinh ra bởi asp.net, bạn sẽ thấy các câu lệnh có dùng <code>_context</code> đều có <code>async</code> đằng sau, đằng trước là <code>await</code>, và kiểu dữ liệu của method là <code>Task</code></p>
<p>Hiểu một cách đơn giản, async - await là một cặp từ khóa giúp đơn giản hóa việc lập trình multi thread.</p>
<blockquote>
<p>Nếu bạn chưa nắm vững kỹ thuật async-await, thì mình khuyên bạn là nên… bỏ hẳn và chỉ sử dụng các method trong các phần code bên trên trong bài viết này</p>
</blockquote>
<h1 id="3-Model-Validation"><a href="#3-Model-Validation" class="headerlink" title="3. Model Validation"></a>3. Model Validation</h1><p><a id="markdown-model-validation" name="model-validation"></a></p>
<p>Chắc hẳn bạn đã từng nghe các ràng buộc như</p>
<pre class="line-numbers language-none"><code class="language-none">Tên không được chứa quá 20 ký tự Số điện thoại phải có 10 số</code></pre>

<p>Bạn có tự hỏi “Họ đã làm điều đó như thế nào?”</p>
<h2 id="3-1-DataAnnotation"><a href="#3-1-DataAnnotation" class="headerlink" title="3.1. DataAnnotation"></a>3.1. DataAnnotation</h2><p><a id="markdown-dataannotation" name="dataannotation"></a></p>
<p>ASP.NET cho phép bạn ràng buộc dữ liệu thông qua các <code>DataAnnotation</code> được viết thêm trên đầu mỗi property</p>
<p>Lấy ví dụ với model <code>Phone</code>, mình muốn thêm 1 ràng buộc là tên không được quá 50 ký tự, và báo lỗi khi user nhập quá số lượng</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">namespace mvcbasic.Models
&#123;
    using System.ComponentModel.DataAnnotations;
 
    public class Phone
    &#123;
        public int Id &#123; get; set; &#125;
 
        [StringLength(50, ErrorMessage &#x3D; &quot;Name cannot be more than 50 characters&quot;)]
        public string Name &#123; get; set; &#125;
    &#125;
&#125;</code></pre>

<blockquote>
<p>Bạn có thể tìm hiểu sâu hơn về cách làm 1 câu error message chung cho tất cả các property cùng loại tại đây: <a href="https://huntertran.com/2018/01/14/asp-net-mvc-error-message-chung-ma-rieng/">Error Message – chung mà riêng</a></p>
</blockquote>
<p>Để check một object có thỏa điều kiện của model ko, bạn có thể dùng <code>ModelState</code>. Ví dụ trong method <code>Create</code></p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">&#x2F;&#x2F; POST: Phone&#x2F;Create
&#x2F;&#x2F; To protect from overposting attacks, please enable the specific properties you want to bind to, for 
&#x2F;&#x2F; more details see http:&#x2F;&#x2F;go.microsoft.com&#x2F;fwlink&#x2F;?LinkId&#x3D;317598.
[HttpPost]
[ValidateAntiForgeryToken]
public async Task&lt;IActionResult&gt; Create([Bind(&quot;Id,Name&quot;)] Phone phone)
&#123;
    &#x2F;&#x2F; CHECK MODEL STATE HERE
    if (ModelState.IsValid)
    &#123;
        _context.Add(phone);
        await _context.SaveChangesAsync();
 
        var phone2 &#x3D; new Phone
        &#123;
            Name &#x3D; &quot;Test&quot;
        &#125;;
 
        var phones &#x3D; new List&lt;Phone&gt;();
 
        _context.Phones.AddRange(phones);
 
        return RedirectToAction(nameof(Index));
    &#125;
    return View(phone);
&#125;</code></pre>

<h2 id="3-2-Client-side-validation"><a href="#3-2-Client-side-validation" class="headerlink" title="3.2. Client side validation"></a>3.2. Client side validation</h2><p><a id="markdown-client-side-validation" name="client-side-validation"></a></p>
<p>Client side validation cho phép user thấy các lỗi dữ liệu ngay khi họ nhập mà chưa cần gửi data lên server của bạn</p>
<p>Việc bạn cần làm là thêm các dòng sau vào code View của mình</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;!--dòng này có thể đã nằm trong file View&#x2F;Shared&#x2F;_Layout.cshtml của bạn rồi--&gt;
&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;ajax.aspnetcdn.com&#x2F;ajax&#x2F;jQuery&#x2F;jquery-2.2.0.min.js&quot;&gt;https:&#x2F;&#x2F;ajax.aspnetcdn.com&#x2F;ajax&#x2F;jQuery&#x2F;jquery-2.2.0.min.js&lt;&#x2F;a&gt;
 
&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;ajax.aspnetcdn.com&#x2F;ajax&#x2F;jquery.validate&#x2F;1.16.0&#x2F;jquery.validate.min.js&quot;&gt;https:&#x2F;&#x2F;ajax.aspnetcdn.com&#x2F;ajax&#x2F;jquery.validate&#x2F;1.16.0&#x2F;jquery.validate.min.js&lt;&#x2F;a&gt;
&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;ajax.aspnetcdn.com&#x2F;ajax&#x2F;jquery.validation.unobtrusive&#x2F;3.2.6&#x2F;jquery.validate.unobtrusive.min.js&quot;&gt;https:&#x2F;&#x2F;ajax.aspnetcdn.com&#x2F;ajax&#x2F;jquery.validation.unobtrusive&#x2F;3.2.6&#x2F;jquery.validate.unobtrusive.min.js&lt;&#x2F;a&gt;</code></pre>

<p>và trong form, bạn thêm đoạn code sau để hiển thị thông báo lỗi (nếu có)</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;form asp-action&#x3D;&quot;Create&quot;&gt;
    &lt;!--dòng này hiển thị một thông báo tổng hợp tất cả các lỗi--&gt;
    &lt;div class&#x3D;&quot;text-danger&quot;&gt;&lt;&#x2F;div&gt;
    &lt;div class&#x3D;&quot;form-group&quot;&gt;
 
 
        &lt;!--dòng này hiển thị thông báo lỗi cụ thể cho form--&gt;
        &lt;span class&#x3D;&quot;text-danger&quot;&gt;&lt;&#x2F;span&gt;
    &lt;&#x2F;div&gt;
    &lt;div class&#x3D;&quot;form-group&quot;&gt;
 
    &lt;&#x2F;div&gt;
&lt;&#x2F;form&gt;</code></pre>

<p>Lỗi hiển thị như sau</p>
<p><img src="https://farm5.staticflickr.com/4783/41003265721_c53a2103d8_o.png" alt="bug"></p>
<blockquote>
<p>Bạn có thể xem toàn bộ các annotation ở đây: <a href="https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.dataannotations?view=netcore-2.0">Data Annotation on docs.microsoft.com</a></p>
</blockquote>
<p>Thế là xong. Các bạn đón chờ phần tiếp theo nhé</p>
]]></content>
      <categories>
        <category>Others</category>
        <category>CSharp</category>
        <category>ASP.NET</category>
      </categories>
  </entry>
  <entry>
    <title>[ASP.NET] - Project Structure &amp; Package Manager</title>
    <url>/2018/05/09/asp-net-project-structure-package-manager/</url>
    <content><![CDATA[<p>Bạn tổ chức thư mục, tập tin như thế nào? Có nên tách ra thành nhiều project con? Có nên dùng package manager?</p>
<p>Trong phần này, mình sẽ trình bày kinh nghiệm cá nhân về các tổ chức và quản lý projects, và dùng package manger nhóe</p>
<span id="more"></span>
<ul>
<li><a href="#1-project--solution">1. Project &amp; Solution</a><ul>
<li><a href="#11-l%C3%BD-do">1.1. Lý do</a><ul>
<li>  <a href="#111-d%C3%B9ng-l%E1%BA%A1i">1.1.1. Dùng lại</a></li>
<li>  <a href="#112-ph%C3%A2n-ph%E1%BB%91i">1.1.2. Phân phối</a></li>
<li>  <a href="#113-tri%E1%BB%83n-khai">1.1.3. Triển khai</a></li>
<li>  <a href="#114-you-name-it">1.1.4. You name it</a></li>
</ul>
</li>
<li>  <a href="#12-ph%C3%A2n-chia-projects">1.2. Phân chia projects</a></li>
</ul>
</li>
<li><a href="#2-package-manager">2. Package Manager</a><ul>
<li>  <a href="#21-for-backend---nuget">2.1. For backend - NUGET</a></li>
<li><a href="#22-for-front-end---yarn">2.2. For front-end - Yarn</a><ul>
<li>  <a href="#221-t%C3%ADnh-ph%E1%BB%A5-thu%E1%BB%99c">2.2.1. Tính phụ thuộc</a></li>
<li>  <a href="#222-sources">2.2.2. Sources</a></li>
<li>  <a href="#223-t%C3%A1i-t%E1%BA%A1o">2.2.3. Tái tạo</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="1-Project-amp-Solution"><a href="#1-Project-amp-Solution" class="headerlink" title="1. Project &amp; Solution"></a>1. Project &amp; Solution</h1><p>Cách dễ nhất, cũng như đơn giản nhất, là chỉ bao gồm 1 project mà thôi. Ở Part 1, bạn cũng đã có “kinh nghiệm” gõ lệnh tạo project.</p>
<p>Visual Studio thì lại không như vậy, nó ép bạn phải xài một khái niệm gọi là “Solution”. Theo đó, một hoặc nhiều project sẽ nằm trong 1 solution. Khi bạn mở project được tạo bởi dòng lệnh <code>dotnet new *</code> trong Visual Studio, nó cũng sẽ tạo ra một cái Solution ất ơ nào đấy rồi nhét cái project của bạn vào.</p>
<p>Sẽ là một thói quen tốt khi bạn tạo nhiều project ứng với các mục đích khác nhau, phục vụ cho dự án phần mềm của bạn nói chung và ASP.NET nói riêng</p>
<h2 id="1-1-Ly-do"><a href="#1-1-Ly-do" class="headerlink" title="1.1. Lý do"></a>1.1. Lý do</h2><p>Bạn thắc mắc là tại sao mình lại phải chia nhiều project như vậy? Để chung luôn thì có đỡ công include thư viện biết bao nhiêu không?</p>
<h3 id="1-1-1-Dung-lai"><a href="#1-1-1-Dung-lai" class="headerlink" title="1.1.1. Dùng lại"></a>1.1.1. Dùng lại</h3><p>Khi một số code có chức năng riêng biệt nào đó được bạn tách ra thành 1 project riêng, thì nó sẽ rất dễ dàng để dùng lại nó vào những dự án khác.</p>
<p>Giả sử bạn có 1 số helpers và class giúp việc kết nối tới database rất nhanh chóng và gọn lẹ. Khi nó ở 1 project riêng, bạn có thể dễ dàng up nó lên git, rồi các project khác cứ thế mà clone về xài thôi. Khi bạn update project trên git đó, toàn bộ các clone của nó sẽ đều được update theo.</p>
<h3 id="1-1-2-Phan-phoi"><a href="#1-1-2-Phan-phoi" class="headerlink" title="1.1.2. Phân phối"></a>1.1.2. Phân phối</h3><p>Cũng ví dụ trên, project của bạn đã nằm ở mức library, tức là một thư viện rồi. Bạn có thể dụ bạn bè mình xài nó, phát triển thêm, đóng góp cho nó, pack nó lại thành nuget package, blah blah blah và blah blah blah</p>
<h3 id="1-1-3-Trien-khai"><a href="#1-1-3-Trien-khai" class="headerlink" title="1.1.3. Triển khai"></a>1.1.3. Triển khai</h3><p>1 công ty nọ thấy lib version 1.0 của bạn quá hay, họ quyết định tải zìa và xài trong dự án cực khủng của họ. 10 năm sau, bạn cập nhật cái lib của mình lên version 2.0, dùng lại toàn bộ các method và hàm sẵn có, chẳng qua là thay đổi thuật toán cho nó chạy nhanh lên thôi. Công ty chỉ cần bỏ ra 1 chi phí tối thiểu để clone cái lib của bạn về, build và replace cái lib đang chạy trên production của họ. Thế là xong. Không cần phải build lại cả project, không cần phải deploy lại.</p>
<h3 id="1-1-4-You-name-it"><a href="#1-1-4-You-name-it" class="headerlink" title="1.1.4. You name it"></a>1.1.4. You name it</h3><p>Khi bạn đã dấn thân vào nghiệp code càng lâu năm, bạn sẽ phát hiện ra càng nhiều lợi ích khác của việc chia tách này.</p>
<h2 id="1-2-Phan-chia-projects"><a href="#1-2-Phan-chia-projects" class="headerlink" title="1.2. Phân chia projects"></a>1.2. Phân chia projects</h2><p>Ở mô hình MVC, cả Model-View-ViewModel đều gắn liền với nhau, nên chúng ta không tách</p>
<blockquote>
<p>Tuy nhiên, có một số công ty tách cái Model ra một project riêng. Điều này giúp bạn dễ quản lý code hơn. Đôi khi cũng tách luôn cái Controller thành 1 project</p>
</blockquote>
<p>1 nguyên tắc mình hay dùng để tách project là dựa trên tính năng của nó. Ví dụ:</p>
<ul>
<li>  Unit Test -&gt; <strong>Tách</strong></li>
<li>  Data Connection Layer -&gt; <strong>Tách</strong></li>
<li>  Encryption / Decryption -&gt; <strong>Tách</strong></li>
<li>  Encryption <em>đứng riêng</em> -&gt; <strong>KHÔNG tách</strong></li>
</ul>
<h1 id="2-Package-Manager"><a href="#2-Package-Manager" class="headerlink" title="2. Package Manager"></a>2. Package Manager</h1><p>Làm web có 2 phần, front-end và back-end. Và cả 2 phần này đều có package manager (với ASP.NET)</p>
<h2 id="2-1-For-backend-NUGET"><a href="#2-1-For-backend-NUGET" class="headerlink" title="2.1. For backend - NUGET"></a>2.1. For backend - NUGET</h2><p>Về phía backend, thì lợi ích của việc sử dụng package manager (nuget) là quá rõ ràng. Bạn chỉ cần “<strong>search &amp; install</strong>“, không còn cảnh đêm hôm khuya khoắt ngồi lọ mọ crack IDM để download một cái lib nào đấy có đuôi .dll, rồi mò mẫm trong đống file đã download để import nó vào project.</p>
<p>Nó sẽ triệt tiêu luôn cái vấn đề tương thích platform với lib (lib build cho x64 chỉ chạy được trên x64 và tương tự cho x86)</p>
<h2 id="2-2-For-front-end-Yarn"><a href="#2-2-For-front-end-Yarn" class="headerlink" title="2.2. For front-end - Yarn"></a>2.2. For front-end - Yarn</h2><blockquote>
<p>Bower đã bị ngừng hỗ trợ</p>
</blockquote>
<p>Về phía front-end thì sao? Chẳng phải chỉ cần thêm file .css và .js vào là web chạy ngon lành sao</p>
<p><strong>đúng rồi, NHƯNG</strong></p>
<ul>
<li>  nguồn không thống nhất</li>
<li>  lib này phụ thuộc lib kia, lib kia phụ thuộc lib nọ</li>
<li>  nó có chạy trên máy tui mà sao không chạy được trên máy khác</li>
</ul>
<p>và front-end package manager được tạo ra để giải quyết mấy vấn đề này</p>
<p>Vậy đó, nếu ASP.NET chỉ có 1 (vài) package manager như Nuget, thì trong thế giới front-emd ta có cả chục. Mình sẽ giới thiệu sơ qua về 1 tân binh mới nổi, và đang rất hot - YARN</p>
<h3 id="2-2-1-Tinh-phu-thuoc"><a href="#2-2-1-Tinh-phu-thuoc" class="headerlink" title="2.2.1. Tính phụ thuộc"></a>2.2.1. Tính phụ thuộc</h3><p><code>JQuery</code> là một lib rất phổ biến, và ty tỷ lib khác được xây dựng mà cần tới nó. Nhưng JQuery có cũng kha khá phiên bản khác nhau, và các lib khác nhau lại dùng các version khác nhau của JQuery.</p>
<p>Yarn sẽ giúp bạn loại bỏ vấn đề này. Khi JQuery được cài đặt qua Yarn, sẽ chỉ có 1 version duy nhất, và tất cả package khác đều sẽ dựa trên version này.</p>
<h3 id="2-2-2-Sources"><a href="#2-2-2-Sources" class="headerlink" title="2.2.2. Sources"></a>2.2.2. Sources</h3><p>Toàn bộ package được host trên yarn, thì bạn chỉ cần lên Yarn lấy về là xong, không cần phải vào từng website của từng lib, rồi kiếm cái nút download nữa.</p>
<h3 id="2-2-3-Tai-tao"><a href="#2-2-3-Tai-tao" class="headerlink" title="2.2.3. Tái tạo"></a>2.2.3. Tái tạo</h3><p>Yarn sử dụng một file package.json để lưu trữ thông tin các package đã được cài đặt. Dùng file này, trên bất kỳ máy nào, nó sẽ tạo ra chính xác các file cần thiết để project của bạn có thể chạy ngon lành y như lúc dev vậy</p>
<p><img src="https://farm1.staticflickr.com/966/27130244167_1f468f1efa_o.png" alt="worked on my machine"></p>
<p>Thế nhé bạn ;)</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>ASP.NET</category>
      </categories>
      <tags>
        <tag>project</tag>
        <tag>structure</tag>
        <tag>architech</tag>
        <tag>manager</tag>
        <tag>package</tag>
      </tags>
  </entry>
  <entry>
    <title>[ASPNET Core 2] – Middleware</title>
    <url>/2018/06/12/aspnet-core-2-middleware/</url>
    <content><![CDATA[<p>For English version: <a href="https://tuanmsp.wordpress.com/2018/06/08/aspnet-core-2-middleware/">[ASPNET Core 2] – Middleware</a></p>
<p>Đôi khi bạn có một yêu cầu éo le: Viết Hello world bằng ASP.NET</p>
<p>Dễ ẹt, <code>dotnet new mvc</code>, rồi sửa <code>Views/Home/Index.cshtml</code> cho nó trả về 1 dòng</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;p&gt;hello world&lt;&#x2F;p&gt;</code></pre>

<p>Thế là xong, phải ko? Có cách khác :D</p>
<span id="more"></span>

<!-- TOC -->

<ul>
<li><a href="#1-middleware-l%C3%A0-gi%E1%BB%81">1. Middleware là giề</a></li>
<li><a href="#2-c%C3%A1c-lo%E1%BA%A1i-middleware">2. Các loại middleware</a><ul>
<li><a href="#21---so-s%C3%A1nh-v%E1%BB%9Bi-%C4%91%E1%BB%93-c%E1%BB%95-aspnet-mvc5">2.1. &gt; ## So sánh với đồ cổ ASP.NET MVC5</a></li>
</ul>
</li>
<li><a href="#3-default-middleware">3. Default middleware</a></li>
<li><a href="#4-vi%E1%BA%BFt-m%E1%BB%99t-middleware">4. Viết một middleware</a><ul>
<li><a href="#41-d%C3%B9ng-delegate">4.1. Dùng delegate</a></li>
<li><a href="#42-x%C3%A0i-class-ri%C3%AAng">4.2. Xài class riêng</a></li>
<li><a href="#43-ghi-ch%C3%BA-khi-x%C3%A0i-dependency-injection">4.3. ghi chú khi xài Dependency Injection</a></li>
</ul>
</li>
</ul>
<!-- /TOC -->

<h1 id="1-Middleware-la-gie"><a href="#1-Middleware-la-gie" class="headerlink" title="1. Middleware là giề"></a>1. Middleware là giề</h1><p><a id="markdown-middleware-l%C3%A0-gi%E1%BB%81" name="middleware-l%C3%A0-gi%E1%BB%81"></a></p>
<p>Tưởng tượng rằng ứng dụng asp.net của bạn là 1 đường ống nước. Data chính là nước. Nước ở đầu ống (request) thì bẩn như kênh nhiêu lộc. Bạn mong muốn rằng nước ở cuối ống (response) phải sạch như nước khoáng Lavie. Chắc phải có lọc gì đó ở giữa ống nhể? Middleware chính là loại lọc đó. Nó gắn vào ứng dụng để xử lý requests và responses <img src="https://farm2.staticflickr.com/1751/27794903017_13f284ce64_o.png" alt="middleware"></p>
<blockquote>
<p>middleware có thể quyết định là nó có tiếp tục truyền cái request nó đã xử lý cho 1 middleware tiếp theo hay ko. Trong trường hợp nó ngắt luôn ko truyền, thì ta gọi đó là <code>short-circuit</code></p>
</blockquote>
<h1 id="2-Cac-loai-middleware"><a href="#2-Cac-loai-middleware" class="headerlink" title="2. Các loại middleware"></a>2. Các loại middleware</h1><p><a id="markdown-c%C3%A1c-lo%E1%BA%A1i-middleware" name="c%C3%A1c-lo%E1%BA%A1i-middleware"></a></p>
<p>Có 3 loại middleware, phân loại bằng cách bạn implement nó như nào</p>
<table>
<thead>
<tr>
<th>Loại</th>
<th>Có thể short-circuit</th>
<th>Dùng để</th>
</tr>
</thead>
<tbody><tr>
<td>Use</td>
<td>Có</td>
<td>Short-circuit một request<br>Logic để tạo response</td>
</tr>
<tr>
<td>Run</td>
<td>Không</td>
<td>Kết thúc pipeline</td>
</tr>
<tr>
<td>Map<br>MapWhen</td>
<td>Không</td>
<td>Phân nhánh pipeline dựa trên request path<br>MapWhen phân nhánh dựa trên điều kiện<br>Hỗ trợ Nesting (multi-level branching)</td>
</tr>
</tbody></table>
<blockquote>
<h2 id="So-sanh-voi-do-co-ASP-NET-MVC5"><a href="#So-sanh-voi-do-co-ASP-NET-MVC5" class="headerlink" title="So sánh với đồ cổ ASP.NET MVC5"></a>So sánh với đồ cổ ASP.NET MVC5</h2><p><a id="markdown-%3E-%23%23-so-s%C3%A1nh-v%E1%BB%9Bi-%C4%91%E1%BB%93-c%E1%BB%95-asp.net-mvc5" name="%3E-%23%23-so-s%C3%A1nh-v%E1%BB%9Bi-%C4%91%E1%BB%93-c%E1%BB%95-asp.net-mvc5"></a></p>
</blockquote>
<table>
<thead>
<tr>
<th></th>
<th>ASP.NET MVC5</th>
<th>ASP.NET Core 2</th>
</tr>
</thead>
<tbody><tr>
<td>Khái niệm</td>
<td>HTTP Handlers<br><br>HTTP Modules</td>
<td>middleware</td>
</tr>
<tr>
<td>Lựa chọn?</td>
<td>HTTP Handlers =&gt; Dựa trên filename extension<br><br>HTTP Modules =&gt; Móc vào life cycle bằng cách dùng events</td>
<td>Định nghĩa theo 1 thứ tự đặc biệt và các từ khóa<br><br>Run =&gt; kết thúc pipeline<br><br>Use =&gt; short-circuit và xử lý logic<br><br>Map =&gt; phân nhánh dựa trên path</td>
</tr>
<tr>
<td>Dễ xài ko?</td>
<td>Đòi hỏi hiểu sâu về ASP.NET life-cycle<br><br>Khó xài vì nhiều modules có thể móc vào cùng 1 event</td>
<td>Yêu cầu 1 thứ tự nhất định<br><br>Chỉ có 1 dòng pipeline, dễ hiểu/xài/debug</td>
</tr>
</tbody></table>
<h1 id="3-Default-middleware"><a href="#3-Default-middleware" class="headerlink" title="3. Default middleware"></a>3. Default middleware</h1><p><a id="markdown-default-middleware" name="default-middleware"></a></p>
<p>Khi mới tạo 1 project asp.net core mới, .net cli sẽ thêm vào 1 số middleware cho bạn</p>
<ol>
<li> Exception Handler: handle exception từ các middleware ở dưới</li>
<li> Static Files: trả về files trong wwwroots</li>
<li> Mvc: Hướng request tới các action trong controller</li>
</ol>
<p>source code nè:</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">public static void Configure(IApplicationBuilder app, IHostingEnvironment env)
&#123;
    if (env.IsDevelopment())
    &#123;
        app.UseDeveloperExceptionPage();
    &#125;
    else
    &#123;
        app.UseExceptionHandler(&quot;&#x2F;Error&#x2F;500&quot;);
    &#125;
 
    app.UseStaticFiles();
    app.UseAuthentication();
    app.UseSession();
 
    if (!env.IsDevelopment())
    &#123;
        app.UseMiddleware&lt;ErrorHandlingMiddleware&gt;();
    &#125;
 
    app.UseMvc(routes &#x3D;&gt;
    &#123;
        routes.MapRoute(
            name: &quot;default&quot;,
            template: &quot;&#123;controller&#x3D;Home&#125;&#x2F;&#123;action&#x3D;Index&#125;&#x2F;&#123;id?&#125;&quot;);
    &#125;);
&#125;</code></pre>

<p><a href="https://docs.microsoft.com/en-us/aspnet/core/fundamentals/middleware/?view=aspnetcore-2.1&tabs=aspnetcore2x#built-in-middleware">Đây</a> danh sách các built-in middlewares</p>
<h1 id="4-Viet-mot-middleware"><a href="#4-Viet-mot-middleware" class="headerlink" title="4. Viết một middleware"></a>4. Viết một middleware</h1><p><a id="markdown-vi%E1%BA%BFt-m%E1%BB%99t-middleware" name="vi%E1%BA%BFt-m%E1%BB%99t-middleware"></a></p>
<h2 id="4-1-Dung-delegate"><a href="#4-1-Dung-delegate" class="headerlink" title="4.1. Dùng delegate"></a>4.1. Dùng delegate</h2><p><a id="markdown-d%C3%B9ng-delegate" name="d%C3%B9ng-delegate"></a></p>
<p>thêm code vào <code>Startup.cs</code>, method <code>Configure</code></p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">app.Use((context, next) &#x3D;&gt;
&#123;
    var cultureQuery &#x3D; context.Request.Query[&quot;culture&quot;];
    if (!string.IsNullOrWhiteSpace(cultureQuery))
    &#123;
        var culture &#x3D; new CultureInfo(cultureQuery);
        CultureInfo.CurrentCulture &#x3D; culture;
        CultureInfo.CurrentUICulture &#x3D; culture;
    &#125;
    &#x2F;&#x2F; Call the next delegate&#x2F;middleware in the pipeline
    return next();
&#125;);</code></pre>


<h2 id="4-2-Xai-class-rieng"><a href="#4-2-Xai-class-rieng" class="headerlink" title="4.2. Xài class riêng"></a>4.2. Xài class riêng</h2><p><a id="markdown-x%C3%A0i-class-ri%C3%AAng" name="x%C3%A0i-class-ri%C3%AAng"></a></p>
<p>phức tạp hơn, nhưng bù lại linh hoạt hơn đầu tiên, code cho middleware </p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">public class RequestCultureMiddleware
&#123;
    private readonly RequestDelegate _next;
    public RequestCultureMiddleware(RequestDelegate next) &#123; _next &#x3D;next; &#125;
    public Task InvokeAsync(HttpContext context)
    &#123;
        var cultureQuery &#x3D; context.Request.Query[&quot;culture&quot;];
        if (!string.IsNullOrWhiteSpace(cultureQuery))
        &#123;
            var culture &#x3D; new CultureInfo(cultureQuery);
            CultureInfo.CurrentCulture &#x3D; culture;
            CultureInfo.CurrentUICulture &#x3D; culture;
        &#125;
        &#x2F;&#x2F; Call the next delegate&#x2F;middleware in the pipeline
        return this._next(context);
    &#125;
&#125;</code></pre>
<p> sau đó, code cho extension để xài được middleware đó trong method <code>Configure</code> </p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">&#x2F;&#x2F; Expose through IApplicationBuilder
public static class RequestCultureMiddlewareExtensions
&#123;
    public static IApplicationBuilder UseRequestCulture(this IApplicationBuilder builder)
    &#123;
        return builder.UseMiddleware&lt;RequestCultureMiddleware&gt;();
    &#125;
&#125;</code></pre>
<p> cuối cùng, xài trong <code>Configure</code> method </p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">&#x2F;&#x2F; Use in Startup.cs &#x3D;&gt; Configure method
public void Configure(IApplicationBuilder app)
&#123;
    app.UseRequestCulture();
    app.Run(async (context) &#x3D;&gt;
    &#123;
        await context.Response.WriteAsync($&quot;Hello&#123;CultureInfo.CurrentCulture.DisplayName&#125;&quot;);
    &#125;);
&#125;</code></pre>


<h2 id="ghi-chu-khi-xai-Dependency-Injection"><a href="#ghi-chu-khi-xai-Dependency-Injection" class="headerlink" title="ghi chú khi xài Dependency Injection"></a>ghi chú khi xài Dependency Injection</h2><p><a id="markdown-ghi-ch%C3%BA-khi-x%C3%A0i-dependency-injection" name="ghi-ch%C3%BA-khi-x%C3%A0i-dependency-injection"></a></p>
<blockquote>
<p><code>Scoped lifetime service</code> phải được inject vào Invoke hoặc InvokeAsync method Inject cái <code>scoped lifetime service</code> thông qua constructor sẽ ép cái service đó thành singleton</p>
</blockquote>
<p>có 3 loại lifetime cho một service trong asp.net, là <code>transient</code>, <code>scoped</code> và <code>singleton</code></p>
<ul>
<li><strong>Transient</strong> lifetime services được tạo ra mỗi lần nó được gọi. Loại này phù hợp cho các service lightweight, stateless.</li>
<li><strong>Scoped</strong> lifetime services được tạo cho mỗi request.</li>
<li><strong>Singleton</strong> lifetime services được tạo cho lần requested đầu tiên (hoặc khi ConfigureServices khởi chạy nếu bạn có tạo 1 instance của service trong đó) rồi các request sau đó sẽ xài lại instance này.</li>
</ul>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>ASP.NET</category>
      </categories>
  </entry>
  <entry>
    <title>[Design Pattern] - Dependency Injection trong ASP.NET Core</title>
    <url>/2018/06/20/design-pattern-dependency-injection-trong-asp-net-core/</url>
    <content><![CDATA[<p>Dependency Injection là một kỹ thuật vô cùng thông dụng để <em>nới lỏng</em> các objects và class phụ thuộc vào chúng. Nghe khó hiểu quá phải ko các bạn?</p>
<p>Bài viết này sẽ mô tả kỹ thuật này, cho bạn một cái nhìn tổng quan (hy vọng là khách quan) về DI</p>
<span id="more"></span>
<ul>
<li>  <a href="#1-v%E1%BA%A5n-%C4%91%E1%BB%81">1. Vấn đề</a></li>
<li>  <a href="#2-l%E1%BB%A3i-%C3%ADch">2. Lợi ích</a></li>
<li><a href="#3-back-to-code">3. Back to code</a><ul>
<li>  <a href="#31-interface">3.1. Interface</a></li>
<li>  <a href="#32-implementation">3.2. Implementation</a></li>
</ul>
</li>
<li><a href="#4-register">4. Register</a><ul>
<li>  <a href="#41-lifetime">4.1. Lifetime</a></li>
<li>  <a href="#42-contructor-injection">4.2. Contructor Injection</a></li>
<li>  <a href="#43-action-injection">4.3. Action Injection</a></li>
<li>  <a href="#44-service-trong-service">4.4. Service trong Service</a></li>
</ul>
</li>
</ul>
<h1 id="1-Van-de"><a href="#1-Van-de" class="headerlink" title="1. Vấn đề"></a>1. Vấn đề</h1><p>Hãy tưởng tượng bạn muốn uống coca, nhà ko còn chai coca nào Bạn phải ra Circle K, đi lòng vòng trong cửa hàng để kiếm 1 chai coca, trả tiền, đi về</p>
<ul>
<li>  Bạn có thể quên ko trả tiền</li>
<li>  Bạn có thể ko tìm thấy Circle K nào gần cả</li>
<li>  Bạn có thể ko tìm thấy chai coca nào trong circle k cả</li>
<li>  Bạn có thể lấy nhầm 1 chai xá xị chương dương thay vì coca</li>
</ul>
<p>Với Dependency Injection, mọi việc sẽ khác đi</p>
<p>Bạn đưa tiền cho 1 thằng nhóc có nhiệm vụ chuyên đi mua nước ngọt cho khu xóm 5 phút sau, nó xuất hiện với chai coca của bạn</p>
<p>Một người khác trong cùng khu xóm cũng có nhu cần gần giống bạn, nhưng họ muốn uống pepsi</p>
<p>Thay vì cũng phải đi ra cửa hàng và tự mua pepsi và gặp các vấn đề như bạn gặp, họ cũng gọi thằng nhóc đó lại, và 5 phút sau, chai pepsi ướp lạnh ở trong tay họ. Thằng nhóc đó chính là 1 <strong><em>Service</em></strong>, và bạn phụ thuộc vô thằng nhóc đó để có nước ngọt uống</p>
<h1 id="2-Loi-ich"><a href="#2-Loi-ich" class="headerlink" title="2. Lợi ích"></a>2. Lợi ích</h1><p>Quay trở lại với ví dụ trên, lợi ích của bạn khi dùng <strong><em>Service</em></strong> mua nước ngọt của thằng nhóc là gì?</p>
<ul>
<li>  Bạn ko cần quan tâm thằng nhóc đó nó làm gì để có nước ngọt cho bạn</li>
<li>  Bạn có thể yêu cầu nhiều loại nước ngọt khác nhau mà ko cần biết hình dạng hay chỗ bán</li>
</ul>
<h1 id="3-Back-to-code"><a href="#3-Back-to-code" class="headerlink" title="3. Back to code"></a>3. Back to code</h1><p>Quay trở lại với code, bạn sẽ implement DI như thế nào?</p>
<h2 id="3-1-Interface"><a href="#3-1-Interface" class="headerlink" title="3.1. Interface"></a>3.1. Interface</h2><pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">public interface IDrinkBuyer &#123; void BuyDrink(string name); &#125;</code></pre>

<p>Khi thằng nhóc mua nước ngọt ở bên trên đã già, nó sẽ muốn truyền lại nhiệm vụ mua nước ngọt cho 1 thằng nhóc khác, và cứ thể. Mọi thằng nhóc mua nước ngọt trong xóm đều sẽ có 1 phương thức cơ bản là <code>BuyDrink</code> chấp nhận 1 param là tên của loại nước cần mua Bạn đóng vai trò là <code>WebApplication</code>, sẽ gọi phương thức này để có nước ngọt uống</p>
<h2 id="3-2-Implementation"><a href="#3-2-Implementation" class="headerlink" title="3.2. Implementation"></a>3.2. Implementation</h2><p>Người quản lý của mấy thằng nhóc mua nước ngọt này sẽ phân nhiệm vụ cho từng thằng nhóc 1</p>
<ul>
<li>  Nhóc A mua ở Circle K</li>
<li>  Nhóc B mua ở Vinmart</li>
</ul>
<p>Và họ sẽ implement như sau </p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">public class CircleKDrinkBuyer: IDrinkBuyer 
&#123;
  public void BuyDrink(string name) 
  &#123;
    &#x2F;&#x2F; Go to circle k 
    &#x2F;&#x2F; Find the -name- drink 
    &#x2F;&#x2F; Buy it and deliver 
  &#125;
&#125;

public class VinmartDrinkBuyer: IDrinkBuyer 
&#123;
  public void BuyDrink(string name) 
  &#123;
    &#x2F;&#x2F; Go to Vinmart 
    &#x2F;&#x2F; Find the -name- drink 
    &#x2F;&#x2F; Buy it and deliver 
  &#125;
&#125;</code></pre>

<p>Thế là xong Khi nhà bạn gần Vinmart, người quản lý sẽ cử thằng nhóc B - VinmartDrinkBuyer canh trước cổng nhà bạn. Bất kể khi nào bạn có nhu cầu mua nước ngọt, bạn sẽ gọi nó. Bạn đâu có biết là thằng nhóc B đó nó chỉ biết mua nước ngọt ở Vinmart thôi. Bạn chỉ quan tâm là bạn gọi nó, và bạn có nước ngọt uống</p>
<h1 id="4-Register"><a href="#4-Register" class="headerlink" title="4. Register"></a>4. Register</h1><p>Như vậy, khai báo như thế nào trong ứng dụng của bạn? khi tạo mới một ứng dụng asp.net core 2, đã có sẵn 1 số phương thức giúp bạn bắt đầu ngay và luôn <img src="https://farm2.staticflickr.com/1750/42864104992_c6bcdb3276_o.png" alt="method in startup.cs"> bằng cách thêm vào dòng code sau <code>services.AddScoped();</code> bạn đã khai báo cho tất cả các class có dùng phương thức <code>BuyDrink</code> sẽ mua nước ngọt ở CircleK</p>
<h2 id="4-1-Lifetime"><a href="#4-1-Lifetime" class="headerlink" title="4.1. Lifetime"></a>4.1. Lifetime</h2><p><code>AddScoped</code> dùng để chỉ định <em>thời gian sống</em> của service này, có 3 loại:</p>
<ul>
<li>  Transient: mỗi lần gọi tới nó sẽ là 1 biến thể mới hoàn toàn. Cái này chỉ phù hợp cho các loại service siu nhẹ nhàng và ko có lưu trữ trạng thái</li>
<li>  Scoped: Trong cùng 1 request, nó sẽ chỉ được tạo 1 lần duy nhất</li>
<li>  Singleton: Nó sẽ được tạo lần đầu tiên khi được gọi, và sẽ sống quài cho tới khi app bạn chết</li>
</ul>
<h2 id="4-2-Contructor-Injection"><a href="#4-2-Contructor-Injection" class="headerlink" title="4.2. Contructor Injection"></a>4.2. Contructor Injection</h2><p>Sau khi đã register service của bạn với 1 lifetime phù hợp, việc tiếp theo chính là <em>tiêm - inject</em> nó vào chỗ cần dùng (thường sẽ là controller) ASP.NET Core 2 hỗ trợ bạn inject service vào controller thông qua contructor của controller đó <img src="https://farm2.staticflickr.com/1753/42012713695_56fcb2b4a5_o.png" alt="inject to controller"></p>
<h2 id="4-3-Action-Injection"><a href="#4-3-Action-Injection" class="headerlink" title="4.3. Action Injection"></a>4.3. Action Injection</h2><p>Đôi khi bạn chỉ cần cái service này trong 1 action cụ thể nào đó của controller thôi, thì sẽ có cách hơi khác </p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">public IActionResult About([FromServices] IDrinkBuyer drinkBuyer) 
&#123;
  drinkBuyer.BuyDrink(&quot;coca&quot;);
  return View();
&#125;</code></pre>

<h2 id="4-4-Service-trong-Service"><a href="#4-4-Service-trong-Service" class="headerlink" title="4.4. Service trong Service"></a>4.4. Service trong Service</h2><p>Nested services, service con, vân vân và mây mây</p>
<p>Đôi khi bạn cần phải có 1 service con để service cha chạy được, thì inject như nào</p>
<p>Rất đơn giản, cũng dùng contructor injection thôi</p>
<p>Giả sử Service <code>DrinkBuyer</code> cần có service <code>Trasport</code> để chạy </p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">public interface ITransport
&#123;
  void Transport();
&#125;
public class BikeTransport: ITransport
&#123;
  public void Transport() 
  &#123;
    &#x2F;&#x2F; transport by bike 
  &#125;
&#125;

public class CarTransport: ITransport
&#123;
  public void Transport()
  &#123;
    &#x2F;&#x2F; transport by car
  &#125;
&#125;</code></pre>

<p>đầu tiên đăng ký nó trong <code>Startup.cs</code> <code>services.AddScoped();</code></p>
<p>sau đó bạn inject nó vào <code>DrinkBuyer</code> như sau</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">public class CircleKDrinkBuyer: IDrinkBuyer 
&#123;
  private readonly ITransport _transport;
  
  public CircleKDrinkBuyer(ITransport transport) 
  &#123;
      _transport &#x3D; transport;
  &#125;
  
  public void BuyDrink(string name) &#123;
    &#x2F;&#x2F; Go to circle k 
    &#x2F;&#x2F; Find the -name- drink 
    &#x2F;&#x2F; Buy it 
    &#x2F;&#x2F; Deliver 
    _transport.Transport();
  &#125;
&#125;</code></pre>

<p>thế nà xong :D</p>
]]></content>
      <categories>
        <category>Design Pattern</category>
      </categories>
      <tags>
        <tag>ASP.NET</tag>
        <tag>dependency injection</tag>
      </tags>
  </entry>
  <entry>
    <title>Repository và Unit of Work Pattern</title>
    <url>/2018/07/10/repository-va-unit-of-work-pattern/</url>
    <content><![CDATA[<p>Repository, hiểu một cách đơn giản, là 1 tầng phân chia giữa Data Access Layer (DAL) và Bussiness Logic Layer.</p>
<p>Unit of Work là một kỹ thuật để đảm bảo tất cả các request tới database mà có liên quan tới nhau đều được thực hiện trên cùng một DbContext</p>
<span id="more"></span>

<!-- TOC -->

<ul>
<li><a href="#1-dbcontext-c%E1%BB%A7a-entity-framework-core">1. DbContext của Entity Framework Core</a><ul>
<li><a href="#11-dbcontext-tracking">1.1. DbContext Tracking</a></li>
</ul>
</li>
<li><a href="#2-repository">2. Repository</a><ul>
<li><a href="#21-l%C3%BD-do">2.1. Lý do</a></li>
<li><a href="#22-implement">2.2. Implement</a></li>
<li><a href="#23-performance-hit">2.3. Performance Hit</a></li>
</ul>
</li>
<li><a href="#3-generic-repository">3. Generic Repository</a></li>
<li><a href="#4-t%E1%BA%A1o-class-unit-of-work">4. Tạo class Unit of Work</a></li>
<li><a href="#5-t%E1%BB%95ng-k%E1%BA%BFt">5. Tổng kết</a></li>
</ul>
<!-- /TOC -->

<h1 id="1-DbContext-cua-Entity-Framework-Core"><a href="#1-DbContext-cua-Entity-Framework-Core" class="headerlink" title="1. DbContext của Entity Framework Core"></a>1. DbContext của Entity Framework Core</h1><p><a id="markdown-dbcontext-c%E1%BB%A7a-entity-framework-core" name="dbcontext-c%E1%BB%A7a-entity-framework-core"></a></p>
<p>“Trước giờ xài mà có để ý <code>DbContext</code> là gì đâu” -&gt; đây chắc là tình trạng chung của kha khá công nghệ liên quan tới .NET, khi mà mọi thứ đã được xây dựng sẵn, và bạn chỉ có nhiệm vụ … xài</p>
<blockquote>
<p><code>DbContext</code> là một thực thể đại diện cho một phiên làm việc với database, dùng để query và lưu dữ liệu của bạn</p>
</blockquote>
<p>Vì nó chỉ đại diện cho 1 phiên làm việc, trong ASP.NET, mỗi khi có 1 request mới từ browser, 1 <code>DbContext</code> mới sẽ được tạo ra, và sẽ bị dispose khi return response cho browser</p>
<p>Thông thường, bạn sẽ kế thừa lại từ <code>DbContext</code>, nhét thêm các <code>DbSet</code> vào, từ đó mới query các kiểu được</p>
<blockquote>
<p>Bạn có thể tham khảo thêm về cách thiết lập <code>DbContext</code> ở <a href="https://huntertran.com/2018/03/11/asp-net-for-beginner-part-2-connect-database-and-model-binding/">đây</a>, mục 3.2</p>
</blockquote>
<h2 id="1-1-DbContext-Tracking"><a href="#1-1-DbContext-Tracking" class="headerlink" title="1.1. DbContext Tracking"></a>1.1. DbContext Tracking</h2><p><a id="markdown-dbcontext-tracking" name="dbcontext-tracking"></a></p>
<p>Để đảm bảo tính toàn vẹn dữ liệu, DbContext dùng 1 cơ chế gọi là <code>tracking</code>.</p>
<p>Khi bạn thay đổi 1 record (thêm, xóa, sửa), thì thay đổi đó ko được đưa xuống database ngay, mà sẽ còn vương vấn lại. DbContext sẽ theo dõi sự thay đổi này.</p>
<p>Cho tới khi bạn đã thực hiện tất cả các thay đổi cần thiết, rồi gọi <code>yourDbContext.SaveChanges()</code>, thì lúc này, những thay đổi được track sẽ được <em>ship</em> xuống database.</p>
<p>Vậy tất cả những điều này liên quan gì tới Repository và Unit of Work? DbContext là một implement của Repository và Unit of Work, chỉ có điều nó nằm sâu trong framework, còn implement của bạn sẽ nằm ở application</p>
<h1 id="2-Repository"><a href="#2-Repository" class="headerlink" title="2. Repository"></a>2. Repository</h1><p><a id="markdown-repository" name="repository"></a></p>
<p>Có cái sơ đồ hay ho sau <img src="https://farm2.staticflickr.com/1724/42213219384_ec3b0b1b3e_o.png" alt="repository diagram"></p>
<p>Bạn có thể đọc thêm về các services được inject tại bài viết <a href="https://huntertran.com/2018/06/20/design-pattern-dependency-injection-trong-asp-net-core/">Dependency Injection trong ASP.NET Core</a></p>
<p>Vậy đóa, Repository đóng vai trò là 1 lớp trung gian giữa Bussiness Logic Layer (controllers và services) và Data Access Layer (các DbContext)</p>
<h2 id="2-1-Ly-do"><a href="#2-1-Ly-do" class="headerlink" title="2.1. Lý do"></a>2.1. Lý do</h2><p><a id="markdown-l%C3%BD-do" name="l%C3%BD-do"></a></p>
<ul>
<li>Tách việc xử lý logic và việc truy cập database<ul>
<li>  Dễ trace bug</li>
<li>  Dễ unit test</li>
<li>  Dễ thay đổi logic hoặc database</li>
</ul>
</li>
<li>Gom chung nhìu tác vụ cơ bản về 1 chỗ<ul>
<li>  Ko phải viết đi viết lại 1 tác vụ nhiều lần</li>
</ul>
</li>
</ul>
<h2 id="2-2-Implement"><a href="#2-2-Implement" class="headerlink" title="2.2. Implement"></a>2.2. Implement</h2><p><a id="markdown-implement" name="implement"></a></p>
<p>Cụ tỉ, Repository sẽ có các nhiệm vụ: Liệt kê danh sách các record - Lấy 1 record - Thêm - Xóa - Sửa 1 record</p>
<p>Bài toán: quản lý học sinh</p>
<p>Tạo interface</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">using System;
using System.Collections.Generic;
using ContosoUniversity.Models;
 
namespace ContosoUniversity.DAL
&#123;
    public interface IStudentRepository : IDisposable
    &#123;
        IEnumerable&lt;Student&gt; GetStudents();
        Student GetStudentByID(int studentId);
        void InsertStudent(Student student);
        void DeleteStudent(int studentID);
        void UpdateStudent(Student student);
        void Save();
    &#125;
&#125;</code></pre>

<p>Đoạn code trên khai báo một bộ CRUD (Create - Read - Update - Delete) kinh điển</p>
<p>Tạo class implement</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">using System;
using System.Collections.Generic;
using System.Linq;
using System.Data;
using ContosoUniversity.Models;
 
namespace ContosoUniversity.DAL
&#123;
    public class StudentRepository : IStudentRepository, IDisposable
    &#123;
        &#x2F;&#x2F; SchoolContext kế thừa từ DbContext, và có thêm DbSet&lt;Student&gt;
        private SchoolContext context;
 
        public StudentRepository(SchoolContext context)
        &#123;
            this.context &#x3D; context;
        &#125;
 
        public IEnumerable&lt;Student&gt; GetStudents()
        &#123;
            return context.Students.ToList();
        &#125;
 
        public Student GetStudentByID(int id)
        &#123;
            return context.Students.Find(id);
        &#125;
 
        public void InsertStudent(Student student)
        &#123;
            context.Students.Add(student);
        &#125;
 
        public void DeleteStudent(int studentID)
        &#123;
            Student student &#x3D; context.Students.Find(studentID);
            context.Students.Remove(student);
        &#125;
 
        public void UpdateStudent(Student student)
        &#123;
            context.Entry(student).State &#x3D; EntityState.Modified;
        &#125;
 
        public void Save()
        &#123;
            context.SaveChanges();
        &#125;
 
        private bool disposed &#x3D; false;
 
        protected virtual void Dispose(bool disposing)
        &#123;
            if (!this.disposed)
            &#123;
                if (disposing)
                &#123;
                    context.Dispose();
                &#125;
            &#125;
            this.disposed &#x3D; true;
        &#125;
 
        public void Dispose()
        &#123;
            Dispose(true);
            GC.SuppressFinalize(this);
        &#125;
    &#125;
&#125;</code></pre>

<p>Inject repository này vào Controller hoặc Service (nhớ khai báo nó trong <code>Startup.cs</code> trước nhóe)</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">public class StudentController
&#123;
    private readonly IStudentRepository _studentRepository;
 
    public StudentController(IStudentRepository studentRepository)
    &#123;
        _studentRepository &#x3D; studentRepository
    &#125;
&#125;</code></pre>

<h2 id="2-3-Performance-Hit"><a href="#2-3-Performance-Hit" class="headerlink" title="2.3. Performance Hit"></a>2.3. Performance Hit</h2><p><a id="markdown-performance-hit" name="performance-hit"></a></p>
<p>Entity Framework khi query một record hoặc 1 bộ record nào đó trong database, nó sẽ trả về dạng <code>IQueryable</code>. Chỉ khi nào bạn gọi <code>.ToList();</code>, thì câu lệnh SQL mới được sinh ra và gửi tới database.</p>
<p>Trong StudentRepository ở trên, nếu bạn muốn filter 1 list các student có tên là “ABC”, thì sẽ phải code trong controller như sau</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">public IActionResult GetStudents(string name)
&#123;
    &#x2F;&#x2F; SQL đã được sinh ra, toàn bộ student trong db đã được trả về và lưu trong memory
    var allStudents &#x3D; _studentRepository.GetStudents();
 
    &#x2F;&#x2F; filter này chỉ thực hiện việc filter trên memory
    var filteredStudents &#x3D; allStudents.Where(x &#x3D;&gt; x.Name.Contains(name));
 
    return View(filteredStudents);
&#125;</code></pre>

<p>Đây là 1 code rất tệ khi mà student có hàng triệu record, trong khi bạn chỉ cần 1 số ít các record mà thôi.</p>
<p>Ở phần sau, bạn sẽ biết cách fix cho vấn đề này, đồng thời implement 1 generic repository cho các tác vụ CRUD cơ bản</p>
<h1 id="3-Generic-Repository"><a href="#3-Generic-Repository" class="headerlink" title="3. Generic Repository"></a>3. Generic Repository</h1><p><a id="markdown-generic-repository" name="generic-repository"></a></p>
<p>Về cơ bản, ta sẽ dùng kiểu khai báo generic class của C# để implement generic repository</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">using System;
using System.Collections.Generic;
using System.Linq;
using System.Data;
using System.Data.Entity;
using ContosoUniversity.Models;
using System.Linq.Expressions;
 
namespace ContosoUniversity.DAL
&#123;
    public class GenericRepository&lt;TEntity&gt; where TEntity : class
    &#123;
        &#x2F;&#x2F; SchoolContext được kế thừa từ DbContext
        internal SchoolContext context;
 
        &#x2F;&#x2F; Generic repository này sẽ hoạt động dựa trên entity được truyền vào khi đăng ký trong Startup.cs
        internal DbSet&lt;TEntity&gt; dbSet;
 
        public GenericRepository(SchoolContext context)
        &#123;
            this.context &#x3D; context;
            this.dbSet &#x3D; context.Set&lt;TEntity&gt;();
        &#125;
 
        &#x2F;&#x2F; Expression&lt;Func&lt;TEntity, bool&gt;&gt; filter: cho phép bạn truyền vào một filter expression dạng LINQ
        public virtual IEnumerable&lt;TEntity&gt; Get(
            Expression&lt;Func&lt;TEntity, bool&gt;&gt; filter &#x3D; null,
            Func&lt;IQueryable&lt;TEntity&gt;, IOrderedQueryable&lt;TEntity&gt;&gt; orderBy &#x3D; null,
            string includeProperties &#x3D; &quot;&quot;)
        &#123;
            IQueryable&lt;TEntity&gt; query &#x3D; dbSet;
 
            &#x2F;&#x2F; Query là 1 dạng IQueryable, chỉ được thực thi khi cần giá trị list
            if (filter !&#x3D; null)
            &#123;
                query &#x3D; query.Where(filter);
            &#125;
 
            &#x2F;&#x2F; Tiếp theo, nó sẽ kèm theo các property cần thiết khi người dùng chỉ định
            foreach (var includeProperty in includeProperties.Split
                (new char[] &#123; &#39;,&#39; &#125;, StringSplitOptions.RemoveEmptyEntries))
            &#123;
                query &#x3D; query.Include(includeProperty);
            &#125;
 
            &#x2F;&#x2F; Sau cùng, nó thực thi bằng cách translate thành câu lệnh SQL và gọi xuống database
            if (orderBy !&#x3D; null)
            &#123;
                return orderBy(query).ToList();
            &#125;
            else
            &#123;
                return query.ToList();
            &#125;
        &#125;
 
        &#x2F;&#x2F; trong asp.net, Id cho 1 object có thể là GUID hoặc int
        public virtual TEntity GetByID(object id)
        &#123;
            return dbSet.Find(id);
        &#125;
 
        public virtual void Insert(TEntity entity)
        &#123;
            dbSet.Add(entity);
        &#125;
 
        &#x2F;&#x2F; trong asp.net, Id cho 1 object có thể là GUID hoặc int
        public virtual void Delete(object id)
        &#123;
            TEntity entityToDelete &#x3D; dbSet.Find(id);
            Delete(entityToDelete);
        &#125;
 
        public virtual void Delete(TEntity entityToDelete)
        &#123;
            if (context.Entry(entityToDelete).State &#x3D;&#x3D; EntityState.Detached)
            &#123;
                dbSet.Attach(entityToDelete);
            &#125;
            dbSet.Remove(entityToDelete);
        &#125;
 
        public virtual void Update(TEntity entityToUpdate)
        &#123;
            dbSet.Attach(entityToUpdate);
            context.Entry(entityToUpdate).State &#x3D; EntityState.Modified;
        &#125;
    &#125;
&#125;</code></pre>

<h1 id="4-Tao-class-Unit-of-Work"><a href="#4-Tao-class-Unit-of-Work" class="headerlink" title="4. Tạo class Unit of Work"></a>4. Tạo class Unit of Work</h1><p><a id="markdown-t%E1%BA%A1o-class-unit-of-work" name="t%E1%BA%A1o-class-unit-of-work"></a></p>
<p>Unit of Work chỉ có 1 nhiệm vụ duy nhất, đảm bảo tất cả các repository của bạn đều dùng chung một <code>DbContext</code>. Bằng cách này, khi thực hiện xong tất cả các tác vụ thay đổi database, bạn chỉ cần gọi <code>DbContext.SaveChanges()</code> 1 lần duy nhất, và các thay đổi đó sẽ được lưu lại trong database</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">using System;
using ContosoUniversity.Models;
 
namespace ContosoUniversity.DAL
&#123;
    public class UnitOfWork : IDisposable
    &#123;
        private SchoolContext context &#x3D; new SchoolContext();
        private GenericRepository&lt;Department&gt; departmentRepository;
        private GenericRepository&lt;Course&gt; courseRepository;
 
        &#x2F;&#x2F; Kiểm tra xem repository đã được khởi tạo chưa
        public GenericRepository&lt;Department&gt; DepartmentRepository
        &#123;
            get
            &#123;
                if (this.departmentRepository &#x3D;&#x3D; null)
                &#123;
                    this.departmentRepository &#x3D; new GenericRepository&lt;Department&gt;(context);
                &#125;
                return departmentRepository;
            &#125;
        &#125;
 
        &#x2F;&#x2F; Kiểm tra xem repository đã được khởi tạo chưa
        public GenericRepository&lt;Course&gt; CourseRepository
        &#123;
            get
            &#123;
                if (this.courseRepository &#x3D;&#x3D; null)
                &#123;
                    this.courseRepository &#x3D; new GenericRepository&lt;Course&gt;(context);
                &#125;
                return courseRepository;
            &#125;
        &#125;
 
        public void Save()
        &#123;
            context.SaveChanges();
        &#125;
 
        private bool disposed &#x3D; false;
 
        protected virtual void Dispose(bool disposing)
        &#123;
            if (!this.disposed)
            &#123;
                if (disposing)
                &#123;
                    context.Dispose();
                &#125;
            &#125;
            this.disposed &#x3D; true;
        &#125;
 
        public void Dispose()
        &#123;
            Dispose(true);
            GC.SuppressFinalize(this);
        &#125;
    &#125;
&#125;</code></pre>

<p>Bước tiếp theo là thay đổi code của controller để sử dụng class UnitOfWork vừa mới khởi tạo</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">&#x2F;&#x2F; Lấy data
var courses &#x3D; unitOfWork.CourseRepository.Get(includeProperties: &quot;Department&quot;);
 
&#x2F;&#x2F; Lấy và order data
var departmentsQuery &#x3D; unitOfWork.DepartmentRepository.Get(orderBy: q &#x3D;&gt; q.OrderBy(d &#x3D;&gt; d.Name));
 
&#x2F;&#x2F; Insert
var course &#x3D; new Course();
course.Name &#x3D; &quot;Test&quot;;
...
unitOfWork.CourseRepository.Insert(course);
unitOfWork.Save();
 
&#x2F;&#x2F; Hủy
unitOfWork.Dispose();</code></pre>

<h1 id="5-Tong-ket"><a href="#5-Tong-ket" class="headerlink" title="5. Tổng kết"></a>5. Tổng kết</h1><p><a id="markdown-t%E1%BB%95ng-k%E1%BA%BFt" name="t%E1%BB%95ng-k%E1%BA%BFt"></a></p>
<p>Vậy là bạn đã hiểu khái niệm và cách khai báo Repository và Unit of Work pattern. Bạn cũng đã biết cách sử dụng lambda expression để query các data thỏa điều kiện mong muốn thông qua interface <code>IQueryable</code>. Chúc vui :D</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>ASP.NET</category>
        <category>Design Pattern</category>
      </categories>
      <tags>
        <tag>repository</tag>
        <tag>unit of work</tag>
      </tags>
  </entry>
  <entry>
    <title>Machine Learning - 1.1 - Introduction</title>
    <url>/2018/09/14/machine-learning-introduction/</url>
    <content><![CDATA[<p>Bài viết mở đầu cho chuỗi tự học Machine Learning. Các khái niệm cơ bản sẽ được giới thiệu trong bài viết này.</p>
<span id="more"></span>
<p>Xem các bài viết khác tại <a href="https://huntertran.com/machine-learning-course/">Machine Learning Course Structure</a></p>
<ul>
<li>  <a href="#1-machine-learning-l%C3%A0-g%C3%AC">1. Machine learning là gì</a></li>
<li><a href="#2-ph%C3%A2n-lo%E1%BA%A1i">2. Phân loại</a><ul>
<li><a href="#21-supervised-learning">2.1. Supervised Learning</a><ul>
<li>  <a href="#211-regression">2.1.1. Regression</a></li>
<li>  <a href="#212-classification">2.1.2. Classification</a></li>
</ul>
</li>
<li>  <a href="#22-unsupervised-learning">2.2. Unsupervised Learning</a></li>
</ul>
</li>
</ul>
<h1 id="1-Machine-learning-la-gi"><a href="#1-Machine-learning-la-gi" class="headerlink" title="1. Machine learning là gì"></a>1. Machine learning là gì</h1><p>Có 2 định nghĩa về machine learning:</p>
<blockquote>
<p>The field of study that gives computers the ability to learn without being explicitly programmed.</p>
<p><em>Arthur Samuel</em></p>
</blockquote>
<p>Định nghĩa thứ 2:</p>
<blockquote>
<p>A computer program is said to learn from experience <strong>E</strong> with respect to some class of tasks <strong>T</strong> and performance measure <strong>P</strong>, if its performance at tasks in <strong>T</strong>, as measured by <strong>P</strong>, improves with experience <strong>E</strong>.</p>
<p><em>Tom Mitchell</em></p>
</blockquote>
<p>Đọc thì có vẻ dài dòng, nhưng đưa nó vào một ví dụ là dễ hiểu ngay:</p>
<p><strong>Chơi cờ</strong></p>
<ul>
<li>  <strong>E</strong>(xperience): kinh nghiệm chơi cờ (càng chơi càng giỏi).</li>
<li>  <strong>T</strong>(ask): nhiệm vụ là chơi cờ.</li>
<li>  <strong>P</strong>(robability): Khả năng mà máy tính sẽ thắng trong ván tiếp theo.</li>
</ul>
<h1 id="2-Phan-loai"><a href="#2-Phan-loai" class="headerlink" title="2. Phân loại"></a>2. Phân loại</h1><p>Mọi chương trình Machine learning đều có thể chia thành 2 loại:</p>
<ol>
<li> Supervised Learning</li>
<li> Unsupervised Learning</li>
</ol>
<h2 id="2-1-Supervised-Learning"><a href="#2-1-Supervised-Learning" class="headerlink" title="2.1. Supervised Learning"></a>2.1. Supervised Learning</h2><p>Trong loại này, ta biết trước dữ liệu đầu vào và kết quả. Hãy tưởng tượng nó như một dạng biểu đồ.</p>
<p>Dựa vào biểu đồ này, ta có thể dự đoán mối quan hệ giữa input và output. Khi đó, khi đưa một input bất kỳ, ta có thể tính ra được output.</p>
<p>Supervised learning được chia làm 2 loại là <strong>regression</strong> và <strong>classification</strong>.</p>
<h3 id="2-1-1-Regression"><a href="#2-1-1-Regression" class="headerlink" title="2.1.1. Regression"></a>2.1.1. Regression</h3><p>Dựa vào mối liên hệ giữa input và output, ta dự đoán được kết quả</p>
<p><img src="https://farm2.staticflickr.com/1856/42867061930_e41c2f94c0_o.png" alt="bieu do"></p>
<h3 id="2-1-2-Classification"><a href="#2-1-2-Classification" class="headerlink" title="2.1.2. Classification"></a>2.1.2. Classification</h3><p>Dựa vào đặc điểm của input, ta đặt được nó vào một loại cụ thể</p>
<p><img src="https://farm2.staticflickr.com/1879/43958802164_a713ef73dc_o.png" alt="classification"></p>
<h2 id="2-2-Unsupervised-Learning"><a href="#2-2-Unsupervised-Learning" class="headerlink" title="2.2. Unsupervised Learning"></a>2.2. Unsupervised Learning</h2><p>Trong “thể loại” machine learning này, ta hoàn toàn ko biết trước được kết quả sẽ như thế nào.</p>
<p>Ví dụ:</p>
<ol>
<li> Trong 1 triệu bức ảnh, tìm cách nhóm các bức ảnh có cùng 1 chủ đề lại với nhau (nhà cửa, xe cộ, con người).</li>
<li> Tìm và lọc ra tiếng người nói chuyện và tiếng nhạc trong 1 buổi tiệc ồn ào với nhiều loại âm thanh (<a href="https://en.wikipedia.org/wiki/Cocktail_party_effect">Cocktail Party Algorithm</a>).</li>
</ol>
<p>Trên đây là những khái niệm mở đầu cho Machine Learning, càng về những bài viết sau, bạn sẽ càng phải tự mình nghiên cứu và đào sâu vào các khái niệm phức tạp và thú vị hơn.</p>
<p>Hẹn gặp lại ở các bài viết sau nhé!</p>
]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
  </entry>
  <entry>
    <title>Machine Learning - 1.2 - Model and Cost Function</title>
    <url>/2018/09/22/ml-model-and-cost-function/</url>
    <content><![CDATA[<p>Bài thứ 2 trong chuỗi bài viết tự học Machine Learning Trong bài này, ta sẽ tìm hiểu về cost function, một function nhằm dự đoán giá trị output với một bộ các giá trị input/output cho trước.</p>
<span id="more"></span>
<p>Xem các bài viết khác tại <a href="https://huntertran.com/machine-learning-course/">Machine Learning Course Structure</a></p>
<ul>
<li>  <a href="#1-c%C3%A1c-k%C3%BD-hi%E1%BB%87u">1. Các ký hiệu</a></li>
<li><a href="#2-cost-function">2. Cost Function</a><ul>
<li><a href="#21-to%C3%A1n-h%E1%BB%8Dc">2.1. Toán học</a><ul>
<li>  <a href="#211-x%C3%A1c-xu%E1%BA%A5t-v%C3%A0-th%E1%BB%91ng-k%C3%AA-probability-and-statistic">2.1.1. Xác xuất và thống kê (Probability and Statistic)</a></li>
<li>  <a href="#212-ph%C6%B0%C6%A1ng-sai-variance">2.1.2. Phương sai (Variance)</a></li>
</ul>
</li>
<li><a href="#22-%C4%91%E1%BA%A1o-h%C3%A0m-derivative">2.2. Đạo hàm (Derivative)</a><ul>
<li>  <a href="#221-m%E1%BB%99t-v%C3%AD-d%E1%BB%A5-to%C3%A1n-h%E1%BB%8Dc">2.2.1. Một ví dụ toán học</a></li>
<li>  <a href="#222-l%E1%BB%9Bn-nh%E1%BA%A5t-hay-nh%E1%BB%8F-nh%E1%BA%A5t">2.2.2. Lớn nhất hay nhỏ nhất</a></li>
</ul>
</li>
<li>  <a href="#23-c%C3%B4ng-th%E1%BB%A9c">2.3. Công thức</a></li>
</ul>
</li>
</ul>
<h1 id="1-Cac-ky-hieu"><a href="#1-Cac-ky-hieu" class="headerlink" title="1. Các ký hiệu"></a>1. Các ký hiệu</h1><p>Chúng ta sẽ thống nhất 1 cách sử dụng các ký hiệu để biểu thị các thuộc tính của một bài toán.</p>
<blockquote>
<p>x(i) sẽ là giá trị đầu vào, cũng được gọi là <strong><em><code>input feature</code></em></strong>.</p>
<p>y(i) sẽ là đầu ra mà ta cố dự đoán.</p>
<p>Một cặp (x(i), y(i)) được gọi là một <code>training example</code>.</p>
<p>Số lượng <code>training example</code> được gọi là <code>m</code>. Như vậy, i=1,2,3,…,m</p>
</blockquote>
<p>Lưu ý rằng <code>(i)</code> chỉ là index của giá trị, không phải số lũy thừa</p>
<blockquote>
<p>Ta dùng ký tự <code>X</code>, <code>Y</code> để biểu thị vùng không gian của input và output</p>
<p>Ví dụ: <code>X = Y = ℝ</code></p>
</blockquote>
<p>Khi đưa ra một bộ dữ liệu training (<code>training set</code>), mục tiêu của chúng ta là tạo ra được 1 function <code>h</code> sao cho <code>h(x)</code> có thể dự đoán gần đúng nhất giá trị của <code>y</code>.</p>
<blockquote>
<p><code>h</code> là viết tắt cho từ <em>Hypothesis</em>, lý do cho tên gọi này chỉ đơn thuần là vì xưa kia, người ta đặt tên cho nó như vậy, và nó chết tên luôn.</p>
</blockquote>
<p>Như vậy, process của chúng ta sẽ như sau:</p>
<p><img src="https://farm2.staticflickr.com/1844/43995414074_2c530b4cb8_o.png" alt="process"></p>
<p>Khi y là một giá trị liên tục, ví dụ như giá nhà, giá cổ phiếu, thì đây là một <code>regression problem</code>.</p>
<p>Khi y chỉ là một số lượng nhỏ các giá trị nhất định (true/false - yes/no), thì đây là một <code>classification problem</code>.</p>
<h1 id="2-Cost-Function"><a href="#2-Cost-Function" class="headerlink" title="2. Cost Function"></a>2. Cost Function</h1><p>Chúng ta “tính toán” sự chính xác của hàm hypothesis bằng cách sử dụng 1 hàm số. Hàm số đó gọi là <em><code>cost function</code></em>.</p>
<blockquote>
<p>Trước khi đưa ra bất kỳ một công thức hay hàm số nào, hãy cùng tôi đào bới trong mớ kiến thức hỗn độn mà tôi chắc rằng sẽ giúp bạn hiểu ra nội dung cốt lõi của <code>Cost Function</code>.</p>
</blockquote>
<h2 id="2-1-Toan-hoc"><a href="#2-1-Toan-hoc" class="headerlink" title="2.1. Toán học"></a>2.1. Toán học</h2><h3 id="2-1-1-Xac-xuat-va-thong-ke-Probability-and-Statistic"><a href="#2-1-1-Xac-xuat-va-thong-ke-Probability-and-Statistic" class="headerlink" title="2.1.1. Xác xuất và thống kê (Probability and Statistic)"></a>2.1.1. Xác xuất và thống kê (Probability and Statistic)</h3><p>Trong xác xuất thống kê, có một khái niệm gọi là <code>Gaussian Distributed</code>.</p>
<blockquote>
<p>Đúng rồi, bạn không nhìn nhầm đâu. <code>Gaussian</code> cũng là một tính năng nổi tiếng của…Photoshop, khi mà nó làm <em>nhiễu</em> đi vùng được chọn. Tính năng đó gọi là <code>Gaussian Blur</code>.</p>
</blockquote>
<p>Trong lý thuyết xác xuất, <code>phân phối chuẩn</code>, hay còn gọi là <code>phân phối Gauss</code>, <code>phân phối Gaussian</code>, <code>phân phối Laplace-Gauss</code>, là một dạng phân phối xác xuất liên tục (<a href="https://en.wikipedia.org/wiki/Continuous_probability_distribution">Continuous probability distribution</a>).</p>
<p>Sở dĩ tôi nhắc tới phân phối chuẩn là bởi vì theo <em>định lý giới hạn trung tâm (<a href="https://en.wikipedia.org/wiki/Central_limit_theorem">Central limit theorem</a>)</em>, ở dạng tổng quát nhất của phân phối chuẩn, phân phối của tổng rất nhiều biến ngẫu nhiên độc lập sẽ có phân phối xấp xỉ chuẩn.</p>
<p>Tức là, số lượng <code>training example</code> càng nhiều thì mỗi một <code>training example</code> sẽ có giá trị càng gần với hàm <code>hypothesis</code> của chúng ta.</p>
<p>Tóm lại, ta sẽ chọn tham số sao cho khoảng cách từ đồ thị của hàm <code>hypothesis</code> tới <code>y</code> của các <code>training example</code> là ngắn nhất.</p>
<h3 id="2-1-2-Phuong-sai-Variance"><a href="#2-1-2-Phuong-sai-Variance" class="headerlink" title="2.1.2. Phương sai (Variance)"></a>2.1.2. Phương sai (Variance)</h3><blockquote>
<p>Trong lý thuyết xác suất và thống kê, phương sai của một biến ngẫu nhiên là một độ đo sự phân tán thống kê của biến đó, nó hàm ý các giá trị của biến đó thường ở cách giá trị kỳ vọng bao xa.</p>
</blockquote>
<p>Theo định nghĩa này của phương sai, đồ thị biểu diễn các giá trị kỳ vọng chính là đồ thị hàm hypothesis của chúng ta đó. Phương sai chính là giá trị mà ta muốn nó càng nhỏ càng tốt</p>
<blockquote>
<p>Phương sai của một biến ngẫu nhiên là bình phương của độ lệch chuẩn.</p>
</blockquote>
<p>Như đã nói ở phần trước, khi mà tập giá trị đầu vào <code>training example</code> của chúng ta đủ lớn, thì ta có thể xem mỗi training example là một biến ngẫu nhiên có phân phối chuẩn.</p>
<p>Vậy ta có:</p>
<p>Tập hợp kỳ vọng = hypothesis</p>
<p>$h_\theta(x)=\theta_0+\theta_1x$</p>
<p>Độ lệch chuẩn:</p>
<p>$latex h_\theta(x^{(i)})-y^{(i)}$</p>
<p>Phương sai = (độ lệch chuẩn)2</p>
<p>Vậy phương sai của tập hợp các training example sẽ là:</p>
<p>$latex \frac{1}{m}\sum_{i=1}^m(h_\theta(x^{(i)})-y^{(i)})^2$</p>
<p>Nhiệm vụ của ta là tìm ra giá trị nhỏ nhất của công thức trên.</p>
<h2 id="2-2-Dao-ham-Derivative"><a href="#2-2-Dao-ham-Derivative" class="headerlink" title="2.2. Đạo hàm (Derivative)"></a>2.2. Đạo hàm (Derivative)</h2><p>Để tìm giá trị lớn nhất / nhỏ nhất của một hàm số, ta có thể sử dụng đạo hàm.</p>
<h3 id="2-2-1-Mot-vi-du-toan-hoc"><a href="#2-2-1-Mot-vi-du-toan-hoc" class="headerlink" title="2.2.1. Một ví dụ toán học"></a>2.2.1. Một ví dụ toán học</h3><p>Một trái banh được ném lên trời. Độ cao của trái banh so với mặt đất tại bất kỳ thời điểm <em>t</em> nào được tính bởi công thức:</p>
<p>h = 3 + 14t -5t2</p>
<p>Vậy độ cao lớn nhất của trái banh là bao nhiêu?</p>
<p>Ứng dụng đạo hàm, ta giải bài toán này như sau:</p>
<p>$latex \frac{\text{d}}{\text{d}t}h=0+14-5(2t)=14-10t$</p>
<p>Hàm số trên biểu thị <em>mức độ thay đổi</em> của độ cao h tại thời điểm t. Như vậy, tại độ cao lớn nhất, _mức độ thay đổi độ cao h = 0 (vì trái banh không tiếp tục bay cao lên nữa mà bắt đầu rơi xuống).</p>
<p><img src="https://farm2.staticflickr.com/1972/43929799745_140b61938a_o.png" alt="hypolic function"></p>
<p>Vậy ta có:</p>
<p>[code lang=text] 14-10t = 0</p>
<p>=&gt; t = 1.4 [/code]</p>
<p>Vậy độ cao lớn nhất là</p>
<p>[code lang=text] h = 3 + 14x1.4 - 10x1.4x1.4 = 12.8 [/code]</p>
<h3 id="2-2-2-Lon-nhat-hay-nho-nhat"><a href="#2-2-2-Lon-nhat-hay-nho-nhat" class="headerlink" title="2.2.2. Lớn nhất hay nhỏ nhất"></a>2.2.2. Lớn nhất hay nhỏ nhất</h3><p>Làm sao ta biết được một hàm số sẽ có giá trị lớn nhất hay nhỏ nhất? Nếu dựa vào đồ thị thì quả là một cách tốn nhiều thời gian và công sức.</p>
<p>Tại đây, ta tiếp tục sử dụng đạo hàm (một lần nữa):</p>
<p>[code lang=text] f’(t) = 14 - 10t với t = 1.4 thì f’(t) = 0</p>
<p>=&gt; f’’(t) = -10 với t = 1.4 thì f’’(t) = -10 [/code]</p>
<p>Đây gọi là <a href="https://en.wikipedia.org/wiki/Derivative_test#Second_derivative_test_(single_variable)">Second Derivative Test</a>, phát biểu như sau:</p>
<blockquote>
<p>Khi một hàm số có mức độ thay đổi = 0 tại điểm x, thì giá trị hàm đạo hàm lần 2 của hàm số đó tại x nếu:</p>
<p>Nhỏ hơn 0: đó là giá trị lớn nhất.</p>
<p>Lớn hơn 0: đó là giá trị nhỏ nhất.</p>
<p>Bằng 0: chưa thể tìm được giá trị lớn nhất/nhỏ nhất của hàm số.</p>
</blockquote>
<h2 id="2-3-Cong-thuc"><a href="#2-3-Cong-thuc" class="headerlink" title="2.3. Công thức"></a>2.3. Công thức</h2><p>Áp dụng cả 2 phần đạo hàm và toán bên trên, ta sẽ có:</p>
<p>$latex \frac{1}{2m}\sum_{i=1}^m(h_\theta(x^{(i)})-y^{(i)})^2$</p>
<p>với</p>
<p>$latex h_\theta(x^{(i)}) = \theta_{0} + \theta_{1}x^{(i)}$</p>
<blockquote>
<p>Lý do của số 2 dưới mẫu số là để triệt tiêu khi ta làm đạo hàm. Nhìn chung, nó không ảnh hưởng tới kết quả, vì mục tiêu là tìm giá trị nhỏ nhất của hàm số trên.</p>
</blockquote>
<p>Vậy ta sẽ tìm giá trị của $latex \theta_{0}$ và $latex \theta_{1}$ để hàm số trên nhỏ nhất.</p>
]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>cost function</tag>
      </tags>
  </entry>
  <entry>
    <title>Machine Learning - 1.3 - Parameter Learning</title>
    <url>/2018/09/27/machine-learning-parameter-learning/</url>
    <content><![CDATA[<p>Bài thứ 3 trong chuỗi bài viết tự học Machine Learning.</p>
<p>Ở 2 bài trước, chúng ta đã có hàm hypothesis và cách để biết hàm đó có phù hợp với bộ training example của chúng ta hay ko. Bây giờ chúng ta sẽ tìm cách tìm ra các tham số cho hàm hypothesis.</p>
<span id="more"></span>
<p>Xem các bài viết khác tại <a href="https://huntertran.com/machine-learning-course/">Machine Learning Course Structure</a></p>
<ul>
<li><a href="#1-gradient-descent">1. Gradient Descent</a><ul>
<li>  <a href="#11-bi%E1%BB%83u-di%E1%BB%85n-%C4%91%E1%BB%93-th%E1%BB%8B">1.1. Biểu diễn đồ thị</a></li>
<li>  <a href="#12-m%C3%B4-t%E1%BA%A3-thu%E1%BA%ADt-to%C3%A1n">1.2. Mô tả thuật toán</a></li>
<li>  <a href="#13-x%C3%A2y-d%E1%BB%B1ng">1.3. Xây dựng</a></li>
</ul>
</li>
<li>  <a href="#2-gradient-descent-cho-linear-regression">2. Gradient Descent cho Linear Regression</a></li>
</ul>
<h1 id="1-Gradient-Descent"><a href="#1-Gradient-Descent" class="headerlink" title="1. Gradient Descent"></a>1. Gradient Descent</h1><p>Ở 2 bài trước, chúng ta đã có hàm hypothesis và cách để biết hàm đó có phù hợp với bộ training example của chúng ta hay ko. Bây giờ chúng ta sẽ tìm cách tìm ra các tham số cho hàm hypothesis, và đó là nhiệm vụ của <code>Gradient Descent</code>.</p>
<p>Để đơn giản, trong phần này, ta sẽ xét các hàm hypothesis có 2 tham số là $latex \theta_{0}$ và $latex \theta_{1}$. Đối với các trường hợp có nhiều hơn 2 tham số, cách thực hiện là tương tự.</p>
<h2 id="1-1-Bieu-dien-do-thi"><a href="#1-1-Bieu-dien-do-thi" class="headerlink" title="1.1. Biểu diễn đồ thị"></a>1.1. Biểu diễn đồ thị</h2><p>Gọi $latex J(\theta_{0},\theta_{1})$ là kết quả của cost function. Ta biểu diễn các tham số lên một đồ thị có 3 trục x, y và z như sau:</p>
<ul>
<li>  $latex \theta_{0}$ là trục x.</li>
<li>  $latex \theta_{1}$ là trục y.</li>
<li>  $latex J(\theta_{0},\theta_{1})$ là trục z.</li>
</ul>
<p><img src="https://farm2.staticflickr.com/1899/44863403391_91a4cf87aa_o.png" alt="gradient descent graph"></p>
<p>Các mũi tên đỏ chỉ những điểm thấp nhất của đồ thị này, đó là các điểm mà ta tìm kiếm (nhằm mục đích tối thiểu giá trị của cost function).</p>
<h2 id="1-2-Mo-ta-thuat-toan"><a href="#1-2-Mo-ta-thuat-toan" class="headerlink" title="1.2. Mô tả thuật toán"></a>1.2. Mô tả thuật toán</h2><p>Chọn 1 điểm bất kỳ, sau đó di chuyển từng bước nhỏ về vùng trũng nhất của đồ thị.</p>
<p>Cách làm là lấy đạo hàm của cost function. Đối với một hàm số, đạo hàm của nó chính là đường tiếp tuyến của nó. Độ dốc của đường tiếp tuyến tại một điểm chính là giá trị của hàm đạo hàm tại điểm đó. Độ dốc này cho ta biết hướng đi để chọn điểm tiếp theo.</p>
<p>Độ dài của mỗi step được xác định bởi tham số $latex \alpha$, gọi là <code>learning rate</code>.</p>
<p>Điểm ban đầu được chọn khác nhau sẽ cho ra các kết quả rất khác nhau. Hình bên trên có 2 điểm ban đầu khác nhau, và sẽ cho ra 2 điểm thấp nhất là 2 mũi tên đỏ.</p>
<p>Như vậy, thuật toán Gradient Descent sẽ là:</p>
<p>lặp lại cho tới khi hội tụ:</p>
<p>$latex \theta_{j} := \theta_{j} - \alpha \frac{\partial}{\partial\theta_{j}}J(\theta_{0},\theta_{1})$</p>
<p>với:</p>
<p>$latex j=0,1,2,…,m$, đại diện cho index</p>
<p>Với mỗi lần lặp, cả $latex \theta_{0}$ và $latex \theta_{1}$ phải được tính đồng thời.</p>
<h2 id="1-3-Xay-dung"><a href="#1-3-Xay-dung" class="headerlink" title="1.3. Xây dựng"></a>1.3. Xây dựng</h2><p>Để cho đơn giản, ta sẽ dùng hàm số chỉ có 1 biến $latex \theta_{1}$ và từng bước xây dựng công thức cho <code>Gradient Descent</code>.</p>
<p>Vậy công thức của ta còn:</p>
<p>Lặp lại cho tới khi hội tụ:</p>
<p>$latex \theta_{1} := \theta_{1} - \alpha \frac{\partial}{\partial\theta_{1}}J(\theta_{1})$</p>
<p>với</p>
<ul>
<li>  $latex \alpha$ là learning rate</li>
<li>  $latex \frac{\partial}{\partial\theta_{1}}J(\theta_{1})$ là độ dốc của đường tiếp tuyến (slope) tại $latex \theta_{1}$</li>
</ul>
<p><img src="https://i.imgur.com/G01t68o.png" alt="plot"></p>
<p>Nhìn vào đồ thị trên, khi slope nằm bên trái của điểm hội tụ, thì giá trị $latex \theta_{1}$ tăng, và ngược lại khi nó nằm bên phải của điểm hội tụ.</p>
<blockquote>
<p>Tham số $latex \alpha$ nên được điều chỉnh hợp lý sao cho thuật toán gradient descent hội tụ trong 1 khoảng thời gian phù hợp.</p>
<p>Khi $latex \alpha$ quá nhỏ, thời gian tìm đến điểm hội tụ sẽ lâu. Khi quá lớn, thuật toán rất có thể sẽ không tìm thấy điểm hội tụ.</p>
</blockquote>
<p>Với một tham số $latex \alpha$ hợp lý, càng về gần điểm hội tụ, độ dốc của tiếp tuyến sẽ càng nhỏ, do đó, thuật toán gradient descent sẽ có bước đi nhỏ hơn, và sẽ bằng 0 khi tới điểm hội tụ.</p>
<p>Trong trường hợp điểm xuất phát chính là điểm hội tụ, thì thuật toán gradient descent sẽ cho ra $latex \theta_{1}$ không đổi với $latex \alpha$ bất kỳ, vì đạo hàm của nó là 0.</p>
<h1 id="2-Gradient-Descent-cho-Linear-Regression"><a href="#2-Gradient-Descent-cho-Linear-Regression" class="headerlink" title="2. Gradient Descent cho Linear Regression"></a>2. Gradient Descent cho Linear Regression</h1><p>Khi áp dụng thuật toán Gradient Descent vào hàm số Hypothesis của ta trong các bài viết trước, ta có thể tìm được 2 tham số $latex \theta_{0}$ và $latex \theta_{1}$:</p>
<p>Lặp lại cho tới khi hội tụ:</p>
<p>$latex \theta_0 := \theta_0 - \alpha \frac{1}{m} \sum\limits_{i=1}^{m}(h_\theta(x_{i}) - y_{i})$</p>
<p>$latex \theta_1 := \theta_1 - \alpha \frac{1}{m} \sum\limits_{i=1}^{m}\left((h_\theta(x_{i}) - y_{i}) x_{i}\right)$</p>
<p>với:</p>
<ul>
<li>  m là tổng số training example.</li>
<li>  $latex \theta_0$ tham số sẽ thay đổi đồng thời với $latex theta_1$ và $latex x_{i}$.</li>
<li>  $latex y_{i}$ là các giá trị được cho bởi bộ training example.</li>
</ul>
<p>Như vậy, số 2 dưới mẫu trong công thức của bài kỳ trước đã bị triệt tiêu vì đạo hàm</p>
<blockquote>
<p>Gradient Descent trong bài toán này thường được gọi là <code>Batch Gradient Descent</code>, vì nó tính tổng của tất cả các giá trị</p>
<p>Hàm hypothesis của bài toán Linear Regression có hình dạng như một cái tô, và chỉ có 1 điểm hội tụ duy nhất.</p>
</blockquote>
]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>gradient descent</tag>
        <tag>hypothesis</tag>
      </tags>
  </entry>
  <entry>
    <title>Machine Learning - 1.4 - Matrices and Vectors</title>
    <url>/2018/10/01/machine-learning-matrices-and-vectors/</url>
    <content><![CDATA[<p>Bài viết thứ 4 trong loạt bài tự học Machine Learning trên Coursera của giáo sư Andrew Ng.</p>
<p>Trong bài viết này, ta sẽ nói về Matrix và Vector, cùng các phép toán của chúng.</p>
<span id="more"></span>
<p>Xem các bài viết khác tại <a href="https://huntertran.com/machine-learning-course/">Machine Learning Course Structure</a></p>
<ul>
<li><a href="#1-c%C3%A1c-k%C3%BD-hi%E1%BB%87u">1. Các ký hiệu</a><ul>
<li>  <a href="#11-matrix">1.1. Matrix</a></li>
<li>  <a href="#12-vector">1.2. Vector</a></li>
<li>  <a href="#13-k%C3%BD-hi%E1%BB%87u">1.3. Ký hiệu</a></li>
</ul>
</li>
<li>  <a href="#2-ph%E1%BA%A7n-m%E1%BB%81m">2. Phần mềm</a></li>
<li><a href="#3-c%C3%A1c-ph%C3%A9p-t%C3%ADnh">3. Các phép tính</a><ul>
<li>  <a href="#31-ph%C3%A9p-c%E1%BB%99ng-v%C3%A0-ph%C3%A9p-nh%C3%A2n-matrix-s%E1%BB%91-th%E1%BB%B1c">3.1. Phép cộng và phép nhân matrix số thực</a></li>
<li>  <a href="#32-nh%C3%A2n-matrix-v%E1%BB%9Bi-vector">3.2. Nhân matrix với vector</a></li>
<li>  <a href="#33-nh%C3%A2n-2-matrix-v%E1%BB%9Bi-nhau">3.3. Nhân 2 matrix với nhau</a></li>
<li>  <a href="#34-c%C3%A1c-t%C3%ADnh-ch%E1%BA%A5t-c%E1%BB%A7a-ph%C3%A9p-nh%C3%A2n-matrix">3.4. Các tính chất của phép nhân matrix</a></li>
<li>  <a href="#35-identity-matrix">3.5. Identity Matrix</a></li>
</ul>
</li>
<li><a href="#4-inverse-ngh%E1%BB%8Bch-%C4%91%E1%BA%A3o-v%C3%A0-transpose-chuy%E1%BB%83n-v%E1%BB%8B">4. Inverse (nghịch đảo) và Transpose (chuyển vị)</a><ul>
<li>  <a href="#41-inverse-ngh%E1%BB%8Bch-%C4%91%E1%BA%A3o">4.1. Inverse (nghịch đảo)</a></li>
<li>  <a href="#42-transpose-chuy%E1%BB%83n-v%E1%BB%8B">4.2. Transpose (chuyển vị)</a></li>
</ul>
</li>
</ul>
<h1 id="1-Cac-ky-hieu"><a href="#1-Cac-ky-hieu" class="headerlink" title="1. Các ký hiệu"></a>1. Các ký hiệu</h1><h2 id="1-1-Matrix"><a href="#1-1-Matrix" class="headerlink" title="1.1. Matrix"></a>1.1. Matrix</h2><p>Matrix là một mảng 2 chiều (có thể mở rộng ra n chiều).</p>
<p>$latex \begin{bmatrix}a &amp; b &amp; c \\d &amp; e &amp; f \\g &amp; h &amp; i \\j &amp; k &amp; l \end{bmatrix}$</p>
<p>Matrix bên trên có 4 dòng và 3 cột, ký hiệu là $latex R^{4x3}$.</p>
<h2 id="1-2-Vector"><a href="#1-2-Vector" class="headerlink" title="1.2. Vector"></a>1.2. Vector</h2><p>Vector là một matrix chỉ có 1 cột và nhiều dòng.</p>
<p>$latex \begin{bmatrix} w \\ x \\ y \\ z \end{bmatrix}$</p>
<p>Vector trên là một matrix 4x1.</p>
<h2 id="1-3-Ky-hieu"><a href="#1-3-Ky-hieu" class="headerlink" title="1.3. Ký hiệu"></a>1.3. Ký hiệu</h2><ul>
<li>  $latex A_{ij}$ là phần tử ở dòng i và cột j của matrix.</li>
<li>  Vector A với ‘n’ dòng sẽ là một Vector có n chiều.</li>
<li>  $latex v_{i}$ là phần tử ở dòng i của vector.</li>
</ul>
<blockquote>
<p>Bình thường, vector và matrix sẽ dùng index bắt đầu từ 1. Trong đa số các ngôn ngữ lập trình, mảng thường bắt đầu từ phần tử 0.</p>
</blockquote>
<ul>
<li>  Matrix thường được ký hiệu bằng chữ cái in hoa, vector thường được ký hiệu bằng chữ cái in thường.</li>
<li>  <code>Scalar</code> nghĩa là một vật thể là một giá trị, không phải vector hay matrix.</li>
<li>  $latex \mathbb{R}$ được ký hiệu cho tập các số thực.</li>
<li>  $latex \mathbb{R}^n$ được ký hiệu cho tập các vector số thực n chiều.</li>
</ul>
<h1 id="2-Phan-mem"><a href="#2-Phan-mem" class="headerlink" title="2. Phần mềm"></a>2. Phần mềm</h1><p>Để thử nghiệm nhanh chóng các giả thuyết - thuật toán liên quan tới toán học trong Machine Learning, ta có thể dùng một phần mềm mang tên <a href="https://www.gnu.org/software/octave/download.html">Octave</a></p>
<p>Bạn có thể chạy đoạn code dưới đây trong Octave hoặc Matlab</p>
<p>[code lang=matlab] % The ; denotes we are going back to a new row. A = [1, 2, 3; 4, 5, 6; 7, 8, 9; 10, 11, 12]</p>
<p>% Initialize a vector v = [1;2;3]</p>
<p>% Get the dimension of the matrix A where m = rows and n = columns [m,n] = size(A)</p>
<p>% You could also store it this way dim_A = size(A)</p>
<p>% Get the dimension of the vector v dim_v = size(v)</p>
<p>% Now let’s index into the 2nd row 3rd column of matrix A A_23 = A(2,3) [/code]</p>
<h1 id="3-Cac-phep-tinh"><a href="#3-Cac-phep-tinh" class="headerlink" title="3. Các phép tính"></a>3. Các phép tính</h1><h2 id="3-1-Phep-cong-va-phep-nhan-matrix-so-thuc"><a href="#3-1-Phep-cong-va-phep-nhan-matrix-so-thuc" class="headerlink" title="3.1. Phép cộng và phép nhân matrix số thực"></a>3.1. Phép cộng và phép nhân matrix số thực</h2><p>Đối với phép cộng và nhân, chỉ cần đơn giản cộng và nhân với mỗi phần tử của matrix.</p>
<p>$latex \begin{bmatrix} a &amp; b \\ c &amp; d \\ \end{bmatrix} +\begin{bmatrix} w &amp; x \\ y &amp; z \\ \end{bmatrix} =\begin{bmatrix} a+w &amp; b+x \\ c+y &amp; d+z \\ \end{bmatrix}$</p>
<p>Tương tự đối với phép nhân và chia:</p>
<p>$latex \begin{bmatrix} a &amp; b \\ c &amp; d \\ \end{bmatrix} * x =\begin{bmatrix} a*x &amp; b*x \\ c*x &amp; d*x \\ \end{bmatrix}$</p>
<p>$latex \begin{bmatrix} a &amp; b \\ c &amp; d \\ \end{bmatrix} / x =\begin{bmatrix} a /x &amp; b/x \\ c /x &amp; d /x \\ \end{bmatrix}$</p>
<h2 id="3-2-Nhan-matrix-voi-vector"><a href="#3-2-Nhan-matrix-voi-vector" class="headerlink" title="3.2. Nhân matrix với vector"></a>3.2. Nhân matrix với vector</h2><p>Để nhân một matrix với một vector, nhân mỗi phần tử rồi cộng kết quả:</p>
<p>$latex \begin{bmatrix} a &amp; b \\ c &amp; d \\ e &amp; f \end{bmatrix} *\begin{bmatrix} x \\ y \\ \end{bmatrix} =\begin{bmatrix} a*x + b*y \\ c*x + d*y \\ e*x + f*y\end{bmatrix}$</p>
<blockquote>
<p>Một matrix <code>m x n</code> nhân với một vector <code>n x 1</code> sẽ ra kết quả là một vector <code>m x 1</code>.</p>
</blockquote>
<p>Kiến thức về matrix này có thể áp dụng vào hàm hypothesis của linear regression:</p>
<p>Ta có bộ input các giá trị của x như sau:</p>
<p>[code lang=text] x1 = 21 x2 = 30 x3 = 25 x4 = 22 [/code]</p>
<p>hàm hypothesis:</p>
<p>$latex h_{0} = -40 + 0.25x$</p>
<p>Để tính nhanh các giá trị dự đoán của y, ta có thể tạo ra matrix x và vector hypothesis, và tạo thành phép tính như sau:</p>
<p>$latex \begin{bmatrix} 1 &amp; 21 \\ 1 &amp; 30 \\ 1 &amp; 25 \\ 1 &amp; 22 \end{bmatrix} * \begin{bmatrix} -40 \\ 0.25 \end{bmatrix}$</p>
<p>Phép tính này có thể dễ dàng tính toán bằng Octave</p>
<p>[code lang=matlab] A = [1,21;1,30;1,25;1,22] B = [-40;0.25]</p>
<p>mul_AB = A * B [/code]</p>
<p>Kết quả:</p>
<p>[code lang=matlab] A = 1 21 1 30 1 25 1 22</p>
<p>B = -40.00000 0.25000</p>
<p>mul_AB = -34.750 -32.500 -33.750 -34.500 [/code]</p>
<h2 id="3-3-Nhan-2-matrix-voi-nhau"><a href="#3-3-Nhan-2-matrix-voi-nhau" class="headerlink" title="3.3. Nhân 2 matrix với nhau"></a>3.3. Nhân 2 matrix với nhau</h2><p>Tương tự như việc nhân 1 matrix với 1 vector, bạn chỉ cần tách phép nhân 2 matrix thành nhiều phép nhân matrix với vector.</p>
<p>$latex \begin{bmatrix} a &amp; b \\ c &amp; d \\ e &amp; f \end{bmatrix} *\begin{bmatrix} w &amp; x \\ y &amp; z \\ \end{bmatrix} =\begin{bmatrix} a*w + b*y &amp; a*x + b*z \\ c*w + d*y &amp; c*x + d*z \\ e*w + f*y &amp; e*x + f*z\end{bmatrix}$</p>
<blockquote>
<p>Một matrix <code>m x n</code> khi nhân với một matrix <code>n x o</code> sẽ cho ra kết quả là một matrix <code>m x o</code>.</p>
</blockquote>
<h2 id="3-4-Cac-tinh-chat-cua-phep-nhan-matrix"><a href="#3-4-Cac-tinh-chat-cua-phep-nhan-matrix" class="headerlink" title="3.4. Các tính chất của phép nhân matrix"></a>3.4. Các tính chất của phép nhân matrix</h2><p>Phép nhân 2 số thực có một số tính chất không thể áp dụng với phép nhân 2 matrix.</p>
<p>Gọi $latex A$ và $latex B$ là 2 matrix, ta có:</p>
<ul>
<li>  $latex A \times B \neq B \times A$</li>
<li>  $latex A \times B \times C = A \times (B \times C) = (A \times B) \times C$</li>
</ul>
<h2 id="3-5-Identity-Matrix"><a href="#3-5-Identity-Matrix" class="headerlink" title="3.5. Identity Matrix"></a>3.5. Identity Matrix</h2><p>Một matrix bất kỳ khi nhân với một Identity matrix phù hợp sẽ có kết quả là chính nó.</p>
<p>Ký hiệu: $latex I$ hoặc $latex I_{n \times n}$</p>
<p>Ví dụ:</p>
<p>$latex I_{1 \times 1} = \begin{bmatrix} 1 \end{bmatrix}$</p>
<p>$latex I_{2 \times 2} = \begin{bmatrix} 1 &amp; 0 \\ 0 &amp; 1 \end{bmatrix}$</p>
<p>$latex I_{3 \times 3} = \begin{bmatrix} 1 &amp; 0 &amp; 0 \\ 0 &amp; 1 &amp; 0 \\ 0 &amp; 0 &amp; 1 \end{bmatrix}$</p>
<blockquote>
<p>Lưu ý: $latex A \times I = I \times A$</p>
</blockquote>
<h1 id="4-Inverse-nghich-dao-va-Transpose-chuyen-vi"><a href="#4-Inverse-nghich-dao-va-Transpose-chuyen-vi" class="headerlink" title="4. Inverse (nghịch đảo) và Transpose (chuyển vị)"></a>4. Inverse (nghịch đảo) và Transpose (chuyển vị)</h1><h2 id="4-1-Inverse-nghich-dao"><a href="#4-1-Inverse-nghich-dao" class="headerlink" title="4.1. Inverse (nghịch đảo)"></a>4.1. Inverse (nghịch đảo)</h2><blockquote>
<p><strong>Một ví dụ với số thực</strong></p>
<p>3 là một số thực. Ta có: $latex 3 \times (3^{-1}) = 1$</p>
<p>Tổng quát: $latex a \times (a^{-1}) = 1$</p>
</blockquote>
<p>Ta có matrix A:</p>
<p>$latex A \times A^{-1} = A^{-1} \times A = I$</p>
<blockquote>
<p>Matrix gồm toàn các phần tử 0 không có nghịch đảo</p>
</blockquote>
<h2 id="4-2-Transpose-chuyen-vi"><a href="#4-2-Transpose-chuyen-vi" class="headerlink" title="4.2. Transpose (chuyển vị)"></a>4.2. Transpose (chuyển vị)</h2><p>Gọi B là matrix chuyển vị của A, ta có:</p>
<p>$latex A = \begin{bmatrix} a &amp; b \\ c &amp; d \\ e &amp; f \end{bmatrix}$</p>
<p>$latex A^T = \begin{bmatrix} a &amp; c &amp; e \\ b &amp; d &amp; f \end{bmatrix}$</p>
<p>Hay nói cách khác:</p>
<p>$latex A_{ij} = A^T_{ji}$</p>
]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>matrice</tag>
        <tag>matrix</tag>
        <tag>vector</tag>
      </tags>
  </entry>
  <entry>
    <title>Machine Learning - 2.1 - Multiple Features</title>
    <url>/2018/10/03/machine-learning-2-1-multiple-features/</url>
    <content><![CDATA[<p>Tuần 2 trong course Machine Learning của giáo sư Andrew Ng trên Coursera. Trong phần này, bạn sẽ thấy linear regression được mở rộng thành <code>multiple input features</code>, và những best practices để thực hiện linear regression.</p>
<span id="more"></span>
<p>Xem các bài viết khác tại <a href="https://huntertran.com/machine-learning-course/">Machine Learning Course Structure</a></p>
<ul>
<li><a href="#1-mutiple-features">1. Mutiple Features</a><ul>
<li>  <a href="#11-k%C3%BD-hi%E1%BB%87u">1.1. Ký hiệu</a></li>
<li>  <a href="#12-hypothesis">1.2. Hypothesis</a></li>
<li>  <a href="#13-trick">1.3. Trick</a></li>
</ul>
</li>
<li>  <a href="#2-gradient-descent-cho-multiple-variables">2. Gradient Descent cho Multiple Variables</a></li>
<li><a href="#3-gradient-descent-in-practice">3. Gradient Descent in Practice</a><ul>
<li>  <a href="#31-feature-scaling-v%C3%A0-mean-normalization">3.1. Feature Scaling và Mean Normalization</a></li>
<li>  <a href="#32-learning-rate">3.2. Learning Rate</a></li>
</ul>
</li>
<li>  <a href="#4-features-v%C3%A0-polynomial-regression">4. Features và Polynomial Regression</a></li>
</ul>
<h1 id="1-Mutiple-Features"><a href="#1-Mutiple-Features" class="headerlink" title="1. Mutiple Features"></a>1. Mutiple Features</h1><p>Linear Regression với <code>multiple features</code> còn được biết đến với cái tên <code>multivariate linear regression</code>.</p>
<h2 id="1-1-Ky-hieu"><a href="#1-1-Ky-hieu" class="headerlink" title="1.1. Ký hiệu"></a>1.1. Ký hiệu</h2><ul>
<li>  $latex x^{(i)}_j$ = giá trị của feature <code>j</code> trong training example thứ <code>i</code>.</li>
<li>  $latex x^{(i)}$ = input (feature) thứ <code>i</code> của training example.</li>
<li>  m = số training example</li>
<li>  n = số features</li>
</ul>
<h2 id="1-2-Hypothesis"><a href="#1-2-Hypothesis" class="headerlink" title="1.2. Hypothesis"></a>1.2. Hypothesis</h2><p>Như vậy, hàm hypothesis của chúng ta được viết lại như sau:</p>
<p>$latex h_0(x) = \theta_0x_0 + \theta_1x_1 + … + \theta_nx_n$</p>
<p>với $latex x_0 = 1$.</p>
<h2 id="1-3-Trick"><a href="#1-3-Trick" class="headerlink" title="1.3. Trick"></a>1.3. Trick</h2><p>Áp dụng các kiến thức về phép nhân matrix đã học ở bài trước, ta có như sau</p>
<p>$latex h_0(x) = \begin{bmatrix} \theta_0 &amp; \theta_1 &amp; … &amp; \theta_n \end{bmatrix} \begin{bmatrix} x_0 \\ x_1 \\ … \\ x_n \end{bmatrix} = \theta^Tx$</p>
<p>Trên đây là công thức của hàm hypothesis được rút gọn thành phép nhân matrix với vector.</p>
<h1 id="2-Gradient-Descent-cho-Multiple-Variables"><a href="#2-Gradient-Descent-cho-Multiple-Variables" class="headerlink" title="2. Gradient Descent cho Multiple Variables"></a>2. Gradient Descent cho Multiple Variables</h1><p>Công thức cho thuật toán Gradient Descent thì y hệt như cũ. Ta chỉ lặp lại nó cho <code>n</code> features mà thôi.</p>
<p>Lặp lại cho tới khi hội tụ:</p>
<p>$latex \theta_0 := \theta_0 - \alpha \frac{1}{m} \sum\limits_{i=1}^{m} (h_\theta(x^{(i)}) - y^{(i)}) \cdot x_0^{(i)} \\ \theta_1 := \theta_1 - \alpha \frac{1}{m} \sum\limits_{i=1}^{m} (h_\theta(x^{(i)}) - y^{(i)}) \cdot x_1^{(i)} \\ \theta_2 := \theta_2 - \alpha \frac{1}{m} \sum\limits_{i=1}^{m} (h_\theta(x^{(i)}) - y^{(i)}) \cdot x_2^{(i)} \\ …$</p>
<p>hoặc diễn giải theo một cách khác:</p>
<p>$latex \theta_j := \theta_j - \alpha \frac{1}{m} \sum\limits_{i=1}^{m} (h_\theta(x^{(i)}) - y^{(i)}) \cdot x_j^{(i)}$</p>
<p>với j:= 0…n</p>
<blockquote>
<p>Đối với $latex \theta_0$, $latex x^i_0 = 1$</p>
</blockquote>
<h1 id="3-Gradient-Descent-in-Practice"><a href="#3-Gradient-Descent-in-Practice" class="headerlink" title="3. Gradient Descent in Practice"></a>3. Gradient Descent in Practice</h1><h2 id="3-1-Feature-Scaling-va-Mean-Normalization"><a href="#3-1-Feature-Scaling-va-Mean-Normalization" class="headerlink" title="3.1. Feature Scaling và Mean Normalization"></a>3.1. Feature Scaling và Mean Normalization</h2><p>Khi các features có giá trị giao động trong các khoảng cách xa nhau, thì thuật toán Gradient Descent thường tốn nhiều thơi gian để tìm ra kết quả.</p>
<p>Ví dụ ta có 2 feature là <code>diện tích nhà</code> và <code>số phòng ngủ</code>:</p>
<p>[code lang=text] 200 &lt; Diện tích nhà &lt; 2000 1 &lt; Số phòng ngủ &lt; 5 [/code]</p>
<p>Nếu vẽ đồ thị cho hàm hypothesis dự đoán giá nhà, bạn sẽ thấy nó là một dạng đồ thị hình cái tô với đáy rất nhọn, nhưng dẹp. Điều này làm cho mỗi step của gradient descent trải dài về bề ngang, nhưng không đi nhanh về điểm hội tụ, làm tổng thời gian chạy thuật toán gradient descent tăng lên.</p>
<p><img src="https://i.imgur.com/DA49vil.png" alt="plot"> <em>hình ảnh chỉ mang tính chất minh họa ;)</em></p>
<p>Ta có thể tăng tốc gradient descent bằng cách <code>biến đổi</code> các giá trị của feature cho nó nằm trong một khoảng gần giống nhau. Lý do là $latex \theta$ sẽ di chuyển nhanh hơn trong vùng bé hơn và ngược lại, chậm hơn trong vùng lớn hơn.</p>
<p>Nhìn chung, ta sẽ biến đổi sao cho:</p>
<p>$latex -1 \leq x_{(i)} \leq 1$</p>
<p>hoặc</p>
<p>$latex -0.5 \leq x_{(i)} \leq 0.5$</p>
<p>Trên đây chỉ là ví dụ, mục tiêu là làm cho vùng giá trị của các feature càng gần nhau càng tốt.</p>
<p>2 kỹ thuật để làm chuyện này là <code>Feature Scaling</code> và <code>Mean Normalization</code>.</p>
<blockquote>
<p>Feature Scaling là chia input với khoảng giá trị (max - min). Mean Normalization là input - giá trị trung bình của input.</p>
</blockquote>
<p>$latex x_i := \frac{x_i - \mu_i}{\delta_i}$</p>
<p>với:</p>
<ul>
<li>  $latex \mu_i$: trung bình của feature i</li>
<li>  $latex \delta_i$: Max - min hoặc độ lệch chuẩn</li>
</ul>
<blockquote>
<p>Max - min sẽ cho ra kết quả rất khác với độ lệch chuẩn.</p>
</blockquote>
<h2 id="3-2-Learning-Rate"><a href="#3-2-Learning-Rate" class="headerlink" title="3.2. Learning Rate"></a>3.2. Learning Rate</h2><p>Để xác định tham số $latex \alpha$, ta có thể áp dụng 1 số kỹ thuật:</p>
<ul>
<li>  Vẽ đồ thị với trục x = số bước lặp của gradient descent, trục y = giá trị của $latex J(\theta)$. Nếu $latex J(\theta)$ tăng, thì bạn phải giảm giá trị $latex \alpha$ xuống và làm lại từ đầu.</li>
<li>  Automatic convergence test: Xác định điểm hội tụ khi giá trị $latex J(\theta)$ không vượt quá E trong một lần lặp, với E là một giá trị rất nhỏ nào đó. Tuy nhiên trong thực tế, thường rất khó xác định giá trị E này.</li>
</ul>
<p>Người ta đã chứng minh được rằng, nếu learning rate $latex \alpha$ đủ nhỏ, thì giá trị $latex J(\theta)$ sẽ giảm sau mỗi lần lặp.</p>
<p>Túm lại: * Nếu $latex \alpha$ quá nhỏ: gradient descent chạy lâu. * Nếu $latex \alpha$ quá lớn: $latex J(\theta)$ có thể sẽ không giảm sau mỗi lần lặp -&gt; không hội tụ.</p>
<h1 id="4-Features-va-Polynomial-Regression"><a href="#4-Features-va-Polynomial-Regression" class="headerlink" title="4. Features và Polynomial Regression"></a>4. Features và Polynomial Regression</h1><p>Ta có thể cải thiện features và dạng của hàm hypothesis bằng nhiều cách.</p>
<p>Một trong số những cách đó là <strong>kết hợp</strong> các feature lại với nhau. Ví dụ như khi ta có 2 feature là <code>dài</code> và <code>rộng</code>, ta có thể kết hợp chúng thành <code>diện tích = dài * rộng</code>.</p>
<p>Ngoài ra, không phải lúc nào ta cũng có thể sử dụng được hàm hypothesis là một đường thẳng, nhất là khi nó không “vừa” với bộ data. Lúc này, có thể biến đổi nó một chút, hoặc bẻ cong nó bằng cách nâng lũy thừa, hoặc lấy căn của các features (hoặc bất cứ dạng nào khác đều được).</p>
<p>Ví dụ:</p>
<p>$latex h_{\theta}(x) = \theta_0 + \theta_1x_1$</p>
<p>Ta có thể thêm 1 feature mới bằng cách lũy thừa x lên:</p>
<p>$latex h_{\theta}(x) = \theta_0 + \theta_1x_1 + \theta_2x_1^2$</p>
<p>hoặc lấy căn của nó:</p>
<p>$latex h_{\theta}(x) = \theta_0 + \theta_1x_1 + \theta_2\sqrt{x_1}$</p>
<blockquote>
<p>Một điều quan trọng là khi bạn biến đổi các feature như thế này, vùng giá trị của nó sẽ trở nên cách biệt so với feature gốc. Lúc này, bạn sẽ phải áp dụng những cách tối ưu như <code>Feature Scaling</code> và <code>Mean Normalization</code> đã nói ở trên để tối ưu thuật toán Gradient Descent.</p>
</blockquote>
]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
  </entry>
  <entry>
    <title>Machine Learning - 2.2 - Normal Equation</title>
    <url>/2018/10/09/machine-learning-2-2-normal-equation/</url>
    <content><![CDATA[<p>Bài 2 phần 2 trong khóa học Machine Learning của giáo sư Andrew Ng. Trong bài này, ta sẽ tìm hiểu một cách thay thế cho thuật toán <code>Gradient Descent</code> cùng ưu nhược điểm của nó.</p>
<span id="more"></span>
<p>Xem các bài viết khác tại <a href="https://huntertran.com/machine-learning-course/">Machine Learning Course Structure</a></p>
<ul>
<li><a href="#1-normal-equation">1. Normal Equation</a><ul>
<li>  <a href="#11-c%C3%B4ng-th%E1%BB%A9c">1.1. Công thức</a></li>
<li>  <a href="#12-so-s%C3%A1nh">1.2. So sánh</a></li>
<li>  <a href="#13-non-invertibility-kh%C3%B4ng-th%E1%BB%83-%C4%91%E1%BA%A3o-ng%C6%B0%E1%BB%A3c">1.3. Non-invertibility (không thể đảo ngược)</a></li>
</ul>
</li>
<li>  <a href="#2-octave">2. Octave</a></li>
</ul>
<h1 id="1-Normal-Equation"><a href="#1-Normal-Equation" class="headerlink" title="1. Normal Equation"></a>1. Normal Equation</h1><p>Thuần túy về mặt toán học, đối với 1 hàm hypothesis, ta có thể tìm ra giá trị nhỏ nhất của nó bằng cách lấy đạo hàm, và tìm x khi đạo hàm = 0.</p>
<h2 id="1-1-Cong-thuc"><a href="#1-1-Cong-thuc" class="headerlink" title="1.1. Công thức"></a>1.1. Công thức</h2><p>Áp dụng cách nhân matrix với vector đã được giới thiệu ở bài trước, ta có công thức như sau:</p>
<p>$latex \theta = (X^TX)^{-1}X^Ty$</p>
<h2 id="1-2-So-sanh"><a href="#1-2-So-sanh" class="headerlink" title="1.2. So sánh"></a>1.2. So sánh</h2><p>Gradient Descent</p>
<p>Normal Equation</p>
<p>Cần phải chọn alpha</p>
<p>Không cần chọn alpha</p>
<p>Cần nhiều vòng lặp</p>
<p>Tính bụp phát ra luôn</p>
<p>Độ phức tạp $latex O (kn^2)$</p>
<p>Độ phức tạp $latex O (n^3)$, cần phải tích nghịch đảo của $latex X^TX$</p>
<p>n lớn vẫn chạy tốt</p>
<p>Chậm nếu n quá lớn</p>
<p>Tóm lại, nếu số lượng các feature quá lớn thì bạn nên sử dụng thuật toán <code>Gradient Descent</code> để nhanh ra kết quả.</p>
<h2 id="1-3-Non-invertibility-khong-the-dao-nguoc"><a href="#1-3-Non-invertibility-khong-the-dao-nguoc" class="headerlink" title="1.3. Non-invertibility (không thể đảo ngược)"></a>1.3. Non-invertibility (không thể đảo ngược)</h2><p>Trong một số trường hợp hiếm gặp, kết quả của $latex X^TX$ là <code>noninvertible</code>.</p>
<p>Điều này xảy ra là do các nguyên do sau: + Có các feature bị dư. Ví dụ như 2 feature có liên quan rất chặt chẽ với nhau (feature này phụ thuộc vào feature kia một cách tuyến tính chả hạn) + Có quá nhiều features (m &lt;= n).</p>
<p>Để giải quyết vấn đề này, ta có thể delete bớt các feature bị dư (kiểu như x1 là diện tích theo mét vuông, x2 là diện thích theo dặm), hoặc dùng các phương pháp <code>regularization</code> sẽ được nói đến ở các phần sau.</p>
]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>normal equation</tag>
      </tags>
  </entry>
  <entry>
    <title>Machine Learning - 2.3 - Exercise</title>
    <url>/2018/10/18/machine-learning-2-3-exercise/</url>
    <content><![CDATA[<p>Bài viết này đưa ra bài giải và chi tiết cách giải của mỗi bài tập trong tuần 2 của khóa học Machine Learning của giáo sư Andrew Ng.</p>
<p>Xem các bài viết khác tại <a href="https://huntertran.com/machine-learning-course/">Machine Learning Course Structure</a>.</p>
<span id="more"></span>
<ul>
<li>  <a href="#1-c%C3%A0i-%C4%91%E1%BA%B7t-octave">1. Cài đặt Octave</a></li>
<li>  <a href="#2-warmup">2. Warmup</a></li>
<li>  <a href="#3-cost-function-j">3. Cost Function J</a></li>
<li>  <a href="#4-gradient-descent">4. Gradient Descent</a></li>
<li>  <a href="#5-normal-equation">5. Normal Equation</a></li>
</ul>
<h1 id="1-Cai-dat-Octave"><a href="#1-Cai-dat-Octave" class="headerlink" title="1. Cài đặt Octave"></a>1. Cài đặt Octave</h1><p>Còn gì dễ hơn: <a href="https://www.gnu.org/software/octave/download.html">Download Octave</a></p>
<p>Chọn phiên bản 64-bit nha: octave-4.4.1-w64-installer.exe (~ 238 MB)</p>
<h1 id="2-Warmup"><a href="#2-Warmup" class="headerlink" title="2. Warmup"></a>2. Warmup</h1><p>Yêu cầu: Trả về 5x5 identity matrix</p>
<pre class="line-numbers language-none"><code class="language-none">A &#x3D; eye(5);</code></pre>

<h1 id="3-Cost-Function-J"><a href="#3-Cost-Function-J" class="headerlink" title="3. Cost Function J"></a>3. Cost Function J</h1><p>Công thức:</p>
<p>$latex J(\theta) = \frac{1}{2m}\sum\limits_{i=1}^m(h_0(x^{(i)})-y^{(i)})^2$</p>
<p>Vectorize:</p>
<p>Ta có:</p>
<p>$latex h_0(x^{(i)}) =\theta_0X_0 + \theta_1X_1+…+\theta_nX_n$</p>
<p>Nếu coi $latex \theta$ là vector $latex n\times1$, X là matrix $latex m\times n$, thì phép tính trên còn đơn giản như sau:</p>
<p>$latex h_0(x^{(i)})=\begin{bmatrix}x_0^{(1)} &amp; x_1^{(1)} \\x_0^{(2)} &amp; x_1^{(2)} \\ … &amp; … \\ x_0^{(m)} &amp; x_1^{(m)} \end{bmatrix}\times\begin{bmatrix}\theta_0 \\ \theta_1 \\ … \\ \theta_m \end{bmatrix}=X\times\theta$</p>
<p>Vậy cost function biến đổi lại thành:</p>
<p>$latex J(\theta) = \frac{1}{2m}\sum\limits_{i=1}^m(X\times\theta-y)^2$</p>
<p>Code:</p>
<pre class="line-numbers language-none"><code class="language-none">J &#x3D; (1&#x2F;(2*m))*sum((X*theta - y).^2)</code></pre>

<h1 id="4-Gradient-Descent"><a href="#4-Gradient-Descent" class="headerlink" title="4. Gradient Descent"></a>4. Gradient Descent</h1><p>Thuật toán Gradient Descent có 2 bước:</p>
<ol>
<li> Tính bộ giá trị $latex \theta$</li>
<li> Thay vào cost function để kiểm tra hội tụ</li>
</ol>
<p>Để cho đơn giản, ta sẽ giả định rằng chỉ có 2 feature là $latex x_0 = 1$ và $latex x_1$ (n = 2)</p>
<p>Công thức:</p>
<p>$latex \theta_j = \theta_j - \alpha \frac{1}{m} \sum\limits_{i=1}^{m} (h_\theta(x^{(i)}) - y^{(i)}) \cdot x_j^{(i)}$</p>
<p>Ta tách công thức trên thành 2 phần:</p>
<p>$latex \theta_j = \theta_j - gradient$</p>
<p>với</p>
<p>$latex gradient = \alpha \frac{1}{m} \sum\limits_{i=1}^{m} (h_\theta(x^{(i)}) - y^{(i)}) \cdot x_j^{(i)}$</p>
<p>với:</p>
<ul>
<li>  X = $latex \begin{bmatrix}x_0^{(1)} &amp; x_1^{(1)} \\x_0^{(2)} &amp; x_1^{(2)} \\ … &amp; … \\ x_0^{(m)} &amp; x_1^{(m)} \end{bmatrix}$</li>
<li>  $latex \theta = \begin{bmatrix}\theta_0 \\ \theta_1 \end{bmatrix}$</li>
<li>  y = $latex \begin{bmatrix}y_1 \\ y_2 \\ … \\ y_m \end{bmatrix}$</li>
</ul>
<p>Tương tự như cost function, ta có:</p>
<p>$latex (X\times\theta - y)=\begin{bmatrix} \theta_0x_0^{(1)}+\theta_1x_1^{(1)}-y_1 \\ \theta_0x_0^{(2)}+\theta_1x_1^{(2)}-y_2 \\ … \\ \theta_0x_0^{(m)}+\theta_1x_1^{(m)}-y_m \end{bmatrix}=\begin{bmatrix} a_1 \\ a_2 \\ … \\ a_m \end{bmatrix}= a$</p>
<p>với a là vector m x 1</p>
<p><strong>Nhân với $latex x_j^{(i)}$ và tính tổng</strong></p>
<p>Đối với mỗi tham số của vector a, ta nhân nó với x tương ứng, rồi cộng tất cả các kết quả lại.</p>
<p>Để vừa nhân, vừa tính tổng và trả về một vector chứa kết quả là các giá trị của gradient, ta sẽ phải biến đổi matrix X một chút.</p>
<p>$latex X^T = \begin{bmatrix}x_0^{(1)} &amp; x_0^{(2)} &amp; … &amp; x_0^{(m)}\\ x_1^{(1)} &amp; x_1^{(2)} &amp; … &amp; x_1^{(m)}\end{bmatrix}$</p>
<p>Khi nhân matrix này với vector a, ta sẽ có kết quả như mong muốn.</p>
<p>$latex X^T\times a = \begin{bmatrix}x_0^{(1)} &amp; x_0^{(2)} &amp; … &amp; x_0^{(m)}\\ x_1^{(1)} &amp; x_1^{(2)} &amp; … &amp; x_1^{(m)}\end{bmatrix} \times \begin{bmatrix} a_1 \\ a_2 \\ … \\ a_m \end{bmatrix}=\begin{bmatrix} a_1x_0^{(1)} + a_2x_0^{(2)} + … + a_mx_0^{(m)} \\ a_1x_1^{(1)} + a_2x_1^{(2)} + … + a_mx_1^{(m)} \end{bmatrix}$</p>
<p>Code:</p>
<pre class="line-numbers language-none"><code class="language-none">file gradientDescent.m

function [theta, J_history] &#x3D; gradientDescent(X, y, theta, alpha, num_iters)
%GRADIENTDESCENT Performs gradient descent to learn theta
%   theta &#x3D; GRADIENTDESCENT(X, y, theta, alpha, num_iters) updates theta by
%   taking num_iters gradient steps with learning rate alpha

% Initialize some useful values
m &#x3D; length(y); % number of training examples
J_history &#x3D; zeros(num_iters, 1);

for iter &#x3D; 1:num_iters
gradient &#x3D; (alpha&#x2F;m) * X&#39; * (X*theta - y);
theta &#x3D; theta - gradient;

% Save the cost J in every iteration
J_history(iter) &#x3D; computeCost(X, y, theta);
end
end</code></pre>

<blockquote>
<p>Code này có thể dùng chung cho gradient descent với nhiều feature</p>
</blockquote>
<h1 id="5-Normal-Equation"><a href="#5-Normal-Equation" class="headerlink" title="5. Normal Equation"></a>5. Normal Equation</h1><p>Cái này thì khá dễ, nên mình không giải thích mà sẽ đưa code luôn nhé</p>
<pre class="line-numbers language-none"><code class="language-none">file normalEqn.m

function [theta] &#x3D; normalEqn(X, y)
%NORMALEQN Computes the closed-form solution to linear regression
%   NORMALEQN(X,y) computes the closed-form solution to linear
%   regression using the normal equations.

theta &#x3D; zeros(size(X, 2), 1);

theta &#x3D; pinv(X&#39;*X)*X&#39;*y;
end</code></pre>

<p>Bắt đầu tuần 3 nào :D</p>
]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
  </entry>
  <entry>
    <title>[Research] - LaTex on Windows - Step by step installation</title>
    <url>/2019/04/02/latex-on-windows-step-by-step-installation/</url>
    <content><![CDATA[<p>In this blog, I will instruct you on how to install and writing LaTex documents on Windows with ease.</p>
<ul>
<li><a href="#1-requirement">1. Requirement</a><ul>
<li>  <a href="#11-list-of-software">1.1 List of software</a></li>
<li>  <a href="#12-installing-miktex">1.2 Installing MikTex</a></li>
</ul>
</li>
<li>  <a href="#2-setup-on-visual-studio-code">2. Setup on Visual Studio Code</a></li>
<li>  <a href="#3-writing-on-visual-studio-code">3. Writing on Visual Studio Code</a></li>
<li><a href="#4-collaboration">4. Collaboration</a><ul>
<li>  <a href="#41-vscode-live-share">4.1 VSCode Live Share</a></li>
<li>  <a href="#42-start-collaboration">4.2 Start Collaboration</a></li>
<li>  <a href="#43-join-a-shared-collaboration-session">4.3 Join a shared collaboration session</a></li>
<li>  <a href="#44-live-share-maximum-collaborators">4.4 Live Share Maximum collaborators</a><span id="more"></span>
<h1 id="1-Requirement"><a href="#1-Requirement" class="headerlink" title="1. Requirement"></a>1. Requirement</h1></li>
</ul>
</li>
</ul>
<h2 id="1-1-List-of-software"><a href="#1-1-List-of-software" class="headerlink" title="1.1 List of software"></a>1.1 List of software</h2><p>First thing first, you would need to download and install a series of software.</p>
<blockquote>
<p>Choose the correct version with your windows (x86/x64)</p>
</blockquote>
<ol>
<li> <a href="http://strawberryperl.com/">StrawberryPerl</a></li>
<li> <a href="https://code.visualstudio.com/download">Visual Studio Code (text editor, not confused with Visual Studio IDE)</a></li>
<li> <a href="https://miktex.org/download">MikTex</a> (easier to install and use)</li>
</ol>
<blockquote>
<p>For me, MikTex is kinda difficult to download. The server close connection every 30-45 secs. If this happened to you, use a download manager. For example: <a href="http://www.freedownloadmanager.org/download.htm">Free Download Manager</a></p>
</blockquote>
<h2 id="1-2-Installing-MikTex"><a href="#1-2-Installing-MikTex" class="headerlink" title="1.2 Installing MikTex"></a>1.2 Installing MikTex</h2><p>Accept all default option, and wait for the installation completed.</p>
<p>Start &gt; MikTex Console &gt; Updates &gt; Check for updates</p>
<p><img src="https://lh3.googleusercontent.com/hKiTMvw_chg0MzcT0UenM6z1M7zU7NJJkLop9Nq_5nVy_SUeN7BpS9j1mvLERjMfhBcRzcnu5New9thPpx4IRuByXO7RNijbkJbkCbQTisLSO4tqgWPQFHzE50hI13XjwCCYsQYiiA=w2400" alt="Update MikTex Packages"></p>
<blockquote>
<p>In case of difficult in download packages, you can change ‘Install from’ option with a <code>http</code> repository</p>
</blockquote>
<p>Install <code>latexmk</code> package</p>
<p><img src="https://lh3.googleusercontent.com/Wr5yvLr37Tn5pQgda46K2EfUTKFw9qwWkZ0iJFs0Fpi7AJSB_iMFWqE80T3-CqE_r_WdT2RIdho2gvxZqOPu27sinQtqjon5dS2zf_L_gFvS33haw-KRnPfipks2rqMevPaWb1UeoycVx44tAsHuLps5AefKa2PP2Mx7-mItHFd0cYKIPqyy98QpDlypjQmGnsszKzdJ2IOrl3TmIK38kn7ESKPczK4FNN1UKLWfijqySHZ6aUoVWcsM3X4T7cJiFiuD-Mxazoxh5Y8QOWLkA2705VLniHlt_0D8U0WzG-TvVLvr0O2TS5m5i1FTpY5iis55MgF1isyDDzPZ6xUQ2UX15lAv4XCDuzhJP-BiNXb3eDArLDoynxUQv3gTDY8myBwIPhWGtnMcsB2QHyQkwXuEQyftQG4KKUeiYRjmq1g3uM8FXLvT949MnggObXdDewcnI3gnnbmoSEK2FCFyue10QnJbR9Ks0LAnZDfvDvW0fL0F9HSm5yw7C4wNeZskGxBqAWn-f2sy7tX1twEOYcy9QVJcHJ2V1I-6Th_7OCn86OdPePRgopd1FCTPfetLy0pDlyrfIAxWvC2Eiycooqn0WEsmxpojP4QiZhteO-2EMKQYdMluHP-e_51Zf7OR0LRVjftUOntg5XYFWE55bsbrmyyowbI3SpYBt4b51juG_JwMkQmnyYtVTF4u_Q7SjikShzZRNbvPsDoRUTk3irKH=w802-h632-no" alt="latexmk"></p>
<h1 id="2-Setup-on-Visual-Studio-Code"><a href="#2-Setup-on-Visual-Studio-Code" class="headerlink" title="2. Setup on Visual Studio Code"></a>2. Setup on Visual Studio Code</h1><p>If you are opening Visual Studio Code while installing MikTex and Perl ActiveState, please CLOSE Visual Studio Code and open it again.</p>
<p>Open Extension &gt; search for Latex &gt; Install LaTeX Workshop</p>
<p><img src="https://lh3.googleusercontent.com/vr8qIvd2Bz3tT0srcGXASblQHtvInX_cZKZtugGzLfZ71TbWWb3ddmAaHDpuSCO3Rz18KzyYuOBdX15Pgn_7p47EohvqiVCyJ8Ygur8qE9XI5cGeAk6nEMgLuyh2iVy1oIddau0iIbFLSxr6QvpJeT8HFrVD7P4ljDhKOLeBY72uyuEBBZjiqjrm5BIT21h2qZzqG0E-mytMi747yK98kwYUay3cec0uEX3ShVJIr8ffYfTAS17tQ5QdA0zpcql8Kc7yTWpsPMrN-5lCJQYlQnmH5-5AVxlugLVB956LMKXGuj22OUWHv3BpxJvTMPq0GzlvnTbRDhRLLUji-WlTU8rhHlRtbCGBb3SZjt-8aNAPLBtAoGRYWbSEpQiZILwslexygTxsMrkUmarXlfGJONKWt94c4vyFmwLlln8DdGB5ER3R8njYaH1RFxHnUBYAz2mOGuMDkY2_jAxQo1vLW0ftf1bQGEE0SddAnBUoj87n7lbULZi_q2bOJLUfgMn2JHGJq225OeD5oADbhCyJq4cMWTD9xqxS1YG6KGBH_1LWlyOyVd61aHob2UJa_Bh_YJR4fGg-LX2qB8XIHg3pl06rYLFmhSXlACOPYsyW7O3OORa0qcDKhgnzJS-LnXCndxbpOzM42R9lLCcCIkt558-TYaqKUDB0Lx8mc1IiQ4Mp49U6cbjQHbc6CMUe9z23nH3iCfdn_a0ASOuAICKCQi5Y=w699-h488-no" alt="LaTeX Workshop"></p>
<h1 id="3-Writing-on-Visual-Studio-Code"><a href="#3-Writing-on-Visual-Studio-Code" class="headerlink" title="3. Writing on Visual Studio Code"></a>3. Writing on Visual Studio Code</h1><p>It is recommended to create a folder for each LaTeX document (to store images, charts, data file, etc).</p>
<p>Open that folder with Visual Studio Code, create a new file ended with <code>.tex</code></p>
<p>Open that <code>.tex</code> file, then you can start playing with your LaTeX</p>
<p><img src="https://lh3.googleusercontent.com/lT5SSLoB-mNXiVL8N9szGf5l36w1u4LgxK2JwSCFKiZFgXXF8Og17FuYaBwcCHZogn_ut-aymvoJRn-3yKgF0f6PGREaNym8ZH0kwvPHA6_wqSRBo1xO5cZQd3th8kQd9MogtWLPN6fFCNk-ww8gUiZQNxhYnvG0c4ASCePogPFb-ldilXV-RoM5VSUShrxRBicNTIenJ2jAFAsNf9Pd-HXeGz1iYEXcEEo7aU14__e1v_8UHlm6d1SqvdTdta-xuvrvI59MGW9eGrCWbsC0mX7EDKQkIUX1G5FzESvSEEEw5VYzr37GdRygooETBAaiJdAwaPG3IT1BtBYc3sRxv6xdZc-iyQZUdWJQb1FqUtJtckMME89NtQ7DlOvwv-2wpR3N9dagmKvirRH95ZOtG8iDkWSmjxpW1cXNGBfCw4WkwvnVMNSlgR6-rOpvX9osE0MbaaTLQNfRsCimqjYaMUu8_N26u1oEBoGc6jrrCD2kNtMO2kFI8nS9eF6YASftwF9mMCqpSouWOfjsMjhVeD5XNoaAFEPa3AMaoXXlYD_k7G8V1TmFT1D9IX4umcw1domD1iZNddrf79tvToTCL4dBS7C-jrRh4F22MgFTd5Ga_6woKz9t1Gk7WR3iytTbsO7s1s74BKjmRj97X80PHv5czTvCIMICUTGZ3iZKDvQVTmrRiIw0OEiWmMXSqvod44viPo9dtDfDdQFPiEFXEoOn=w594-h316-no" alt="writing latex"></p>
<p>To preview the rendered PDF, you can click on small icon on the top-right corner</p>
<p><img src="https://lh3.googleusercontent.com/fxx75if3R_weAeIaewFsJMXOEKY0TCPuOius0tbqidi3sB-DU5hBsCY_vFNtEqr-4B0DoXGsPq649OIG_9pM6rh2X2UP8In9UQ6lH41vPrHkq3UwMMRKUcrJyO6w-XBoZvl1YeuwO4r9gzXv22JA4TdmWxbDCMi0x3l3DfCnTTaQYyhuxsBoE3iCg6-xfI2oK4rO8OH-12kHLZ0Uf08HhSolhLP01sxzwOiJs9jrUuM9UCa6CPHHF5bVOQa-llPz-ZNLZy8PZacU4orXOHQSr106PgKH-Jw10Lrd2RWBeNtoIziSyMPkG38z_g1wDhJRHBy1iC8Rs940URXh6EilLCIFEqRSAyu35_2znAqQ11MstXwkeTclgv3XGVZHbaMJkeKXneB6a0jMTUXdL6XyHrYBUUaEkNdoiV6GwimUPUICK9zAC8duUNK3y4di9s8X0ew-Ypjl396pUGh0GQudIYLkZwzvqxQNIgJ0-F2gh-8BscL9upPjpFgpVCOv1Ni6RpOY4kQLNkG1tH2hD_YqqO-NElntrxg_N_vVCY0JP7Oq-wy_GBw67EAtTugdPQYdHV1S0r8UUbPO4IgTo6tV5U9EnKaKklFjB7rx32Z5zoEGt2ATfuBS_2iDCfi40e8kJ3IL4PuL-219_25hr1abJrYeRQOaP83z2xAxoVadV-qG4Vn5pui6jFd9yuyPgXE2p7z1Q_Iq4d_S8nxzgcPIlXwU=w457-h215-no" alt="preview PDF"></p>
<h1 id="4-Collaboration"><a href="#4-Collaboration" class="headerlink" title="4. Collaboration"></a>4. Collaboration</h1><p>Okay okay, it’s cool, but <em><strong>why</strong></em> do I need to write LaTeX offline, using Visual Studio Code, instead of the awesome <a href="https://www.overleaf.com/">Overleaf</a>?</p>
<p>The answer is the price. For collaboration, overleaf offer 80 USD/year for 6 students (the price is higher if you don’t have student account).</p>
<p>With visual studio code, it’s free, and super fast too.</p>
<h2 id="4-1-VSCode-Live-Share"><a href="#4-1-VSCode-Live-Share" class="headerlink" title="4.1 VSCode Live Share"></a>4.1 VSCode Live Share</h2><p>Live Share is an amazing feature offered by Microsoft. It’s not even share files, it’s also share folders and projects.</p>
<p>To begin with, install VS Live Share extension</p>
<p><img src="https://lh3.googleusercontent.com/o8pCg6t8GTje2dHSMWtpY2w8NDnUBn5bJwjLFt5FYlZQ-hG-Tqui1_0snN0_QEAAC5nNi7l0v7C2K4n7o6Op52-8VIihQ_npqYo2IzTcpvDQlatMwn3t7qzcaBylosda0bfRquUkCYG553lIi1xzmVVI63AbX00DEmpJIP3xWhEoxDUUOIFIu9WiJVsrIOKpSV4G2wKoJtT0UvVmSbi9KHEo_UW4_Q2vZu2zHNO3pxXOrov13GIwQpOjOQ9uEPnqlPglYJOomrFZJdP1bRlO9dwj1nBr_qs9xF81TIdiXxhhxahiI5rjkEnBZElHbTXbXNJ7giP4dKNRw_1bDC5fZ6Lkk4PIgDX6GYk6mfH0WH73rDzM-jMPRL0ndptmmQmgjws0n-EgZJNhxwO0otXNJb7_EMr228fyXNlD1qerjEKgAZ5MPGZX9TkQFBxW70Xf1hExD7cuXwJujbKVmjU7OMjFWfPu7TrrIlG6SrEOHe7--PgqmITPHjB0-wQcUmY6_UFZnMnLiievB2a2VybN3_wRxRilKG2uQch45zYc6799VttsI67EO-gPWgjB9PezI_BqKiOQomR_7GWr9gilcHlQmAYdMsV4c98tJ_0P-ZbLNDk3jLtxMqImCEgaW_YeQgUck5BqFjR3774FbdkWJMCs-w3j7KtkkJN4yCFZpS7qn9d0VF7OXPEPHNYYLKeoM4q9jI8_az31vLRhM_oBagul=w701-h383-no" alt="Live Share"></p>
<h2 id="4-2-Start-Collaboration"><a href="#4-2-Start-Collaboration" class="headerlink" title="4.2 Start Collaboration"></a>4.2 Start Collaboration</h2><p>After installation complete, a new feature appeared in VSCode</p>
<p>Click on that Live Share feature, then <code>Start collaboration session...</code></p>
<p><img src="https://lh3.googleusercontent.com/xsctwS3GAoe0nTciAGsYE5aYQE2sJq1Llq8YLukCJEMOU3LTiUXNxl7k2rao1d13MG5R7yQmQD4fpLGyLUM3vngH31TSobcA7yhh2raKIcXJDeFaaP3z3NZg8eTxe0nFr__AeriaZ2-3ULpPN7TKjd16AXgNe9px0M60uzyFR7iaGS6sGRsqVYZaVNdugMVzwjhsM-VmAFKFtohzxDn-wbjdqQyf9T-MmKE4Ze4Du-3K5uiQxblBOyvWiSelVXSnw4jvTZ8mu5L5LczGT4kwWGQ0aYFZ_wOAWtejpTk5Beek68vG5Km2eg-c2JK8zsOYN8EVxS4etwMtxTJ2b5wUCfhOl8ra_KC21AHqm5rHsMWM4QmKVkUjg6RneXLclNkQ1RcA3ntmInQcb3NRtLmEpA0-K58i25VrqPsTBWlpIfKarXbnSTRkpeu8IzOwBjqFLxJZWZuBLt4FhBS8Iln8f7EgZxgTynm9UudikU2B_gcwRBUebfXcFE9Y5g07hs7uhIz4ZddLU_eX7_Tpe4H0sGYgyxzjlWyb6sYODGEUQtTEE4VVzLwRA4TSoa6vef7Ek2jaUauOsbDzdT9niTydPp_AYPhZIbwn-8pQnqwfTx-5D5CJuAE4nvvFzCQJwTloIWfp9FyhUrziJztUaRTf8sJXX8pZv8BcgYxSgCqYVNFXD7HSDgmCJ-brXg1zkrPMKSRZSqzTAnz58tbV31IYw5g8=w656-h599-no" alt="start collaboration session"></p>
<p>It will open a new website that require you login with either Microsoft Account (outlook, hotmail, live) or GitHub Account.</p>
<p>For this tutorial, I will use my github account</p>
<p><img src="https://lh3.googleusercontent.com/mC6wby4g6KGGad9dFmNa9UeNer-lVYEn3QEEXqe16I-0IxBoRfnRs6T2sWt3rs0btagDKi1lgbXTKbiPOcqjTmR-_OiScKg6jp87kzVKq7RDTaZ_nd7-YGNVSnCQyl7W3HhVKJvpAcdXPpo5tMuKszkeM0kHHPnXzhNkOBTiGg3l4DyzM1w9CeIhydmwErvzgLzVfOJmosEsVPrwT8d-QT5RF9ZX01VyWmaaTcxZ725rB8iSBiAF4-T6RvwiHJB-vuSmqnioFNGjQ0llR79OfEupHrm2mPZQRqg5vGjfLTrYfP2CKJw0Qefrz_wyhFgPqJ6uMhlSnjxUY6NYZ2GQeTsdS_E4ZDm0isBFlqkd3CEJEG1WAr41ooNHPdAvH3KeeBxW9c4-BKFYubjyrodHJf5f4ub0kvhvk9Q1QqSvKftNNJhYfbXnkk_0t_sZAC5MZKgapuuXLapP0WfCv-pNP_HXXjYq4x55rCa8IBQe4c1JBFd3w6fBzULBLqCbvkfoxzXeCp039GJsqdggW4a3R2g1liyemGqmz_mgFvUYmszKM2cWesSv4HQJ4mKO1z26Rtaglj9F9POHJtNQJl55ByRvIffhJBmO_oHw8vkD_6FX1PYiY9kI4rKFg9JFsFwBDe_X3hoajxFUc4o-bsfiMztQd_LYn19Kd1DIg9Ci5p8jfIX4ECEG4u4scLO87LqA-88TzY-qkPSmsIX9bMLzcxAW=w676-h604-no" alt="github"></p>
<p>After authorized, Live Share will start working. You can paste the generated link for other users</p>
<p><img src="https://lh3.googleusercontent.com/WTCm3ZmcTIpKgebl1Hj6ktgKOyZVLUZa6tIAjZYK01AR0id4u2vIdbND2V7Yd6osWNFgClXDSbinESXDWVi3HT5qIIbsPJCaof6GYU9stanOWLb5LGfWD1Kwy8cqnj-q1DzBmA8UCEWgzsK-AYyA4xpl4ybhU2BEyNiS-yQKA4Jay2xXqAnFqaX4wmBPlwEePBFtJikIgiCDzPw75qKx0imDe8z9qqpADaM32cTokrXphiMM5P1tqK8yc-b4ITLd7EGkZpFuQ5QoLOVxOldmbMBmdxtoPuzJNvWBNC6KcPn_Cz8L3FwFVuw4o44jlOg2MJQh4E8FsDszh-3G5Q-9AxoiyDCvLSZMtOHYDqxyc8ApCZaVZy9CqBkDsaL627RIoUvQXE6Dgvr72O3_NDV6FfVxaHPZ1UnRtr5fqqeYrDrPRGQeUIxxfhpz7DFCy8hCuoB-USuKLUAJff3XkhEb6G35hV2jWeNaiQ3fMTikrn76gLqoU6cGZcdTRj0vT_1yHCInaB--ethRevpjISoCX8Dk6YxqY7OBk1kXM-RIO74GbMiWFhcrqkh6ul9kQMEw0RXOT60hd8ThCQtdfy3Q7gokH8bLEYHoOtXaGoBc3yhdBYMkT_nwvL3RYS2to0LBNGQqGJ6R_afekBr9gnkqKCeWUhnfg3XwVOzwLGglDYMqYQ1wERV17mNDvoAvKtps8N9HBIoGgNTmmuli1EYhAppY=w531-h435-no" alt="copy the link"></p>
<h2 id="4-3-Join-a-shared-collaboration-session"><a href="#4-3-Join-a-shared-collaboration-session" class="headerlink" title="4.3 Join a shared collaboration session"></a>4.3 Join a shared collaboration session</h2><p>If you are not the one who sharing, but the one who join, it’s even easier.</p>
<p>Open Live Share feature &gt; <code>Join collaboration session</code> &gt; Paste the link you have to the box appeared then press <code>Enter</code></p>
<p>If successful, it should be like this</p>
<p><img src="https://lh3.googleusercontent.com/lLtsGd3A741aHZVSpLIIJHvN4Z6Nd0j5G4osNktOxr2K0aB0U_UPUS-C3zs0py-mt9b5psaMIbGeiaXxdO6Z-zvvRDuFRwT2O018uXGX06UIGknCKgEvCEdJypiBrVr9tUGYvc8ndiFlB6QzsScQpxuQdKAhZ-o7vEnkwSYnHrSGvFKAKjWBkMJdr8ixn6T0Cm7_qL7tsq0dNiTdUatlqPN1fP2xFNZBSUCaHjujiz5EJxyoTqMMgJAEJ_Y746I3u566vsXQYkumdbHwTWdwivO4l9NSZW52Ux1OnCPpVMyK51AvvfB3Nr7-A-cRXlWXLG1QeHt5yh0ieW3xuHXGtcvsv6iKEtC9Llm9Foczd9e1kiIDQ2rBo5KluLQmTI_aP5fM9bjQFz7CP2gjDlqET-K-kUpxj-OuA6oRE_NJ-sVEIKf526sP7pxkusS97OsF-b_G6nJd7ncbpD-3POuDHoxaUNlPMRiJ9AaHoeGMBSE_zTnmSiN3zPw63Lo49YCPTxVpWRf9FUQsHlJL0XfwGOVDHHwkJcxhzbDPvlBCWfJ_Xhryn6QGBiFm-zm4nRWch_79rw5SWvmFPXkPHIaKxt1Cn2cD-Q8tPG5M3cy9HPVpjXSuQUuxDbNbtypjfbss_tYMVTvVwpcY2VX2whYpNniHoGzDfSt_0b-aa2Xz4wu20Sf7YvyFCQssGkKntXnHGs9PeVObQUg-Po1AgQvcueqa=w956-h595-no" alt="join collaboration session"></p>
<h2 id="4-4-Live-Share-Maximum-collaborators"><a href="#4-4-Live-Share-Maximum-collaborators" class="headerlink" title="4.4 Live Share Maximum collaborators"></a>4.4 Live Share Maximum collaborators</h2><p>The short answer: 5</p>
<p>For more information on when/how you can increase this number can be found here: <a href="https://github.com/MicrosoftDocs/live-share/releases/tag/0.3.788">https://github.com/MicrosoftDocs/live-share/releases/tag/0.3.788</a></p>
]]></content>
      <categories>
        <category>Others</category>
      </categories>
  </entry>
  <entry>
    <title>[Travel] - Transportation in Europe</title>
    <url>/2019/05/01/transportation-in-europe/</url>
    <content><![CDATA[<p>Nếu bạn có dư dả thời gian và nguồn kinh phí eo hẹp, thì cách tốt nhất để dạo vòng quanh các nước EU chính là các phương tiện công cộng.</p>
<span id="more"></span>
<ul>
<li><a href="#1-airplane">1. Airplane</a><ul>
<li>  <a href="#11-canh-v%C3%A9">1.1. Canh vé</a></li>
<li>  <a href="#12-b%E1%BA%A3o-hi%E1%BB%83m-thanh-to%C3%A1n">1.2. Bảo hiểm thanh toán</a></li>
<li>  <a href="#13-delay">1.3. Delay</a></li>
</ul>
</li>
<li><a href="#2-train-v%C3%A0-bus">2. Train và Bus</a><ul>
<li>  <a href="#21-t%C3%ACm-%C4%91%C6%B0%E1%BB%9Dng">2.1. Tìm đường</a></li>
<li><a href="#22-%C4%91%E1%BB%8Dc-k%E1%BA%BFt-qu%E1%BA%A3">2.2. Đọc kết quả</a><ul>
<li>  <a href="#221-sophia---antibes-france">2.2.1. Sophia - Antibes, France</a></li>
<li>  <a href="#222-nice-france">2.2.2. Nice, France</a></li>
<li>  <a href="#223-salzburg-austria">2.2.3. Salzburg, Austria</a></li>
<li>  <a href="#224-paris-france">2.2.4. Paris, France</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#3-x%C3%A0i-google-map">3. Xài google map</a><ul>
<li>  <a href="#31-double-check">3.1. Double check</a></li>
<li>  <a href="#32-%C4%91em-s%E1%BA%A1c-d%E1%BB%B1-ph%C3%B2ng">3.2. Đem sạc dự phòng</a></li>
<li>  <a href="#33-bus-route">3.3. Bus route</a></li>
</ul>
</li>
</ul>
<h1 id="1-Airplane"><a href="#1-Airplane" class="headerlink" title="1. Airplane"></a>1. Airplane</h1><p>Từ VN sang thì chắc là phải đi máy bay rồi. Có hãng rẻ và có hãng mắc, nhưng cũng có hãng rẻ nhưng xịn.</p>
<h2 id="1-1-Canh-ve"><a href="#1-1-Canh-ve" class="headerlink" title="1.1. Canh vé"></a>1.1. Canh vé</h2><p>Không giống với các loại vé 0đ của Jet Star hay VietJet, giá vé bay xuyên lục địa sẽ lên xuống theo một chu kỳ nào đó. Mình khuyên nên canh vé trước khi lên lịch chuyến đi.</p>
<p>Các website tin cậy mình hay dùng để so sánh giá giữa các hãng với nhau là <a href="https://www.skyscanner.com.vn/">SkyScanner</a> và <a href="https://www.google.com/flights">Google Flights</a>. Bạn có thể canh giá một chuyến cụ thể. Thời gian dư dả càng nhiều (tháng), thì cơ hội mua được vé rẻ của bạn càng cao.</p>
<blockquote>
<p>Tips: Khi check-in online, bạn có thể chọn ghế thoải mái nhất cho mình ở trang <a href="https://seatguru.com/">SeatGuru</a></p>
</blockquote>
<h2 id="1-2-Bao-hiem-thanh-toan"><a href="#1-2-Bao-hiem-thanh-toan" class="headerlink" title="1.2. Bảo hiểm thanh toán"></a>1.2. Bảo hiểm thanh toán</h2><p>Một số hãng bay giá rẻ thường có nguy cơ…phá sản. Nếu bạn thanh toán bằng thẻ tín dụng, thì nên kiểm tra xem trong số các benefit của thẻ có bảo hiểm thanh toán không. Nếu có, bạn có thể được hoàn tiền hoặc bồi thường khi có vấn đề xảy ra với chuyến bay của bạn. Nếu trường hợp này xảy ra, hãy liên hệ với hãng bay + ngân hàng phát hành thẻ của bạn sớm nhất có thể.</p>
<p>Một ví dụ về hãng bay phá sản</p>
<p><img src="https://i.imgur.com/zAiYOQC.png" alt="bankrupt airlines"></p>
<h2 id="1-3-Delay"><a href="#1-3-Delay" class="headerlink" title="1.3. Delay"></a>1.3. Delay</h2><p>Ở EU có luật: nếu chuyến bay trong EU bị delay quá 2 tiếng, hãng bay sẽ phải bồi thường cho bạn từ 200e đến 600e</p>
<p>Bạn có thể tham khảo thêm tại <a href="https://europa.eu/youreurope/citizens/travel/passenger-rights/air/index_en.htm">đây</a></p>
<h1 id="2-Train-va-Bus"><a href="#2-Train-va-Bus" class="headerlink" title="2. Train và Bus"></a>2. Train và Bus</h1><p>Đối với mỗi thành phố sẽ có hệ thống bus và metro riêng. Nhiều nơi có nhiều hệ thống cùng hoạt động đan xen (như Paris chẳng hạn). Để tìm ra phương tiện phù hợp, mình thường tìm đường bằng google map.</p>
<h2 id="2-1-Tim-duong"><a href="#2-1-Tim-duong" class="headerlink" title="2.1. Tìm đường"></a>2.1. Tìm đường</h2><p>Ví dụ: để tìm đường từ <code>Orly Airport</code> về <code>5 Rue Jean-Jacques Rousseau</code></p>
<p><img src="https://i.imgur.com/quxyTUC.jpg" alt="google map routes"></p>
<h2 id="2-2-Doc-ket-qua"><a href="#2-2-Doc-ket-qua" class="headerlink" title="2.2. Đọc kết quả"></a>2.2. Đọc kết quả</h2><p>Có tới 4 kết quả trong hình, chọn cái nào?</p>
<p>Tới đây thì kinh nghiệm cá nhân của bạn sẽ có chỗ sử dụng. Nếu bạn chưa đi bất kỳ cái nào, thì bạn phải research một chút rồi.</p>
<p>Trong hình, bạn có thể thấy có nhiều hệ thống khác nhau</p>
<ul>
<li>  M: Metro - hệ thống tàu điện ngầm chạy dưới lòng paris</li>
<li>  RER: “Express” train: hệ thống tàu (có ngầm và có chạy trên đường ray mặt đất) “tốc hành” của paris (dù nó ghi tốc hành nhưng rất thường xuyên bị delay).</li>
<li>  OrlyBus: Hệ thống bus đi từ sân bay Orly</li>
<li>  OrlyVal: Tàu điện tốc hành đi từ các trạm cố định tới sân bay và ngược lại</li>
</ul>
<p>Thường thì các phương tiện công cộng ở EU sẽ có những cái máy bán vé tự động đặt ở các trạm lớn. Với mỗi hệ thống sẽ có các quy định riêng. Sau đây là kinh nghiệm của mình.</p>
<h3 id="2-2-1-Sophia-Antibes-France"><a href="#2-2-1-Sophia-Antibes-France" class="headerlink" title="2.2.1. Sophia - Antibes, France"></a>2.2.1. Sophia - Antibes, France</h3><p>Ở Sophia, hệ thống bus là <code>EnviBus</code> màu hồng chói lóa.</p>
<p>Ticket có thể mua theo block 10 vé hoặc 7 ngày. Tham khảo thêm tại <a href="http://www.envibus.fr/en/the-best-pass/type-of-ticket/all.html#menu_tarifs">EnviBus All tickets</a></p>
<p>Ticket khi validate sẽ có giá trị theo thời gian. Bạn có thể dùng lại ticket đó đi bất kỳ chuyến bus nào của envibus trong vòng 60 phút.</p>
<p>Mua vé tại chỗ trên xe thì 1.5 e. Mua trước thì 1 e, mua block 10 vé thì còn 8 e.</p>
<h3 id="2-2-2-Nice-France"><a href="#2-2-2-Nice-France" class="headerlink" title="2.2.2. Nice, France"></a>2.2.2. Nice, France</h3><p>Tương tự, hệ thống bus ở Nice cũng có bán vé 1 ngày, có thể đi được Tram, Bus, Créabus</p>
<p><img src="https://i.imgur.com/grSNKKU.jpg" alt="nice bus ticket"></p>
<h3 id="2-2-3-Salzburg-Austria"><a href="#2-2-3-Salzburg-Austria" class="headerlink" title="2.2.3. Salzburg, Austria"></a>2.2.3. Salzburg, Austria</h3><p>Ở Salzburg (hay là ở Austria nói chung thì mình ko rõ), hệ thống tàu rất phát triển. Thậm chí đi từ Vienna về Salzburg cũng có thể đi bằng tàu. Tới nỗi sân bay Salzburg nó vắng hoe, cả năm chưa đón tới 2 triệu lượt khách.</p>
<p>Vé bus ở Salzburg cũng có nhiều dạng, tương ứng với nhiều mức di chuyển khác nhau. Mình thường mua 24-hours pass giá 4 e (đi được tất cả các chuyến bus trong 24h kể từ lúc validate).</p>
<p>Ở đây thì giá vé ticket lại dựa trên tình trạng của bạn (trẻ em, người già, học sinh sinh viên)</p>
<p>Người trưởng thành thì phải mua vé <code>Full Fair</code>.</p>
<p><img src="https://i.imgur.com/slEMFzv.png" alt="24 hours full fair"></p>
<p>Vé xe bus ở Salzburg có dải chỉ óng ánh</p>
<p><strong>Đi Hallstatt từ Salzburg</strong></p>
<p>Có nhiều cách đi tới Hallstatt. Mình đi bus &gt; train &gt; ferry</p>
<ol>
<li> Bus 150 từ Salzburg Central Train station &gt; Bad Ischl</li>
<li> Train từ Bad Ischl tới Hallstat Bahnhof</li>
<li> Đi phà từ Hallstatt Bahnhof tới làng cổ</li>
</ol>
<h3 id="2-2-4-Paris-France"><a href="#2-2-4-Paris-France" class="headerlink" title="2.2.4. Paris, France"></a>2.2.4. Paris, France</h3><p>Paris <em>bị</em> chia thành 5 zone khác nhau. Trung tâm nằm ở zone 1. Đối với các loại vé, bạn phải chọn zone phù hợp. Cái này không hiển thị trên google map.</p>
<p>Điều khủng khiếp là Orly Airport (sân bay nội địa ở Paris) nằm ở zone 4, sân bay Charle de Gaulle (sân bay quốc tế) nằm ở zone 5.</p>
<p>Nếu bạn mua vé tại sân bay Orly, thì chỉ mua được vé bus cho zone 1-4 (không chọn được zone thấp hơn)</p>
<p>Vé orlyval giá rất chát. Mình thường mua vé 1 day pass cho hệ thống RATP (đi được Orly, OrlyBus, RER, Metro) zone 1-4. Khi cần ra sân bay Charle de Gaulle, may là máy bán vé tự động có bán vé tới tận sân bay (Airport ticket), mà giá tới 10.3 e (đã có thuế).</p>
<p><img src="https://i.imgur.com/kEABoXg.png" alt="paris bus ticket"></p>
<p>RER B tới Charle de Gaulle bị delay tại mỗi trạm rất dữ dội.</p>
<p>Đó là các kinh nghiệm xương máu mình rút ra được sau khi bị phạt 35e vì mua vé đi không đúng zone ;(</p>
<h1 id="3-Xai-google-map"><a href="#3-Xai-google-map" class="headerlink" title="3. Xài google map"></a>3. Xài google map</h1><h2 id="3-1-Double-check"><a href="#3-1-Double-check" class="headerlink" title="3.1. Double check"></a>3.1. Double check</h2><p>Đôi khi google map suggest cho bạn một con đường xa hơn, dài hơn và đắt hơn (ví dụ như đi từ Salzburg tới Hallstatt)</p>
<p>Mình từng đứng ngay trạm metro ở Châtelet - Les Halles để đi tới Charle de Gaulle và thử refresh kết quả thì nó lại suggest một tuyến đường hoàn toàn khác.</p>
<p>Nguyên nhân có thể do bạn mất sóng, mất GPS, hoặc thuật toán chưa đủ thông minh.</p>
<h2 id="3-2-Dem-sac-du-phong"><a href="#3-2-Dem-sac-du-phong" class="headerlink" title="3.2. Đem sạc dự phòng"></a>3.2. Đem sạc dự phòng</h2><p>Google map trong chế độ track theo đường đi nó rất tốn pin. Vậy nên thường mình ko bấm start tracking, mà chỉ xem trạm cuối cùng ở đâu, rồi để ý thông báo trên bus - train, lúc gần tới thì bật map lên check thôi.</p>
<h2 id="3-3-Bus-route"><a href="#3-3-Bus-route" class="headerlink" title="3.3. Bus route"></a>3.3. Bus route</h2><p>Bus route trên google map nó ko khớp hoàn toàn với đường đi thực tế của bus. Nó chỉ trùng trạm dừng (mà đôi khi cũng ko trùng nữa)</p>
]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>bus</tag>
        <tag>europe</tag>
        <tag>train</tag>
        <tag>travel</tag>
      </tags>
  </entry>
  <entry>
    <title>[Machine Learning] - 3.1 - Classification and Representation</title>
    <url>/2019/05/14/machine-learning-1-3-classification-and-representation/</url>
    <content><![CDATA[<p>Tuần 3 trong course Machine Learning của giáo sư Andrew Ng trên Coursera.</p>
<span id="more"></span>
<ul>
<li><a href="#1-classification-and-representation">1. Classification and Representation</a><ul>
<li>  <a href="#11-sigmoid-function-or-logistic-function">1.1. Sigmoid Function or Logistic Function</a></li>
<li>  <a href="#12-decision-boundary">1.2. Decision Boundary</a></li>
</ul>
</li>
<li>  <a href="#2-v%C3%AD-d%E1%BB%A5">2. Ví dụ</a></li>
</ul>
<h1 id="1-Classification-and-Representation"><a href="#1-Classification-and-Representation" class="headerlink" title="1. Classification and Representation"></a><strong>1. Classification and Representation</strong></h1><h2 id="1-1-Sigmoid-Function-or-Logistic-Function"><a href="#1-1-Sigmoid-Function-or-Logistic-Function" class="headerlink" title="1.1. Sigmoid Function or Logistic Function"></a><strong>1.1. Sigmoid Function or Logistic Function</strong></h2><p>Trong bài toán phân loại (classification), mặc dù ta có thể tiếp cận nó bằng các thuật toán linear regression đã biết bằng cách tạm thời quên đi giá trị của y chỉ có thể là 0 hoặc 1.Cách tiếp cận này có vẻ không được tốt cho lắm. Giá trị của $latex h_0(x)$ phải nằm trong khoảng từ 0 tới 1.</p>
<p>Để giải quyết vấn đề này, ta sẽ biến đổi hàm hypotheses $latex h_0(x)$ để thỏa điều kiện $latex 0&lt;=h_\theta(x)&lt;=1$.Ta sẽ <em>nhét</em> $latex \theta^Tx$ vào Logistic Function:</p>
<p>$latex h_\theta (x) = g ( \theta^T x )$<br>$latex z = \theta^T x$<br>$latex g(z) = \dfrac{1}{1 + e^{-z}}$ </p>
<p>biểu thức trên có biểu diễn đồ thị như sau:</p>
<p><img src="https://i.imgur.com/9IHlEt9.png"></p>
<p>Function g(z) có thể biểu diễn bất kỳ số thực nào nằm trong khoảng từ 0 đến 1.$latex h_\theta(x)$ cho chúng ta xác suất kết quả = 1. Ví dụ như nếu $latex h_\theta(x) = 0.7$ có nghĩa là xác suất kết quả = 1 là 70%. Ngược lại, xác xuất kết quả = 0 là 30% (vì output chỉ có thể có 2 giá trị là 0 và 1).</p>
<p>$latex h_\theta(x) = P(y=1 | x ; \theta) = 1 - P(y=0 | x ; \theta)$<br>$latex P(y = 0 | x;\theta) + P(y = 1 | x ; \theta) = 1$ </p>
<h2 id="1-2-Decision-Boundary"><a href="#1-2-Decision-Boundary" class="headerlink" title="1.2. Decision Boundary"></a><strong>1.2. Decision Boundary</strong></h2><p>Dựa vào Logistic function ở trên, ta có thể `biến đổi` hàm hypothesis của ta lại thành như sau:</p>
<p> $latex h_\theta(x) \geq 0.5 \Rightarrow y = 1$<br> $latex h_\theta(x) &lt; 0.5 \Rightarrow y = 0$ </p>
<p>Function g(z) hoạt động như sau:</p>
<p>$latex g(z) \geq 0.5$<br>when<br>$latex z \geq 0$ </p>
<p>Nhớ rằng:</p>
<p>$latex z=0, e^{0}=1 \Rightarrow g(z)=1/2$<br>$latex z \to \infty, e^{-\infty} \to 0 \Rightarrow g(z)=1$<br>$latex z \to -\infty, e^{\infty}\to \infty \Rightarrow g(z)=0$ </p>
<p>Như vậy, ta có thể viết:</p>
<p>$latex h_\theta(x) = g(\theta^T x) \geq 0.5$<br>when<br>$latex \theta^T x \geq 0$ </p>
<p>Từ những phát biểu trên, ta có thể viết</p>
<p>$latex \theta^T x \geq 0 \Rightarrow y = 1$<br>$latex \theta^T x &lt; 0 \Rightarrow y = 0$ </p>
<p><strong>Decision Boundary</strong> chính là đường phân chia vùng y = 0 và vùng y = 1, được tạo ra bởi hàm hypothesis của chúng ta</p>
<h1 id="2-Vi-du"><a href="#2-Vi-du" class="headerlink" title="2. Ví dụ"></a><strong>2. Ví dụ</strong></h1><p>Ta có ví dụ sau:</p>
<p>$latex \theta = \begin{bmatrix}5\\ -1\\ 0\end{bmatrix}$<br>$latex y = 1 \; if \; 5 + (-1) x_1 + 0 x_2 \geq 0$<br>$latex 5 - x_1 \geq 0$<br>$latex - x_1 \geq -5$<br>$latex x_1 \leq 5$ </p>
<p>vậy đồ thị của chúng ta sẽ giống như sau</p>
<p><img src="https://i.imgur.com/VNSdsHL.png"></p>
<p>Lưu ý rằng tùy vào hàm hypothesis và các tham số theta, hình dáng boudary line có thể thay đổi tương ứng</p>
]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
  </entry>
  <entry>
    <title>Machine Learning Title block</title>
    <url>/2019/05/15/machine-learning-title-block/</url>
    <content><![CDATA[<p>Xem các bài viết khác tại <a href="https://huntertran.com/machine-learning-course/">Machine Learning Course Structure</a></p>
]]></content>
      <categories>
        <category>uncategorized</category>
      </categories>
  </entry>
  <entry>
    <title>[Research] - Gecko Dom Logging system</title>
    <url>/2019/06/14/gecko-dom-logging-system/</url>
    <content><![CDATA[<p>The purpose of this documentation is to record all the findings and my progress while exploring Firefox source code, in order to log how many time a DOM API is called when visit a single website, or multiple common website.</p>
<p>This require a deep modification in Firefox’s implementation of DOM API.</p>
<span id="more"></span>
<ul>
<li>  <a href="#1-setup-and-initialization">1. Setup and initialization</a></li>
<li><a href="#2-source-code-structure">2. Source code structure</a><ul>
<li>  <a href="#21-built-in-extensions">2.1. Built-in extensions</a></li>
<li>  <a href="#22-javascript-engine-spidermonkey">2.2. JavaScript Engine (SpiderMonkey)</a></li>
</ul>
</li>
<li><a href="#3-understanding-dom">3. Understanding DOM</a><ul>
<li><a href="#31-dom-levels">3.1. DOM Levels</a><ul>
<li>  <a href="#311-dom-level-1">3.1.1. DOM Level 1</a></li>
<li>  <a href="#312-dom-level-2">3.1.2. DOM Level 2</a></li>
<li>  <a href="#313-dom-level-3">3.1.3. DOM Level 3</a></li>
</ul>
</li>
<li><a href="#32-shadow-dom-and-virtual-dom">3.2. Shadow DOM and Virtual DOM</a><ul>
<li>  <a href="#321-shadow-dom">3.2.1. Shadow DOM</a></li>
<li>  <a href="#322-virtual-dom">3.2.2. Virtual DOM</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#4-modifying-firefoxs-dom-method-implementation">4. Modifying Firefox’s DOM method implementation</a><ul>
<li>  <a href="#41-logging-framework">4.1. Logging Framework</a></li>
<li>  <a href="#42-analyze">4.2. Analyze</a></li>
</ul>
</li>
<li><a href="#5-development">5. Development</a><ul>
<li>  <a href="#51-design-solution">5.1. Design solution</a></li>
<li>  <a href="#52-firefox-integration">5.2. Firefox integration</a></li>
</ul>
</li>
</ul>
<h1 id="1-Setup-and-Initialization"><a href="#1-Setup-and-Initialization" class="headerlink" title="1. Setup and Initialization"></a>1. Setup and Initialization</h1><p>In short, to get the latest version of Firefox source code, one could follow the official instruction on <a href="https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Build_Instructions/Windows_Prerequisites">Building Firefox for Windows</a></p>
<blockquote>
<p>One small modification in which will decrease the time needed to build the source code: You will not need the “Game development with C++” while installing/modifying Visual Studio 2019</p>
</blockquote>
<h1 id="2-Source-code-structure"><a href="#2-Source-code-structure" class="headerlink" title="2. Source code structure"></a>2. Source code structure</h1><p>Mozilla use Gecko to render web content.</p>
<blockquote>
<p>More than that, Gecko is also used to render the firefox user interface.</p>
<p>On Windows, Gecko use Microsoft COM, on other platforms, Gecko use XPCOM to render user interface.</p>
</blockquote>
<p>The whole source code is mentioned as Gecko, and mirrored in <a href="https://github.com/mozilla/gecko-dev">Mozilla’s Github Repository</a></p>
<h2 id="2-1-Built-in-extensions"><a href="#2-1-Built-in-extensions" class="headerlink" title="2.1. Built-in extensions"></a>2.1. Built-in extensions</h2><p>Firefox contains 2 built-in extension: PDF.js and Shumway.</p>
<ul>
<li>  <a href="https://github.com/mozilla/pdf.js">PDF.js</a>: To open and read PDF files inside firefox, without opening another software</li>
<li>  <a href="https://github.com/mozilla/shumway">Shumway</a>: provide a way to render swf (Shock Wave Flash) file, which is quite popular in older websites to display animations, game, effects. These files has been replaced with HTML5, and considered as a security vulnerable in modern websites.</li>
</ul>
<h2 id="2-2-JavaScript-Engine-SpiderMonkey"><a href="#2-2-JavaScript-Engine-SpiderMonkey" class="headerlink" title="2.2. JavaScript Engine (SpiderMonkey)"></a>2.2. JavaScript Engine (SpiderMonkey)</h2><p>Located in <code>js\src</code>, the Firefox’s JavaScript Engine is called SpiderMonkey, and is in active development at <a href="https://hg.mozilla.org/mozilla-central/file/tip/js/src">mozilla-central/file/tip/js/src</a></p>
<blockquote>
<p>Beside the interpreter, SpiderMonkey contains a compiler , a garbage collector and a Just-in-time compiler.</p>
</blockquote>
<h1 id="3-Understanding-DOM"><a href="#3-Understanding-DOM" class="headerlink" title="3. Understanding DOM"></a>3. Understanding DOM</h1><p>DOM stands for Document Object Model. To understand what DOM is, first we need to understand the basic of a website</p>
<p>Websites are a combination of HTML, CSS and Javascript. HTML is a structured documents, and can be mapped by using a tree structure, starting with <code>html</code> tag as root.</p>
<blockquote>
<p>The DOM represents a document with a logical tree. Each branch of the tree ends in a node, and each node contains objects. DOM methods allow programmatic access to the tree; with them you can change the document’s structure, style, or content. Nodes can also have event handlers attached to them; once an event is triggered, the event handlers get executed.</p>
<p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model">Document Object Model - Mozilla Developer Docs</a></p>
</blockquote>
<h2 id="3-1-DOM-Levels"><a href="#3-1-DOM-Levels" class="headerlink" title="3.1. DOM Levels"></a>3.1. DOM Levels</h2><p>Document Object Model API is implemented in level. The lower the level, the more basic and simple functions it defined. Currently there are 3 levels, which are mostly implemented by all modern browsers (Partly implemented for Level 3)</p>
<h3 id="3-1-1-DOM-Level-1"><a href="#3-1-1-DOM-Level-1" class="headerlink" title="3.1.1. DOM Level 1"></a>3.1.1. DOM Level 1</h3><p>Provide interface to represent any structured document, as well as accessing and manipulating nodes.</p>
<p>In level 1, DOM also define extended interfaces that counted as part of the specification, but not necessary for a HTML-only implementation of DOM specification.</p>
<blockquote>
<p>The <code>getElementsByTagName</code> method is defined in level DOM 1 specification.</p>
</blockquote>
<h3 id="3-1-2-DOM-Level-2"><a href="#3-1-2-DOM-Level-2" class="headerlink" title="3.1.2. DOM Level 2"></a>3.1.2. DOM Level 2</h3><p>Provide 6 separated specifications:</p>
<ul>
<li>  Core: Extend the functionalities of Level 1.</li>
<li>  Views: Allows programs and scripts to dynamically access and update the content of a representation of a document.</li>
<li>  Events: Define basic of event system, including the concept of event flow, listening, bubbling, cancellation.</li>
<li>  Styles: Access and update stylesheet.</li>
<li>  Traversal and Range: Allow programs and scripts to dynamically walk-through and identify a range of contents in a document, as well as creation, insertion, modification and deletion of a range of contents.</li>
<li>  HTML: Extend the interfaces defined in Level 1, using the Core level 2 possibilities.</li>
</ul>
<p>Most of the famous JavaScripts functions are defined in level 2</p>
<ul>
<li>  <code>getElementById</code> in <strong>Core</strong></li>
<li>  <code>addEventListener</code> and <code>handleEvent</code> in <strong>Events</strong></li>
<li>  <code>getComputedStyle</code> in <strong>Styles</strong></li>
<li>  <code>NodeIterator</code> and <code>TreeWalker</code> in <strong>Traversal and Range</strong></li>
<li>  <code>contentDocument</code> property in <strong>HTML</strong></li>
</ul>
<h3 id="3-1-3-DOM-Level-3"><a href="#3-1-3-DOM-Level-3" class="headerlink" title="3.1.3. DOM Level 3"></a>3.1.3. DOM Level 3</h3><p>Unlike level 1 and 2, only a few methods and properties in DOM level 3 are supported. Level 3 provide advanced functionalities to manipulate DOM and XML. Firefox divide DOM Level 3 in 5 separated part, with different level of support</p>
<ul>
<li>  Core: Only a few methods and properties are supported.</li>
<li>  Load and Save: dynamically load XML documents into DOM or serialize DOM to XML docs. None supported</li>
<li>  Validation: Update content and ensure validity. Firefox not support this interface</li>
<li>  Events: Keyboard events and how to handle them. Partly supported.</li>
<li>  XPath: Simple functionalities to access DOM tree using XPath.</li>
</ul>
<h2 id="3-2-Shadow-DOM-and-Virtual-DOM"><a href="#3-2-Shadow-DOM-and-Virtual-DOM" class="headerlink" title="3.2. Shadow DOM and Virtual DOM"></a>3.2. Shadow DOM and Virtual DOM</h2><h3 id="3-2-1-Shadow-DOM"><a href="#3-2-1-Shadow-DOM" class="headerlink" title="3.2.1. Shadow DOM"></a>3.2.1. Shadow DOM</h3><p>Shadow DOM is an complete dom tree hidden inside an dom node. All the markups, structures, styles or behaviors are separated from actual/normal dom. The reason for this concept is to develop low level web components that will have default user interface/behaviors across websites (e.g <code>&lt;video&gt;&lt;/video&gt;</code> tag with default control buttons provided by browsers)</p>
<h3 id="3-2-2-Virtual-DOM"><a href="#3-2-2-Virtual-DOM" class="headerlink" title="3.2.2. Virtual DOM"></a>3.2.2. Virtual DOM</h3><p>In short, Virtual DOM is an abstraction of DOM. It represent for a small subset of DOM, and update the actual DOM accordingly. Virtual DOM is implemented not by browsers, but by high level javascript libraries (eg React, asm-dom, etc)</p>
<p>Virtual DOM libraries compare changed nodes with actual node in DOM tree. If there are differences, it will update the actual DOM. By optimizing the comparison algorithm, it can perform extremely fast since it does not need to search the whole DOM tree for nodes and properties.</p>
<h1 id="4-Modifying-Firefox’s-DOM-method-implementation"><a href="#4-Modifying-Firefox’s-DOM-method-implementation" class="headerlink" title="4. Modifying Firefox’s DOM method implementation"></a>4. Modifying Firefox’s DOM method implementation</h1><h2 id="4-1-Logging-Framework"><a href="#4-1-Logging-Framework" class="headerlink" title="4.1. Logging Framework"></a>4.1. Logging Framework</h2><p>Firefox provide a “simple” logging service, located at <code>dom\accessible\Logging.h</code> (header file). This is recommended way to log anything to Firefox’s browser console.</p>
<p>To use it, you need to do the following:</p>
<p>#include “mozilla/Logging.h”<br>static mozilla::LazyLogModule sFooLog(“foo”);</p>
<p>LazyLogModule will be initialized safely, even if the current class is already initialize an instance of LazyLogModule.</p>
<p>Later, using these method appropriately to log:</p>
<p>from <a href="https://developer.mozilla.org/en-US/docs/Mozilla/Developer/_guide/Gecko/_Logging">https://developer.mozilla.org/en-US/docs/Mozilla/Developer\_guide/Gecko\_Logging</a></p>
<p>Name</p>
<p>Description</p>
<p>MOZ_LOG(module, level, message)</p>
<p>Outputs the given message if the module has the given log level enabled.<br>+ module - The log module to use.<br>+ level - The log level of the message.<br>+ message - A printf-style message to output. Must be enclosed in parentheses.</p>
<p>MOZ_LOG_TEST(module, level)</p>
<p>Checks if the module has the given level enabled.<br>+ module - The log module to use.<br>+ level - The output level of the message.</p>
<h2 id="4-2-Analyze"><a href="#4-2-Analyze" class="headerlink" title="4.2. Analyze"></a>4.2. Analyze</h2><p>The requirement for my project is simple: To know how many time a dom method is called (for a specific website, and average for a set of common website)</p>
<p>In fact, I cannot use Firefox own logging framework, because of these problems:</p>
<ol>
<li> Gecko source code is full of old logs and developer notes.</li>
<li> Each log must provide a log level, which is not applicable for my project.</li>
<li> Cannot count the logged text without writing another piece of tool.</li>
</ol>
<p>Example of old logs and developer notes from <code>mozilla-central\dom\base\nsINode.cpp</code>, <a href="https://dxr.mozilla.org/mozilla-central/rev/4a63f0a3a1f26e2a377ffbd477ba050e16577445/dom/base/nsINode.cpp#2585">line 2585 to line 2609</a></p>
<p>Element* nsINode::GetElementById(const nsAString&amp; aId) {<br>  MOZ_ASSERT(!IsShadowRoot(), “Should use the faster version”);<br>  MOZ_ASSERT(IsElement() || IsDocumentFragment(),<br>             “Bogus this object for GetElementById call”);<br>  if (IsInUncomposedDoc()) {<br>    MOZ_ASSERT(IsElement(), “Huh? A fragment in a document?”);<br>    return FindMatchingElementWithId(aId, *AsElement(), *OwnerDoc());<br>  }</p>
<p>  if (ShadowRoot* containingShadow = AsContent()-&gt;GetContainingShadow()) {<br>    MOZ_ASSERT(IsElement(), “Huh? A fragment in a ShadowRoot?”);<br>    return FindMatchingElementWithId(aId, *AsElement(), *containingShadow);<br>  }</p>
<p>  for (nsIContent* kid = GetFirstChild(); kid; kid = kid-&gt;GetNextNode(this)) {<br>    if (!kid-&gt;IsElement()) {<br>      continue;<br>    }<br>    nsAtom* id = kid-&gt;AsElement()-&gt;GetID();<br>    if (id &amp;&amp; id-&gt;Equals(aId)) {<br>      return kid-&gt;AsElement();<br>    }<br>  }<br>  return nullptr;<br>}</p>
<h1 id="5-Development"><a href="#5-Development" class="headerlink" title="5. Development"></a>5. Development</h1><h2 id="5-1-Design-solution"><a href="#5-1-Design-solution" class="headerlink" title="5.1. Design solution"></a>5.1. Design solution</h2><p>My solution is simple. Log into an array, then count for each time a function name is repeated.</p>
<p>First, I created a class to hold each record</p>
<p>class DomLogNode<br>{<br>public:<br>    DomLogNode();</p>
<pre><code>void setNode(string name, int count);
int increaseCount();
bool compareName(string nameToCompare);
int getCount();
string getName();
</code></pre>
<p>private:<br>    string functionName;<br>    int count;<br>};</p>
<p>Then, I created another class to hold the list of record. This class is static</p>
<p>static class DomLog<br>{<br>public:<br>    void recordLog(string functionName);<br>    void pushNewName(string functionName, int initialCount = 1);<br>    void getDomLogs();<br>    void exportFile(string path);</p>
<p>private:<br>    vector<DomLogNode> domLogs;<br>} domLog;</p>
<p>Method <code>exportFile(string path)</code> write the list to a csv file, using simple c++ file library.</p>
<p><strong>Get the caller method name</strong><br>In cpp, to get the current method name, we can use the static variable <code>__func__</code> as stated here: <a href="https://docs.microsoft.com/en-us/cpp/cpp/func">https://docs.microsoft.com/en-us/cpp/cpp/func</a></p>
<blockquote>
<p>You can get the whole source code at my Github <a href="https://github.com/huntertran/gecko-dom-log.git">repository</a></p>
</blockquote>
<h2 id="5-2-Firefox-integration"><a href="#5-2-Firefox-integration" class="headerlink" title="5.2. Firefox integration"></a>5.2. Firefox integration</h2><p>Unfortunately, the Firefox source code system (using mercurial source control) is buggy lately. It close the connection way before the clone process finished.</p>
<p>Firefox implement DOM API all over the source code. For example, the API <code>getElementById</code> is implemented in 3 different places:</p>
<ul>
<li>  <code>dom\base\AnonymousContent.h</code> with corresponding implementation</li>
<li>  <code>dom\base\DocumentOrShadowRoot.h</code> with corresponding implementation</li>
<li>  <code>dom\base\nsINode.h</code> with corresponding implementation</li>
</ul>
<p>The method inside <code>nsdINode</code> have a comment</p>
<p>// Document and ShadowRoot override this with its own (faster) version.<br>// This should really only be called for elements and document fragments.</p>
<p>This mean, to correctly record how many time the GetElementById is called, we have to modify the code of all 3 methods.</p>
<p>domLog.recordLog(__func__);</p>
<p>This quickly getting out of hand, since there are hundreds of DOM API we need to log, and I am still looking for another solution.</p>
]]></content>
      <categories>
        <category>CPlusPlus</category>
      </categories>
      <tags>
        <tag>firefox</tag>
        <tag>DOM API</tag>
        <tag>Log</tag>
      </tags>
  </entry>
  <entry>
    <title>[Machine Learning] - 3.2 - Logistic Regression Model</title>
    <url>/2019/06/15/machine-learning-3-2-logistic-regression-model/</url>
    <content><![CDATA[<p>Bài thứ 2 trong tuần 3 của khóa học Machine Learning của giáo sư Andrew Ng</p>
<span id="more"></span>
<ul>
<li><a href="#1-cost-function-for-logistic-regression">1. Cost Function for Logistic Regression</a><ul>
<li>  <a href="#11-c%C3%B4ng-th%E1%BB%A9c">1.1. Công thức</a></li>
<li>  <a href="#12-%C4%91%E1%BB%93-th%E1%BB%8B">1.2. Đồ thị</a></li>
<li>  <a href="#13-k%E1%BA%BFt-lu%E1%BA%ADn">1.3. Kết luận</a></li>
</ul>
</li>
<li><a href="#2-%C4%91%C6%A1n-gi%E1%BA%A3n-h%C3%B3a-cost-function-v%C3%A0-%C3%A1p-d%E1%BB%A5ng-gradient-descent">2. Đơn giản hóa Cost Function và áp dụng Gradient Descent</a><ul>
<li>  <a href="#21-bi%E1%BA%BFn-%C4%91%E1%BB%95i">2.1. Biến đổi</a></li>
<li>  <a href="#22-gradient-descent">2.2. Gradient Descent</a></li>
</ul>
</li>
<li>  <a href="#3-advanced-optimization">3. Advanced Optimization</a></li>
</ul>
<h1 id="1-Cost-Function-for-Logistic-Regression"><a href="#1-Cost-Function-for-Logistic-Regression" class="headerlink" title="1. Cost Function for Logistic Regression"></a><strong>1. Cost Function for Logistic Regression</strong></h1><p>Đối với linear regression, ta có thể dùng cost function như sau</p>
<p>$latex \frac{1}{2m}\sum_{i=1}^m(h_\theta(x^{(i)})-y^{(i)})^2$</p>
<p>Tuy nhiên, nếu áp dụng cùng công thức này với Logistic Regression, ta sẽ có 1 đồ thị vô cùng “gập ghềnh”, với rất nhiều điểm local optimal. Điều này trở thành một trở ngại vô cùng lớn với thuật toán gradient descent.</p>
<h2 id="1-1-Cong-thuc"><a href="#1-1-Cong-thuc" class="headerlink" title="1.1. Công thức"></a>1.1. Công thức</h2><p>Nói cách khác, nó sẽ không phải là một “convex function”</p>
<p>Thay vào đó, cost function cho Logistic Regression sẽ giống như sau</p>
<p>$latex  J(\theta) = \dfrac{1}{m} \sum_{i=1}^m \mathrm{Cost}(h_\theta(x^{(i)}),y^{(i)})$<br>$latex   \mathrm{Cost}(h_\theta(x),y) = -\log(h_\theta(x)) \quad \quad \quad \text{if y = 1}$<br>$latex   \mathrm{Cost}(h_\theta(x),y) = -\log(1-h_\theta(x)) \quad \quad \text{if y = 0}$</p>
<h2 id="1-2-Do-thi"><a href="#1-2-Do-thi" class="headerlink" title="1.2. Đồ thị"></a>1.2. Đồ thị</h2><p>Khi y = 1, ta có đồ thị sau cho $J(\theta)$ và $h_\theta(x)$:</p>
<p><img src="https://i.imgur.com/w6Ia2IS.png" alt="if y = 1 plot"></p>
<p>Tương tự, ta có đồ thị sau khi y = 0, ta có đồ thị sau</p>
<p><img src="https://i.imgur.com/g9c2Fmn.png" alt="if y = 0 plot"></p>
<h2 id="Ket-luan"><a href="#Ket-luan" class="headerlink" title="Kết luận"></a>Kết luận</h2><p>Dựa vào đồ thị, ta có thể rút ra kết luận sau</p>
<p>$latex \mathrm{Cost}(h_\theta(x),y) = 0 \text{ if } h_\theta(x) = y$<br>$latex \mathrm{Cost}(h_\theta(x),y) \rightarrow \infty \text{ if } y = 0 \; \mathrm{and} \; h_\theta(x) \rightarrow 1$<br>$latex \mathrm{Cost}(h_\theta(x),y) \rightarrow \infty \text{ if } y = 1 \; \mathrm{and} \; h_\theta(x) \rightarrow 0$</p>
<p>Như vậy, khi cost = 0, thì hàm hypothesis = y (cho cả trường hợp y = 0 hoặc y = 1)</p>
<p>Ngược lại</p>
<ul>
<li>  nếu y = 0, và hypothesis tiến dần tới 1, thì cost sẽ tiến dần tới vô cực</li>
<li>  nếu y = 1, và hypothesis tiến dần tới 0, thì cost sẽ tiến dần tới vô cực</li>
</ul>
<h1 id="2-Don-gian-hoa-Cost-Function-va-ap-dung-Gradient-Descent"><a href="#2-Don-gian-hoa-Cost-Function-va-ap-dung-Gradient-Descent" class="headerlink" title="2. Đơn giản hóa Cost Function và áp dụng Gradient Descent"></a>2. Đơn giản hóa Cost Function và áp dụng Gradient Descent</h1><h2 id="2-1-Bien-doi"><a href="#2-1-Bien-doi" class="headerlink" title="2.1. Biến đổi"></a>2.1. Biến đổi</h2><p>Với biểu thức ở trên, chỉ cần biến đổi một chút, ta có thể thu gọn nó vào thành 1 biểu thức như sau:</p>
<p>$latex \mathrm{Cost}(h_\theta(x),y) = - y \; \log(h_\theta(x)) - (1 - y) \log(1 - h_\theta(x))$</p>
<p>y chỉ có 2 giá trị hoặc = 1 hoặc = 0. Lần lượt thay 2 giá trị này vào biểu thức trên, ta sẽ thấy 1 trong 2 biểu thức con bị triệt tiêu.</p>
<p>Với data của bộ training sets, ta có thể viết đầy đủ biểu thức của cost function như sau:</p>
<p>$latex J(\theta) = -\frac{1}{m} \sum_{i=1}^{m}[y^{(i)}log(h_\theta(x^{(i)})) + (1-y^{(i)})log(1-h_\theta(x^{(i)}))]$</p>
<p>Sau đó, ta có thể “vector hóa” biểu thức này</p>
<p>$latex h = g(X\theta) \ J(\theta) = \frac{1}{m} \cdot \left(-y^{T}\log(h)-(1-y)^{T}\log(1-h)\right)$</p>
<h2 id="2-2-Gradient-Descent"><a href="#2-2-Gradient-Descent" class="headerlink" title="2.2. Gradient Descent"></a>2.2. Gradient Descent</h2><p>Nhắc lại một chút, dạng tổng quát của Gradient Descent như sao:</p>
<p>$latex Repeat \; \lbrace \ \; \theta_j := \theta_j - \alpha \dfrac{\partial}{\partial \theta_j}J(\theta) \ \rbrace$</p>
<p>Dùng đạo hàm, ta có thể tính được:</p>
<p>$latex Repeat \; \lbrace \ \; \theta_j := \theta_j - \frac{\alpha}{m} \sum_{i=1}^m (h_\theta(x^{(i)}) - y^{(i)}) x_j^{(i)} \ \rbrace$</p>
<p>áp bộ giá trị của training set vào, và chuyển thành toán tuyến tính (vectorise), ta có phép tính sau</p>
<p>$latex \theta:=\theta-\frac{\alpha}{m}X^T(g(X\theta)-\vec{y})$</p>
<h1 id="3-Advanced-Optimization"><a href="#3-Advanced-Optimization" class="headerlink" title="3. Advanced Optimization"></a>3. Advanced Optimization</h1><p>Bên cạnh thuật toán Gradient Descent dùng để tính toán giá trị tối ưu của $latex \theta$, chúng ta còn có nhiều thuật toán phức tạp hơn, nhưng cũng nhanh hơn nhiều:</p>
<ul>
<li>  Conjugate gradient</li>
<li>  BFGS</li>
<li>  l-BFGS</li>
</ul>
<p>Các thuật toán này đều đã được xây dựng và tối ưu hóa trong các thư viện số học của nhiều ngôn ngữ lập trình.</p>
<p>Đầu tiên, chúng ta sẽ cần công thức để tính toán 2 biểu thức</p>
<p>$latex J(\theta) \ \dfrac{\partial}{\partial \theta_j}J(\theta)$</p>
<p>Tùy thuộc vào ngôn ngữ lập trình sẽ có các cú pháp khác nhau. Đối với Matlab, ta có thể viết 1 function duy nhất trả về cả 2 giá trị trên:</p>
<p>function [jVal, gradient] = costFunction(theta)<br>  jVal = […code to compute J(theta)…];<br>  gradient = […code to compute derivative of J(theta)…];<br>end</p>
<p>Sau đó, ta dùng function <code>optimset()</code> để tạo ra 1 object chứa các option cân thiết. Dùng object này đưa vào function <code>fminunc()</code> của Octave. Kết quả tính toán sẽ là 1 vector chứa các giá trị tối ưu của $latex \theta$</p>
<p>options = optimset(‘GradObj’, ‘on’, ‘MaxIter’, 100);<br>initialTheta = zeros(2,1);<br>   [optTheta, functionVal, exitFlag] = fminunc(@costFunction, initialTheta, options);</p>
]]></content>
      <categories>
        <category>Others</category>
      </categories>
  </entry>
  <entry>
    <title>[Life] - Fighting with unauthorized copies of your content</title>
    <url>/2019/06/16/fighting-with-unauthorized-copies-of-your-content/</url>
    <content><![CDATA[<p>Last Friday, while looking through the stats from my blog, I notice something strange. A hyperlink that lead to my blog is not “right”. I clicked on that link (a web search result page actually), a search tool appeared with my original post listed as page 2. Curios, I click on page 1 of the search result, and voila, some sites with tricky SEO technique take the few first result.</p>
<p>The point is, they are copying content from my blog, without my authorization. It’s time to tackle this problem.</p>
<span id="more"></span>
<ul>
<li>  <a href="#1-search-for-all-other-sites">1. Search for all other sites</a></li>
<li>  <a href="#2-is-the-site-tolerable">2. Is the site tolerable?</a></li>
<li>  <a href="#3-file-a-dmca-report">3. File a DMCA report</a></li>
<li>  <a href="#4-what-happened-after-a-link-is-approved">4. What happened after a link is approved</a></li>
</ul>
<h1 id="1-Search-for-all-other-sites"><a href="#1-Search-for-all-other-sites" class="headerlink" title="1. Search for all other sites"></a>1. Search for all other sites</h1><p>I thought this would be easy. Turn out it the most difficult step to take. The violated sites are managed by ‘master’ of Search Engine Optimization. They know how to optimize their site for better place in Google search result. They also know how to change your post just a little bit to deceive the Google algorithm to find duplication.</p>
<ol>
<li> <strong>Search for the title</strong>. This search is easy. Copy your post title (maybe you have to remove all the special character like <code>[]</code> or <code>&#123;&#125;</code>). Sometime, when your title is written in English, you can translate it to your mother tongue language.</li>
<li> <strong>Search for a sentence</strong>. Choose short sentence with your writing style that cannot be meet elsewhere is the best option. A short sentence for this search to work would have more than 10 or 15 words.</li>
<li> <strong>Search by Image</strong>. This is the last search that I have made. The result is not useful but try anyway.</li>
</ol>
<h1 id="2-Is-the-site-tolerable"><a href="#2-Is-the-site-tolerable" class="headerlink" title="2. Is the site tolerable?"></a>2. Is the site tolerable?</h1><p>In Vietnam, it’s a tacit agreement when you copy the whole post published by someone else, then re-post it on your site and have a link back to the original content (at the end or beginning of the post). I know this is not legal in many countries. Instead, you are only allowed to “quote” a segment, a sentence from that original post with appropriate citing.</p>
<p>That’s why your next job is to determine that the violated site worthy to use your hard work and research, time and money for free.</p>
<p>I suggest no.</p>
<h1 id="3-File-a-DMCA-report"><a href="#3-File-a-DMCA-report" class="headerlink" title="3. File a DMCA report"></a>3. File a DMCA report</h1><p>This will be the easiest step. You will need your Google account, and</p>
<ul>
<li>  Link to your original content.</li>
<li>  Link to violated content (must be a link to specific post)</li>
<li>  Time</li>
</ul>
<p>Go to <a href="https://support.google.com/legal">Google Legal page</a> and select accordingly</p>
<p><img src="https://i.imgur.com/MdLhEw9.png" alt="Click this link"></p>
<p>The result should look like this</p>
<p><img src="https://i.imgur.com/YeNk9JQ.png" alt="result"></p>
<h1 id="4-What-happened-after-a-link-is-approved"><a href="#4-What-happened-after-a-link-is-approved" class="headerlink" title="4. What happened after a link is approved"></a>4. What happened after a link is approved</h1><p>The certain outcome is that the link will be removed from Google search result (including all other search tool using Google search engine).</p>
<p>Another possible outcome is that the violated site (with enough DMCA report), will be remove completely from google search result.</p>
<p>Cheers :D</p>
]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>DMCA</tag>
        <tag>original</tag>
        <tag>violation</tag>
      </tags>
  </entry>
  <entry>
    <title>Java for Beginner - 1 - Introduction to Java from a .NET guy</title>
    <url>/2019/07/11/java-for-beginner-1-introduction-to-java-from-a-net-guy/</url>
    <content><![CDATA[<p>Coming to Java world, from a .NET guy, is like going from a full feature-rich and comfortable car to a basic bike with a lot of space for extension and customization.<br>In this series, I will walk you through (hopefully) a small part of Java world, just enough for you to continue your exploration.</p>
<span id="more"></span>
<ul>
<li><a href="#1-intro">1. Intro</a><ul>
<li>  <a href="#11-what-it-can-do">1.1. What it can do</a></li>
<li>  <a href="#12-write-one-run-anywhere">1.2. Write one, run anywhere</a></li>
</ul>
</li>
<li><a href="#2-versions-and-tools">2. Versions and Tools</a><ul>
<li>  <a href="#21-versions">2.1. Versions</a></li>
<li>  <a href="#22-tools">2.2. Tools</a></li>
<li>  <a href="#23-terms">2.3. Terms</a></li>
</ul>
</li>
<li>  <a href="#3-frameworks">3. Frameworks</a></li>
</ul>
<h1 id="1-Intro"><a href="#1-Intro" class="headerlink" title="1. Intro"></a>1. Intro</h1><h2 id="1-1-What-it-can-do"><a href="#1-1-What-it-can-do" class="headerlink" title="1.1. What it can do"></a>1.1. What it can do</h2><p>When a person decided to study some new programming language or platform, the first question could be the purpose. Why do you want to study this language/platform? What it can do compared to xyz language?</p>
<p>The answer: almost anything!</p>
<p>From mobile application to huge software used in banking, super-computer and satellite in the sky.</p>
<h2 id="1-2-Write-one-run-anywhere"><a href="#1-2-Write-one-run-anywhere" class="headerlink" title="1.2. Write one, run anywhere"></a>1.2. Write one, run anywhere</h2><p>Ideally, a Java developer can write the code one, and run it anywhere that can run Java Virtual Machine (JVM). But we live in an un-ideal world. There are differences between devices and operating systems, so there are different versions of JVM implementation. The famous title became</p>
<blockquote>
<p>Write one, debug everywhere</p>
</blockquote>
<h1 id="2-Versions-and-Tools"><a href="#2-Versions-and-Tools" class="headerlink" title="2. Versions and Tools"></a>2. Versions and Tools</h1><h2 id="2-1-Versions"><a href="#2-1-Versions" class="headerlink" title="2.1. Versions"></a>2.1. Versions</h2><p>Java have different versions for different purpose</p>
<ul>
<li>  Java ME: Java Micro Edition. Optimized for mobile, embedded devices (like outdoor billboard, TV boxes, printers, etc.). The SDK for Java ME haven’t had update since Jan 2018 (as of July 2019)</li>
<li>  Java SE: Java Standard Edition. The name says it all. You can develop desktops and servers applications using this version. The <a href="https://www.oracle.com/technetwork/java/javase/overview/index.html">latest version</a> is 12.0.1 (as of July 2019)</li>
<li>  Java EE: Java Enterprise Edition. Support a lot more APIs like JSON processing, annotations, contexts and dependency injections. The <a href="https://www.oracle.com/technetwork/java/javaee/overview/index.html">latest version</a> is 8u1 (I know, the version number is strange)</li>
<li>  Java Embedded, Java TV, Java Card: Seem like different version of Java ME with a much more updated SDK. More info <a href="https://www.oracle.com/technetwork/java/embedded/javame/index.html">here</a></li>
</ul>
<h2 id="2-2-Tools"><a href="#2-2-Tools" class="headerlink" title="2.2. Tools"></a>2.2. Tools</h2><p>Come along with Java are a lot of tools</p>
<ul>
<li>  IDE: <a href="https://www.eclipse.org/">Eclipse</a>, <a href="https://netbeans.org/">Netbeans</a>, <a href="https://code.visualstudio.com/docs/languages/java">VSCode with extensions</a> (free), <a href="https://www.jetbrains.com/idea/">Jetbrains’s IntelliJ IDEA</a></li>
<li>  Servers (only for Java EE): <a href="https://github.com/wildfly/wildfly">Wildfly</a> open source by Redhat, <a href="https://github.com/eclipse-ee4j/glassfish">GlassFish</a> open source (part of eclipse-ee4j), <a href="https://github.com/apache/tomcat">Apache Tomcat</a> open source.</li>
</ul>
<h2 id="2-3-Terms"><a href="#2-3-Terms" class="headerlink" title="2.3. Terms"></a>2.3. Terms</h2><ul>
<li>  JRE: Java Runtime Environment</li>
<li>  JDK: Java Development Kits. JDK has multiple implementation because of a long and complicated relationships between big firms</li>
<li>  JFX: or JavaFX. Things get strange from here. “OpenJFX is an open source, next generation client application platform for desktop, mobile and embedded systems built on Java” they said. But to be honest, I don’t understand what is the difference between the “normal” java and the “next generation” java, since both are in active development.</li>
</ul>
<h1 id="3-Frameworks"><a href="#3-Frameworks" class="headerlink" title="3. Frameworks"></a>3. Frameworks</h1><p>In Microsoft world, .NET is the framework. If you want full-feature, compatible with old system, use .NET Framework (latest 4.8). If you want cross-platform (yes, including Linux), use .NET Core. And if you wait long enough, you can use <a href="https://devblogs.microsoft.com/dotnet/introducing-net-5/">.NET 5</a>, as they said “There will be just one .NET going forward, and you will be able to use it to target Windows, Linux, macOS, iOS, Android, tvOS, watchOS and WebAssembly and more.”</p>
<p>Things are different in Java world. Java first created by Sun Microsystem, then bought by Oracle (then oracle sue Google for using some lines of code in Android). A lot of community driven frameworks has been developed for Java. There is no “one framework to fit all” like .NET. This bend the learning curve, make it difficult for a developer to jump from one framework to another.</p>
<p>For a beginner, the curve even worst. A lot of names and terms to familiar, and then you must choose a framework to “dive in”. Reader beware, silly names are coming.</p>
<ol>
<li> Apache Struts: MVC pattern, open source.</li>
<li> Spring Boot: MVC pattern, reliable, big community</li>
<li> Grails: Built on top of Sprint Boot easy to learn, use, has excellent document with a lot of plugin</li>
</ol>
<p>The problems are, each of these frameworks implement a slightly different conventions and introduce different concepts. Too much for “write one, run anywhere” ei?</p>
<p>Another problem: you will never know if a framework is about to abandon, so stick to a single framework seem risky (for me at least, since in .net, I know that specific version of .net framework will continue to be supported and easily upgraded to newer version with minimum effort)</p>
<p>That’s all for introduction of Java. See you in next post.</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java for beginner</tag>
      </tags>
  </entry>
  <entry>
    <title>Java for Beginner - 2 - Hello World in Java</title>
    <url>/2019/07/12/java-for-beginner-2-hello-world-in-java/</url>
    <content><![CDATA[<p>After getting yourself familiar with names and terms in Java in <a href="https://huntertran.com/2019/07/11/java-for-beginner-1-introduction-to-java-from-a-net-guy/">part 1</a>, now it’s time for you to create your first program in Java.</p>
<span id="more"></span>

<ul>
<li><a href="#1-setup">1. Setup</a><ul>
<li>  <a href="#11-required-tools">1.1. Required Tools</a></li>
<li>  <a href="#12-set-environment-variables">1.2. Set environment variables</a></li>
</ul>
</li>
<li><a href="#2-start-coding">2. Start coding</a><ul>
<li>  <a href="#21-hello-world-in-java">2.1. Hello World in Java</a></li>
<li>  <a href="#22-run-and-debug">2.2. Run and Debug</a></li>
</ul>
</li>
<li>  <a href="#3-java-build-tools">3. Java Build Tools</a></li>
</ul>
<h1 id="1-Setup"><a href="#1-Setup" class="headerlink" title="1. Setup"></a>1. Setup</h1><p>For a beginner, tools and supports from those tools is quite vital. Someone will said that you should <em>learn</em> new language by using a basic text editor like Notepad. In my opinion, don’t do it. Use a IDE, or at least VSCode with supporting extensions, and re-type any code that you read, don’t copy and paste them.</p>
<h2 id="1-1-Required-Tools"><a href="#1-1-Required-Tools" class="headerlink" title="1.1. Required Tools"></a>1.1. Required Tools</h2><ol>
<li> <a href="https://code.visualstudio.com/">Visual Studio Code</a> - Cross platform, fast and beautiful (especially dark theme is an ease for your eye).</li>
<li> <a href="https://github.com/Microsoft/vscode-java-pack">Java Extension Pack (GitHub)</a> - <a href="https://marketplace.visualstudio.com/items?itemName=vscjava.vscode-java-pack&ssr=false">install</a> - a set of extensions for VSCode to work with Java</li>
<li> <a href="https://adoptopenjdk.net/">Prebuilt OpenJDK by Adopt OpenJDK (free)</a> - including JVM. This project is community backed with short and easy explanation, perfect for beginner.</li>
<li> Some other tools that will be install on-the-fly</li>
</ol>
<h2 id="1-2-Set-environment-variables"><a href="#1-2-Set-environment-variables" class="headerlink" title="1.2. Set environment variables"></a>1.2. Set environment variables</h2><p>Set <code>JAVA_HOME</code> to the folder you have install JDK</p>
<p>Start &gt; type <code>advanced system settings</code> &gt; Environment Variables…</p>
<p><img src="https://i.imgur.com/WokUE7n.png" alt="advanced system settings"></p>
<p>Then add a new System Variable</p>
<p>JAVA_HOME</p>
<p>C:\Program Files\Java\jdk1.8.0_161</p>
<h1 id="2-Start-coding"><a href="#2-Start-coding" class="headerlink" title="2. Start coding"></a>2. Start coding</h1><h2 id="2-1-Hello-World-in-Java"><a href="#2-1-Hello-World-in-Java" class="headerlink" title="2.1. Hello World in Java"></a>2.1. Hello World in Java</h2><p>Unlike .NET, JAVA required a specific folder structure. Each .java file should contain only 1 class, and that class must declare <code>package</code> with the name of the folder.</p>
<p>Open VSCode and create the following folder structure</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;your_project_name&gt;
|-src
| |-main
| | |-java
| | | |-hello</code></pre>

<p>Inside hello folder, create <code>Application.java</code>, then type the following code</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">package main.hello;

public class Application &#123;

    public static void main(String args) &#123;
        String hello &#x3D; &quot;Hello World!&quot;;
        System.out.print(hello);
    &#125;
&#125;</code></pre>

<h2 id="2-2-Run-and-Debug"><a href="#2-2-Run-and-Debug" class="headerlink" title="2.2. Run and Debug"></a>2.2. Run and Debug</h2><p>Create configuration file (VSCode will automatically do this)</p>
<p><img src="https://i.imgur.com/r1j33Ht.png" alt="config"></p>
<p><code>.vscode</code> folder added to folder structure, with <code>launch.json</code> file created, the content should look like this</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json">&#123;
    &#x2F;&#x2F; Use IntelliSense to learn about possible attributes.
    &#x2F;&#x2F; Hover to view descriptions of existing attributes.
    &#x2F;&#x2F; For more information, visit: https:&#x2F;&#x2F;go.microsoft.com&#x2F;fwlink&#x2F;?linkid&#x3D;830387
    &quot;version&quot;: &quot;0.2.0&quot;,
    &quot;configurations&quot;: [
        &#123;
            &quot;type&quot;: &quot;java&quot;,
            &quot;name&quot;: &quot;Debug (Launch) - Current File&quot;,
            &quot;request&quot;: &quot;launch&quot;,
            &quot;mainClass&quot;: &quot;$&#123;file&#125;&quot;
        &#125;,
        &#123;
            &quot;type&quot;: &quot;java&quot;,
            &quot;name&quot;: &quot;Debug (Launch)-Application&quot;,
            &quot;request&quot;: &quot;launch&quot;,
            &quot;mainClass&quot;: &quot;main.hello.Application&quot;
        &#125;
    ]
&#125;</code></pre>

<p>Press F5 (or that green arrow button), and the word <code>Hello World!</code> will be printed on debug console</p>
<p><img src="https://i.imgur.com/lopZQwM.png" alt="hello world"></p>
<p>To debug, put a break point in line 7</p>
<p><img src="https://i.imgur.com/fSl61GO.png" alt="break point"></p>
<p>Then press F5 again</p>
<p><img src="https://i.imgur.com/hJHvv44.png" alt="debug"></p>
<h1 id="3-Java-Build-Tools"><a href="#3-Java-Build-Tools" class="headerlink" title="3. Java Build Tools"></a>3. Java Build Tools</h1><p>To build a java file, you need a build tool. In the tutorial above, VSCode has already done that for you. The most widely used build tool for Java right now is Gradle and Maven. Both can be use in VSCode terminal window and integrated in VSCode task (in fact, what doesn’t?)</p>
<ul>
<li>  <a href="https://gradle.org/">Gradle</a> - fast, chosen by Google to use as default build tool for Android.</li>
<li>  <a href="https://maven.apache.org/">Maven</a> - easier to understand and use.</li>
</ul>
<blockquote>
<p>VSCode Java Extension Pack support Maven naturally. But maybe you still need to install maven manually.</p>
</blockquote>
<p>That’s it. See you next time.</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java for beginner</tag>
        <tag>hello world</tag>
      </tags>
  </entry>
  <entry>
    <title>Java for Beginner - 3 - Java from C# cheats sheet</title>
    <url>/2019/07/14/java-for-beginner-3-java-from-c-cheats-sheet/</url>
    <content><![CDATA[<p>Doing C# long enough, you get yourself familiar with C# concepts and syntax. That’s fine, but sometime when you need “the same” concepts in Java, it’s quite difficult. This cheat sheet here to tackle that problem.</p>
<span id="more"></span>

<p>You can view other posts in the series here:</p>
<ol>
<li> <a href="https://huntertran.com/2019/07/11/java-for-beginner-1-introduction-to-java-from-a-net-guy/">Introduction</a></li>
<li> <a href="https://huntertran.com/2019/07/12/java-for-beginner-2-hello-world-in-java/">Hello World</a></li>
<li> Cheats sheet (this post)</li>
</ol>
<p>Table of Content</p>
<ul>
<li><a href="#1-classes">1. Classes</a><ul>
<li>  <a href="#11-some-keywords">1.1. Some keywords</a></li>
<li>  <a href="#12-generic-class">1.2. Generic Class</a></li>
<li>  <a href="#13-interface-implement">1.3. Interface Implement</a></li>
</ul>
</li>
<li>  <a href="#2-variables">2. Variables</a></li>
<li><a href="#3-methods">3. Methods</a><ul>
<li>  <a href="#31-extension-method">3.1. Extension Method</a></li>
<li>  <a href="#32-safely-use-resource">3.2. Safely use resource</a></li>
<li>  <a href="#33-class-properties">3.3. Class Properties</a></li>
</ul>
</li>
</ul>
<h1 id="1-Classes"><a href="#1-Classes" class="headerlink" title="1. Classes"></a>1. Classes</h1><h2 id="1-1-Some-keywords"><a href="#1-1-Some-keywords" class="headerlink" title="1.1. Some keywords"></a>1.1. Some keywords</h2><p>C#</p>
<p>Java</p>
<p>Explanation for Java</p>
<p>: (to extend the class)</p>
<p>extends</p>
<p>Java use the keyword <code>extends</code> to extend a class</p>
<p>base</p>
<p>super</p>
<p>To access the base class methods</p>
<p>namespace</p>
<p>package</p>
<p>Java class belongs to a package, which is the name of the folder contains the .java file</p>
<p>internal</p>
<p>Java use the concept of package. More complicated convertion is <a href="https://stackoverflow.com/a/40437191/4506315">here</a></p>
<p>using</p>
<p>import</p>
<p><strong>Java Example</strong></p>
<p>// File Animal.java, inside folder animals<br>package main.java.animals;</p>
<p>import RandomPackage.*;<br>import RandomPackage.RandomSubPackage.*;</p>
<p>public class Animal {<br>    … other methods and properties …<br>    public Double getWeight() {<br>        return weight;<br>    }<br>    … other methods and properties …<br>}</p>
<p>// File Pig.java, inside folder animals<br>package main.java.animals;</p>
<p>public class Pig extends Animal {<br>    … other methods and properties …</p>
<pre><code>// override the getWeight method
public Double getWeight() &#123;
    // do your override stuffs
    return super.getWeight();
&#125;
... other methods and properties ...
</code></pre>
<p>}</p>
<h2 id="1-2-Generic-Class"><a href="#1-2-Generic-Class" class="headerlink" title="1.2. Generic Class"></a>1.2. Generic Class</h2><p>Generic class with constraint</p>
<p><strong>C# Example</strong></p>
<p>public class GenericClass<T> where T: SomeBase<br>{<br>}</p>
<p><strong>Java Example</strong></p>
<p>public class GenericClass<T extends SomeBase><br>{<br>}</p>
<h2 id="1-3-Interface-Implement"><a href="#1-3-Interface-Implement" class="headerlink" title="1.3. Interface Implement"></a>1.3. Interface Implement</h2><p><strong>Java Example</strong></p>
<p>public class Pig implements IAnimal {<br>    public void Run() {<br>        …your code to make the pig run…<br>    }<br>}</p>
<h1 id="2-Variables"><a href="#2-Variables" class="headerlink" title="2. Variables"></a>2. Variables</h1><p>C#</p>
<p>Java</p>
<p>Explanation for Java</p>
<p>string</p>
<p>java.lang.String</p>
<p><code>string</code> in both is a immutable class (cannot change instance of object after create)</p>
<p>object</p>
<p>java.lang.Object</p>
<p>decimal</p>
<p>java.math.BigDecimal</p>
<p><strong>Java Example</strong></p>
<p>String hello = “Hello World!”;<br>System.out.print(hello);</p>
<h1 id="3-Methods"><a href="#3-Methods" class="headerlink" title="3. Methods"></a>3. Methods</h1><h2 id="3-1-Extension-Method"><a href="#3-1-Extension-Method" class="headerlink" title="3.1. Extension Method"></a>3.1. Extension Method</h2><p>In C#, you can write extension to an object, there is no equivalent to this in Java.</p>
<p><strong>C#</strong></p>
<p>public static class StringExtension<br>{<br>    public static string GetFirstThreeLetters(this string targetString)<br>    {<br>        // your code here to do the job<br>        // for example:<br>        // string result = targetString.SubString(0,3);<br>        return result;<br>    }<br>}</p>
<p>public class TestClass<br>{<br>    public void TestMethod()<br>    {<br>        string randomString = “This is so random”;<br>        Console.WriteLine(randomString.GetFirstThreeLetters);<br>    }<br>}</p>
<p>// Console Output<br>// Thi</p>
<p>But in Java, you need to have the full static class</p>
<p>public final class StringUtils {<br>    public static String GetFirstThreeLetters(String stringToGet) {<br>        // your code here to do the job<br>        // for example:<br>        // String result = stringToGet.substring(0,3);<br>        return result;<br>    }<br>}</p>
<p>public class TestClass<br>{<br>    private void TestMethod()<br>    {<br>        String randomString = “This is so random”;<br>        StringUtils.GetFirstThreeLetters(randomString);<br>    }<br>}</p>
<p>// Console Output<br>// Thi</p>
<h2 id="3-2-Safely-use-resource"><a href="#3-2-Safely-use-resource" class="headerlink" title="3.2. Safely use resource"></a>3.2. Safely use resource</h2><p>In C#, you can use a resource safely with the keyword <code>using</code></p>
<p><strong>C# Example</strong></p>
<p>using(MyResource myResource = new MyResource())<br>{<br>    myResource.DoSomething();<br>}</p>
<p>In Java, you will use a different keyword: <code>try</code></p>
<p><strong>Java Example</strong></p>
<p>try(MyResource myResource = new MyResource()) {<br>    myResource.DoSomething();<br>}</p>
<h2 id="3-3-Class-Properties"><a href="#3-3-Class-Properties" class="headerlink" title="3.3. Class Properties"></a>3.3. Class Properties</h2><p>It is very convenient for C# developers to create and use <code>property</code> with auto-property, property with private backing fields.</p>
<p><strong>C# Example</strong></p>
<p>public class Animal<br>{<br>    // Auto-property<br>    public int Height { get; set; }</p>
<pre><code>// Property with private backing field

// &#123;rivate field
private int \_weight;

// Exposed with public property
public int Weight
&#123;
    get
    &#123;
        return \_weight;
    &#125;
    set
    &#123;
        // do some check to validate the value
        if(value &gt; 0)
        &#123;
            \_weight = value;
        &#125;
    &#125;
&#125;
</code></pre>
<p>}</p>
<p>// using in other class<br>public void RandomMethod()<br>{<br>    Animal pig = new Animal();<br>    pig.Weight = 500;</p>
<pre><code>Console.WriteLine(&quot;Pig weight: &quot; + pig.Weight);
</code></pre>
<p>}</p>
<p>There is no equivalent to this in Java, you need to create 2 normal methods for get and set value of a private field</p>
<p><strong>Java Example</strong></p>
<p>public class Animal {<br>    private int _weight;</p>
<pre><code>public void setWeight(int weight) &#123;
    if(weight &gt; 0) &#123;
        \_weight = weight;
    &#125;
&#125;

public int getWeight() &#123;
    return \_weight;
&#125;
</code></pre>
<p>}</p>
<p>// using in other class<br>public void RandomMethod() {<br>    Animal pig = new Animal();<br>    pig.setWeight(500);</p>
<pre><code>System.out.print(&quot;Pig weight: &quot; + pig.getWeight());
</code></pre>
<p>}</p>
<p>Other different is just one google search result away ;) See you next post</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java for beginner</tag>
        <tag>cheats sheet</tag>
      </tags>
  </entry>
  <entry>
    <title>[vuejs] - Publish your vue component to npmjs using vue-cli 3</title>
    <url>/2019/08/18/vuejs-publish-your-vue-component-to-npmjs-using-vue-cli-3/</url>
    <content><![CDATA[<p>Using Vuejs, sometime you need to publish your awesome <code>component</code> with the world. Sure you can share the <code>.vue</code> file, but how can you publish it to <code>npmjs</code>, for the ease of installation and usage of others?</p>
<span id="more"></span>
<p>With the release of Vue CLI 3, build target <code>-lib</code> is supported, but no tutorials available “out there”, so here is one (and hopfully not the last).</p>
<!-- TOC -->

<ul>
<li><a href="#1-requirements">1. Requirements</a></li>
<li><a href="#2-steps">2. Steps</a><ul>
<li><a href="#21-setup-your-project">2.1. Setup your project</a></li>
<li><a href="#22-add-config-for-vuejs">2.2. Add config for vue.js</a></li>
<li><a href="#23-edit-packagejson">2.3. Edit package.json</a></li>
</ul>
</li>
<li><a href="#3-build-test-and-publish">3. Build, Test and Publish</a><ul>
<li><a href="#31-build">3.1. Build</a></li>
<li><a href="#32-test">3.2. Test</a></li>
<li><a href="#33-publish">3.3. Publish</a></li>
</ul>
</li>
<li><a href="#4-test-the-published-package">4. Test the published package</a></li>
</ul>
<!-- /TOC -->

<h1 id="1-Requirements"><a href="#1-Requirements" class="headerlink" title="1. Requirements"></a>1. Requirements</h1><p><a id="markdown-requirements" name="requirements"></a></p>
<ul>
<li>  Of course you will need an <code>npmjs</code> account. Go register one.</li>
<li>  vue-cli 3 (as the time this tutorial was written), install it globally using</li>
</ul>
<p>npm install -g @vue/cli</p>
<ul>
<li>  vue cli-service-global add-on for quick project prototype, install it globally using</li>
</ul>
<p>npm install -g @vue/cli-service-global</p>
<ul>
<li>  Your component source code</li>
<li>  A text editor of your choice (VSCode is my personal suggestion)</li>
</ul>
<h1 id="2-Steps"><a href="#2-Steps" class="headerlink" title="2. Steps"></a>2. Steps</h1><p><a id="markdown-steps" name="steps"></a></p>
<h2 id="2-1-Setup-your-project"><a href="#2-1-Setup-your-project" class="headerlink" title="2.1. Setup your project"></a>2.1. Setup your project</h2><p><a id="markdown-setup-your-project" name="setup-your-project"></a></p>
<p>For instruction purpose, just a simple hello world project will do.</p>
<ol>
<li> Create a new folder, let call it <code>my_component</code></li>
<li> Open that folder using vscode, press Ctrl + Shift + ` to open a new terminal inside root folder</li>
<li> Create your project, and choose your preferred options.</li>
</ol>
<p>vue create .</p>
<blockquote>
<p>if you want to create a new project including root folder, type <code>vue create your-folder-name</code></p>
</blockquote>
<p>your project structure should basically look like this if you choose all default</p>
<p><img src="https://i.imgur.com/tpVcVBM.png" alt="project structure"></p>
<p>type <code>npm run serve</code> will build the project and serve it using a local server</p>
<p><img src="https://i.imgur.com/KHn5jsf.png" alt="hello world"></p>
<h2 id="2-2-Add-config-for-vue-js"><a href="#2-2-Add-config-for-vue-js" class="headerlink" title="2.2. Add config for vue.js"></a>2.2. Add config for vue.js</h2><p><a id="markdown-add-config-for-vue.js" name="add-config-for-vue.js"></a></p>
<p>Add a new file to root folder with the name <code>vue.config.js</code>. In this file, you will be able to setup the build to include all your components <code>*.css</code> in a separated file or inside the component <code>.js</code> file. Each option have it pro and cons.</p>
<p>For simplicity, I choose to include inside the <code>.js</code> file.</p>
<p>module.exports = {<br>    css: { extract: false }<br>}</p>
<h2 id="2-3-Edit-package-json"><a href="#2-3-Edit-package-json" class="headerlink" title="2.3. Edit package.json"></a>2.3. Edit <code>package.json</code></h2><p><a id="markdown-edit-package.json" name="edit-package.json"></a></p>
<p><strong>Add build command</strong><br>Open <code>package.json</code> and add the following line under <code>scripts</code> section</p>
<p>“build:helloworld”: “vue-cli-service build –target lib –name my_component ./src/components/HelloWorld.vue”,</p>
<p>It will look like this</p>
<p><img src="https://i.imgur.com/KXP6ymW.png" alt="package json"></p>
<p><strong>Pointing to output</strong></p>
<p>Add the target for npm to <code>package.json</code></p>
<p>“main”: “./dist/my_component.udm.js”,</p>
<p><strong>Add file attribute</strong></p>
<p>This settings indicate which file types should be uploaded to <code>npmjs</code></p>
<p>“files”: [<br>  “dist/*.js”<br>  “dist/*.css”<br>],</p>
<p><strong>Other information for <code>npmjs</code></strong></p>
<p>“description”: “A hello world vuejs components”,<br>“author”: “Hunter Tran”,<br>“license”: “MIT”,</p>
<blockquote>
<p>If your component use other components or packages, you need to specify them in <code>dependencies</code>, <a href="https://docs.npmjs.com/creating-a-package-json-file">here</a> is more info on npmjs.com</p>
</blockquote>
<h1 id="3-Build-Test-and-Publish"><a href="#3-Build-Test-and-Publish" class="headerlink" title="3. Build, Test and Publish"></a>3. Build, Test and Publish</h1><p><a id="markdown-build%2C-test-and-publish" name="build%2C-test-and-publish"></a></p>
<h2 id="3-1-Build"><a href="#3-1-Build" class="headerlink" title="3.1. Build"></a>3.1. Build</h2><p><a id="markdown-build" name="build"></a></p>
<p>Build your project using the new command</p>
<p>npm run build:helloworld</p>
<h2 id="3-2-Test"><a href="#3-2-Test" class="headerlink" title="3.2. Test"></a>3.2. Test</h2><p><a id="markdown-test" name="test"></a></p>
<p>The build command above will create a <code>dist</code> folder, including a <code>demo.html</code> site. Open that file using a browser to test your newly created component.</p>
<blockquote>
<p>You may need to modify that file a bit if your components is not <em>ready to use</em> and require some setup (like require data to run)</p>
</blockquote>
<h2 id="3-3-Publish"><a href="#3-3-Publish" class="headerlink" title="3.3. Publish"></a>3.3. Publish</h2><p><a id="markdown-publish" name="publish"></a></p>
<p>Simple enough, just type</p>
<p>npm publish</p>
<p>and follow the instruction.</p>
<h1 id="4-Test-the-published-package"><a href="#4-Test-the-published-package" class="headerlink" title="4. Test the published package"></a>4. Test the published package</h1><p><a id="markdown-test-the-published-package" name="test-the-published-package"></a></p>
<p>Finally, you can try your newly published package in a new “Hello World” vue cli project, or use the built <code>yourpackagename.common.js</code> file directly in your <code>&lt;head&gt;&lt;/head&gt;</code> section.</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>ASP.NET</category>
        <category>VSCode</category>
        <category>JavaScript and TypeScript</category>
      </categories>
      <tags>
        <tag>component</tag>
        <tag>vue</tag>
        <tag>vue-cli</tag>
        <tag>vuejs</tag>
      </tags>
  </entry>
  <entry>
    <title>[java] Refactoring Clones type 2</title>
    <url>/2019/10/19/refactoring-clones-type-2/</url>
    <content><![CDATA[<p>Removing clones in code maybe is the most challenging type of refactoring action. In this post, I will show you how to refactor a clone type 2 using Functional Interface in Java and delegate in C#</p>
<span id="more"></span>

<h1 id="Type-of-clones"><a href="#Type-of-clones" class="headerlink" title="Type of clones"></a>Type of clones</h1><p>There are 4 types of clones:</p>
<blockquote>
<p><em><strong>Type 1:</strong></em> The codes cloned are identical, except the name of variables, add or remove of comment.</p>
<p><em><strong>Type 2:</strong></em> code fragments are structurally and syntactically identical except for variations in identifiers, literals, types, in addition to Type I differences.</p>
<p><em><strong>Type 3:</strong></em> code fragments are copies with further modifications. Statements can be changed, added, or removed in addition to Type II differences.</p>
<p><em><strong>Type 4:</strong></em> two or more code fragments perform the exact computation but are implemented through different syntactic variants.</p>
<p>S. Bellon, R. Koschke, G. Antoniol, J. Krinke and E. Merlo, Comparison and Evaluation of Clone DetectionTools, Transactions on Software Engineering, 33(9):577-591 (2007)</p>
</blockquote>
<h1 id="Removing-clones"><a href="#Removing-clones" class="headerlink" title="Removing clones"></a>Removing clones</h1><p>Type 1: just remove the second fragment of code and use the first one</p>
<p>Type 3: Based on the function of the code fragment (usually clone codes are in methods), you can perform other refactors like break the method into smaller ones (<code>extract method</code>), then consider if you can transform type 3 clone into type 2.</p>
<p>Type 4: This one is the most difficult to detect. To eliminate it is easy, just use one of them.</p>
<p>I believe to detect this kind of clone, you can inspect the before and after the condition of the questioned methods. If they are the same (use the same set of parameters, return the same result, verified by unit tests), then the function of these methods is identical.</p>
<p>For type 2 clone, we will try to transform it to type 1, then introduce the parameter in a new common method by using a language-specific feature called <code>FunctionalInterface</code> in Java and <code>delegate</code> in C#</p>
<h1 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h1><p>Consider these lines of code:</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">public void drawVerticalLine(int length, View currentView)&#123;
    DrawOptions drawOptions &#x3D; currentView.getVerticalOptions();
    currentView.draw(length, drawOptions);
&#125;

public void drawHorizontalLine(int length, View currentView)&#123;
    DrawOptions drawOptions &#x3D; currentView.getHorizontalOptions();
    currentView.draw(length, drawOptions);
&#125;</code></pre>

<p>In the 2 methods above, both draw a line to screen; the difference is the <code>drawOptions</code> variable.</p>
<p>To introduce parameters to “transform” this type of clone to type 1, we can do as follow:</p>
<p>/* For JAVA */</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java">public void drawVerticalLine(int length, View currentView)&#123;
    drawLine(length, currentView, () -&gt; currentView.getVerticalOption());
&#125;

public void drawHorizontalLine(int length, View currentView)&#123;
    drawLine(length, currentView, () -&gt; currentView.getHorizontalOption());
&#125;

@FunctionalInterface
private interface DrawOption &#123;
    int getDrawOption();
&#125;

public void drawLine(int length, View currentView, DrawOption drawOption)&#123;
    int options &#x3D; drawOption.getDrawOption();
    currentView.draw(length, options)
&#125;</code></pre>

<p>and for C#</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">public void drawVerticalLine(int length, View currentView)&#123;
    drawLine(length, currentView, () &#x3D;&gt; currentView.getVerticalOption());
&#125;

public void drawHorizontalLine(int length, View currentView)&#123;
    drawLine(length, currentView, () &#x3D;&gt; currentView.getHorizontalOption());
&#125;

public void drawLine(int length, View currentView, Func&lt;int&gt; drawOption)&#123;
    int option &#x3D; drawOption();
    currentView.draw(length, option);
&#125;</code></pre>

<h2 id="Using-a-tool"><a href="#Using-a-tool" class="headerlink" title="Using a tool"></a>Using a tool</h2><p>If you are using Eclipse, <a href="https://github.com/tsantalis/JDeodorant">JDeodorant</a> plug-in by <a href="https://users.encs.concordia.ca/~nikolaos/">Associate Professor Nikos Tsantalis</a> can automatically <code>extract</code> the clone into common method for you.</p>
<ol>
<li> Identify the cloned methods</li>
<li> Select the method in Eclipse, right-click and choose <code>Refactor duplicate code...</code></li>
</ol>
<p><img src="https://i.imgur.com/ndLJ8Iz.png"></p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>Java</category>
      </categories>
      <tags>
        <tag>clone</tag>
        <tag>refactor</tag>
      </tags>
  </entry>
  <entry>
    <title>Connect with Google Cloud Compute Engine (Virtual Machine) using PuTTY</title>
    <url>/2020/07/20/connect-with-google-cloud-compute-engine-virtual-machine-using-putty/</url>
    <content><![CDATA[<p>I don’t know why Google makes it so challenging to connect to its Compute Engine cloud service. Even the name is confusing. Why don’t they just call it Virtual Machine?</p>
<p>Anyway, here is how to connect.</p>
<span id="more"></span>
<ul>
<li>  <a href="#1-have-your-compute-engine-ready">1. Have your Compute Engine ready</a></li>
<li>  <a href="#2-have-your-local-machine-ready">2. Have your local machine ready</a></li>
<li>  <a href="#3-add-key-to-virtual-machine">3. Add key to virtual machine</a></li>
<li>  <a href="#4-connect-with-winscp">4. Connect with WinSCP</a></li>
</ul>
<h1 id="1-Have-your-Compute-Engine-ready"><a href="#1-Have-your-Compute-Engine-ready" class="headerlink" title="1. Have your Compute Engine ready"></a>1. Have your Compute Engine ready</h1><p>After creating a VM instance, note the External IP. Click on the little three-dot icon at the end of the VM and choose <code>View network details</code></p>
<p><img src="https://i.imgur.com/8QeJ7Yz.png" alt="network"></p>
<p>On the new open site, choose Firewall and make sure <code>tcp:22</code> is allowed (so we can use ssh to connect)</p>
<p><img src="https://i.imgur.com/oGJRuPE.png" alt="tcp22"></p>
<h1 id="2-Have-your-local-machine-ready"><a href="#2-Have-your-local-machine-ready" class="headerlink" title="2. Have your local machine ready"></a>2. Have your local machine ready</h1><p>You will need to generate a public-private key pair on your local machine. In this tutorial, I use <code>puttygen</code> installed alongside with <a href="https://chocolatey.org/packages/putty"><code>putty</code></a></p>
<p>Click generate and move your mouse in the blank area until a key appeared</p>
<p><img src="https://i.imgur.com/5xJDSzQ.png" alt="move"></p>
<p>Enter a password for the generated key, change the <code>Key comment</code> to something easy to remember (this will be your username later), click <code>Save private key</code> to a <code>.ppk</code> file.</p>
<p>Copy the key shown in the box.</p>
<p><img src="https://i.imgur.com/Q0xhVqQ.png" alt="save the key"></p>
<h1 id="3-Add-key-to-the-virtual-machine"><a href="#3-Add-key-to-the-virtual-machine" class="headerlink" title="3. Add key to the virtual machine"></a>3. Add key to the virtual machine</h1><p>Click the ssh button on your VM instance to open the online ssh window</p>
<p>Call the following commands:</p>
<p>Create .ssh folder</p>
<p>sudo mkdir -p ~/.ssh</p>
<p>Write the key to the <code>authorized_keys</code> file</p>
<p>sudo echo your_copied_key_here &gt;&gt; ~/.ssh/authorized_keys</p>
<p>Set permission for the file and folder</p>
<p>sudo chmod -R go= ~/.ssh</p>
<h1 id="4-Connect-with-WinSCP"><a href="#4-Connect-with-WinSCP" class="headerlink" title="4. Connect with WinSCP"></a>4. Connect with <a href="https://github.com/winscp/winscp">WinSCP</a></h1><p>Wait, the title said Putty isn’t it? Hang on; we are getting there.</p>
<p><a href="https://github.com/winscp/winscp">WinSCP</a> is a popular SFTP client and FTP client for Microsoft Windows, as they said. It’s open-source and can be installed via <a href="https://www.microsoft.com/store/apps/9p0pq8b65n8x">MS Store</a> or <a href="https://chocolatey.org/packages/winscp">Chocolatey</a></p>
<p>Filled in the information you have. The username IS the key comment you set above. Then click on <code>Advanced...</code></p>
<p><img src="https://i.imgur.com/VW4Xk88.png" alt="winscp"></p>
<p>Choose <code>Environment</code> &gt; <code>SFTP</code>, then paste this line to the box <code>SFTP Server</code> to allow root permission on all files and folders</p>
<blockquote>
<p>This works with Ubuntu only. Other distribution may have a different location of <code>sftp-server</code></p>
</blockquote>
<p>sudo su -c /usr/lib/openssh/sftp-server</p>
<p><img src="https://i.imgur.com/dIgyNUA.png" alt="sudo"></p>
<p>Choose SSH &gt; Authentication and browse to the private key you saved before. Click OK to go back to the login screen</p>
<p><img src="https://i.imgur.com/x9MyGPp.png" alt="private key"></p>
<p>When logging in, you will be asked for the password. This is the password you’ve set for your private key before.</p>
<p>After connecting, click Commands &gt; Open in PuTTY, and voilà, the ssh window appeared and connected, asking for the same password.</p>
<p><img src="https://i.imgur.com/iMSGvYB.png" alt="open in putty"></p>
<p><img src="https://i.imgur.com/qKuzGiy.png" alt="console"></p>
<p>I don’t know why, but connect directly with PuTTY or SuperPuTTY DOES NOT WORK.</p>
]]></content>
      <categories>
        <category>Others</category>
      </categories>
      <tags>
        <tag>virtual machine</tag>
        <tag>compute engine</tag>
        <tag>google cloud</tag>
        <tag>putty</tag>
      </tags>
  </entry>
  <entry>
    <title>Migrate Azure DevOps TFS to Git reserving history</title>
    <url>/2020/07/30/migrate-azure-devops-tfs-to-git-reserving-history/</url>
    <content><![CDATA[<p>Microsoft acquired GitHub, and everyone has an unlimited number of private repositories. This reason alone makes me want to move all my project and source code to GitHub.</p>
<span id="more"></span>

<ul>
<li>  <a href="#1-a-bit-of-history">1. A bit of history</a></li>
<li>  <a href="#2-required-tools">2. Required tools</a></li>
<li><a href="#3-migration-steps">3. Migration steps</a><ul>
<li>  <a href="#31-clone-the-tfs-project">3.1. Clone the TFS project</a></li>
<li>  <a href="#32-add-gitignore">3.2. Add .gitignore</a></li>
<li>  <a href="#33-push-code">3.3. Push code</a></li>
</ul>
</li>
</ul>
<h1 id="1-A-bit-of-history"><a href="#1-A-bit-of-history" class="headerlink" title="1. A bit of history"></a>1. A bit of history</h1><p>In around 2012, developers don’t have many choices in <em>where</em> to store their code for free. Sure, you can use GitHub, but it limits the number of private repositories and the number of collaborators. The obvious choice at that time was <code>Visual Studio Online</code>, or today <code>Azure DevOps</code>. The only source control system it is provided is Team Foundation Server (TFS).</p>
<p>Today, 9.99 over 10 developers will choose <code>git</code> over <code>tfs</code>, and we need a way to migrate from TFS, <em>with history</em>, to git.</p>
<h1 id="2-Required-tools"><a href="#2-Required-tools" class="headerlink" title="2. Required tools"></a>2. Required tools</h1><ul>
<li>  <a href="https://git-scm.com/">git</a></li>
<li>  <a href="https://github.com/git-tfs/git-tfs">git-tfs</a></li>
</ul>
<blockquote>
<p>Alternatively, you can install git-tf with Chocolatey:</p>
<p><code>choco install gittfs</code></p>
</blockquote>
<h1 id="3-Migration-steps"><a href="#3-Migration-steps" class="headerlink" title="3. Migration steps"></a>3. Migration steps</h1><h2 id="3-1-Clone-the-TFS-project"><a href="#3-1-Clone-the-TFS-project" class="headerlink" title="3.1. Clone the TFS project"></a>3.1. Clone the TFS project</h2><pre class="line-numbers language-s" data-language="s"><code class="language-s">git-tfs clone https:&#x2F;&#x2F;your\_organization.visualstudio.com&#x2F; $&#x2F;your\_project\_name</code></pre>

<p>If your project name contains whitespace, just put the whole name in the quote mark</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">git-tfs clone https:&#x2F;&#x2F;your\_organization.visualstudio.com&#x2F; &quot;$&#x2F;your project name&quot;</code></pre>

<p>This command will clone the project to the folder you run the command</p>
<h2 id="3-2-Add-gitignore"><a href="#3-2-Add-gitignore" class="headerlink" title="3.2. Add .gitignore"></a>3.2. Add .gitignore</h2><p>Now the project is like any other git project, with a <code>.git</code> folder. You should add a <code>.gitignore</code> file to prevent commit unwanted files.</p>
<p>A sample <code>.gitinore</code> file here: <a href="https://www.toptal.com/developers/gitignore/api/visualstudio">Visual Studio Git Ignore</a></p>
<h2 id="3-3-Push-code"><a href="#3-3-Push-code" class="headerlink" title="3.3. Push code"></a>3.3. Push code</h2><p>The final step is to push code to your favorite git service.</p>
]]></content>
      <categories>
        <category>Others</category>
        <category>Computer Tips</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>TFS</tag>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub codespaces - write code in web browser</title>
    <url>/2020/09/03/GitHub-codespace-write-code-in-web-browser/</url>
    <content><![CDATA[<p>After coming home with Microsoft, more and more good and free things come to GitHub. This time, a long-awaited features are in beta, invitation-only, and it is <code>GitHub Codespaces</code>.</p>
<span id="more"></span>

<!-- TOC -->

<ul>
<li><a href="#1-extremely-short-introduction">1. Extremely short introduction</a></li>
<li><a href="#2-using-github-codespaces">2. Using GitHub codespaces</a><ul>
<li><a href="#21-change-theme">2.1. Change theme</a></li>
<li><a href="#22-settings">2.2. Settings</a></li>
<li><a href="#23-install-your-programming-language-extensions">2.3. Install your programming language extensions</a></li>
<li><a href="#24-work-with-multiple-repository">2.4. Work with multiple repository</a></li>
</ul>
</li>
<li><a href="#3-some-interesting-things-i-found">3. Some interesting things I found</a></li>
</ul>
<!-- /TOC -->

<h1 id="1-Extremely-short-introduction"><a href="#1-Extremely-short-introduction" class="headerlink" title="1. Extremely short introduction"></a>1. Extremely short introduction</h1><p><a id="markdown-extremely-short-introduction" name="extremely-short-introduction"></a></p>
<p>Codespaces, in short, is a Linux virtual machine running <code>vscode</code> server and allows you to access it via any web browser.</p>
<p>Microsoft introduces its codespaces first in <a href="https://azure.microsoft.com/en-us/services/visual-studio-online/">Visual Studio Online</a>, using your Azure account to charge. “GitHub codespaces” is in the early access stage, so everything is free for now.</p>
<p>To request early access to GitHub codespaces, here is the link: <a href="https://github.com/features/codespaces">https://github.com/features/codespaces</a></p>
<h1 id="2-Using-GitHub-codespaces"><a href="#2-Using-GitHub-codespaces" class="headerlink" title="2. Using GitHub codespaces"></a>2. Using GitHub codespaces</h1><p><a id="markdown-using-github-codespaces" name="using-github-codespaces"></a></p>
<p>When you’re invited to use codespaces, your GitHub’s repositories will have another option in open button</p>
<p><img src="https://i.imgur.com/CB6VdCg.png" alt="open button"></p>
<h2 id="2-1-Change-theme"><a href="#2-1-Change-theme" class="headerlink" title="2.1. Change theme"></a>2.1. Change theme</h2><p><a id="markdown-change-theme" name="change-theme"></a></p>
<p>The default theme for VSCode is light. Light attracting bugs. So we need to change it to dark</p>
<p>The typical themes used by <code>vscode</code> is not working, so we need to use an extension developed by GitHub called <code>github theme</code></p>
<p><img src="https://i.imgur.com/osKi6Sl.png" alt="themes"></p>
<p>Sadly, the icon theme is fixed with 1 of the two default set.</p>
<h2 id="2-2-Settings"><a href="#2-2-Settings" class="headerlink" title="2.2. Settings"></a>2.2. Settings</h2><p><a id="markdown-settings" name="settings"></a></p>
<p>Except for some settings related to themes and icons that have no effect, almost all other settings are the same. You can just copy and paste the settings from your local <code>vscode</code> to codespaces <code>vscode</code></p>
<h2 id="2-3-Install-your-programming-language-extensions"><a href="#2-3-Install-your-programming-language-extensions" class="headerlink" title="2.3. Install your programming language extensions"></a>2.3. Install your programming language extensions</h2><p><a id="markdown-install-your-programming-language-extensions" name="install-your-programming-language-extensions"></a></p>
<p>I think every programming language extension worked as it should be, but first, you will need to set up the development environment in Linux.</p>
<p>For example, to use Java, you will need to install JDK on Linux, then Java Extension Pack for a complete list of Java extensions in vscode.</p>
<p>C/C++ and Python extensions are pre-installed</p>
<p>When you open a project, based on the language, some language extension will be pre-installed</p>
<h2 id="2-4-Work-with-multiple-repository"><a href="#2-4-Work-with-multiple-repository" class="headerlink" title="2.4. Work with multiple repository"></a>2.4. Work with multiple repository</h2><p><a id="markdown-work-with-multiple-repository" name="work-with-multiple-repository"></a></p>
<p>By default, one codespace can only work with one repository. I will use the SSH key to have access to every repository on my Github.</p>
<ol>
<li>Generate SSH key</li>
</ol>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">$ ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</code></pre>

<ol start="2">
<li>Add ssh key to ssh agent</li>
</ol>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">$ eval &quot;$(ssh-agent -s)&quot;
&gt; Agent pid xxxxx
$ ssh-add ~&#x2F;.ssh&#x2F;id_rsa</code></pre>

<ol start="3">
<li>Add the public key to GitHub</li>
</ol>
<p>Add the key to settings at <a href="https://github.com/settings/keys">SSH settings</a></p>
<ol start="4">
<li>Change repo remote URL from HTTPS to SSH</li>
</ol>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">git remote set-url origin git@github.com:&lt;Username&gt;&#x2F;&lt;Project&gt;.git</code></pre>

<p>That’s it</p>
<h1 id="3-Some-interesting-things-I-found"><a href="#3-Some-interesting-things-I-found" class="headerlink" title="3. Some interesting things I found"></a>3. Some interesting things I found</h1><p><a id="markdown-some-interesting-things-i-found" name="some-interesting-things-i-found"></a></p>
<ul>
<li>The codespaces running on Debian 9.13 - <code>lsb_release -a</code></li>
<li>4GB of RAM - <code>free -m</code></li>
<li>Using 2 core of the Intel(R) Xeon(R) Platinum 8168 CPU @ 2.70GHz - <code>less /proc/cpuinfo</code> and <code>cat /proc/cpuinfo | grep processor | wc -l</code></li>
</ul>
<p>The <code>vscode</code> version is the latest Insider version, so expect some errors and unstable features</p>
]]></content>
      <categories>
        <category>Others</category>
        <category>Computer Tips</category>
      </categories>
      <tags>
        <tag>github</tag>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>Grammar Regex Pattern cheat sheet for NLTK Part-of-Speech Tagging</title>
    <url>/2020/10/09/Grammar-Regex-Pattern-for-NLTK-Part-of-Speech-Tagging/</url>
    <content><![CDATA[<p>NLTK has a function called <code>regexpparser</code> to parse the Part-of-Speech tagged sentence. I cannot find a good and short explanation for the Regex pattern. So here is one.</p>
<span id="more"></span>

<!-- TOC -->

<ul>
<li><a href="#1-part-of-speech-tagging">1. Part-of-Speech tagging</a><ul>
<li><a href="#11-the-tags-and-explanations">1.1. The tags and explanations</a></li>
<li><a href="#12-tagging-them">1.2. Tagging them</a></li>
</ul>
</li>
<li><a href="#2-regular-expression-regex-grammar">2. Regular Expression regex grammar</a><ul>
<li><a href="#21-exact-match">2.1. Exact match</a></li>
<li><a href="#22-skip-some-tags">2.2. Skip some tags</a></li>
<li><a href="#23-match-all-tags-start-with-a-character">2.3. Match all tags start with a character</a></li>
</ul>
</li>
<li><a href="#3-match-multiple-grammars">3. Match multiple grammars</a></li>
<li><a href="#4-full-list-of-tags">4. Full list of tags</a></li>
</ul>
<!-- /TOC -->

<p><img src="https://i.imgur.com/NMl56Bk.png" alt="tag"></p>
<h1 id="1-Part-of-Speech-tagging"><a href="#1-Part-of-Speech-tagging" class="headerlink" title="1. Part-of-Speech tagging"></a>1. Part-of-Speech tagging</h1><p><a id="markdown-part-of-speech-tagging" name="part-of-speech-tagging"></a></p>
<p>This action simply <em><strong>tag</strong></em> your tokenized words with the word type, for example, verb, noun, adjective, etc.</p>
<h2 id="1-1-The-tags-and-explanations"><a href="#1-1-The-tags-and-explanations" class="headerlink" title="1.1. The tags and explanations"></a>1.1. The tags and explanations</h2><p><a id="markdown-the-tags-and-explanations" name="the-tags-and-explanations"></a></p>
<p>The complete list of tags can be shown when running the command</p>
<pre class="line-numbers language-py" data-language="py"><code class="language-py">nltk.help.upenn_tagset()</code></pre>

<p>For the complete list of explanations, scroll to the bottom of this post.</p>
<h2 id="1-2-Tagging-them"><a href="#1-2-Tagging-them" class="headerlink" title="1.2. Tagging them"></a>1.2. Tagging them</h2><p><a id="markdown-tagging-them" name="tagging-them"></a></p>
<p>For example, when you have the sentence:</p>
<pre class="line-numbers language-none"><code class="language-none">The quick brown fox jumps over the lazy dog</code></pre>

<p>The process should be something like this</p>
<pre class="line-numbers language-py" data-language="py"><code class="language-py">sentence &#x3D; &#39;The quick brown fox jumps over the lazy dog&#39;
tokens &#x3D; nltk.tokenize.word_tokenize(sentence)
tags &#x3D; nltk.pos_tag(tokens)

# result of &#39;tags&#39;
# [(&#39;The&#39;, &#39;DT&#39;), (&#39;quick&#39;, &#39;JJ&#39;), (&#39;brown&#39;, &#39;NN&#39;), (&#39;fox&#39;, &#39;NN&#39;), (&#39;jumps&#39;, &#39;VBZ&#39;), (&#39;over&#39;, &#39;IN&#39;), (&#39;the&#39;, &#39;DT&#39;), (&#39;lazy&#39;, &#39;JJ&#39;), (&#39;dog&#39;, &#39;NN&#39;)]</code></pre>

<h1 id="2-Regular-Expression-regex-grammar"><a href="#2-Regular-Expression-regex-grammar" class="headerlink" title="2. Regular Expression (regex) grammar"></a>2. Regular Expression (regex) grammar</h1><p><a id="markdown-regular-expression-regex-grammar" name="regular-expression-regex-grammar"></a></p>
<p>The regular expression with nltk tokens is quite different from standard text. The grammar treats each token as a string of text and applies the regex pattern on that string matched to the position of the token in the sentence.</p>
<p>Below I will present a list of grammar, from the most simple to the more complex one, using the same sentence above</p>
<h2 id="2-1-Exact-match"><a href="#2-1-Exact-match" class="headerlink" title="2.1. Exact match"></a>2.1. Exact match</h2><p><a id="markdown-exact-match" name="exact-match"></a></p>
<pre class="line-numbers language-py" data-language="py"><code class="language-py">sentence &#x3D; &#39;The quick brown fox jumps over the lazy dog&#39;
tokens &#x3D; nltk.tokenize.word_tokenize(sentence)
tags &#x3D; nltk.pos_tag(tokens)

# result of &#39;tags&#39;
# [(&#39;The&#39;, &#39;DT&#39;), (&#39;quick&#39;, &#39;JJ&#39;), (&#39;brown&#39;, &#39;NN&#39;), (&#39;fox&#39;, &#39;NN&#39;), (&#39;jumps&#39;, &#39;VBZ&#39;), (&#39;over&#39;, &#39;IN&#39;), (&#39;the&#39;, &#39;DT&#39;), (&#39;lazy&#39;, &#39;JJ&#39;), (&#39;dog&#39;, &#39;NN&#39;)]

grammar &#x3D; &#39;exact: &#123;&lt;DT&gt;&lt;JJ&gt;&lt;NN&gt;&lt;NN&gt;&#125;&#39;
parser &#x3D; nltk.RegexpParser(grammar)
result &#x3D; parser.parse(tags)

# parsed result
# Tree
# (&#39;S&#39;, [Tree(&#39;exact&#39;, [(&#39;The&#39;, &#39;DT&#39;), (&#39;quick&#39;, &#39;JJ&#39;), (&#39;brown&#39;, &#39;NN&#39;), (&#39;fox&#39;, &#39;NN&#39;)]), 
# (&#39;jumps&#39;, &#39;VBZ&#39;),
# (&#39;over&#39;, &#39;IN&#39;),
# (&#39;the&#39;, &#39;DT&#39;),
# (&#39;lazy&#39;, &#39;JJ&#39;),
# (&#39;dog&#39;, &#39;NN&#39;)])</code></pre>

<h2 id="2-2-Skip-some-tags"><a href="#2-2-Skip-some-tags" class="headerlink" title="2.2. Skip some tags"></a>2.2. Skip some tags</h2><p><a id="markdown-skip-some-tags" name="skip-some-tags"></a></p>
<p>We will skip all tags between <code>The</code> and <code>fox</code> (between DT and NN tags)</p>
<pre class="line-numbers language-py" data-language="py"><code class="language-py">sentence &#x3D; &#39;The quick brown fox jumps over the lazy dog&#39;
tokens &#x3D; nltk.tokenize.word_tokenize(sentence)
tags &#x3D; nltk.pos_tag(tokens)

# result of &#39;tags&#39;
# [(&#39;The&#39;, &#39;DT&#39;), (&#39;quick&#39;, &#39;JJ&#39;), (&#39;brown&#39;, &#39;NN&#39;), (&#39;fox&#39;, &#39;NN&#39;), (&#39;jumps&#39;, &#39;VBZ&#39;), (&#39;over&#39;, &#39;IN&#39;), (&#39;the&#39;, &#39;DT&#39;), (&#39;lazy&#39;, &#39;JJ&#39;), (&#39;dog&#39;, &#39;NN&#39;)]

grammar &#x3D; &#39;exact: &#123;&lt;DT&gt;&lt;.*&gt;*&lt;VBZ&gt;&#125;&#39;
parser &#x3D; nltk.RegexpParser(grammar)
result &#x3D; parser.parse(tags)

# parsed result
# Tree
# (&#39;S&#39;, [Tree(&#39;exact&#39;, [(&#39;The&#39;, &#39;DT&#39;), (&#39;quick&#39;, &#39;JJ&#39;), (&#39;brown&#39;, &#39;NN&#39;), (&#39;fox&#39;, &#39;NN&#39;), (&#39;jumps&#39;, &#39;VBZ&#39;)]), 
# (&#39;over&#39;, &#39;IN&#39;), 
# (&#39;the&#39;, &#39;DT&#39;), 
# (&#39;lazy&#39;, &#39;JJ&#39;), 
# (&#39;dog&#39;, &#39;NN&#39;)])</code></pre>

<p>Explanation:</p>
<p><code>&lt;.*&gt;</code> means match every tag. The dot (.) mean match every character (of the tag). The asterisk (*) means repeat match from 0 to unlimited time.</p>
<p>The next asterisk (*) right behind it means repeat the matching tags from 0 to unlimited time.</p>
<h2 id="2-3-Match-all-tags-start-with-a-character"><a href="#2-3-Match-all-tags-start-with-a-character" class="headerlink" title="2.3. Match all tags start with a character"></a>2.3. Match all tags start with a character</h2><p><a id="markdown-match-all-tags-start-with-a-character" name="match-all-tags-start-with-a-character"></a></p>
<p>We will match all tag starting with ‘N’, this is including ‘NN’, ‘NNP’, ‘NNPS’, ‘NNS’ tags</p>
<pre class="line-numbers language-py" data-language="py"><code class="language-py">sentence &#x3D; &#39;The quick brown fox jumps over the lazy dog&#39;
tokens &#x3D; nltk.tokenize.word_tokenize(sentence)
tags &#x3D; nltk.pos_tag(tokens)

# result of &#39;tags&#39;
# [(&#39;The&#39;, &#39;DT&#39;), (&#39;quick&#39;, &#39;JJ&#39;), (&#39;brown&#39;, &#39;NN&#39;), (&#39;fox&#39;, &#39;NN&#39;), (&#39;jumps&#39;, &#39;VBZ&#39;), (&#39;over&#39;, &#39;IN&#39;), (&#39;the&#39;, &#39;DT&#39;), (&#39;lazy&#39;, &#39;JJ&#39;), (&#39;dog&#39;, &#39;NN&#39;)]

grammar &#x3D; &#39;exact: &#123;&lt;N.*&gt;&#125;&#39;
parser &#x3D; nltk.RegexpParser(grammar)
result &#x3D; parser.parse(tags)

# parsed result
# Tree
# (&#39;S&#39;, [(&#39;The&#39;, &#39;DT&#39;), 
# (&#39;quick&#39;, &#39;JJ&#39;), 
# Tree(&#39;exact&#39;, [(&#39;brown&#39;, &#39;NN&#39;)]), 
# Tree(&#39;exact&#39;, [(&#39;fox&#39;, &#39;NN&#39;)]), 
# (&#39;jumps&#39;, &#39;VBZ&#39;), 
# (&#39;over&#39;, &#39;IN&#39;), 
# (&#39;the&#39;, &#39;DT&#39;), 
# (&#39;lazy&#39;, &#39;JJ&#39;), 
# Tree(&#39;exact&#39;, 
# [(&#39;dog&#39;, &#39;NN&#39;)])])</code></pre>

<h1 id="3-Match-multiple-grammars"><a href="#3-Match-multiple-grammars" class="headerlink" title="3. Match multiple grammars"></a>3. Match multiple grammars</h1><p><a id="markdown-match-multiple-grammars" name="match-multiple-grammars"></a></p>
<p>To use multiple grammars to scan your text, simply combine them with newline character <code>\n</code></p>
<p>For example:</p>
<p>Single pattern grammar</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">grammar &#x3D; &#39;exact: &#123;&lt;N.*&gt;&#125;&#39;</code></pre>

<p>Multiple patterns grammar</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">grammars &#x3D; &#39;n_tags: &#123;&lt;N.*&gt;&#125;
            skip_tags: exact: &#123;&lt;DT&gt;&lt;.*&gt;*&lt;VBZ&gt;&#125;&#39;</code></pre>

<h1 id="4-Full-list-of-tags"><a href="#4-Full-list-of-tags" class="headerlink" title="4. Full list of tags"></a>4. Full list of tags</h1><p><a id="markdown-full-list-of-tags" name="full-list-of-tags"></a></p>
<p>Here is the full list of tags to save you some time:</p>
<table>
<thead>
<tr>
<th><strong>Tag</strong></th>
<th><strong>Explanation</strong></th>
</tr>
</thead>
<tbody><tr>
<td>CC</td>
<td>conjunction,   coordinating</td>
</tr>
<tr>
<td></td>
<td>&amp; ‘n and both but either et for less   minus neither nor or plus so</td>
</tr>
<tr>
<td></td>
<td>therefore   times v. versus vs. whether yet</td>
</tr>
<tr>
<td>CD</td>
<td>numeral, cardinal</td>
</tr>
<tr>
<td></td>
<td>mid-1890   nine-thirty forty-two one-tenth ten million 0.5 one forty-</td>
</tr>
<tr>
<td></td>
<td>seven 1987 twenty ‘79 zero two   78-degrees eighty-four IX ‘60s .025</td>
</tr>
<tr>
<td></td>
<td>fifteen   271,124 dozen quintillion DM2,000 …</td>
</tr>
<tr>
<td>DT</td>
<td>determiner</td>
</tr>
<tr>
<td></td>
<td>all   an another any both del each either every half la many much nary</td>
</tr>
<tr>
<td></td>
<td>neither no some such that the them these   this those</td>
</tr>
<tr>
<td>EX</td>
<td>existential   there</td>
</tr>
<tr>
<td></td>
<td>there</td>
</tr>
<tr>
<td>FW</td>
<td>foreign   word</td>
</tr>
<tr>
<td></td>
<td>gemeinschaft hund ich jeux habeas   Haementeria Herr K’ang-si vous</td>
</tr>
<tr>
<td></td>
<td>lutihaw   alai je jour objets salutaris fille quibusdam pas trop Monte</td>
</tr>
<tr>
<td></td>
<td>terram fiche oui corporis …</td>
</tr>
<tr>
<td>IN</td>
<td>preposition   or conjunction, subordinating</td>
</tr>
<tr>
<td></td>
<td>astride among uppon whether out inside   pro despite on by throughout</td>
</tr>
<tr>
<td></td>
<td>below   within for towards near behind atop around if like until below</td>
</tr>
<tr>
<td></td>
<td>next into if beside …</td>
</tr>
<tr>
<td>JJ</td>
<td>adjective   or numeral, ordinal</td>
</tr>
<tr>
<td></td>
<td>third ill-mannered pre-war regrettable   oiled calamitous first separable</td>
</tr>
<tr>
<td></td>
<td>ectoplasmic   battery-powered participatory fourth still-to-be-named</td>
</tr>
<tr>
<td></td>
<td>multilingual multi-disciplinary …</td>
</tr>
<tr>
<td>JJR</td>
<td>adjective,   comparative</td>
</tr>
<tr>
<td></td>
<td>bleaker braver breezier briefer brighter   brisker broader bumper busier</td>
</tr>
<tr>
<td></td>
<td>calmer   cheaper choosier cleaner clearer closer colder commoner costlier</td>
</tr>
<tr>
<td></td>
<td>cozier creamier crunchier cuter …</td>
</tr>
<tr>
<td>JJS</td>
<td>adjective,   superlative</td>
</tr>
<tr>
<td></td>
<td>calmest cheapest choicest classiest   cleanest clearest closest commonest</td>
</tr>
<tr>
<td></td>
<td>corniest   costliest crassest creepiest crudest cutest darkest deadliest</td>
</tr>
<tr>
<td></td>
<td>dearest deepest densest dinkiest …</td>
</tr>
<tr>
<td>LS</td>
<td>list   item marker</td>
</tr>
<tr>
<td></td>
<td>A A. B B. C C. D E F First G H I J K One   SP-44001 SP-44002 SP-44005</td>
</tr>
<tr>
<td></td>
<td>SP-44007   Second Third Three Two * a b c d first five four one six three</td>
</tr>
<tr>
<td></td>
<td>two</td>
</tr>
<tr>
<td>MD</td>
<td>modal   auxiliary</td>
</tr>
<tr>
<td></td>
<td>can cannot could couldn’t dare may might   must need ought shall should</td>
</tr>
<tr>
<td></td>
<td>shouldn’t   will would</td>
</tr>
<tr>
<td>NN</td>
<td>noun, common, singular or mass</td>
</tr>
<tr>
<td></td>
<td>common-carrier   cabbage knuckle-duster Casino afghan shed thermostat</td>
</tr>
<tr>
<td></td>
<td>investment slide humour falloff slick   wind hyena override subhumanity</td>
</tr>
<tr>
<td></td>
<td>machinist   …</td>
</tr>
<tr>
<td>NNP</td>
<td>noun, proper, singular</td>
</tr>
<tr>
<td></td>
<td>Motown   Venneboerger Czestochwa Ranzer Conchita Trumplane Christos</td>
</tr>
<tr>
<td></td>
<td>Oceanside Escobar Kreisler Sawyer Cougar   Yvette Ervin ODI Darryl CTCA</td>
</tr>
<tr>
<td></td>
<td>Shannon   A.K.C. Meltex Liverpool …</td>
</tr>
<tr>
<td>NNPS</td>
<td>noun, proper, plural</td>
</tr>
<tr>
<td></td>
<td>Americans   Americas Amharas Amityvilles Amusements Anarcho-Syndicalists</td>
</tr>
<tr>
<td></td>
<td>Andalusians Andes Andruses Angels   Animals Anthony Antilles Antiques</td>
</tr>
<tr>
<td></td>
<td>Apache   Apaches Apocrypha …</td>
</tr>
<tr>
<td>NNS</td>
<td>noun, common, plural</td>
</tr>
<tr>
<td></td>
<td>undergraduates   scotches bric-a-brac products bodyguards facets coasts</td>
</tr>
<tr>
<td></td>
<td>divestitures storehouses designs clubs   fragrances averages</td>
</tr>
<tr>
<td></td>
<td>subjectivists   apprehensions muses factory-jobs …</td>
</tr>
<tr>
<td>PDT</td>
<td>pre-determiner</td>
</tr>
<tr>
<td></td>
<td>all   both half many quite such sure this</td>
</tr>
<tr>
<td>POS</td>
<td>genitive marker</td>
</tr>
<tr>
<td></td>
<td>‘   ‘s</td>
</tr>
<tr>
<td>PRP</td>
<td>pronoun, personal</td>
</tr>
<tr>
<td></td>
<td>hers   herself him himself hisself it itself me myself one oneself ours</td>
</tr>
<tr>
<td></td>
<td>ourselves ownself self she thee theirs   them themselves they thou thy us</td>
</tr>
<tr>
<td>PRP$</td>
<td>pronoun,   possessive</td>
</tr>
<tr>
<td></td>
<td>her his mine my our ours their thy your</td>
</tr>
<tr>
<td>RB</td>
<td>adverb</td>
</tr>
<tr>
<td></td>
<td>occasionally unabatingly maddeningly   adventurously professedly</td>
</tr>
<tr>
<td></td>
<td>stirringly   prominently technologically magisterially predominately</td>
</tr>
<tr>
<td></td>
<td>swiftly fiscally pitilessly …</td>
</tr>
<tr>
<td>RBR</td>
<td>adverb,   comparative</td>
</tr>
<tr>
<td></td>
<td>further gloomier grander graver greater   grimmer harder harsher</td>
</tr>
<tr>
<td></td>
<td>healthier   heavier higher however larger later leaner lengthier less-</td>
</tr>
<tr>
<td></td>
<td>perfectly lesser lonelier longer louder   lower more …</td>
</tr>
<tr>
<td>RBS</td>
<td>adverb,   superlative</td>
</tr>
<tr>
<td></td>
<td>best biggest bluntest earliest farthest   first furthest hardest</td>
</tr>
<tr>
<td></td>
<td>heartiest   highest largest least less most nearest second tightest worst</td>
</tr>
<tr>
<td>RP</td>
<td>particle</td>
</tr>
<tr>
<td></td>
<td>aboard   about across along apart around aside at away back before behind</td>
</tr>
<tr>
<td></td>
<td>by crop down ever fast for forth from go   high i.e. in into just later</td>
</tr>
<tr>
<td></td>
<td>low   more off on open out over per pie raising start teeth that through</td>
</tr>
<tr>
<td></td>
<td>under unto up up-pp upon whole with you</td>
</tr>
<tr>
<td>SYM</td>
<td>symbol</td>
</tr>
<tr>
<td></td>
<td>% &amp; ‘ ‘’ ‘’. ) ). * + ,. &lt; = &gt;   @ A[fj] U.S U.S.S.R * ** ***</td>
</tr>
<tr>
<td>TO</td>
<td>to   as preposition or infinitive marker</td>
</tr>
<tr>
<td></td>
<td>to</td>
</tr>
<tr>
<td>UH</td>
<td>interjection</td>
</tr>
<tr>
<td></td>
<td>Goodbye Goody Gosh Wow Jeepers Jee-sus   Hubba Hey Kee-reist Oops amen</td>
</tr>
<tr>
<td></td>
<td>huh   howdy uh dammit whammo shucks heck anyways whodunnit honey golly</td>
</tr>
<tr>
<td></td>
<td>man baby diddle hush sonuvabitch …</td>
</tr>
<tr>
<td>VB</td>
<td>verb,   base form</td>
</tr>
<tr>
<td></td>
<td>ask assemble assess assign assume atone   attention avoid bake balkanize</td>
</tr>
<tr>
<td></td>
<td>bank   begin behold believe bend benefit bevel beware bless boil bomb</td>
</tr>
<tr>
<td></td>
<td>boost brace break bring broil brush   build …</td>
</tr>
<tr>
<td>VBD</td>
<td>verb,   past tense</td>
</tr>
<tr>
<td></td>
<td>dipped pleaded swiped regummed soaked   tidied convened halted registered</td>
</tr>
<tr>
<td></td>
<td>cushioned   exacted snubbed strode aimed adopted belied figgered</td>
</tr>
<tr>
<td></td>
<td>speculated wore appreciated contemplated   …</td>
</tr>
<tr>
<td>VBG</td>
<td>verb,   present participle or gerund</td>
</tr>
<tr>
<td></td>
<td>telegraphing stirring focusing angering   judging stalling lactating</td>
</tr>
<tr>
<td></td>
<td>hankerin’   alleging veering capping approaching traveling besieging</td>
</tr>
<tr>
<td></td>
<td>encrypting interrupting erasing wincing   …</td>
</tr>
<tr>
<td>VBN</td>
<td>verb,   past participle</td>
</tr>
<tr>
<td></td>
<td>multihulled dilapidated aerosolized   chaired languished panelized used</td>
</tr>
<tr>
<td></td>
<td>experimented   flourished imitated reunifed factored condensed sheared</td>
</tr>
<tr>
<td></td>
<td>unsettled primed dubbed desired …</td>
</tr>
<tr>
<td>VBP</td>
<td>verb,   present tense, not 3rd person singular</td>
</tr>
<tr>
<td></td>
<td>predominate wrap resort sue twist spill   cure lengthen brush terminate</td>
</tr>
<tr>
<td></td>
<td>appear   tend stray glisten obtain comprise detest tease attract</td>
</tr>
<tr>
<td></td>
<td>emphasize mold postpone sever return wag   …</td>
</tr>
<tr>
<td>VBZ</td>
<td>verb,   present tense, 3rd person singular</td>
</tr>
<tr>
<td></td>
<td>bases reconstructs marks mixes   displeases seals carps weaves snatches</td>
</tr>
<tr>
<td></td>
<td>slumps   stretches authorizes smolders pictures emerges stockpiles</td>
</tr>
<tr>
<td></td>
<td>seduces fizzes uses bolsters slaps   speaks pleads …</td>
</tr>
<tr>
<td>WDT</td>
<td>WH-determiner</td>
</tr>
<tr>
<td></td>
<td>that what whatever which whichever</td>
</tr>
<tr>
<td>WP</td>
<td>WH-pronoun</td>
</tr>
<tr>
<td></td>
<td>that what whatever whatsoever which who   whom whosoever</td>
</tr>
<tr>
<td>WP$</td>
<td>WH-pronoun,   possessive</td>
</tr>
<tr>
<td></td>
<td>whose</td>
</tr>
<tr>
<td>WRB</td>
<td>Wh-adverb</td>
</tr>
<tr>
<td></td>
<td>how however whence whenever where   whereby whereever wherein whereof why</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>research</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>nlp</tag>
        <tag>nltk</tag>
        <tag>research</tag>
      </tags>
  </entry>
  <entry>
    <title>How to download Windows 10 ISO</title>
    <url>/2020/10/17/How-to-download-Windows-10-ISO/</url>
    <content><![CDATA[<p>Step-by-step instructions on how to download Windows 10 ISO.</p>
<span id="more"></span>

<!-- TOC -->

<ul>
<li><a href="#1-solution-1---official---using-media-creation-tool">1. Solution 1 - Official - Using Media Creation Tool</a><ul>
<li><a href="#11-step-1-download-media-creation-tool">1.1. Step 1: Download Media Creation Tool</a></li>
<li><a href="#12-step-2-run-the-tool">1.2. Step 2: Run the tool</a></li>
</ul>
</li>
<li><a href="#2-solution-2---if-youre-using-mac-linux-or-cant-download-using-solution-1">2. Solution 2 - If you’re using Mac, Linux, or can’t download using solution 1</a></li>
</ul>
<!-- /TOC -->

<h1 id="1-Solution-1-Official-Using-Media-Creation-Tool"><a href="#1-Solution-1-Official-Using-Media-Creation-Tool" class="headerlink" title="1. Solution 1 - Official - Using Media Creation Tool"></a>1. Solution 1 - Official - Using Media Creation Tool</h1><p><a id="markdown-solution-1---official---using-media-creation-tool" name="solution-1---official---using-media-creation-tool"></a></p>
<h2 id="1-1-Step-1-Download-Media-Creation-Tool"><a href="#1-1-Step-1-Download-Media-Creation-Tool" class="headerlink" title="1.1. Step 1: Download Media Creation Tool"></a>1.1. Step 1: Download Media Creation Tool</h2><p><a id="markdown-step-1%3A-download-media-creation-tool" name="step-1%3A-download-media-creation-tool"></a></p>
<p>Download the media creation tool at this <a href="https://www.microsoft.com/en-us/software-download/windows10ISO">link</a></p>
<p><img src="https://i.imgur.com/TegGnSZ.png" alt="download the media creation tool"></p>
<h2 id="1-2-Step-2-Run-the-tool"><a href="#1-2-Step-2-Run-the-tool" class="headerlink" title="1.2. Step 2: Run the tool"></a>1.2. Step 2: Run the tool</h2><p><a id="markdown-step-2%3A-run-the-tool" name="step-2%3A-run-the-tool"></a></p>
<p>When running, Windows will ask for administrator permission. Allow it to run.</p>
<p>Accept the license</p>
<p><a href="https://i.imgur.com/KBRa54o.png">license</a></p>
<p>The screen switched to “Getting a few things ready”. Wait for it</p>
<p>Choose “Create installation media for another PC (USB flash drive, DVD or ISO file)”, then click Next</p>
<p><img src="https://i.imgur.com/owBYw6J.png" alt="choose iso"></p>
<p>Click “Use recommended options for this PC”, then click Next</p>
<p><img src="https://i.imgur.com/c0DoUeO.png" alt="options"></p>
<blockquote>
<p>Note: You can choose other options (languages, editions, architectures) as well, ONLY IF you know what these options are. Otherwise, just choose the default options:</p>
<p>Language: English (United States)</p>
<p>Edition: Windows 10</p>
<p>Architecture: 64 bit (x64)</p>
</blockquote>
<p>Select ISO file, then click next</p>
<p><img src="https://i.imgur.com/Or8CwmY.png" alt="iso file"></p>
<p>Select the folder to save the ISO file</p>
<p><img src="https://i.imgur.com/BNBZHwB.png" alt="folder"></p>
<p>Then the download progress will begin. Wait for it to complete.</p>
<p><img src="https://i.imgur.com/vkRkxn0.png" alt="download"></p>
<h1 id="Solution-2-If-you’re-using-Mac-Linux-or-can’t-download-using-solution-1"><a href="#Solution-2-If-you’re-using-Mac-Linux-or-can’t-download-using-solution-1" class="headerlink" title="Solution 2 - If you’re using Mac, Linux, or can’t download using solution 1"></a>Solution 2 - If you’re using Mac, Linux, or can’t download using solution 1</h1><p><a id="markdown-solution-2---if-you're-using-mac%2C-linux%2C-or-can't-download-using-solution-1" name="solution-2---if-you're-using-mac%2C-linux%2C-or-can't-download-using-solution-1"></a></p>
<p>For Mac, Linux user, download the ISO here: <a href="https://www.microsoft.com/en-us/software-download/windows10ISO">https://www.microsoft.com/en-us/software-download/windows10ISO</a></p>
<p>For Windows Users, follow this instruction. It worked on both Google Chrome and Edge Chromium</p>
<p>Step 1: Open Google Chrome or Edge Chromium, then head to the site: <a href="https://www.microsoft.com/en-us/software-download/windows10">https://www.microsoft.com/en-us/software-download/windows10</a></p>
<p>Step 2: Enable Developer Tools by open the settings menu (3 little dots) &gt; More Tools &gt; Developer Tools</p>
<p><img src="https://i.imgur.com/chIvGdc.png" alt="developer"></p>
<p>Step 3: Enable the Network conditions menu by clicking the three little dots INSIDE the developer tools &gt; More tools &gt; Network Conditions</p>
<p><img src="https://i.imgur.com/pR7KwsU.png" alt="network conditions"></p>
<p>Step 4: Under User agent, uncheck “Select automatically”, then choose Safari - Mac in the list right below the checkbox</p>
<p><img src="https://i.imgur.com/g7DjnEH.png" alt="uncheck"></p>
<p>Step 5: Keep the developer tools open, click refresh to reload the download page. This time, when it loads, you’ll see a drop-down menu where you can select the edition of the Windows 10 ISO you want to download.</p>
<p>Choose Windows 10 in the drop-down list, click confirm to validate your request, then choose the language and click confirm.</p>
<p><img src="https://i.imgur.com/Qs2ZaVQ.png" alt="download"></p>
<p>Step 6: After validation, two buttons appeared. Click the 64-bit button to download the 64-bit version of Windows 10</p>
<p><img src="https://i.imgur.com/AdUkNdO.png" alt="actual download"></p>
<blockquote>
<p>The link is valid for your machine only. You cannot share it to other users.</p>
</blockquote>
]]></content>
      <categories>
        <category>Computer Tips</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>iso</tag>
      </tags>
  </entry>
  <entry>
    <title>Coding Game: Shadow of the Knight - Episode 1</title>
    <url>/2020/11/11/Coding-Game-Shadow-of-the-Knight/</url>
    <content><![CDATA[<p>Difficulty: Medium</p>
<p>Original link: <a href="https://www.codingame.com/ide/puzzle/shadows-of-the-knight-episode-1">https://www.codingame.com/ide/puzzle/shadows-of-the-knight-episode-1</a></p>
<p>Language: python</p>
<h1 id="The-Goal"><a href="#The-Goal" class="headerlink" title="The Goal"></a>The Goal</h1><p>Batman will look for the hostages on a given building by jumping from one window to another using his grapnel gun. Batman’s goal is to jump to the window where the hostages are located to disarm the bombs. Unfortunately, he has a limited number of jumps before the bombs go off…</p>
<span id="more"></span>

<h1 id="Rules"><a href="#Rules" class="headerlink" title="Rules"></a>Rules</h1><p>Before each jump, the heat-signature device will provide Batman with the direction of the bombs based on Batman current position:</p>
<ul>
<li>U (Up)</li>
<li>UR (Up-Right)</li>
<li>R (Right)</li>
<li>DR (Down-Right)</li>
<li>D (Down)</li>
<li>DL (Down-Left)</li>
<li>L (Left)</li>
<li>UL (Up-Left)</li>
</ul>
<p>Your mission is to program the device to indicate the location of the next window where Batman should jump to reach the bombs’ room as soon as possible.</p>
<p>Buildings are represented as a rectangular array of windows. The window in the top left corner of the building is at index (0,0).</p>
<h1 id="Explanation"><a href="#Explanation" class="headerlink" title="Explanation"></a>Explanation</h1><p>Batman doesn’t know where the bomb is. On each iteration, the heat-signature device will tell him the <em>direction</em> of the bomb</p>
<h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>We will use binary search on both x and y dimensions.</p>
<p>On each iteration, we will limit the boundary of the search</p>
<h1 id="Source-code"><a href="#Source-code" class="headerlink" title="Source code"></a>Source code</h1><p><a href="https://github.com/huntertran/codinggame/blob/main/shadows-of-the-knight-ep1.py">on Github</a></p>
<pre class="line-numbers language-py" data-language="py"><code class="language-py"># https:&#x2F;&#x2F;www.codingame.com&#x2F;ide&#x2F;puzzle&#x2F;shadows-of-the-knight-episode-1

import sys
import math

# Auto-generated code below aims at helping you parse
# the standard input according to the problem statement.

# w: width of the building.
# h: height of the building.
w, h &#x3D; [int(i) for i in input().split()]
n &#x3D; int(input())  # maximum number of turns before game over.
x0, y0 &#x3D; [int(i) for i in input().split()]

def get_middle_pos(max, current):
    return int(abs((max-current) &#x2F; 2))

def get_reversed_middle_pos(min, current):
    result &#x3D; int(abs((min-current) &#x2F; 2))
    if result &#x3D;&#x3D; 0:
        result &#x3D; 1
    return result

x &#x3D; x0
y &#x3D; y0

print(&quot;W: &quot; + str(w), file&#x3D;sys.stderr, flush&#x3D;True)
print(&quot;H: &quot; + str(h), file&#x3D;sys.stderr, flush&#x3D;True)

min_x &#x3D; 0
min_y &#x3D; 0

max_x &#x3D; w
max_y &#x3D; h

# game loop
while True:
    bomb_dir &#x3D; input()  # the direction of the bombs from Batman&#39;s current location (U, UR, R, DR, D, DL, L or UL)

    # Write an action using print
    # To debug: print(&quot;Debug messages...&quot;, file&#x3D;sys.stderr, flush&#x3D;True)

    jump_x &#x3D; 0
    jump_y &#x3D; 0

    if &quot;U&quot; in bomb_dir:
        max_y &#x3D; y
        jump_y &#x3D; 0 - get_reversed_middle_pos(min_y, y)
    
    if &quot;D&quot; in bomb_dir:
        min_y &#x3D; y
        jump_y &#x3D; get_middle_pos(max_y, y)

    if &quot;L&quot; in bomb_dir:
        max_x &#x3D; x
        jump_x &#x3D; 0 - get_reversed_middle_pos(min_x, x)

    if &quot;R&quot; in bomb_dir:
        min_x &#x3D; x
        jump_x &#x3D; get_middle_pos(max_x, x)


    x &#x3D; x + jump_x
    y &#x3D; y + jump_y

    # the location of the next window Batman should jump to.
    print(str(x) + &quot; &quot; + str(y))</code></pre>
]]></content>
      <categories>
        <category>Coding Challenges</category>
      </categories>
      <tags>
        <tag>coding</tag>
        <tag>challenge</tag>
      </tags>
  </entry>
  <entry>
    <title>Troubleshoot microphone problems</title>
    <url>/2020/11/15/troubleshoot-microphone-problems/</url>
    <content><![CDATA[<p>Step-by-step instruction on how to:</p>
<ul>
<li>Enable/Disable microphone</li>
<li>boost your Microphone volume</li>
<li>listen to your Microphone</li>
<li>fix Microphone is disabled on a laptop running on battery</li>
<li>fix weird sounds</li>
</ul>
<span id="more"></span>

<p>Are you having a problem with the Microphone? Here are steps by steps instruction on how to troubleshoot them</p>
<h1 id="Step-0-Test-your-Microphone"><a href="#Step-0-Test-your-Microphone" class="headerlink" title="Step 0: Test your Microphone"></a>Step 0: Test your Microphone</h1><p>Right-click on the speaker icon next to the clock at the corner of the screen &gt; Open sounds settings</p>
<p><img src="https://i.imgur.com/DUxVRNz.png" alt="open sound settings"></p>
<p>On the Sound setting page, scroll down to the Input section.</p>
<p>Under Test your Microphone, there should be a bar jumping up and down when you say something loud</p>
<p><img src="https://i.imgur.com/fSYxGL5.png" alt="test"></p>
<p>If you don’t see it jumping, try changing the input device in the dropdown list above to another one</p>
<h1 id="Step-1-Open-Microphone-Property"><a href="#Step-1-Open-Microphone-Property" class="headerlink" title="Step 1: Open Microphone Property"></a>Step 1: Open Microphone Property</h1><p>Right-click on the speaker icon next to the clock at the corner of the screen &gt; Open sounds settings</p>
<p><img src="https://i.imgur.com/DUxVRNz.png" alt="open sound settings"></p>
<p>In sound settings, under the input section, click Device Property</p>
<p><img src="https://i.imgur.com/8EoZfR8.png" alt="device property"></p>
<h1 id="Step-2-Disable-Enable-microphone"><a href="#Step-2-Disable-Enable-microphone" class="headerlink" title="Step 2: Disable / Enable microphone"></a>Step 2: Disable / Enable microphone</h1><p>In the “Device Property” setting window, check/uncheck the Disable checkbox to enable/disable the Microphone</p>
<p><img src="https://i.imgur.com/9MXvyw7.png" alt="disable"></p>
<h1 id="Step-3-Adjust-the-Boost-levels"><a href="#Step-3-Adjust-the-Boost-levels" class="headerlink" title="Step 3: Adjust the Boost levels"></a>Step 3: Adjust the Boost levels</h1><p>Click Additional device properties in Related Settings</p>
<p><img src="https://i.imgur.com/cXYq9Va.png" alt="additional"></p>
<p>In the Microphone Properties window, switch to the Levels tab, you will see the Microphone Boost slider. Drag it up to boost your microphone volume</p>
<p><img src="https://i.imgur.com/9xHkGIt.png" alt="boost"></p>
<h1 id="Step-4-Listen-to-your-Microphone"><a href="#Step-4-Listen-to-your-Microphone" class="headerlink" title="Step 4: Listen to your Microphone"></a>Step 4: Listen to your Microphone</h1><p>In the Microphone Properties window, switch to Listen to tab. You will see the explanation of the feature</p>
<p>To listen to your mic, check the box, and choose a playback device under the checkbox (default set to Default Playback Device)</p>
<p><img src="https://i.imgur.com/6wrqt41.png" alt="listen"></p>
<h1 id="Step-5-Microphone-is-disabled-on-the-laptop"><a href="#Step-5-Microphone-is-disabled-on-the-laptop" class="headerlink" title="Step 5: Microphone is disabled on the laptop?"></a>Step 5: Microphone is disabled on the laptop?</h1><p>In the Microphone Properties window, switch to the Listen tab. Under the Power Management section, check “Continue running when on battery power”</p>
<p><img src="https://i.imgur.com/mN2extg.png" alt="power"></p>
<h1 id="Step-5-Weird-sounds-noisy"><a href="#Step-5-Weird-sounds-noisy" class="headerlink" title="Step 5: Weird sounds, noisy?"></a>Step 5: Weird sounds, noisy?</h1><p>In the Microphone Properties window, switch to the Advanced tab. Under Default Format, choose DVD Quality (2 channel, 16 bit, 48000 Hz)</p>
<p><img src="https://i.imgur.com/JpolWu9.png" alt="advanced"></p>
]]></content>
      <categories>
        <category>Computer Tips</category>
      </categories>
      <tags>
        <tag>tips</tag>
      </tags>
  </entry>
  <entry>
    <title>reset network in Windows 10</title>
    <url>/2020/11/25/reset-network-in-Windows-10/</url>
    <content><![CDATA[<p>How to reset network settings in Windows 10</p>
<p>This action can help solve connection problems you might have after upgrading from a previous version of Windows to Windows 10. It can also help fix the problem of connecting to the internet but cannot connect to shared network drives. Network reset removes any network adapters you have installed and the settings for them. After your PC restarts, any network adapters are reinstalled, and the settings for them are set to the defaults.</p>
<span id="more"></span>

<p>Note: To use network reset, your PC must be running Windows 10 Version 1607 or later. To see which version of Windows 10 your device is currently running, select the Start button, then select Settings &gt; System &gt; About.</p>
<p>Step 1: Select the Start button, then select Settings &gt; Network &amp; Internet  &gt; Status &gt; Network reset.</p>
<p><img src="https://i.imgur.com/pXxS6LV.png" alt="settings"></p>
<p><img src="https://i.imgur.com/ZbynjXw.png" alt="network"></p>
<p><img src="https://i.imgur.com/g6MlUpI.png" alt="network reset"></p>
<p>Step 2: On the Network reset screen, select Reset now &gt; Yes to confirm.</p>
<p><img src="https://i.imgur.com/g090t8h.png" alt="reset now"></p>
<p><img src="https://i.imgur.com/CI6pTAM.png" alt="click yes"></p>
]]></content>
      <categories>
        <category>Computer Tips</category>
      </categories>
      <tags>
        <tag>tips</tag>
      </tags>
  </entry>
  <entry>
    <title>install quick assist in Windows 10</title>
    <url>/2020/12/09/install-quick-assist-in-Windows-10/</url>
    <content><![CDATA[<p>Quick assist is a nice feature that allow you connect to other computer, just like TeamViewer.</p>
<span id="more"></span>

<p><img src="https://i.imgur.com/8o1jX1U.png" alt="search for optional feature"></p>
<p><img src="https://i.imgur.com/DLKIkya.png" alt="install new"></p>
<p><img src="https://i.imgur.com/NvEuu5j.png" alt="install"></p>
<p><img src="https://i.imgur.com/1TXVUQc.png" alt="wait"></p>
]]></content>
      <categories>
        <category>Computer Tips</category>
      </categories>
      <tags>
        <tag>tips</tag>
      </tags>
  </entry>
  <entry>
    <title>A list of developer surveys</title>
    <url>/2021/05/22/A-list-of-developer-surveys/</url>
    <content><![CDATA[<p>When I’m looking for numbers in my recent research, I need reliable surveys/market share statistics in computer technologies. So here is a list of them:</p>
<span id="more"></span>

<!-- TOC -->

<ul>
<li><a href="#1-stackoverflow-annual-developer-surveys">1. StackOverflow Annual Developer Surveys</a></li>
<li><a href="#2-the-state-of-developer-ecosystem">2. The State of Developer Ecosystem</a></li>
<li><a href="#3-developer-economics-survey">3. Developer Economics survey</a></li>
<li><a href="#4-github-octoverse">4. GitHub Octoverse</a></li>
<li><a href="#5-tiobe-index">5. TIOBE Index</a></li>
</ul>
<!-- /TOC -->

<h1 id="1-StackOverflow-Annual-Developer-Surveys"><a href="#1-StackOverflow-Annual-Developer-Surveys" class="headerlink" title="1. StackOverflow Annual Developer Surveys"></a>1. StackOverflow Annual Developer Surveys</h1><p><a id="markdown-stackoverflow-annual-developer-surveys" name="stackoverflow-annual-developer-surveys"></a></p>
<p>Link: <a href="https://insights.stackoverflow.com/survey">https://insights.stackoverflow.com/survey</a></p>
<p>By StackOverflow, this annual developer survey questioned thousands of developers who are using StackOverflow. The methodology is transparent. The results are open. The oldest survey was in 2011.</p>
<p>More interestingly, they present the survey result of each year in an excellent report that you can view online. For example, below is the result of 2020.</p>
<p><img src="https://i.imgur.com/7ZnU7u8.png" alt="stackoverflow"></p>
<p>If a respondent spent less than 3 minutes in the survey, their responses are not included.</p>
<p>One thing that I liked about this survey is that it split the result between all respondents and the professional developers.</p>
<h1 id="2-The-State-of-Developer-Ecosystem"><a href="#2-The-State-of-Developer-Ecosystem" class="headerlink" title="2. The State of Developer Ecosystem"></a>2. The State of Developer Ecosystem</h1><p><a id="markdown-the-state-of-developer-ecosystem" name="the-state-of-developer-ecosystem"></a></p>
<p>Link: <a href="https://www.jetbrains.com/lp/devecosystem-2020/">https://www.jetbrains.com/lp/devecosystem-2020/</a></p>
<p>By JetBrains, the company behind IntelliJ IDEA, PyCham, WebStorm, Rider, ReSharper, etc.</p>
<p>Pretty much like the SO survey, this one provides data about the trending programming languages and operating systems.</p>
<p>At the beginning of the result, a “Key Takeaways” section concludes the most important outcome. The survey also tells what languages developers plan to adopt/migrate.</p>
<p>The oldest dataset was in 2017.</p>
<p><img src="https://i.imgur.com/6JfLlY0.png" alt="The State of Developer Ecosystem"></p>
<h1 id="3-Developer-Economics-survey"><a href="#3-Developer-Economics-survey" class="headerlink" title="3. Developer Economics survey"></a>3. Developer Economics survey</h1><p><a id="markdown-developer-economics-survey" name="developer-economics-survey"></a></p>
<p>Link: <a href="https://www.developereconomics.com/resources/graphs">https://www.developereconomics.com/resources/graphs</a></p>
<blockquote>
<p>You will need to register for an account to view the result</p>
</blockquote>
<p>This survey is the only survey on the list that requires an account to see the result. Good thing that there are two reports each year, in Q1 and Q3. The participants were also rewarded with points that can be used to cash out with vouchers and draw.</p>
<p>This survey’s most helpful information is the most popular programming languages in technology like Web, Data Science, Machine Learning, Desktop Application, etc.</p>
<p>The oldest dataset was in 2010</p>
<p><img src="https://i.imgur.com/B9JrPVf.png" alt="developer economics"></p>
<h1 id="4-GitHub-Octoverse"><a href="#4-GitHub-Octoverse" class="headerlink" title="4. GitHub Octoverse"></a>4. GitHub Octoverse</h1><p><a id="markdown-github-octoverse" name="github-octoverse"></a></p>
<p>Link: <a href="https://octoverse.github.com/">https://octoverse.github.com/</a></p>
<p>This one is not precisely a survey but an analysis of GitHub data on open-source projects. The result is more focused on the communities and social aspects of developers in open-source.</p>
<p>This analysis is new. Only data for 2020 is available.</p>
<p><img src="https://octoverse.github.com/assets/images/social-card-2020.png" alt="octoverse report"></p>
<h1 id="5-TIOBE-Index"><a href="#5-TIOBE-Index" class="headerlink" title="5. TIOBE Index"></a>5. TIOBE Index</h1><p><a id="markdown-tiobe-index" name="tiobe-index"></a></p>
<p>Link: <a href="https://www.tiobe.com/tiobe-index/">tiobe index</a></p>
<p>TIOBE index is a number (in percent) count for <code>+&quot;&lt;language&gt; programming&quot;</code> on search engines.</p>
<blockquote>
<p>The number of hits determines the ratings of a language. The counted hits are normalized for each search engine for all languages in the list. In other words, all languages together have a score of 100%.</p>
</blockquote>
<p>The dataset is not free. Yet you could click on each programming language in the result to see the entire history (of that language), starting from 2001.</p>
]]></content>
      <categories>
        <category>research</category>
      </categories>
      <tags>
        <tag>tips</tag>
      </tags>
  </entry>
  <entry>
    <title>How do I get +10 reputations on StackOverflow everyday</title>
    <url>/2021/09/19/how-do-i-get-10-reputation-on-stackoverflow-everyday/</url>
    <content><![CDATA[<p>For a long time, my reputation points on StackOverflow (SO) were just around 200. You get 100 by just registering an account. If your reputation score is high, you can brag about it in your CV, or even better, landing your next dream job. In this blog post, I will tell you the story of how I can get +10 reputations EVERY DAY.</p>
<span id="more"></span>

<!-- TOC -->

<ul>
<li><a href="#1-how-stackoverflow-works">1. How StackOverflow works</a></li>
<li><a href="#2-how-do-i-get-10-reputation-every-day">2. How do I get +10 reputation every day</a><ul>
<li><a href="#21-the-problem">2.1. The problem</a></li>
<li><a href="#22-whats-happened">2.2. What’s happened?</a></li>
<li><a href="#23-fix-and-answer-the-stackoverflows-question----here-is-my-luck">2.3. Fix and answer the StackOverflow’s question &lt;&lt;– here is my luck</a></li>
</ul>
</li>
<li><a href="#3-stackoverflow-has-memes">3. StackOverflow has memes</a></li>
</ul>
<!-- /TOC -->

<p><img src="https://i.imgur.com/SPBH4t0.png" alt="my stackoverflow"></p>
<h1 id="1-How-StackOverflow-works"><a href="#1-How-StackOverflow-works" class="headerlink" title="1. How StackOverflow works"></a>1. How StackOverflow works</h1><p><a id="markdown-how-stackoverflow-works" name="how-stackoverflow-works"></a></p>
<p>In the majority of developers use SO every day, many register to ask questions. Only a few answer these questions.</p>
<p>For each response marked as “Answered,” a number of reputations were rewarded to the developer who provided the answers. They can also gain points if their answers were “Upvote” by other developers. </p>
<p><img src="https://i.imgur.com/vJhENma.png" alt="upvoted answer"></p>
<h1 id="2-How-do-I-get-10-reputation-every-day"><a href="#2-How-do-I-get-10-reputation-every-day" class="headerlink" title="2. How do I get +10 reputation every day"></a>2. How do I get +10 reputation every day</h1><p><a id="markdown-how-do-i-get-%2B10-reputation-every-day" name="how-do-i-get-%2B10-reputation-every-day"></a></p>
<p>TL;DR: by luck.</p>
<h2 id="2-1-The-problem"><a href="#2-1-The-problem" class="headerlink" title="2.1. The problem"></a>2.1. The problem</h2><p><a id="markdown-the-problem" name="the-problem"></a></p>
<p>Not every day exactly. For example, one day I could get +50, while other days I didn’t get any.</p>
<p>One day, while working on one of my projects, I type in commands to push my code to GitHub. Then boom, a wild error appear. The error looks like this:</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">From https:&#x2F;&#x2F;github.com&#x2F;MY&#x2F;REPO
 * branch            master     -&gt; FETCH_HEAD
 ! [rejected]        latest     -&gt; latest  (would clobber existing tag)
   9428765..935da94  master     -&gt; origin&#x2F;master</code></pre>

<p>A quick search show a StackOverflow question (Yessssss), but no answer yet. Luckily, StackOverflow is not the only place on the Internet answering dev’s questions, including discussion on open source projects, Git documentation.</p>
<p>Half an hour later (okay 1 hour later), I finally know what happened and how can I fix it.</p>
<h2 id="2-2-What’s-happened"><a href="#2-2-What’s-happened" class="headerlink" title="2.2. What’s happened?"></a>2.2. What’s happened?</h2><p><a id="markdown-what's-happened%3F" name="what's-happened%3F"></a></p>
<p>Someone on remote delete a tag, then recreate a new tag with the same name. Then when you try to Push or Pull, this error/warning will happened on your local copy.</p>
<h2 id="2-3-Fix-and-answer-the-StackOverflow’s-question-lt-lt-–-here-is-my-luck"><a href="#2-3-Fix-and-answer-the-StackOverflow’s-question-lt-lt-–-here-is-my-luck" class="headerlink" title="2.3. Fix and answer the StackOverflow’s question &lt;&lt;– here is my luck"></a>2.3. Fix and answer the StackOverflow’s question &lt;&lt;– here is my luck</h2><p><a id="markdown-fix-and-answer-the-stackoverflow's-question-%3C%3C---here-is-my-luck" name="fix-and-answer-the-stackoverflow's-question-%3C%3C---here-is-my-luck"></a></p>
<p>Then, a simple command line fix the problem for me. What’s next? I remembered there is an unanswered StackOverflow question on the exact same error. I add my solution, then left the website.</p>
<p><a href="https://stackoverflow.com/a/58438257/4506315">https://stackoverflow.com/a/58438257/4506315</a></p>
<p><img src="https://i.imgur.com/zburb3k.png" alt="my solution"></p>
<p>My luck with StackOverflow begins from that day. The next time I open SO for my next question, I saw +50 points added to my reputation. My solution was accepted as an answer. The next day, +10 reputation. Someone upvoted my answer, as they saw it helpful for their situation.</p>
<p><img src="https://i.imgur.com/GSfzylv.png" alt="reputation change"></p>
<blockquote>
<p><code>On that time forward, I have an average of +10 reputation points every single day.</code></p>
</blockquote>
<p>This is my pure luck. Multiple conditions happened:</p>
<ul>
<li>I stumble upon a problem asked on StackOverflow that no one answered. </li>
<li>The problem can be fixed by a simple solution.</li>
<li>I provided the solution.</li>
<li>Later, people have the same problem, and found my answer, and upvote my solution.</li>
</ul>
<h1 id="3-StackOverflow-has-memes"><a href="#3-StackOverflow-has-memes" class="headerlink" title="3. StackOverflow has memes"></a>3. StackOverflow has memes</h1><p><a id="markdown-stackoverflow-has-memes" name="stackoverflow-has-memes"></a></p>
<p>Eventually, StackOverflow is not the place for newbie to ask questions.</p>
<p><img src="https://i.imgur.com/1OFtbtv.png" alt="so memes"></p>
<p>and this</p>
<p><img src="https://i.imgur.com/ofsbPlX.png" alt="so meme 2"></p>
<p>That’s it. See you in next post</p>
]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>tips</tag>
      </tags>
  </entry>
  <entry>
    <title>An introduction to web service scaling</title>
    <url>/2022/01/22/An-introduction-to-web-service-scaling/</url>
    <content><![CDATA[<p>Designing a system that could serve millions of requests will always be a big challenge. Fortunately, there are multiple solutions to this problem. Depending on how large your system could be, you could utilize these solutions or combine them for a better result.</p>
<span id="more"></span>

<blockquote>
<p>Disclaimer: I learned this knowledge from the book “<a href="https://www.amazon.ca/System-Design-Interview-insiders-Second/dp/B08CMF2CQF">System Design Interview: An Insider’s Guide</a>“ by Alex Xu.</p>
<p>This post covers a tiny part of the book. Please read the book for more information.</p>
</blockquote>
<!-- TOC -->

<ul>
<li><a href="#1-some-basic-concepts">1. Some basic concepts</a><ul>
<li><a href="#11-what-to-scale">1.1. What to scale?</a></li>
<li><a href="#12-scaling-directions">1.2. Scaling directions</a></li>
</ul>
</li>
<li><a href="#2-geting-scaled">2. Geting scaled</a><ul>
<li><a href="#21-database-scaling">2.1. Database scaling</a><ul>
<li><a href="#211-database-replication">2.1.1. Database Replication</a></li>
<li><a href="#212-database-sharding">2.1.2. Database sharding</a></li>
<li><a href="#213-use-a-different-type-of-database-technology">2.1.3. Use a different type of database technology</a></li>
</ul>
</li>
<li><a href="#22-server-scaling">2.2. Server Scaling</a><ul>
<li><a href="#221-cache">2.2.1. Cache</a></li>
<li><a href="#222-stateless-and-multiple-servers">2.2.2. Stateless and multiple servers</a></li>
<li><a href="#223-microservice-architecture">2.2.3. Microservice Architecture</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#3-what-about-the-client">3. What about the client?</a></li>
</ul>
<!-- /TOC -->

<h1 id="1-Some-basic-concepts"><a href="#1-Some-basic-concepts" class="headerlink" title="1. Some basic concepts"></a>1. Some basic concepts</h1><p><a id="markdown-some-basic-concepts" name="some-basic-concepts"></a></p>
<h2 id="1-1-What-to-scale"><a href="#1-1-What-to-scale" class="headerlink" title="1.1. What to scale?"></a>1.1. What to scale?</h2><p><a id="markdown-what-to-scale%3F" name="what-to-scale%3F"></a></p>
<p>A web service is a composite of multiple components. In the most straightforward system, they are:</p>
<ul>
<li>Database</li>
<li>Server</li>
<li>Client</li>
</ul>
<p>When we talk about scaling up the web service, we focus on database and server only. We can do nothing from the client side since we cannot force the client to use a specific device to access the web service.</p>
<p>Depending on the nature of your system and/or where the bottleneck is, you could choose which component to scale up to serve more requests.</p>
<p>For example, if your system stores a vast amount of data and accesses them frequently, you may want to scale up the database. However, if your system is heavy on the calculation, then you may want to scale up the server. Of course, you can scale up both components. It is always the price/performance problem.</p>
<h2 id="1-2-Scaling-directions"><a href="#1-2-Scaling-directions" class="headerlink" title="1.2. Scaling directions"></a>1.2. Scaling directions</h2><p><a id="markdown-scaling-directions" name="scaling-directions"></a></p>
<p>There are 2 ways to scale a system:</p>
<ul>
<li>Scale-up: Adding more processing power (CPU, RAM, Storage)</li>
<li>Scale-out: Adding more servers</li>
</ul>
<p>You cannot add an unlimited amount of CPU power, RAM, or storage. Adding more server to a system also add new problems like data consistency, choosing the server, concurrency access, etc. They are challenging, but fear not, there are solutions.</p>
<h1 id="2-Geting-scaled"><a href="#2-Geting-scaled" class="headerlink" title="2. Geting scaled"></a>2. Geting scaled</h1><p><a id="markdown-geting-scaled" name="geting-scaled"></a></p>
<h2 id="2-1-Database-scaling"><a href="#2-1-Database-scaling" class="headerlink" title="2.1. Database scaling"></a>2.1. Database scaling</h2><p><a id="markdown-database-scaling" name="database-scaling"></a></p>
<p>A database has 4 basic operations: CREATE-READ-UPDATE-DELETE. For each operation, there are specific ways to scale.</p>
<h3 id="2-1-1-Database-Replication"><a href="#2-1-1-Database-Replication" class="headerlink" title="2.1.1. Database Replication"></a>2.1.1. Database Replication</h3><p><a id="markdown-database-replication" name="database-replication"></a></p>
<p>For example, when you need to read a lot but write sometimes, you can use Database Replication, with one master database and multiple slaves.</p>
<p><img src="https://i.imgur.com/SsPICMO.png" alt="database replication"></p>
<h3 id="2-1-2-Database-sharding"><a href="#2-1-2-Database-sharding" class="headerlink" title="2.1.2. Database sharding"></a>2.1.2. Database sharding</h3><p><a id="markdown-database-sharding" name="database-sharding"></a></p>
<p>Sharding, or partitioning, is another approach to database scaling. You still use multiple databases, but different from replication, each database holds a portion of the data. A sharding strategy could be used to determine which data belong to which database.</p>
<blockquote>
<p>For example, you can store all records with odd id to a database and even id to another.</p>
</blockquote>
<p>However, this will introduce some new problems:</p>
<ul>
<li>What if all database is used up to their limit, and you need to add a new database?</li>
<li>What if the data of a query is allocated to multiple databases?</li>
<li>What if you need to remove a shard and copy its data to all other operational shards?</li>
</ul>
<blockquote>
<p>There are other clever ways to scale the database, suitable for very specific systems. The key is to split and conquer.</p>
</blockquote>
<h3 id="2-1-3-Use-a-different-type-of-database-technology"><a href="#2-1-3-Use-a-different-type-of-database-technology" class="headerlink" title="2.1.3. Use a different type of database technology"></a>2.1.3. Use a different type of database technology</h3><p><a id="markdown-use-a-different-type-of-database-technology" name="use-a-different-type-of-database-technology"></a></p>
<p>To SQL or NoSQL? Graph or table? Free or commercial? There are multiple databases technology out there. Based on the project’s business logic, the architect must choose the best database technology.</p>
<p>For example, you can store all kinds of data in MongoDB and read them with extremely high performance and low cost. However, MongoDB doesn’t have join operation, Transaction, or Trigger.</p>
<h2 id="2-2-Server-Scaling"><a href="#2-2-Server-Scaling" class="headerlink" title="2.2. Server Scaling"></a>2.2. Server Scaling</h2><p><a id="markdown-server-scaling" name="server-scaling"></a></p>
<p>The ultimate goal of scaling is to handle increasing traffic, or to reduce the response time of a single request. To do so, there are some solutions</p>
<h3 id="2-2-1-Cache"><a href="#2-2-1-Cache" class="headerlink" title="2.2.1. Cache"></a>2.2.1. Cache</h3><p><a id="markdown-cache" name="cache"></a></p>
<p>If the data will not change for a relatively long time, we can use cache to store that data. Whenever the data is needed, server read it directly from cache without calculation or take trip to database.</p>
<p><img src="https://i.imgur.com/D7o4X4g.png" alt="cache"></p>
<h3 id="2-2-2-Stateless-and-multiple-servers"><a href="#2-2-2-Stateless-and-multiple-servers" class="headerlink" title="2.2.2. Stateless and multiple servers"></a>2.2.2. Stateless and multiple servers</h3><p><a id="markdown-stateless-and-multiple-servers" name="stateless-and-multiple-servers"></a></p>
<p>Stateless mean the server does not store the state of the request. Every requests are treated the same. This is important, because the servers don’t save state of the request, we can easily add more identical servers to increase the performance.</p>
<p>However, to use multiple servers for a web service, we need a way to direct the request to the idle server. We call it the Load Balancer.</p>
<p><strong>Load Balancer</strong></p>
<p>How exactly load balancer balance the request between servers? By using some algorithm, the load balancer can evenly distribute the request.</p>
<p>For example: The round robin algorithm. All server sit on a circle. The load balancer distribute one request to a server, then distribute the next request to the next server on the circle.</p>
<h3 id="2-2-3-Microservice-Architecture"><a href="#2-2-3-Microservice-Architecture" class="headerlink" title="2.2.3. Microservice Architecture"></a>2.2.3. Microservice Architecture</h3><p><a id="markdown-microservice-architecture" name="microservice-architecture"></a></p>
<p>What if there is only one component get extremely high traffic? Is there anyway to scale components of the system separately?</p>
<p>Microservice is an architecture that split the components of the server into smaller, stand-alone services. These services communicate with each other internally.</p>
<p>When using Microservice architecture, developers can develop each services at different pace. For example, authentication service will not change much, but feature service will change over time.</p>
<p>However, Microservice Architecture introduce some problems. If not used correctly, it could become a mess for the development.</p>
<blockquote>
<p>An excellent post about these problems: <a href="https://world.hey.com/joaoqalves/disasters-i-ve-seen-in-a-microservices-world-a9137a51">Disasters I’ve seen in a microservices world</a></p>
</blockquote>
<h1 id="3-What-about-the-client"><a href="#3-What-about-the-client" class="headerlink" title="3. What about the client?"></a>3. What about the client?</h1><p><a id="markdown-what-about-the-client%3F" name="what-about-the-client%3F"></a></p>
<p>If we know for sure that our client is not some 1992 machine with limited CPU power and memory, then we can use the REST architecture.</p>
<p>In short, the rendering (displaying text and image, animation, etc) jobs could be handled by the client. By this way, the server is only care about serving the data requested by the client.</p>
<p>To increase the download speed of the client, we could use CDN (Content Delivery Network) to serve static resources like JavaScript library, images, videos and audios, as well as CSS libraries.</p>
<p>That’s it. See you in next post</p>
]]></content>
      <categories>
        <category>system design</category>
      </categories>
      <tags>
        <tag>system design</tag>
      </tags>
  </entry>
  <entry>
    <title>[ASP.NET for Beginner] - Part 2 - Connect Database and Model Binding</title>
    <url>/2018/03/11/asp-net-for-beginner-part-2-connect-database-and-model-binding/</url>
    <content><![CDATA[<p>Ở phần trước bạn đã có một khái niệm cơ bản về mô hình MVC. Dựa vào đó, chúng ta sẽ tiếp tục tìm hiểu thêm về database những vấn đề liên quan nhé.</p>
<span id="more"></span>

<blockquote>
<p>Xem các bài viết trong series</p>
<ul>
<li><a href="https://huntertran.com/2018/03/04/asp-net-for-beginner-part-1-mvc/">Phần 1: Mô hình MVC</a></li>
<li><a href="https://huntertran.com/2018/03/11/asp-net-for-beginner-part-2-connect-database-and-model-binding/">Phần 2: Connect Database và Model Binding</a></li>
<li><a href="https://huntertran.com/2018/03/18/asp-net-for-beginner-part-3-front-end-framework-nao/">Phần 3: Front end framework nào</a></li>
<li><a href="https://huntertran.com/2018/03/25/aspnet-for-beginner-part-4-crud-va-data-validation/">Phần 4: CRUD và Data Validation</a></li>
</ul>
</blockquote>
<p><em><strong>Table of Contents</strong></em></p>
<!-- TOC -->

<ul>
<li><a href="#1-l%E1%BB%B1a-ch%E1%BB%8Dn-database">1. Lựa chọn database</a><ul>
<li><a href="#11-sql-server">1.1. SQL Server</a></li>
<li><a href="#12-the-others">1.2. The others</a></li>
</ul>
</li>
<li><a href="#2-entity-framework">2. Entity Framework</a></li>
<li><a href="#3-t%E1%BA%A1o-model-v%C3%A0-database">3. Tạo Model và Database</a><ul>
<li><a href="#31-t%E1%BA%A1o-model-phone">3.1. Tạo model Phone</a></li>
<li><a href="#32-t%E1%BA%A1o-database-context">3.2. Tạo Database Context</a></li>
<li><a href="#33-c%C3%A0i-%C4%91%E1%BA%B7t-connection-string">3.3. Cài đặt Connection String</a></li>
<li><a href="#34-c%C3%A0i-%C4%91%E1%BA%B7t-k%E1%BA%BFt-n%E1%BB%91i">3.4. Cài đặt kết nối</a></li>
<li><a href="#35-t%E1%BA%A1o-migration-%C4%91%E1%BA%A7u-ti%C3%AAn">3.5. Tạo Migration đầu tiên</a></li>
</ul>
</li>
<li><a href="#4-model-binding">4. Model Binding</a><ul>
<li><a href="#41-t%E1%BA%A1o-controller">4.1. Tạo Controller</a></li>
<li><a href="#42-c%C3%A1c-nuget-c%E1%BA%A7n-thi%E1%BA%BFt">4.2. Các nuget cần thiết</a></li>
<li><a href="#43-scaffolding">4.3. Scaffolding</a></li>
</ul>
</li>
<li><a href="#5-model-binding">5. Model Binding</a></li>
</ul>
<!-- /TOC -->

<p>Có thể hiểu database là trái tim của ứng dụng, còn asp.net là bộ não. Thiết kế một database cho đúng chuẩn thì đòi hỏi kha khá thời gian học + luyện tập thì nó mới lên trình được.</p>
<p>Một cách khác rất hay là bắt tay vào làm một project thực tế. Nếu làm theo phần trước, chắc bạn cũng đã có 1 sample project với tên mvcbasic nhỉ.</p>
<p>Nhìn chung, bạn sẽ có 1 project giống như sau: <a href="https://github.com/huntertran/mvcbasic/releases/tag/0.1">MVC Basic 0.1 on Github</a></p>
<h1 id="1-Lua-chon-database"><a href="#1-Lua-chon-database" class="headerlink" title="1. Lựa chọn database"></a>1. Lựa chọn database</h1><p><a id="markdown-l%E1%BB%B1a-ch%E1%BB%8Dn-database" name="l%E1%BB%B1a-ch%E1%BB%8Dn-database"></a></p>
<p>Có hơi bị nhiều hệ quản trị cơ sở dữ liệu đang đấu đá nhau trên thị trường. Ở đây mình sẽ nói sơ qua 1 số loại phổ biến</p>
<h2 id="1-1-SQL-Server"><a href="#1-1-SQL-Server" class="headerlink" title="1.1. SQL Server"></a>1.1. SQL Server</h2><p><a id="markdown-sql-server" name="sql-server"></a></p>
<p>Cây nhà là vườn, miễn phí cho người dùng cá nhân, hiệu suất cao, mạnh mẽ, là hệ cơ sở dữ liệu có quan hệ. Sql Server đã chứng minh cho mọi dev thấy tính ổn định của nó.</p>
<h2 id="1-2-The-others"><a href="#1-2-The-others" class="headerlink" title="1.2. The others"></a>1.2. The others</h2><p><a id="markdown-the-others" name="the-others"></a></p>
<p>Nhìn chung, Microsoft có hỗ trợ kha khá các hệ cơ sở dữ liệu khác như MySQL, PostgreSQL, SQLite, nhưng nếu đã lựa chọn các hệ này, thì bạn sẽ phải tự mày mò kha khá các vấn đề mà đa phần đã được giải quyết khi dùng SQL Server</p>
<h1 id="2-Entity-Framework"><a href="#2-Entity-Framework" class="headerlink" title="2. Entity Framework"></a>2. Entity Framework</h1><p><a id="markdown-entity-framework" name="entity-framework"></a></p>
<p>ASP.NET có một điểm mạnh là Entity Framework (EF). Ở phiên bản core thì nó có thêm EF Core. EF hiểu nôm na là một bộ công cụ cho phép bạn kết nối tới database, truy vấn, thêm xóa sửa vân vân mà không cần phải có kiến thức về cách viết SQL.</p>
<p>Có lợi thì cũng phải có hại, EF theo đánh giá của nhiều người thì nó khá….chậm. Điều này đã và đang được cải thiện rất nhiều ở phiên bản mới đi kèm với ASP.NET Core là Entity Framework Core.</p>
<p>Bạn cần cài đặt</p>
<ul>
<li><a href="https://www.microsoft.com/en-us/sql-server/sql-server-editions-express">SQL Server Express</a></li>
<li><a href="https://docs.microsoft.com/en-us/sql/ssms/download-sql-server-management-studio-ssms">SQL Server Management Studio</a> (optional)</li>
</ul>
<p>Cài nuget package</p>
<p>Mở project mvcbasic bằng vscode</p>
<p>Lần lượt gõ các lệnh sau trong terminal</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">dotnet add package Microsoft.EntityFrameworkCore.SqlServer
dotnet add package Microsoft.VisualStudio.Web.CodeGeneration.Design</code></pre>

<p>Sau đó, mở file mvcbasic.csproj và thêm dòng sau</p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">&lt;ItemGroup&gt;
  &lt;DotNetCliToolReference Include&#x3D;&quot;Microsoft.EntityFrameworkCore.Tools.DotNet&quot; Version&#x3D;&quot;2.0.0&quot; &#x2F;&gt;
&lt;&#x2F;ItemGroup&gt;</code></pre>

<p>tiếp tục gõ trong terminal</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">dotnet restore</code></pre>

<h1 id="3-Tao-Model-va-Database"><a href="#3-Tao-Model-va-Database" class="headerlink" title="3. Tạo Model và Database"></a>3. Tạo Model và Database</h1><p><a id="markdown-t%E1%BA%A1o-model-v%C3%A0-database" name="t%E1%BA%A1o-model-v%C3%A0-database"></a></p>
<p>Có 2 cách để bắt đầu làm việc với database trong asp.net core là Code first và Database first.</p>
<p>Ngắn gọn thì Code first cho phép bạn viết code trước (tạo các model class), rồi các model bạn tạo sẽ được cập nhật lên database thông qua các <code>migration</code>. Database first thì là cách truyền thống từ xưa tới nay: Tạo database trước, và code của bạn có nghĩa vụ ‘connect’ tới database đó.</p>
<p>Bạn có thể tham khảo thêm ở đây: <a href="https://huntertran.com/2017/01/06/asp-net-mvc-code-first-vs-database-first/">Code first vs Database first</a></p>
<h2 id="3-1-Tao-model-Phone"><a href="#3-1-Tao-model-Phone" class="headerlink" title="3.1. Tạo model Phone"></a>3.1. Tạo model Phone</h2><p><a id="markdown-t%E1%BA%A1o-model-phone" name="t%E1%BA%A1o-model-phone"></a></p>
<p>chuột phải vào folder Models &gt; new file &gt; Phone.cs</p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">namespace mvcbasic.Models
&#123;
    public class Phone
    &#123;
        public int Id &#123; get; set; &#125;
        public string Name &#123; get; set; &#125;
    &#125;
&#125;</code></pre>

<h2 id="3-2-Tao-Database-Context"><a href="#3-2-Tao-Database-Context" class="headerlink" title="3.2. Tạo Database Context"></a>3.2. Tạo Database Context</h2><p><a id="markdown-t%E1%BA%A1o-database-context" name="t%E1%BA%A1o-database-context"></a></p>
<p>Database Context có thể hiểu như một công cụ cho phép ứng dụng của bạn kết nối tới Database và thực hiện các tác vụ thêm xóa sửa.</p>
<p>Tạo 1 folder mới ở thư mục gốc với tên ‘Data’</p>
<p>Chuột phải vào folder Data &gt; new file &gt; MvcBasicDbContext.cs</p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">namespace mvcbasic.Data
&#123;
    using Models;
    using Microsoft.EntityFrameworkCore;
 
    public class MvcBasicDbContext : DbContext
    &#123;
        public MvcBasicDbContext(DbContextOptions&lt;MvcBasicDbContext&gt; options) : base(options)
        &#123;
        &#125;
 
        public DbSet&lt;Phone&gt; Phones &#123; get; set; &#125;
    &#125;
&#125;</code></pre>

<h2 id="3-3-Cai-dat-Connection-String"><a href="#3-3-Cai-dat-Connection-String" class="headerlink" title="3.3. Cài đặt Connection String"></a>3.3. Cài đặt Connection String</h2><p><a id="markdown-c%C3%A0i-%C4%91%E1%BA%B7t-connection-string" name="c%C3%A0i-%C4%91%E1%BA%B7t-connection-string"></a></p>
<p>Để kết nối tới database, thì Entity Framework sẽ cần có các thông tin như username, password, tên database, server đang host cái database này. Tất cả thông số đó đều gộp chung lại thành 1 đoạn string, và giang hồ gọi nó là <code>connection string</code></p>
<p>Mở file appsettings.json và thêm vào đoạn json sau</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json">&quot;ConnectionStrings&quot; : &#123; &quot;PhoneDbConnectionString&quot;: &quot;Server&#x3D;(localdb)\\\\mssqllocaldb;Database&#x3D;PhoneDb;Trusted\_Connection&#x3D;True;&quot; &#125;</code></pre>

<blockquote>
<p>Đoạn connection string trên có ý nghĩa như sau Server: LocalDb (là một dạng database local có trên các phiên bản mới của SQL Server) Database: PhoneDb Connection tới database dùng Windows Authentication</p>
</blockquote>
<p>Bạn có thể sẽ phải config lại đoạn connection string này cho đúng với môi trường làm việc của bạn</p>
<h2 id="3-4-Cai-dat-ket-noi"><a href="#3-4-Cai-dat-ket-noi" class="headerlink" title="3.4. Cài đặt kết nối"></a>3.4. Cài đặt kết nối</h2><p><a id="markdown-c%C3%A0i-%C4%91%E1%BA%B7t-k%E1%BA%BFt-n%E1%BB%91i" name="c%C3%A0i-%C4%91%E1%BA%B7t-k%E1%BA%BFt-n%E1%BB%91i"></a></p>
<p>Mở file Startup.cs, tìm method <code>ConfigureServices</code> và thêm vào dòng sau</p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">services.AddDbContext&lt;MvcBasicDbContext&gt;(options &#x3D;&gt; options.UseSqlServer(Configuration.GetConnectionString(&quot;PhoneDbConnectionString&quot;)));</code></pre>

<p>và nhớ add thêm 2 dòng using</p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">using Microsoft.EntityFrameworkCore;
using mvcbasic.Data;</code></pre>

<h2 id="3-5-Tao-Migration-dau-tien"><a href="#3-5-Tao-Migration-dau-tien" class="headerlink" title="3.5. Tạo Migration đầu tiên"></a>3.5. Tạo Migration đầu tiên</h2><p><a id="markdown-t%E1%BA%A1o-migration-%C4%91%E1%BA%A7u-ti%C3%AAn" name="t%E1%BA%A1o-migration-%C4%91%E1%BA%A7u-ti%C3%AAn"></a></p>
<p>Sau khi tất cả các thao tác chuẩn bị đã hoàn tất, đã tới lúc bạn tạo migration đầu tiên của mình</p>
<p>Trong terminal, gõ</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">dotnet ef migrations add InitialCreate</code></pre>

<p>VSCode sẽ tự động tạo ra một thư mục tên Migrations, và thêm cơ số file vào đấy</p>
<p><a href="https://farm5.staticflickr.com/4784/40748059781_d2b5740095_o.png">new files</a></p>
<p>Tiếp tục, gõ</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">dotnet ef database update</code></pre>

<p>thì những migration này sẽ được thực thi, và database sẽ được tạo ra</p>
<p><img src="https://farm5.staticflickr.com/4774/38937566770_e203e7c169_o.png" alt="database created"></p>
<blockquote>
<p>Để kiểm tra, bạn có thể dùng Microsoft SQL Server Management Studio với các thông số sau</p>
<ul>
<li><strong>Server Name</strong>: (LocalDb)\MSSQLLocalDB</li>
<li><strong>Authentication</strong>: Windows Authentication</li>
</ul>
<p>MSSQLLocalDB là tên instance của bạn, có thể khác nếu khi cài SQL Server bạn ko chọn như default</p>
</blockquote>
<h1 id="4-Model-Binding"><a href="#4-Model-Binding" class="headerlink" title="4. Model Binding"></a>4. Model Binding</h1><p><a id="markdown-model-binding" name="model-binding"></a></p>
<p>Sau khi hoàn tất các bước trên, cơ bản web app của bạn đã có thể kết nối tới database. Nhưng để thực hiện các hành động thêm xóa sửa, thì bạn cần phải có Controller nữa</p>
<blockquote>
<p>Bạn có thể tải project hoàn tất ở bước 3 tại <a href="https://github.com/huntertran/mvcbasic/releases/tag/0.2">đây</a></p>
</blockquote>
<h2 id="4-1-Tao-Controller"><a href="#4-1-Tao-Controller" class="headerlink" title="4.1. Tạo Controller"></a>4.1. Tạo Controller</h2><p><a id="markdown-t%E1%BA%A1o-controller" name="t%E1%BA%A1o-controller"></a></p>
<p>VSCode cũng hỗ trợ bạn trong việc tự động tạo ra controller mong muốn mà ko phải code nhiều (thực ra ko phải là VSCode hỗ trợ, mà một công cụ gọi là .NET Cli tools và vài nuget package cho phép bạn làm chuyện này, nhưng trước mắt cứ hiểu vậy đã)</p>
<p>Tên Controller, theo asp.net convention như mình đã nói ở phần 1, sẽ có dạng <code>[Tên]Controller</code>, trong trường hợp này sẽ là <code>PhoneController</code>.</p>
<blockquote>
<p>Một quy tắc đặt tên phổ biến là</p>
<ul>
<li>Tên bảng -&gt; số nhiều: Phones</li>
<li>Tên model -&gt; số ít: Phone</li>
<li>Tên controller: PhoneController</li>
<li>Tên view: Create, Delete, Details, Edit và Index</li>
</ul>
</blockquote>
<h2 id="4-2-Cac-nuget-can-thiet"><a href="#4-2-Cac-nuget-can-thiet" class="headerlink" title="4.2. Các nuget cần thiết"></a>4.2. Các nuget cần thiết</h2><p><a id="markdown-c%C3%A1c-nuget-c%E1%BA%A7n-thi%E1%BA%BFt" name="c%C3%A1c-nuget-c%E1%BA%A7n-thi%E1%BA%BFt"></a></p>
<p>Để có thể tạo controller, bạn sẽ cần thêm một số tool nữa</p>
<p>Mở mvcbasic.csproj và thêm các dòng sau</p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">...
&lt;PackageReference Include&#x3D;&quot;Microsoft.VisualStudio.Web.CodeGeneration.Design&quot; Version&#x3D;&quot;2.0.2&quot; &#x2F;&gt;
...
&lt;DotNetCliToolReference Include&#x3D;&quot;Microsoft.VisualStudio.Web.CodeGeneration.Tools&quot; Version&#x3D;&quot;2.0.2&quot; &#x2F;&gt;
...</code></pre>

<p>Tổng quan, file csproj sẽ giống như sau</p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">&lt;Project Sdk&#x3D;&quot;Microsoft.NET.Sdk.Web&quot;&gt;
 
  &lt;PropertyGroup&gt;
    &lt;TargetFramework&gt;netcoreapp2.0&lt;&#x2F;TargetFramework&gt;
  &lt;&#x2F;PropertyGroup&gt;
 
  &lt;ItemGroup&gt;
    &lt;PackageReference Include&#x3D;&quot;Microsoft.AspNetCore.All&quot; Version&#x3D;&quot;2.0.5&quot; &#x2F;&gt;
    &lt;PackageReference Include&#x3D;&quot;Microsoft.EntityFrameworkCore.SqlServer&quot; Version&#x3D;&quot;2.0.1&quot; &#x2F;&gt;
    &lt;PackageReference Include&#x3D;&quot;Microsoft.EntityFrameworkCore.SqlServer.Design&quot; Version&#x3D;&quot;1.1.5&quot; &#x2F;&gt;
    &lt;PackageReference Include&#x3D;&quot;Microsoft.VisualStudio.Web.CodeGeneration.Design&quot; Version&#x3D;&quot;2.0.2&quot; &#x2F;&gt;
  &lt;&#x2F;ItemGroup&gt;
 
  &lt;ItemGroup&gt;
    &lt;DotNetCliToolReference Include&#x3D;&quot;Microsoft.EntityFrameworkCore.Tools.DotNet&quot; Version&#x3D;&quot;2.0.1&quot; &#x2F;&gt;
    &lt;DotNetCliToolReference Include&#x3D;&quot;Microsoft.VisualStudio.Web.CodeGeneration.Tools&quot; Version&#x3D;&quot;2.0.2&quot; &#x2F;&gt;
  &lt;&#x2F;ItemGroup&gt;
 
&lt;&#x2F;Project&gt;</code></pre>

<h2 id="4-3-Scaffolding"><a href="#4-3-Scaffolding" class="headerlink" title="4.3. Scaffolding"></a>4.3. Scaffolding</h2><p><a id="markdown-scaffolding" name="scaffolding"></a></p>
<p>Mở terminal, và gõ lệnh sau</p>
<pre class="line-numbers language-s" data-language="s"><code class="language-s">dotnet restore
dotnet build
 
dotnet aspnet-codegenerator controller -name PhoneController -m Phone -dc MvcBasicDbContext --relativeFolderPath Controllers --useDefaultLayout --referenceScriptLibraries</code></pre>

<p>Nhìn vào câu lệnh trên, chắc bạn cũng sẽ đoán được nó làm gì: “Này dotnet, tạo cho tao 1 controller mới tên là <code>PhoneController</code>, dùng model là <code>Phone</code>, Data Context là <code>MvcBasicDbContext</code>, trong folder tên là <code>Controllers</code>, dùng default layout, à có scripts đi kèm nhá”</p>
<p>2 câu lệnh đầu tiên giúp bạn thực sự cài nuget, và build project một phát để đảm bảo ko có lỗi phát sinh, và clear các file tạm ko còn cần thiết</p>
<p><img src="https://farm5.staticflickr.com/4782/40705936652_1e3d6b551d_o.png" alt="create new controller"></p>
<p>gõ tiếp <code>dotnet run</code> để chạy thử app</p>
<p><img src="https://farm5.staticflickr.com/4779/25877724937_7bfed1c8d7_o.png" alt="app with phone controller"></p>
<p>bạn có thể vọc vạch các kiểu với các link mà asp.net core tạo sẵn cho bạn, create new, edit, delete, details gì đấy thì tùy</p>
<h1 id="5-Model-Binding"><a href="#5-Model-Binding" class="headerlink" title="5. Model Binding"></a>5. Model Binding</h1><p><a id="markdown-model-binding" name="model-binding"></a></p>
<p>Mở file PhoneController ra, bạn sẽ thấy có sẵn code trong đấy rồi, tuy ko đẹp lắm, nhưng nhìn chung là nó chạy tốt</p>
<p>Hãy nhìn vào method Details</p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">&#x2F;&#x2F; GET: Phone&#x2F;Details&#x2F;5
public async Task&lt;IActionResult&gt; Details(int? id)
&#123;
    if (id &#x3D;&#x3D; null)
    &#123;
        return NotFound();
    &#125;
 
    var phone &#x3D; await _context.Phones
                              .SingleOrDefaultAsync(m &#x3D;&gt; m.Id &#x3D;&#x3D; id);
    if (phone &#x3D;&#x3D; null)
    &#123;
        return NotFound();
    &#125;
 
    return View(phone);
&#125;</code></pre>

<p>Method này nhận một tham số là nullable int có tên là id, khi bạn gọi tới url Phone/Details/5 (như dòng comment ở bên trên), thì số 5 đó sẽ được hiểu là Id. Đó chính là model binding</p>
<p>Tiếp tục, nhìn vào class Create có attribute <code>[HttpPost]</code></p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">&#x2F;&#x2F; POST: Phone&#x2F;Create
&#x2F;&#x2F; To protect from overposting attacks, please enable the specific properties you want to bind to, for 
&#x2F;&#x2F; more details see http:&#x2F;&#x2F;go.microsoft.com&#x2F;fwlink&#x2F;?LinkId&#x3D;317598.
[HttpPost]
[ValidateAntiForgeryToken]
public async Task&lt;IActionResult&gt; Create([Bind(&quot;Id,Name&quot;)] Phone phone)
&#123;
    if (ModelState.IsValid)
    &#123;
        _context.Add(phone);
        await _context.SaveChangesAsync();
        return RedirectToAction(nameof(Index));
    &#125;
    return View(phone);
&#125;</code></pre>

<p>Model binding còn vi diệu ở chỗ, nếu bạn dùng hẳn 1 class làm parameter, thì ASP.NET sẽ tự hiểu các property trong class đó, và gắn đúng từng giá trị một</p>
<p>Bạn có thể xóa <code>[Bind(&quot;Id,Name&quot;)]</code> đi và code vẫn chạy tốt, nhưng như Microsoft đã cảnh báo, để bảo vệ bạn khỏi chuyện orver posting attack, thì bạn phải chỉ định luôn là property nào sẽ được gắn</p>
<p>Method này tương ứng với Views &gt; Phone &gt; Create.cshtml</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;!--dòng 17--&gt;
&lt;input asp-for&#x3D;&quot;Name&quot; class&#x3D;&quot;form-control&quot; &#x2F;&gt;</code></pre>

<p>từ khóa <code>asp-for</code> thông báo rằng Name là property sẽ được truyền lên server, và server sẽ “gắn” nó vào model phone của method Create</p>
<blockquote>
<p>Tại sao lại ko có Id? Vì Id mặc định được coi như Key của bảng Phone, và key thì ko cần phải có khi tạo mới, vì database sẽ tự sinh ra nó</p>
</blockquote>
<p>Tiếp tục, mở Views &gt; Phone &gt; Index.cshtml bạn sẽ thấy đoạn code sau</p>
<pre class="line-numbers language-cs" data-language="cs"><code class="language-cs">@foreach (var item in Model)
&#123;
    &lt;tr&gt;
        &lt;td&gt;
            @Html.DisplayFor(modelItem &#x3D;&gt; item.Name)
        &lt;&#x2F;td&gt;
        &lt;td&gt;
            &lt;a asp-action&#x3D;&quot;Edit&quot; asp-route-id&#x3D;&quot;@item.Id&quot;&gt;Edit&lt;&#x2F;a&gt; |
            &lt;a asp-action&#x3D;&quot;Details&quot; asp-route-id&#x3D;&quot;@item.Id&quot;&gt;Details&lt;&#x2F;a&gt; |
            &lt;a asp-action&#x3D;&quot;Delete&quot; asp-route-id&#x3D;&quot;@item.Id&quot;&gt;Delete&lt;&#x2F;a&gt;
        &lt;&#x2F;td&gt;
    &lt;&#x2F;tr&gt;
&#125;</code></pre>

<blockquote>
<p>ô lạ chưa, có foreach trong html Ngôn ngữ này gọi là Razor, cho phép bạn thực thi một số đoạn code C# trong html, giúp cho việc render ra các tag html như mong muốn.</p>
</blockquote>
<p>Razor thông minh tới mức nó tự hiểu chỗ nào là code html, và chỗ nào là code Razor, với các nguyên tắc vô cùng đơn giản</p>
<ul>
<li>Mỗi đoạn code razor đều bắt đầu bằng dấu <code>@</code></li>
<li>Ngay sau dấu <code>&#123;</code> hoặc <code>(</code> thì ko cần <code>@</code></li>
</ul>
<p>Database và Model binding còn nhiều điều để nói. Tạm thời ta cứ hiểu vậy đã</p>
<p>Đón đọc phần 3 bạn nhé 😃</p>
]]></content>
      <categories>
        <category>CSharp</category>
        <category>ASP.NET</category>
      </categories>
      <tags>
        <tag>core</tag>
        <tag>database</tag>
        <tag>entity framework</tag>
        <tag>model</tag>
      </tags>
  </entry>
</search>
